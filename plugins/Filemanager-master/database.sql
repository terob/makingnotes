

CREATE TABLE `attachment` (
  `attachment_id` int(11) NOT NULL,
  `link` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  `type` int(11) NOT NULL,
  PRIMARY KEY (`attachment_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO attachment VALUES
("3","http://www.utf8-chartable.de/unicode-utf8-table.pl?number=1024","Unicode characters","6"),
("2","https://www.joecolantonio.com/2011/07/26/qtp-ascii-chr-code-chart/","ASCII CHR() CODE CHART","6"),
("1","https://www.programiz.com/python-programming/methods/built-in/callable","Definition","6"),
("4","https://www.programiz.com/python-programming/methods/built-in/classmethod","Definition","6"),
("5","https://www.programiz.com/python-programming/methods/built-in/compile","Definition","6"),
("6","https://www.programiz.com/python-programming/methods/built-in/complex","Definition","6"),
("7","https://www.programiz.com/python-programming/methods/built-in/dict","Definition","6"),
("8","https://docs.python.org/3/library/functions.html#dir","Definition","6"),
("9","https://www.programiz.com/python-programming/methods/built-in/divmod","Definition","6"),
("10","https://www.programiz.com/python-programming/methods/built-in/enumerate","Definition","6"),
("11","https://www.programiz.com/python-programming/methods/built-in/eval","Definition","6"),
("12","https://www.programiz.com/python-programming/methods/built-in/exec","Definition","6"),
("13","https://www.programiz.com/python-programming/methods/built-in/filter","Definition","6"),
("14","https://www.programiz.com/python-programming/methods/built-in/float","Definition","6"),
("15","https://www.programiz.com/python-programming/methods/built-in/format","Definition","6"),
("16","https://www.programiz.com/python-programming/methods/built-in/frozenset","Definition","6"),
("17","https://www.programiz.com/python-programming/methods/built-in/getattr","Definition","6"),
("18","https://www.programiz.com/python-programming/methods/built-in/globals","Definition","6"),
("157","https://drive.google.com/drive/folders/0B-V4H-BsFb3td2lEUGswa1E1dGs","Forklift truck driver","3"),
("20","https://blumind.en.uptodown.com/windows","Download Blumind","6"),
("21","https://www.programiz.com/python-programming/methods/built-in/hasattr","Definition","6"),
("22","https://www.programiz.com/python-programming/methods/built-in/hash","Definition","6"),
("23","https://www.programiz.com/python-programming/methods/built-in/help","Definition","6"),
("24","https://www.programiz.com/python-programming/methods/built-in/hex","Definition","6"),
("25","https://www.programiz.com/python-programming/methods/built-in/id","Definition","6"),
("26","https://www.programiz.com/python-programming/methods/built-in/input","Definition","6"),
("27","https://www.programiz.com/python-programming/methods/built-in/int","Definition","6"),
("28","https://www.programiz.com/python-programming/methods/built-in/isinstance","Definition","6"),
("29","https://www.programiz.com/python-programming/methods/built-in/issubclass","Definition","6"),
("30","https://www.programiz.com/python-programming/methods/built-in/iter","Definition","6"),
("31","https://www.programiz.com/python-programming/methods/built-in/len","Definition","6"),
("32","https://www.programiz.com/python-programming/methods/built-in/list","Definition","6"),
("33","https://www.programiz.com/python-programming/methods/built-in/locals","Definition","6"),
("34","https://www.programiz.com/python-programming/methods/built-in/map","Definition","6"),
("35","https://www.programiz.com/python-programming/methods/built-in/max","Definition","6"),
("36","https://docs.python.org/3/library/stdtypes.html#typememoryview","Definition","6"),
("37","https://www.programiz.com/python-programming/methods/built-in/next","Definition","6"),
("38","https://www.programiz.com/python-programming/methods/built-in/object","Definition","6"),
("39","https://www.programiz.com/python-programming/methods/built-in/oct","Definition","6"),
("40","https://www.programiz.com/python-programming/methods/built-in/open","Definition","6"),
("41","https://www.joecolantonio.com/2011/07/26/qtp-ascii-chr-code-chart/","Definition","6"),
("42","https://www.programiz.com/python-programming/methods/built-in/pow","Definition","6"),
("43","https://www.programiz.com/python-programming/methods/built-in/property","Definition","6"),
("44","https://www.programiz.com/python-programming/methods/built-in/range","Definition","6"),
("45","https://www.programiz.com/python-programming/methods/built-in/repr","Definition","6"),
("46","https://www.programiz.com/python-programming/methods/built-in/reversed","Definition","6"),
("47","https://www.programiz.com/python-programming/methods/built-in/round","Definition","6"),
("48","https://www.programiz.com/python-programming/methods/built-in/set","Definition","6"),
("49","https://www.programiz.com/python-programming/methods/built-in/setattr","Definition","6"),
("50","https://www.programiz.com/python-programming/methods/built-in/slice","Definition","6"),
("51","https://www.programiz.com/python-programming/methods/built-in/sorted","Definition","6"),
("52","https://www.programiz.com/python-programming/methods/built-in/staticmethod","Definition","6"),
("53","https://www.programiz.com/python-programming/methods/built-in/str","Definition","6"),
("54","https://www.programiz.com/python-programming/methods/built-in/sum","Definition","6"),
("55","https://www.programiz.com/python-programming/methods/built-in/super","Definition","6"),
("56","https://www.programiz.com/python-programming/methods/built-in/tuple","Definition","6"),
("57","https://www.programiz.com/python-programming/methods/built-in/type","Definition","6"),
("58","https://www.programiz.com/python-programming/methods/built-in/vars","Definition","6"),
("59","https://www.programiz.com/python-programming/methods/built-in/zip","Definition","6"),
("60","https://www.programiz.com/python-programming/methods/built-in/__import__","Definition","6"),
("61","https://www.programiz.com/python-programming/methods/built-in/__import__","Definition","6"),
("62","http://python-reference.readthedocs.io/en/latest/docs/float/as_integer_ratio.html","Definition","6"),
("63","https://docs.python.org/3/library/stdtypes.html","Definition","6"),
("64","https://docs.python.org/3/library/stdtypes.htmlD","Definition","6"),
("65","https://www.tutorialspoint.com/python/string_capitalize.htm","Definition","6"),
("66","https://www.tutorialspoint.com/python/string_center.htm","Definition","6"),
("67","https://www.tutorialspoint.com/python/string_count.htm","Definition","6"),
("68","https://docs.python.org/3/library/codecs.html#specific-encodings","Codec","6"),
("69","https://www.tutorialspoint.com/python/string_encode.htm","Definition","6"),
("70","https://www.tutorialspoint.com/python/string_decode.htm","Definition","6"),
("71","https://www.tutorialspoint.com/python/string_endswith.htm","Definition","6"),
("72","https://www.tutorialspoint.com/python/string_expandtabs.htm","Definition","6"),
("73","https://www.tutorialspoint.com/python/string_find.htm","Definition","6"),
("74","https://www.tutorialspoint.com/python/string_index.htm","Definition","6"),
("75","https://www.tutorialspoint.com/python/string_isalnum.htm","Definition","6"),
("76","https://www.tutorialspoint.com/python/string_isalpha.htm","Definition","6"),
("77","https://www.tutorialspoint.com/python/string_isdigit.htm","Definition","6"),
("78","https://www.tutorialspoint.com/python/string_islower.htm","Definition","6"),
("79","https://www.tutorialspoint.com/python/string_isnumeric.htm","Definition","6"),
("80","https://www.tutorialspoint.com/python/string_isspace.htm","Definition","6"),
("81","https://www.tutorialspoint.com/python/string_istitle.htm","DE","6"),
("82","https://www.tutorialspoint.com/python/string_isupper.htm","DE","6"),
("83","https://www.tutorialspoint.com/python/string_join.htm","Definition","6"),
("84","https://www.tutorialspoint.com/python/string_ljust.htm","Definition","6"),
("85","https://www.tutorialspoint.com/python/string_lower.htm","Definition","6"),
("86","https://www.tutorialspoint.com/python/string_lstrip.htm","Definition","6"),
("87","https://www.tutorialspoint.com/python/string_maketrans.htm","Definition","6"),
("88","https://www.tutorialspoint.com/python/string_max.htm","Definition","6"),
("89","https://www.tutorialspoint.com/python/string_min.htm","Definition","6"),
("90","https://www.tutorialspoint.com/python/string_replace.htm","Definition","6"),
("91","https://www.tutorialspoint.com/python/string_rfind.htm","Definition","6"),
("92","https://www.tutorialspoint.com/python/string_rindex.htm","Definition","6"),
("93","https://www.tutorialspoint.com/python/string_rjust.htm","Definition","6"),
("94","https://www.tutorialspoint.com/python/string_rstrip.htm","Definition","6"),
("95","https://www.tutorialspoint.com/python/string_split.htm","Definition","6"),
("96","https://www.tutorialspoint.com/python/string_splitlines.htm","Definition","6"),
("97","https://www.tutorialspoint.com/python/string_startswith.htm","Definition","6"),
("98","https://www.tutorialspoint.com/python/string_strip.htm","Definition","6"),
("99","https://www.tutorialspoint.com/python/string_swapcase.htm","Definition","6"),
("100","https://www.tutorialspoint.com/python/string_title.htm","Definition","6");
INSERT INTO attachment VALUES
("101","https://www.tutorialspoint.com/python/string_translate.htm","Definition","6"),
("102","https://www.tutorialspoint.com/python/string_upper.htm","Definition","6"),
("103","https://www.tutorialspoint.com/python/string_zfill.htm","Definition","6"),
("104","https://www.tutorialspoint.com/python/string_isdecimal.htm","Definition","6"),
("105","https://www.tutorialspoint.com/python/python_gui_programming.htm","Definition","6"),
("106","https://www.tutorialspoint.com/python3/tk_messagebox.htm","Definition","6"),
("107","https://www.tutorialspoint.com/python3/tk_button.htm","Definition","6"),
("108","https://www.tutorialspoint.com/python3/tk_checkbutton.htm","Definition","6"),
("109","http://effbot.org/tkinterbook/entry.htm","Definition","6"),
("110","https://www.tutorialspoint.com/python3/tk_frame.htm","Definition","6"),
("111","https://www.tutorialspoint.com/python3/tk_label.htm","Definition","6"),
("112","https://www.tutorialspoint.com/python/tk_listbox.htm","Definition","6"),
("113","https://www.tutorialspoint.com/python/tk_menu.htm","Definition","6"),
("114","https://www.tutorialspoint.com/python3/tk_menubutton.htm","Definition","6"),
("115","https://www.tutorialspoint.com/python3/tk_message.htm","Definition","6"),
("116","https://www.tutorialspoint.com/python3/tk_radiobutton.htm","Definition","6"),
("117","https://www.tutorialspoint.com/python3/tk_scale.htm","Definition","6"),
("118","https://www.tutorialspoint.com/python3/tk_scrollbar.htm","Definition","6"),
("119","https://www.tutorialspoint.com/python3/tk_text.htm","Definition","6"),
("120","https://www.tutorialspoint.com/python3/tk_toplevel.htm","Definition","6"),
("121","https://www.tutorialspoint.com/python3/tk_spinbox.htm","Definition","6"),
("122","https://www.tutorialspoint.com/python3/tk_panedwindow.htm","Definition","6"),
("123","https://www.tutorialspoint.com/python3/tk_labelframe.htm","Definition","6"),
("124","https://www.pygame.org/docs/ref/key.html","Definition","6"),
("125","https://www.pygame.org/docs/ref/key.html#pygame.key.get_pressed","Definition","6"),
("126","https://www.pygame.org/docs/ref/key.html#pygame.key.get_pressed","Definition","6"),
("127","https://www.pygame.org/docs/ref/key.html#pygame.key.set_mods","Definition","6"),
("128","https://www.pygame.org/docs/ref/key.html","Definition","6"),
("129","https://www.pygame.org/docs/ref/key.html","Definition","6"),
("130","https://www.pygame.org/docs/ref/key.html#pygame.key.name","Definition","6"),
("131","https://drive.google.com/open?id=0B-V4H-BsFb3tQjM4bFBGc2MyQVk","Download Taskbar","3"),
("132","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("133","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("134","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amMS","Source Code","3"),
("135","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("136","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("137","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("138","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("139","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("140","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("141","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("142","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("143","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("144","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("145","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("146","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("147","https://drive.google.com/open?id=0B-V4H-BsFb3tLVJRX0t6bUZ4amM","Source Code","3"),
("148","https://drive.google.com/open?id=0B-V4H-BsFb3tMkVYaXJ6djFYd3M","Download sqlitebrowser","3"),
("149","https://drive.google.com/open?id=0B-V4H-BsFb3tNl9GS2tPcnIxeGc","Download Dos Games","3"),
("150","https://drive.google.com/open?id=0B-V4H-BsFb3tNl9GS2tPcnIxeGc","Download HotKey","3"),
("151","https://drive.google.com/open?id=0B-V4H-BsFb3tS1FmbnlCUlA1cW8","Download Webcam capture","3"),
("152","https://drive.google.com/open?id=0B-V4H-BsFb3tX050TzM5LWQwc2c","Download RandomTask","3"),
("153","https://drive.google.com/open?id=0B-V4H-BsFb3tb2hCYVA4ZDM4LW8","Download makingnotes","3"),
("154","https://drive.google.com/open?id=0B-V4H-BsFb3tdzZVc1h0aTQ4bUE","Python lectures","3"),
("155","https://drive.google.com/open?id=0B-V4H-BsFb3tRVlnTDRLa2NJSTQ","Mobile Platform Lectures","3"),
("156","https://drive.google.com/open?id=0B-V4H-BsFb3tU3pfeUt0WTFoSm8","Hacking lectures","3"),
("158","https://drive.google.com/open?id=0B-V4H-BsFb3tckpCYmViemU5SDg","Rolling access platform","3"),
("159","https://drive.google.com/open?id=0B-V4H-BsFb3tY3hvdndGejN2Zzg","Overhead cranes","3"),
("160","https://drive.google.com/drive/folders/0B-V4H-BsFb3td2lEUGswa1E1dGs","Forklift truck technician","3"),
("161","http://otreba.co.uk/_sep/","Polish Association of Electrical Engineers","6"),
("162","https://drive.google.com/open?id=0B-V4H-BsFb3tRFVRNVc1YjE3eG8","CNC operator","6"),
("163","https://drive.google.com/open?id=0B-V4H-BsFb3tSDBYMDIyMHAzTk0","Adwance Excel","3"),
("164","https://drive.google.com/open?id=0B-V4H-BsFb3tUnBMM2o3NEhpZkE","Survival techniques","3"),
("165","https://drive.google.com/open?id=0B-V4H-BsFb3tQ2VZLVg1aU82Wlk","ARMADILLO IT LIMITED","3"),
("166","http://otreba.co.uk/Websites/","Websites","6"),
("167","http://otreba.co.uk/Database/","Database Administration","6"),
("168","http://otreba.co.uk/Web_Application/","Internet Applications Programming","6"),
("169","https://www.youtube.com/watch?v=BBwEF6WBUQs","OpenCV Python Neural Network Autonomous RC Car","2"),
("170","https://hobbyking.com/en_us/aperture-rtf-m1.html","Aperture Hexacopter Aerial Photography Drone","6"),
("171","https://www.youtube.com/watch?v=7kx67NnuSd0","Volvo Trucks - Look Whoâ€™s Driving feat. 4-year-old Sophie","2"),
("172","https://www.youtube.com/watch?v=KTrgRYa2wbI","Meet the 26-Year-Old Hacker Who Built a Self-Driving Car","2"),
("173","https://www.youtube.com/watch?v=UIkkiyGKfA0","Watch Dogs Parkour","2"),
("174","https://drive.google.com/open?id=0B-V4H-BsFb3td3VTZDhkWF9GNnc","Kreta","3"),
("175","https://developer.android.com/reference/android/R.styleable.html#TextView_inputType","InputTypes","6"),
("176","https://drive.google.com/open?id=0B-V4H-BsFb3tLUxsTUlOSW0yR1k","UK - Wrexham","3"),
("177","https://drive.google.com/open?id=0B-V4H-BsFb3tMXdZa25ULXFETFE","Holland","3"),
("178","https://drive.google.com/open?id=0B-V4H-BsFb3tbHJUNm4zVFo5dFE","Download sqlabs","3"),
("179","http://www.sqlabs.com/sqlitemanager4_encryption.php","Sqlabs","6"),
("180","https://www.apowersoft.com/screen-recorder.html","Apowersoft","6"),
("181","https://drive.google.com/open?id=0B-V4H-BsFb3tWHJDYVJPUXVFUTQ","Python tutorials","3"),
("182","https://drive.google.com/open?id=0B-V4H-BsFb3tZEdWSVdQLUdWd1U","IT tutorials","3"),
("183","https://drive.google.com/open?id=0B-V4H-BsFb3tSWoyS21yYjdsOUE","Rest","3"),
("184","http://drpetter.se/project_sfxr.html","Download sfxr","6"),
("185","http://bluejamesbond.github.io/CharacterMap/","CharMap","6"),
("186","https://drive.google.com/open?id=0B-V4H-BsFb3tSzNZX2dGdTJ4M1U","ipaddress","3"),
("187","https://drive.google.com/open?id=0B-V4H-BsFb3tQmdVWWNqMGdoRHc","Hash Tables and Hash Functions","3"),
("188","https://www.autoitscript.com/autoit3/docs/functions/AutoItSetOption.htm","auto_it_set_option","6"),
("189","https://drive.google.com/open?id=0B-V4H-BsFb3tcGdMQTdNbFNnOXc","Documentation","3"),
("190","https://github.com/kidscancode/pygame_tutorials/tree/master/platform","Source Code","6"),
("191","https://bitbucket.org/account/signin/","bitbucket","6"),
("192","https://drive.google.com/open?id=0B-V4H-BsFb3tbzhGWjF3UVhURUk","mpi4py","6"),
("193","https://drive.google.com/open?id=0B-V4H-BsFb3tVU9mVmJiYjlRdFU","pyUSB","3"),
("194","https://wkhtmltopdf.org/usage/wkhtmltopdf.txt","Comand line options","6");




CREATE TABLE `category` (
  `category_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`category_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1788 DEFAULT CHARSET=latin1;


INSERT INTO category VALUES
("1","Python Standard Library"),
("211","Android - SL4A"),
("237","Pygame"),
("267","Python Image Library"),
("286","PyOpenGL"),
("291","Django"),
("421","Pyopencl"),
("432","Google"),
("450","Matplotlib"),
("491","NumPy"),
("504","Pandas"),
("609","OpenCV"),
("652","Raspberry Pi"),
("656","Apache Solr"),
("657","Small modules"),
("658","Selenium"),
("673","Public Data Hacking"),
("675","General Information"),
("682","Early math"),
("731","Algebra I"),
("741","Stationary courses"),
("749","Remote courses"),
("789","PHP&MySQL"),
("786","Software"),
("788","Python"),
("790","Programming lectures"),
("793","PyQt"),
("803","Reference"),
("810","UK - Documents"),
("812","School"),
("969","PyQt"),
("983","Websites"),
("984","Database Administration"),
("985","Internet Applications Programming"),
("986","Quotes"),
("987","Plans"),
("1181","Simple notes"),
("1185","Other Lectures"),
("1191","Other"),
("1342","Blender"),
("1370","Pythonista"),
("1391","NLTK"),
("1692","tensorflow"),
("1700","Blend4Web"),
("1755","JavaScript & CSS & HTML"),
("1756","Bootstrap"),
("1757","videojs"),
("1758","Math"),
("1774","Google"),
("1779","ckeditor"),
("1787","Scripts container");




CREATE TABLE `department` (
  `ID_department` int(11) NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO department VALUES
("1","Python"),
("2","blend4web"),
("3","JavaScript & CSS & HTML"),
("4","Metasploit - Hacking"),
("45","9 Introduction to Humanities"),
("6","Linux, LinuxCNC, ROS (Robot Operating System)"),
("7","Programming Lectures"),
("8","Blender"),
("9","Photoshop"),
("44","8 Web Development Foundations"),
("37","1 Introduction to IT"),
("38","2 Critical Thinking and Logic"),
("39","3 Introduction to Communication"),
("40","4 English Composition I"),
("41","5 English Composition II"),
("42","6 Integrated Physical Sciences"),
("43","7 Scripting and Programming - Foundations"),
("24","Tests"),
("25","Math"),
("26","Science & engineering"),
("27","Computing"),
("28","Arts and humanities"),
("29","Economics and finance"),
("30","Other Lectures"),
("31","Websites List"),
("32","English"),
("33","Notes"),
("34","Documents"),
("35","Courses"),
("36","Plans"),
("46","10 Network and Security - Foundations"),
("47","11 College Algebra"),
("48","12 Introduction to Geography"),
("49","13 Natural Science Lab"),
("50","14 IT Foundations"),
("51","15 IT Applications"),
("52","16 Organizational Behavior and Leadership"),
("53","17 Introduction to Probability and Statistics"),
("54","18 Scripting and Programming - Applications"),
("55","19 Technical Communication"),
("56","20 User Interface Design"),
("57","21 Data Management - Foundations"),
("58","22 Data Management - Applications"),
("59","23 Operating Systems for Programmers"),
("60","24 Software Engineering"),
("61","25 Data Management for Programmers"),
("62","26 Web Development Applications"),
("63","27 Software I"),
("64","28 Principles of Management"),
("65","29 Business of IT - Applications"),
("66","30 Software II - Advanced Java Concepts"),
("67","31 Client-Server Application Development"),
("68","32 Mobile Application Development"),
("69","33 Business of IT - Project Management"),
("70","34 IT Capstone Written Project"),
("71","Electronic"),
("72","FreeCad"),
("73","Git");




CREATE TABLE `departments_group` (
  `department_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO departments_group VALUES
("1","1"),
("2","1"),
("3","1"),
("4","1"),
("49","37"),
("6","1"),
("7","1"),
("8","8"),
("9","8"),
("47","37"),
("48","37"),
("73","1"),
("46","37"),
("45","37"),
("37","37"),
("43","37"),
("44","37"),
("42","37"),
("41","37"),
("38","37"),
("40","37"),
("39","37"),
("24","10"),
("25","25"),
("26","25"),
("27","25"),
("28","25"),
("29","25"),
("30","30"),
("31","30"),
("32","30"),
("33","30"),
("34","30"),
("35","30"),
("36","30"),
("50","37"),
("51","37"),
("52","37"),
("53","37"),
("54","37"),
("55","37"),
("56","37"),
("57","37"),
("58","37"),
("59","37"),
("60","37"),
("61","37"),
("62","37"),
("63","37"),
("64","37"),
("65","37"),
("66","37"),
("67","37"),
("68","37"),
("69","37"),
("70","37"),
("71","1"),
("72","8");




CREATE TABLE `departments_module` (
  `departments_id` int(11) NOT NULL,
  `module_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO departments_module VALUES
("1","1"),
("1","2"),
("1","3"),
("1","4"),
("1","5"),
("1","6"),
("1","7"),
("1","8"),
("1","9"),
("1","10"),
("1","11"),
("1","12"),
("1","13"),
("1","14"),
("1","15"),
("1","16"),
("1","17"),
("1","18"),
("1","19"),
("1","20"),
("1","21"),
("1","22"),
("1","23"),
("1","24"),
("1","25"),
("1","26"),
("1","27"),
("1","28"),
("1","29"),
("1","30"),
("1","31"),
("1","32"),
("1","33"),
("1","34"),
("1","35"),
("1","36"),
("1","37"),
("1","38"),
("1","39"),
("1","40"),
("1","41"),
("1","42"),
("1","43"),
("1","44"),
("1","45"),
("1","46"),
("1","47"),
("1","48"),
("1","49"),
("1","50"),
("1","51"),
("1","52"),
("1","53"),
("1","54"),
("1","55"),
("1","56"),
("1","57"),
("1","58"),
("1","59"),
("1","60"),
("1","61"),
("1","62"),
("1","63"),
("1","64"),
("1","65"),
("1","66"),
("1","67"),
("1","68"),
("1","69"),
("1","70"),
("1","71"),
("1","72"),
("1","73"),
("1","74"),
("1","75"),
("1","76"),
("1","77"),
("1","78"),
("1","79"),
("1","80"),
("1","81"),
("1","82"),
("1","83"),
("1","84"),
("1","85"),
("1","86"),
("1","87"),
("1","88"),
("1","89"),
("1","90"),
("1","91"),
("1","92"),
("1","93"),
("1","94"),
("1","95"),
("1","96"),
("1","97"),
("1","98"),
("1","99"),
("1","100");
INSERT INTO departments_module VALUES
("1","101"),
("1","102"),
("1","103"),
("1","104"),
("1","105"),
("1","106"),
("1","107"),
("1","108"),
("1","109"),
("1","110"),
("1","111"),
("1","112"),
("1","113"),
("1","114"),
("1","115"),
("1","116"),
("1","117"),
("1","118"),
("1","119"),
("1","120"),
("1","121"),
("1","122"),
("1","123"),
("1","124"),
("1","125"),
("1","126"),
("1","127"),
("1","128"),
("1","129"),
("1","130"),
("1","131"),
("1","132"),
("1","133"),
("1","134"),
("1","135"),
("1","136"),
("1","137"),
("1","138"),
("1","139"),
("1","140"),
("1","141"),
("1","142"),
("1","143"),
("1","144"),
("1","145"),
("1","146"),
("1","147"),
("1","148"),
("1","149"),
("1","150"),
("1","151"),
("1","152"),
("1","153"),
("1","154"),
("1","155"),
("1","156"),
("1","157"),
("1","158"),
("1","159"),
("1","160"),
("1","161"),
("1","162"),
("1","163"),
("1","164"),
("1","165"),
("1","166"),
("1","167"),
("1","168"),
("1","169"),
("1","170"),
("1","171"),
("1","172"),
("1","173"),
("1","174"),
("1","175"),
("1","176"),
("1","177"),
("1","178"),
("1","179"),
("1","180"),
("1","181"),
("1","182"),
("1","183"),
("1","184"),
("1","185"),
("1","186"),
("1","187"),
("1","188"),
("1","189"),
("1","190"),
("1","191"),
("1","192"),
("1","193"),
("1","194"),
("1","195"),
("1","196"),
("1","197"),
("1","198"),
("1","199"),
("1","200");
INSERT INTO departments_module VALUES
("1","201"),
("1","202"),
("1","203"),
("1","204"),
("1","205"),
("1","206"),
("1","207"),
("1","208"),
("1","209"),
("1","210"),
("1","211"),
("1","212"),
("1","213"),
("1","214"),
("1","215"),
("1","216"),
("1","217"),
("1","218"),
("1","219"),
("1","220"),
("1","221"),
("1","222"),
("1","223"),
("1","224"),
("1","225"),
("1","226"),
("1","227"),
("1","228"),
("1","229"),
("1","230"),
("1","231"),
("1","232"),
("1","233"),
("1","234"),
("1","235"),
("1","236"),
("1","237"),
("1","238"),
("1","239"),
("1","240"),
("1","241"),
("1","242"),
("1","243"),
("1","244"),
("1","245"),
("1","246"),
("1","247"),
("1","248"),
("1","249"),
("1","250"),
("1","251"),
("1","252"),
("1","253"),
("1","254"),
("1","255"),
("1","256"),
("1","257"),
("1","258"),
("1","259"),
("1","260"),
("1","261"),
("1","262"),
("1","263"),
("1","264"),
("1","265"),
("1","266"),
("1","267"),
("1","268"),
("1","269"),
("1","270"),
("1","271"),
("1","272"),
("1","273"),
("1","274"),
("1","275"),
("1","276"),
("1","277"),
("1","278"),
("1","279"),
("1","280"),
("1","281"),
("1","282"),
("1","283"),
("1","284"),
("1","285"),
("1","286"),
("1","287"),
("1","288"),
("1","289"),
("1","290"),
("1","291"),
("1","292"),
("1","293"),
("1","294"),
("1","295"),
("1","296"),
("1","297"),
("1","298"),
("1","299"),
("1","300");
INSERT INTO departments_module VALUES
("1","301"),
("1","302"),
("1","303"),
("1","304"),
("1","305"),
("1","306"),
("1","307"),
("1","308"),
("1","309"),
("1","310"),
("1","311"),
("1","312"),
("1","313"),
("1","314"),
("1","315"),
("1","316"),
("1","317"),
("1","318"),
("1","319"),
("1","320"),
("1","321"),
("1","322"),
("1","323"),
("1","324"),
("1","325"),
("1","326"),
("1","327"),
("1","328"),
("1","329"),
("1","330"),
("1","331"),
("1","332"),
("1","333"),
("1","334"),
("1","335"),
("1","336"),
("1","337"),
("1","338"),
("1","339"),
("1","340"),
("1","341"),
("1","342"),
("1","343"),
("1","344"),
("1","345"),
("1","346"),
("1","347"),
("1","348"),
("1","349"),
("1","350"),
("1","351"),
("1","352"),
("1","353"),
("1","354"),
("1","355"),
("1","356"),
("1","357"),
("1","358"),
("1","359"),
("1","360"),
("1","361"),
("1","362"),
("1","363"),
("1","364"),
("1","365"),
("1","366"),
("1","367"),
("1","368"),
("1","369"),
("1","370"),
("1","371"),
("1","372"),
("1","373"),
("1","374"),
("1","375"),
("1","376"),
("1","377"),
("1","378"),
("1","379"),
("1","380"),
("1","381"),
("1","382"),
("1","383"),
("1","384"),
("1","385"),
("1","386"),
("1","387"),
("1","388"),
("1","389"),
("1","390"),
("1","391"),
("1","392"),
("1","393"),
("1","394"),
("1","395"),
("1","396"),
("1","397"),
("1","398"),
("1","399"),
("1","400");
INSERT INTO departments_module VALUES
("1","401"),
("1","402"),
("1","403"),
("1","404"),
("1","405"),
("1","406"),
("1","407"),
("1","408"),
("1","409"),
("1","410"),
("1","411"),
("1","412"),
("1","413"),
("1","414"),
("1","415"),
("1","416"),
("1","417"),
("1","418"),
("1","419"),
("1","420"),
("1","421"),
("1","422"),
("1","423"),
("1","424"),
("1","425"),
("1","426"),
("1","427"),
("1","428"),
("1","429"),
("1","430"),
("1","431"),
("1","432"),
("1","433"),
("1","434"),
("1","435"),
("1","436"),
("1","437"),
("1","438"),
("1","439"),
("1","440"),
("1","441"),
("1","442"),
("1","443"),
("1","444"),
("1","445"),
("1","446"),
("1","447"),
("1","448"),
("1","449"),
("1","450"),
("1","451"),
("1","452"),
("1","453"),
("1","454"),
("1","455"),
("1","456"),
("1","457"),
("1","458"),
("1","459"),
("1","460"),
("1","461"),
("1","462"),
("1","463"),
("1","464"),
("1","465"),
("1","466"),
("1","467"),
("1","468"),
("1","469"),
("1","470"),
("1","471"),
("1","472"),
("1","473"),
("1","474"),
("1","475"),
("1","476"),
("1","477"),
("1","478"),
("1","479"),
("1","480"),
("1","481"),
("1","482"),
("1","483"),
("1","484"),
("1","485"),
("1","486"),
("1","487"),
("1","488"),
("1","489"),
("1","490"),
("1","491"),
("1","492"),
("1","493"),
("1","494"),
("1","495"),
("1","496"),
("1","497"),
("1","498"),
("1","499"),
("1","500");
INSERT INTO departments_module VALUES
("1","501"),
("1","502"),
("1","503"),
("1","504"),
("1","505"),
("1","506"),
("1","507"),
("1","508"),
("1","509"),
("1","510"),
("1","511"),
("1","512"),
("1","513"),
("1","514"),
("1","515"),
("1","516"),
("1","517"),
("1","518"),
("1","519"),
("1","520"),
("1","521"),
("1","522"),
("1","523"),
("1","524"),
("1","525"),
("1","526"),
("1","527"),
("1","528"),
("1","529"),
("1","530"),
("1","531"),
("1","532"),
("1","533"),
("1","534"),
("1","535"),
("1","536"),
("1","537"),
("1","538"),
("1","539"),
("1","540"),
("1","541"),
("1","542"),
("1","543"),
("1","544"),
("1","545"),
("1","546"),
("1","547"),
("1","548"),
("1","549"),
("1","550"),
("1","551"),
("1","552"),
("1","553"),
("1","554"),
("1","555"),
("1","556"),
("1","557"),
("1","558"),
("1","559"),
("1","560"),
("1","561"),
("1","562"),
("1","563"),
("1","564"),
("1","565"),
("1","566"),
("1","567"),
("1","568"),
("1","569"),
("1","570"),
("1","571"),
("1","572"),
("1","573"),
("1","574"),
("1","575"),
("1","576"),
("1","577"),
("1","578"),
("1","579"),
("1","580"),
("1","581"),
("1","582"),
("1","583"),
("1","584"),
("1","585"),
("1","586"),
("1","587"),
("1","588"),
("1","589"),
("1","590"),
("1","591"),
("1","592"),
("1","593"),
("1","594"),
("1","595"),
("1","596"),
("1","597"),
("1","598"),
("1","599"),
("1","600");
INSERT INTO departments_module VALUES
("1","601"),
("1","602"),
("1","603"),
("1","604"),
("1","605"),
("1","606"),
("1","607"),
("1","608"),
("1","609"),
("1","610"),
("1","611"),
("1","612"),
("1","613"),
("1","614"),
("1","615"),
("1","616"),
("1","617"),
("1","618"),
("1","619"),
("1","620"),
("1","621"),
("1","622"),
("1","623"),
("1","624"),
("1","625"),
("1","626"),
("1","627"),
("1","628"),
("1","629"),
("1","630"),
("1","631"),
("1","632"),
("1","633"),
("1","634"),
("1","635"),
("1","636"),
("1","637"),
("1","638"),
("1","639"),
("1","640"),
("1","641"),
("1","642"),
("1","643"),
("1","644"),
("1","645"),
("1","646"),
("1","647"),
("1","648"),
("1","649"),
("1","650"),
("1","651"),
("1","652"),
("1","653"),
("1","654"),
("1","655"),
("1","656"),
("1","657"),
("1","658"),
("1","659"),
("1","660"),
("1","661"),
("1","662"),
("1","663"),
("1","664"),
("1","665"),
("1","666"),
("1","667"),
("1","668"),
("1","669"),
("1","670"),
("1","671"),
("1","672"),
("1","673"),
("1","674"),
("1","675"),
("1","676"),
("1","677"),
("1","678"),
("1","679"),
("1","680"),
("1","681"),
("25","682"),
("25","683"),
("25","684"),
("25","685"),
("25","686"),
("25","687"),
("25","688"),
("25","689"),
("25","690"),
("25","691"),
("25","692"),
("25","693"),
("25","694"),
("25","695"),
("25","696"),
("25","697"),
("25","698"),
("25","699"),
("25","700");
INSERT INTO departments_module VALUES
("25","701"),
("25","702"),
("25","703"),
("25","704"),
("25","705"),
("25","706"),
("25","707"),
("25","708"),
("25","709"),
("25","710"),
("25","711"),
("25","712"),
("25","713"),
("25","714"),
("25","715"),
("25","716"),
("25","717"),
("25","718"),
("25","719"),
("25","720"),
("25","721"),
("25","722"),
("25","723"),
("25","724"),
("25","725"),
("25","726"),
("25","727"),
("25","728"),
("25","729"),
("25","730"),
("25","731"),
("25","732"),
("25","733"),
("25","734"),
("25","735"),
("25","736"),
("25","737"),
("25","738"),
("25","739"),
("25","740"),
("35","741"),
("35","742"),
("35","743"),
("35","744"),
("35","745"),
("35","746"),
("35","747"),
("35","748"),
("35","749"),
("35","750"),
("35","751"),
("35","752"),
("35","753"),
("35","754"),
("25","755"),
("25","756"),
("25","757"),
("25","758"),
("25","759"),
("25","760"),
("25","761"),
("25","762"),
("25","763"),
("25","764"),
("25","765"),
("25","766"),
("25","767"),
("25","768"),
("25","769"),
("25","770"),
("25","771"),
("25","772"),
("25","773"),
("25","774"),
("25","775"),
("25","776"),
("25","777"),
("25","778"),
("25","779"),
("25","780"),
("25","781"),
("25","782"),
("25","783"),
("1","1781"),
("33","785"),
("33","786"),
("1","787"),
("1","1780"),
("3","1779"),
("7","790"),
("7","791"),
("7","792"),
("1","793"),
("1","794"),
("1","795"),
("1","796"),
("1","797"),
("1","798"),
("1","799"),
("1","800");
INSERT INTO departments_module VALUES
("1","801"),
("35","802"),
("34","803"),
("34","804"),
("34","805"),
("34","806"),
("34","807"),
("34","808"),
("34","809"),
("34","810"),
("34","811"),
("34","812"),
("34","813"),
("34","814"),
("34","815"),
("1","816"),
("6","817"),
("1","818"),
("1","819"),
("1","820"),
("1","821"),
("1","822"),
("1","823"),
("1","824"),
("1","825"),
("1","826"),
("1","827"),
("1","828"),
("1","829"),
("1","830"),
("1","831"),
("1","832"),
("1","833"),
("1","834"),
("1","835"),
("1","836"),
("1","837"),
("1","838"),
("1","839"),
("1","840"),
("1","841"),
("1","842"),
("1","843"),
("1","844"),
("1","845"),
("1","846"),
("1","847"),
("1","848"),
("1","849"),
("1","850"),
("1","851"),
("1","852"),
("1","853"),
("1","854"),
("1","855"),
("1","856"),
("1","857"),
("1","858"),
("1","859"),
("1","860"),
("1","861"),
("1","862"),
("1","863"),
("1","864"),
("1","865"),
("1","866"),
("1","867"),
("1","868"),
("1","869"),
("1","870"),
("1","871"),
("1","872"),
("1","873"),
("1","874"),
("1","875"),
("1","876"),
("1","877"),
("1","878"),
("1","879"),
("1","880"),
("1","881"),
("1","882"),
("1","883"),
("1","884"),
("1","885"),
("1","886"),
("1","887"),
("1","888"),
("1","889"),
("1","890"),
("1","891"),
("1","892"),
("1","893"),
("1","894"),
("1","895"),
("1","896"),
("1","897"),
("1","898"),
("1","899"),
("1","900");
INSERT INTO departments_module VALUES
("1","901"),
("1","902"),
("1","903"),
("1","904"),
("1","905"),
("1","906"),
("1","907"),
("1","908"),
("1","909"),
("1","910"),
("1","911"),
("1","912"),
("1","913"),
("1","914"),
("1","915"),
("1","916"),
("1","917"),
("1","918"),
("1","919"),
("1","920"),
("1","921"),
("1","922"),
("1","923"),
("1","924"),
("1","925"),
("1","926"),
("1","927"),
("1","928"),
("1","929"),
("1","930"),
("1","931"),
("1","932"),
("1","933"),
("1","934"),
("1","935"),
("1","936"),
("1","937"),
("1","938"),
("1","939"),
("1","940"),
("1","941"),
("1","942"),
("1","943"),
("1","944"),
("1","945"),
("1","946"),
("1","947"),
("1","948"),
("1","949"),
("1","950"),
("1","951"),
("1","952"),
("1","953"),
("1","954"),
("1","955"),
("1","956"),
("1","957"),
("1","958"),
("1","959"),
("1","960"),
("1","961"),
("1","962"),
("1","963"),
("1","964"),
("1","965"),
("1","966"),
("1","967"),
("1","968"),
("1","969"),
("1","970"),
("1","971"),
("1","972"),
("1","973"),
("1","974"),
("1","975"),
("1","976"),
("1","977"),
("1","978"),
("1","979"),
("1","980"),
("1","981"),
("1","982"),
("35","1695"),
("35","1694"),
("35","1693"),
("33","986"),
("36","987"),
("36","988"),
("36","989"),
("1","990"),
("1","991"),
("1","992"),
("1","993"),
("1","994"),
("1","995"),
("1","996"),
("1","997"),
("1","998"),
("1","999"),
("1","1000");
INSERT INTO departments_module VALUES
("1","1001"),
("1","1002"),
("1","1003"),
("1","1004"),
("1","1005"),
("1","1006"),
("1","1007"),
("1","1008"),
("1","1009"),
("1","1010"),
("1","1011"),
("1","1012"),
("1","1013"),
("1","1014"),
("1","1015"),
("1","1016"),
("1","1017"),
("1","1018"),
("1","1019"),
("1","1020"),
("1","1021"),
("1","1022"),
("1","1023"),
("1","1024"),
("1","1025"),
("1","1026"),
("1","1027"),
("1","1028"),
("1","1029"),
("1","1030"),
("1","1031"),
("1","1032"),
("1","1033"),
("1","1034"),
("1","1035"),
("1","1036"),
("1","1037"),
("1","1038"),
("1","1039"),
("1","1040"),
("1","1041"),
("1","1042"),
("1","1043"),
("1","1044"),
("1","1045"),
("1","1046"),
("1","1047"),
("1","1048"),
("1","1049"),
("1","1050"),
("1","1051"),
("1","1052"),
("1","1053"),
("1","1054"),
("1","1055"),
("1","1056"),
("1","1057"),
("1","1058"),
("1","1059"),
("1","1060"),
("1","1061"),
("1","1062"),
("1","1063"),
("1","1064"),
("1","1065"),
("1","1066"),
("1","1067"),
("1","1068"),
("1","1069"),
("1","1070"),
("1","1071"),
("1","1072"),
("1","1073"),
("1","1074"),
("1","1075"),
("1","1076"),
("1","1077"),
("1","1078"),
("1","1079"),
("1","1080"),
("1","1081"),
("1","1082"),
("1","1083"),
("1","1084"),
("1","1085"),
("1","1086"),
("1","1087"),
("1","1088"),
("1","1089"),
("1","1090"),
("1","1091"),
("1","1092"),
("1","1093"),
("1","1094"),
("1","1095"),
("1","1096"),
("1","1097"),
("1","1098"),
("1","1099"),
("1","1100");
INSERT INTO departments_module VALUES
("1","1101"),
("1","1102"),
("1","1103"),
("1","1104"),
("1","1105"),
("1","1106"),
("1","1107"),
("1","1108"),
("1","1109"),
("1","1110"),
("1","1111"),
("1","1112"),
("1","1113"),
("1","1114"),
("1","1115"),
("1","1116"),
("1","1117"),
("1","1118"),
("1","1119"),
("1","1120"),
("1","1121"),
("1","1122"),
("1","1123"),
("1","1124"),
("1","1125"),
("1","1126"),
("1","1127"),
("1","1128"),
("1","1129"),
("1","1130"),
("1","1131"),
("1","1132"),
("1","1133"),
("1","1134"),
("1","1135"),
("1","1136"),
("1","1137"),
("1","1138"),
("1","1139"),
("1","1140"),
("1","1141"),
("1","1142"),
("1","1143"),
("1","1144"),
("1","1145"),
("1","1146"),
("1","1147"),
("1","1148"),
("1","1149"),
("1","1150"),
("1","1151"),
("1","1152"),
("1","1153"),
("1","1154"),
("1","1155"),
("1","1156"),
("1","1157"),
("1","1158"),
("1","1159"),
("1","1160"),
("1","1161"),
("1","1162"),
("1","1163"),
("1","1164"),
("1","1165"),
("1","1166"),
("1","1167"),
("1","1168"),
("1","1169"),
("1","1170"),
("1","1171"),
("1","1172"),
("1","1173"),
("1","1174"),
("1","1175"),
("1","1176"),
("1","1177"),
("36","1178"),
("36","1179"),
("36","1180"),
("33","1181"),
("33","1182"),
("7","1183"),
("7","1184"),
("30","1185"),
("33","1186"),
("33","1187"),
("36","1188"),
("33","1189"),
("33","1190"),
("34","1191"),
("33","1192"),
("34","1193"),
("1","1194"),
("1","1195"),
("1","1196"),
("1","1197"),
("1","1198"),
("1","1199"),
("1","1200");
INSERT INTO departments_module VALUES
("1","1201"),
("1","1202"),
("1","1203"),
("1","1204"),
("1","1205"),
("1","1206"),
("1","1207"),
("1","1208"),
("1","1209"),
("1","1210"),
("1","1211"),
("1","1212"),
("1","1213"),
("1","1214"),
("1","1215"),
("1","1216"),
("1","1217"),
("1","1218"),
("1","1219"),
("1","1220"),
("1","1221"),
("1","1222"),
("1","1223"),
("1","1224"),
("1","1225"),
("1","1226"),
("1","1227"),
("1","1228"),
("1","1229"),
("1","1230"),
("1","1231"),
("1","1232"),
("1","1233"),
("1","1234"),
("1","1235"),
("1","1236"),
("1","1237"),
("1","1238"),
("1","1239"),
("1","1240"),
("1","1241"),
("1","1242"),
("1","1243"),
("1","1244"),
("1","1245"),
("1","1246"),
("1","1247"),
("1","1248"),
("1","1249"),
("1","1250"),
("1","1251"),
("1","1252"),
("1","1253"),
("1","1254"),
("1","1255"),
("1","1256"),
("1","1257"),
("1","1258"),
("1","1259"),
("1","1260"),
("1","1261"),
("1","1262"),
("1","1263"),
("1","1264"),
("1","1265"),
("1","1266"),
("1","1267"),
("1","1268"),
("1","1269"),
("1","1270"),
("1","1271"),
("1","1272"),
("1","1273"),
("1","1274"),
("1","1275"),
("1","1276"),
("1","1277"),
("1","1278"),
("1","1279"),
("1","1280"),
("1","1281"),
("1","1282"),
("1","1283"),
("1","1284"),
("1","1285"),
("1","1286"),
("1","1287"),
("1","1288"),
("1","1289"),
("1","1290"),
("1","1291"),
("1","1292"),
("1","1293"),
("1","1294"),
("1","1295"),
("1","1296"),
("1","1297"),
("1","1298"),
("1","1299"),
("1","1300");
INSERT INTO departments_module VALUES
("1","1301"),
("1","1302"),
("1","1303"),
("1","1304"),
("1","1305"),
("1","1306"),
("1","1307"),
("1","1308"),
("1","1309"),
("1","1310"),
("1","1311"),
("1","1312"),
("1","1313"),
("1","1314"),
("1","1315"),
("1","1316"),
("1","1317"),
("1","1318"),
("1","1319"),
("1","1320"),
("1","1321"),
("1","1322"),
("1","1323"),
("1","1324"),
("1","1325"),
("1","1326"),
("1","1327"),
("1","1328"),
("1","1329"),
("1","1330"),
("1","1331"),
("1","1332"),
("1","1333"),
("1","1334"),
("1","1335"),
("1","1336"),
("1","1337"),
("1","1338"),
("1","1339"),
("1","1340"),
("1","1341"),
("1","1342"),
("1","1343"),
("1","1344"),
("1","1345"),
("1","1346"),
("1","1347"),
("1","1348"),
("1","1349"),
("1","1350"),
("1","1351"),
("1","1352"),
("1","1353"),
("1","1354"),
("1","1355"),
("1","1356"),
("1","1357"),
("1","1358"),
("1","1359"),
("1","1360"),
("1","1361"),
("1","1362"),
("1","1363"),
("1","1364"),
("1","1365"),
("1","1366"),
("1","1367"),
("1","1368"),
("1","1369"),
("1","1370"),
("1","1371"),
("1","1372"),
("1","1373"),
("1","1374"),
("1","1375"),
("1","1376"),
("1","1377"),
("1","1378"),
("1","1379"),
("1","1380"),
("1","1381"),
("1","1382"),
("1","1383"),
("1","1384"),
("1","1385"),
("1","1386"),
("1","1387"),
("1","1388"),
("1","1389"),
("1","1390"),
("1","1391"),
("1","1392"),
("1","1393"),
("1","1394"),
("1","1395"),
("1","1396"),
("1","1397"),
("1","1398"),
("1","1399"),
("1","1400");
INSERT INTO departments_module VALUES
("1","1401"),
("1","1402"),
("1","1403"),
("1","1404"),
("1","1405"),
("1","1406"),
("1","1407"),
("1","1408"),
("1","1409"),
("1","1410"),
("1","1411"),
("1","1412"),
("1","1413"),
("1","1414"),
("1","1415"),
("1","1416"),
("1","1417"),
("1","1418"),
("1","1419"),
("1","1420"),
("1","1421"),
("1","1422"),
("1","1423"),
("1","1424"),
("1","1425"),
("1","1426"),
("1","1427"),
("1","1428"),
("1","1429"),
("1","1430"),
("1","1431"),
("1","1432"),
("1","1433"),
("1","1434"),
("1","1435"),
("1","1436"),
("1","1437"),
("1","1438"),
("1","1439"),
("1","1440"),
("1","1441"),
("1","1442"),
("1","1443"),
("1","1444"),
("1","1445"),
("1","1446"),
("1","1447"),
("1","1448"),
("1","1449"),
("1","1450"),
("1","1451"),
("1","1452"),
("1","1453"),
("1","1454"),
("1","1455"),
("1","1456"),
("1","1457"),
("1","1458"),
("1","1459"),
("1","1460"),
("1","1461"),
("1","1462"),
("1","1463"),
("1","1464"),
("1","1465"),
("1","1466"),
("1","1467"),
("1","1468"),
("1","1469"),
("1","1470"),
("1","1471"),
("1","1472"),
("1","1473"),
("1","1474"),
("1","1475"),
("1","1476"),
("1","1477"),
("1","1478"),
("1","1479"),
("1","1480"),
("1","1481"),
("1","1482"),
("1","1483"),
("1","1484"),
("1","1485"),
("1","1486"),
("1","1487"),
("1","1488"),
("1","1489"),
("1","1490"),
("1","1491"),
("1","1492"),
("1","1493"),
("1","1494"),
("1","1495"),
("1","1496"),
("1","1497"),
("1","1498"),
("1","1499"),
("1","1500");
INSERT INTO departments_module VALUES
("1","1501"),
("1","1502"),
("1","1503"),
("1","1504"),
("1","1505"),
("1","1506"),
("1","1507"),
("1","1508"),
("1","1509"),
("1","1510"),
("1","1511"),
("1","1512"),
("1","1513"),
("1","1514"),
("1","1515"),
("1","1516"),
("1","1517"),
("1","1518"),
("1","1519"),
("1","1520"),
("1","1521"),
("1","1522"),
("1","1523"),
("1","1524"),
("1","1525"),
("1","1526"),
("1","1527"),
("1","1528"),
("1","1529"),
("1","1530"),
("1","1531"),
("1","1532"),
("1","1533"),
("1","1534"),
("1","1535"),
("1","1536"),
("1","1537"),
("1","1538"),
("1","1539"),
("1","1540"),
("1","1541"),
("1","1542"),
("1","1543"),
("1","1544"),
("1","1545"),
("1","1546"),
("1","1547"),
("1","1548"),
("1","1549"),
("1","1550"),
("1","1551"),
("1","1552"),
("1","1553"),
("1","1554"),
("1","1555"),
("1","1556"),
("1","1557"),
("1","1558"),
("1","1559"),
("1","1560"),
("1","1561"),
("1","1562"),
("1","1563"),
("1","1564"),
("1","1565"),
("1","1566"),
("1","1567"),
("1","1568"),
("1","1569"),
("1","1570"),
("1","1571"),
("1","1572"),
("1","1573"),
("1","1574"),
("1","1575"),
("1","1576"),
("1","1577"),
("1","1578"),
("1","1579"),
("1","1580"),
("1","1581"),
("1","1582"),
("1","1583"),
("1","1584"),
("1","1585"),
("1","1586"),
("1","1587"),
("1","1588"),
("1","1589"),
("1","1590"),
("1","1591"),
("1","1592"),
("1","1593"),
("1","1594"),
("1","1595"),
("1","1596"),
("1","1597"),
("1","1598"),
("1","1599"),
("1","1600");
INSERT INTO departments_module VALUES
("1","1601"),
("1","1602"),
("1","1603"),
("1","1604"),
("1","1605"),
("1","1606"),
("1","1607"),
("1","1608"),
("1","1609"),
("1","1610"),
("1","1611"),
("1","1612"),
("1","1613"),
("1","1614"),
("1","1615"),
("1","1616"),
("1","1617"),
("1","1618"),
("1","1619"),
("1","1620"),
("1","1621"),
("1","1622"),
("1","1623"),
("1","1624"),
("1","1625"),
("1","1626"),
("1","1627"),
("1","1628"),
("1","1629"),
("1","1630"),
("1","1631"),
("1","1632"),
("1","1633"),
("1","1634"),
("1","1635"),
("1","1636"),
("1","1637"),
("1","1638"),
("1","1639"),
("1","1640"),
("1","1641"),
("1","1642"),
("1","1643"),
("1","1644"),
("1","1645"),
("1","1646"),
("1","1647"),
("1","1648"),
("1","1649"),
("1","1650"),
("1","1651"),
("1","1652"),
("1","1653"),
("1","1654"),
("1","1655"),
("1","1656"),
("1","1657"),
("1","1658"),
("1","1659"),
("1","1660"),
("1","1661"),
("1","1662"),
("1","1663"),
("1","1664"),
("1","1665"),
("1","1666"),
("1","1667"),
("1","1668"),
("1","1669"),
("1","1670"),
("1","1671"),
("1","1672"),
("1","1673"),
("1","1674"),
("1","1675"),
("1","1676"),
("1","1677"),
("1","1678"),
("1","1679"),
("1","1680"),
("1","1681"),
("1","1682"),
("1","1683"),
("1","1684"),
("1","1685"),
("1","1686"),
("1","1687"),
("1","1688"),
("1","1689"),
("1","1690"),
("1","1691"),
("1","1692"),
("35","1696"),
("35","1697"),
("35","1698"),
("35","1699"),
("2","1700"),
("2","1701"),
("2","1702"),
("2","1703");
INSERT INTO departments_module VALUES
("2","1704"),
("2","1705"),
("2","1706"),
("2","1707"),
("2","1708"),
("2","1709"),
("2","1710"),
("2","1711"),
("2","1712"),
("2","1713"),
("2","1714"),
("2","1715"),
("2","1716"),
("2","1717"),
("2","1718"),
("2","1719"),
("2","1720"),
("2","1721"),
("2","1722"),
("2","1723"),
("2","1724"),
("2","1725"),
("2","1726"),
("2","1727"),
("2","1728"),
("2","1729"),
("2","1730"),
("2","1731"),
("2","1732"),
("2","1733"),
("2","1734"),
("2","1735"),
("2","1736"),
("2","1737"),
("2","1738"),
("2","1739"),
("2","1740"),
("2","1741"),
("2","1742"),
("2","1743"),
("2","1744"),
("2","1745"),
("2","1746"),
("2","1747"),
("2","1748"),
("2","1749"),
("2","1750"),
("2","1751"),
("2","1752"),
("2","1753"),
("2","1754"),
("3","1755"),
("3","1756"),
("3","1757"),
("25","1758"),
("25","1759"),
("25","1760"),
("25","1761"),
("25","1762"),
("25","1763"),
("25","1764"),
("25","1765"),
("25","1766"),
("25","1767"),
("25","1768"),
("25","1769"),
("25","1770"),
("25","1771"),
("1","1772"),
("1","1773"),
("1","1774"),
("1","1775"),
("1","1776"),
("1","1777"),
("1","1778"),
("1","1782"),
("1","1783"),
("1","1784"),
("1","1785"),
("1","1786"),
("73","1787"),
("1","1788"),
("1","1789"),
("1","1790"),
("1","1791"),
("1","1792"),
("1","1793"),
("1","1794"),
("1","1795"),
("1","1796"),
("1","1797"),
("1","1798"),
("1","1799"),
("1","1800"),
("1","1801");




CREATE TABLE `function` (
  `function_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `solution` text NOT NULL,
  `mark` int(11) NOT NULL,
  PRIMARY KEY (`function_id`)
) ENGINE=MyISAM AUTO_INCREMENT=6140 DEFAULT CHARSET=latin1;


INSERT INTO function VALUES
("1","Typy danych","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/typy_danych.jpg\" style=\"height:724px; width:1066px\" /></p>\n","","0"),
("2","Definiowanie funkcji","<p>MoÅ¼emy stworzyÄ‡ funkcjÄ™, kt&oacute;ra wypisuje ciÄ…g Fibonaciego o wybranych granicach:</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/fibonacci.jpg\" style=\"height:231px; width:696px\" /></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/fibonacci2.jpg\" style=\"height:464px; width:1280px\" /></p>\n\n<p>WartoÅ›ci domyÅ›lne okreÅ›lane sÄ… w punkcie definicji funkcji, w przestrzeni&nbsp;<em>definiowania</em>&nbsp;nazw, tak wiÄ™c np.:</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/domyslna_wartosc.jpg\" style=\"height:147px; width:333px\" /></p>\n","","0"),
("3","Instrukcje if","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/if.jpg\" style=\"height:261px; width:520px\" /></p>\n","","0"),
("4","PÄ™tle","<p>Instrukcja&nbsp;<tt>for<font color=\"#0782c1\">&nbsp;</font></tt>r&oacute;Å¼ni siÄ™ troszeczkÄ™ w Pythonie od tego, co uÅ¼ywasz w C lub Pascalu. Nie prowadzi siÄ™ iteracji od liczby do liczby (jak w Pascalu) lub daje siÄ™ uÅ¼ytkownikowi moÅ¼liwoÅ›Ä‡ definiowania kroku iteracji i warunki zakoÅ„czenia iteracji (jak w C). Instrukcja&nbsp;<tt>for<font color=\"#0782c1\">&nbsp;</font></tt>w Pythonie powoduje iteracjÄ™ po elementach jakiejkolwiek sekwencji (np. listy lub Å‚aÅ„cucha znak&oacute;w), w takim porzÄ…dku, w jakim sÄ… one umieszczone w danej sekwencji. Na przykÅ‚ad:</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/for.jpg\" style=\"height:336px; width:625px\" /></p>\n\n<h1>Instrukcja&nbsp;<tt>break</tt>&nbsp;i&nbsp;<tt>continue</tt>&nbsp;oraz klauzule&nbsp;<tt>else</tt>&nbsp;w pÄ™tlach</h1>\n\n<p>Instrukcja&nbsp;<tt>break</tt>, podobnie jak w C, powoduje wyjÅ›cie z najbliÅ¼ej zagnieÅ¼dÅ¼onej pÄ™tli&nbsp;<tt>for</tt>&nbsp;lub&nbsp;<tt>while</tt>.</p>\n\n<p>Instrukcja&nbsp;<tt>continue</tt>&nbsp;zostaÅ‚a r&oacute;wnieÅ¼ zapoÅ¼yczona z C, powoduje przejÅ›cie do nastÄ™pnego kroku iteracji w pÄ™tli.</p>\n\n<p>Instrukcje pÄ™tli posiadajÄ… klauzulÄ™&nbsp;<code>else</code>: jest ona wykonywana w momencie zakoÅ„czenia dziaÅ‚ania pÄ™tli przy wyczerpaniu siÄ™ (dojÅ›cia za ostatni element) listy (pÄ™tla&nbsp;<tt>for</tt>) lub gdy warunek pÄ™tli zwraca wartoÅ›Ä‡ faÅ‚szu (pÄ™tla&nbsp;<tt>while</tt>), ale nie w momencie opuszczenia pÄ™tli w wyniku zadziaÅ‚ania instrukcji&nbsp;<tt>break</tt>. Pokazane to zostaÅ‚o na przykÅ‚adzie algorytmu poszukiwania liczby pierwszej:</p>\n\n<p><br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/for_break_continue.jpg\" style=\"height:412px; width:572px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/liczba_pierwsza.jpg\" style=\"height:317px; width:1172px\" /></p>\n\n<h2><strong>While</strong></h2>\n\n<p>while warunek:</p>\n\n<p>&nbsp; &nbsp; kod</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/while.jpg\" style=\"height:557px; width:671px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/while_example.jpg\" style=\"height:551px; width:698px\" /></p>\n","","0"),
("5","Klasy","<p>W momencie konkretyzacji klasy, automatycznie wywoÅ‚ana zostanie metoda&nbsp;<tt>__init__()</tt>&nbsp;dla nowopowstaÅ‚ego konkretu klasy.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/klasa.jpg\" style=\"height:209px; width:514px\" /></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/klasa_dziedziczenie.jpg\" style=\"height:621px; width:829px\" /></p>\n","","0"),
("6","math.ceil(x)","<p>Return&nbsp;the smallest integer greater than or equal to&nbsp;<em>x</em></p>\n\n<p>Examples:</p>\n\n<p>5.8 -&gt; 6</p>\n\n<p>5.4 -&gt; 6</p>\n\n<p>5 &nbsp; -&gt; 5</p>\n","<p>import math</p>  <p>math.ceil(5.8) # 6</p>  <p>math.ceil(5.4) # 6</p>  <p>math.ceil(5) # 5</p>","1"),
("7","math.copysign(x, y)","<p>Return x&nbsp;but the sign of&nbsp;<em>y</em></p>\n\n<p>Examples:</p>\n\n<p>&nbsp;1.1, -0.0&nbsp;-&gt; -1.1</p>\n\n<p>-1.1, 0.0 -&gt;&nbsp; 1.1</p>\n\n<p>-1.1, -0.0 -&gt; -1.1</p>\n\n<p>&nbsp;1.1, -1 -&gt; -1.1</p>\n","<p>import math</p>  <p>math.copysign(1.1, -0.0) # -1.1</p>  <p>math.copysign(-1.1, 0.0) # 1.1</p>  <p>math.copysign(-1.1, -0.0) # -1.1</p>  <p>math.copysign(1.1, -1) # -1.1</p>","0"),
("8","math.fabs(x)","<p>Return the absolute value of&nbsp;<em>x</em></p>\n\n<p>Examples:</p>\n\n<p>&nbsp; -1&nbsp; -&gt; 1.0</p>\n\n<p>&nbsp;1.1&nbsp; -&gt; 1.1</p>\n\n<p>-1.9&nbsp; -&gt; 1.9</p>\n","<p>import math</p>  <p>math.fabs(-1) # 1.0</p>  <p>math.fabs(1.1) # 1.1</p>  <p>math.fabs(-1.9) # 1.9</p>","0"),
("9","math.factorial(x)","<p>Return&nbsp;<em>x</em>&nbsp;factorial</p>\n\n<p>Examples:</p>\n\n<p>5 -&gt; 120</p>\n\n<p>3 -&gt; 6</p>\n\n<p>1 -&gt; 1</p>\n","<p>import math</p>\n\n<p>math.factorial(5) # 120 because5*4*3*2*1=120 it&#39;s&nbsp;!5</p>\n\n<p>math.factorial(3) # 6 poniewaÅ¼ 1*2*3=6 it&#39;s&nbsp;!3</p>\n\n<p>math.factorial(1) # 1</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/silnia.png\" style=\"height:859px; width:289px\" /></p>\n","0"),
("10","math.floor(x)","<p>Return&nbsp;the largest integer less than or equal to&nbsp;<em>x</em></p>\n\n<p>Examples:</p>\n\n<p>5.8 -&gt; 5</p>\n\n<p>5.4 -&gt; 5</p>\n\n<p>5&nbsp; &nbsp;-&gt; 5</p>\n","<p>import.math</p>  <p>math.floor(5.8) # 5</p>  <p>math.floor(5.4) # 5</p>  <p>math.floor(5) # 5</p>","0"),
("11","math.fmod(x, y)","<p>Return modulo operation</p>\n\n<p>Examples:</p>\n\n<p>5/2 -&gt; 1</p>\n\n<p>6.2 -&gt; 0</p>\n\n<p>10/8 -&gt; 2</p>\n","<p>import math</p>  <p>math.fmod(5,2) # 1</p>  <p>math.fmod(6.2) # 0</p>  <p>math.fmod(10,8) # 2</p>","0"),
("12","math.frexp(x)","<p>Return two numbers (m, e) formula: x == m * 2**e</p>\n\n<p>Examples:</p>\n\n<p>5 -&gt; (0.625, 3)</p>\n\n<p>6 -&gt; (0.75, 3)</p>\n\n<p>0 -&gt; (0.0, 0)</p>\n","<p>import math</p>  <p>math.frexp(5) # (0.625, 3)</p>  <p>math. frexp(6) # (0.75, 3)</p>  <p>math. frexp(0) # (0.0, 0)</p>","0"),
("13","math.fsum(iterable)","<p>Return an accurate floating point sum of values in the iterable</p>\n\n<p>Examples:</p>\n\n<p>.1, .1, .1, .1, .1, .1, .1, .1, .1, .1 -&gt; 1</p>\n","<p>import math</p>  <p>math.fsum([.1, .1, .1, .1, .1, .1, .1, .1, .1, .1]) # 1.0</p>","0"),
("14","math.gcd(a, b)","<p>Return the greatest common divisor of the integers&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em></p>\n\n<p>Examples:</p>\n\n<p>4, 10 -&gt; 2</p>\n\n<p>5, 10 -&gt; 5</p>\n","<p>import.math</p>  <p>math.gcd(4, 10) # 2</p>  <p>math.gcd(5, 10) # 5</p>","0"),
("15","math.isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)","<p>Return&nbsp;<code>True</code>&nbsp;if the values&nbsp;<em>a</em>&nbsp;and&nbsp;<em>b</em>&nbsp;are close to each maximum difrence:&nbsp;0.05%</p>\n\n<p>Examples:</p>\n\n<p>100, 105 -&gt; True</p>\n\n<p>100, 106 -&gt; False</p>\n","<p>import math</p>  <p>math.isclose(100, 105, rel_tol=0.05, abs_tol=0.0) # True</p>  <p>math.isclose(100, 106, rel_tol=0.05, abs_tol=0.0) # False</p>","0"),
("16","math.isfinite(x)","<p>UÅ¼yj funkcji kt&oacute;ra sprawdzi czy dana liczba jest skoÅ„czona.</p>\n\n<p>Examples:</p>\n\n<p>inf&nbsp; -&gt; False</p>\n\n<p>-inf -&gt; False</p>\n\n<p>5&nbsp; &nbsp; -&gt; True</p>\n","<p>import math</p>  <p>math.isfinite(inf) # False</p>  <p>math.isfinite(-inf) # False</p>  <p>math.isfinite(5) # True</p>","0"),
("17","math.isinf(x)","<p>UÅ¼yj funkcji kt&oacute;ra sprawdzi czy dana liczba jest nieskoÅ„czonoÅ›ciÄ….</p>\n\n<p>Examples:</p>\n\n<p>inf&nbsp; -&gt; True</p>\n\n<p>-inf -&gt; True</p>\n\n<p>5&nbsp; &nbsp; -&gt; False</p>\n","<p>import math</p>  <p>math.isinf(inf) # True</p>  <p>math.isinf(-inf) # True</p>  <p>math.isinf(5) # False</p>","0"),
("18","math.isnan(x)","<p>UÅ¼yj funkcji kt&oacute;ra sprawdzi czy dana liczba jest nan (not a number)</p>\n\n<p>Examples:</p>\n\n<p>inf&nbsp; &nbsp; &nbsp; -&gt; False</p>\n\n<p>5&nbsp; &nbsp; &nbsp; &nbsp; -&gt; False</p>\n\n<p>math.nan -&gt; True</p>\n","<p>import math</p>  <p>math.isnan(inf) # False</p>  <p>math.isnan(5) # False</p>  <p>math.isnan(math.nan) # True</p>","0"),
("19","math.ldexp(x, i)","<p>UÅ¼yj funkcji kt&oacute;ra zwraca liczbÄ™ x kt&oacute;rÄ… moÅ¼na przedstawiÄ‡ nastÄ™pujÄ…cym wzorem x == m * 2**e</p>  <p>PrzykÅ‚ady:</p>  <p>0.625, 3 &nbsp;-&gt; 5.0</p>  <p>0.75, 3 &nbsp; -&gt; 6.0</p>  <p>0.0, 0 &nbsp; &nbsp; -&gt; 0.0</p>","<p>import math</p>  <p>math.ldexp(0.625, 3) # 5.0</p>  <p>math.ldexp(0.75, 3) # 6.0</p>  <p>math.ldexp(0.0, 0) # 0.0</p>","0"),
("20","math.modf(x)","<p>UÅ¼yj funkcji kt&oacute;ra rozdzieli podane liczby na czÄ™Å›Ä‡ caÅ‚kowitÄ… i uÅ‚amkowÄ…</p>  <p>PrzykÅ‚ady:</p>  <p>3.5 -&gt; (0.5, 3.0)</p>  <p>-3.5 -&gt; (-0.5, -3.0)</p>  <p>.5 -&gt; (0.5, 0.0)</p>  <p>1 -&gt; (0.0, 1.0)</p>","<p>import math</p>  <p>math.modf(3.5) # (0.5, 3.0)</p>  <p>math.modf(-3.5) # (-0.5, -3.0)</p>  <p>math.modf(.5) # (0.5, 0.0)</p>  <p>math.modf(1) # (0.0, 1.0)</p>","0"),
("21","math.trunc(x)","<p>UÅ¼yj funkcji kt&oacute;ra poda liczbÄ™ caÅ‚kowitÄ… podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>3.7 &nbsp; -&gt; 3</p>  <p>-3.5 -&gt; -3</p>  <p>.5 &nbsp; &nbsp;-&gt; 0</p>  <p>1 &nbsp; &nbsp; -&gt; 1</p>","<p>import math</p>  <p>math.trunc(3.7) # 3</p>  <p>math.trunc(-3.5) # -3</p>  <p>math.trunc(.5) # 0</p>  <p>math.trunc(1) # 1</p>","0"),
("22","math.exp(x)","<p>UÅ¼yj funkcji kt&oacute;ra podniesie&nbsp;math.e do podanych niÅ¼ej potÄ™g</p>  <p>PrzykÅ‚ady:</p>  <p>2 &nbsp;-&gt; 7.38905609893065&nbsp;</p>  <p>4 &nbsp;-&gt; 54.598150033144236</p>  <p>-2 -&gt; 0.1353352832366127&nbsp;</p>","<p>import math</p>  <p>math.exp(2) # 7.38905609893065 bo math.e ** 2</p>  <p>math.exp(4) # 54.598150033144236 bo math.e ** 4</p>  <p>math.exp(-2) # 0.1353352832366127 bo math.e ** -2</p>","0"),
("23","math.expm1(x)","<p>UÅ¼yj funkcji kt&oacute;ra wykona operacjÄ™&nbsp;(math.e ** x) - 1</p>  <p>PrzykÅ‚ady:</p>  <p>2 &nbsp;-&gt; &nbsp;6.38905609893065</p>  <p>4 &nbsp;-&gt; &nbsp;53.598150033144236</p>  <p>-2 -&gt; -0.8646647167633873</p>","<p>import math</p>  <p>math.expm1(2) # 6.38905609893065 bo (math.e ** 2) - 1</p>  <p>math.expm1(4) # 53.598150033144236 bo (math.e ** 4) - 1</p>  <p>math.expm1(-2) # -0.8646647167633873 bo (math.e ** -2) - 1</p>","0"),
("24","math.log(x[, base])","<p>UÅ¼yj funkcji kt&oacute;ra obliczy logarytm&nbsp;o domyÅ›lnej podstawie math.e lub podanej przez uÅ¼ytkownika</p>  <p>PrzykÅ‚ady:</p>  <p>100 -&gt; 4.605170185988092&nbsp;</p>  <p>100,10 -&gt; 2&nbsp;</p>  <p>1/3,27 -&gt;&nbsp;-0.33333333333333337</p>","<p>import math</p>  <p>math.log(100) # 4.605170185988092 bo math.e ** 4.605170185988092 = 100.00000000000001</p>  <p>math.log(100,10) # 2 bo 10 ** 2 = 100</p>  <p>math.log(1/3,27) # -0.33333333333333337 bo 1/3 ** -0.33333333333333337 = 27</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.log_2.png\" style=\"height:225px; width:337px\" /></p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.log.png\" style=\"height:99px; width:259px\" /></p>","0"),
("25","math.log1p(x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy logarytm&nbsp;o podstawie math.e i liczbie logarytmicznej x + 1</p>  <p>PrzykÅ‚ady:</p>  <p>99 -&gt;&nbsp;4.605170185988092</p>  <p>&nbsp;</p>","<p>import math</p>  <p>math.log1p(99) -&gt; 4.605170185988092 bo math.e ** 4.605170185988092 = 99 + 1</p>","0"),
("26","math.log2(x)","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci logarytm o podstawie 2 podanych niÅ¼ej liczb logarytmowych</p>  <p>PrzykÅ‚ady:</p>  <p>8 -&gt; 3.0&nbsp;</p>","<p>import math</p>  <p>math.log2(8) # 3.0 bo 2 ** 3 = 8</p>","0"),
("27","math.log10(x)","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci logarytm o podstawie 10 podanych niÅ¼ej liczb logarytmowych</p>  <p>PrzykÅ‚ady:</p>  <p>100 -&gt; 2&nbsp;</p>","<p>import math</p>  <p>math.log10(100) # 2 bo 10 ** 2 = 100</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.log_2.png\" style=\"height:225px; width:337px\" /></p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.log.png\" style=\"height:99px; width:259px\" /></p>","0"),
("28","math.pow(x, y)","<p>UÅ¼yj funkcji kt&oacute;ra podniesie liczbÄ™ x do potÄ™gi y</p>  <p>PrzykÅ‚ady:</p>  <p>2^3 -&gt; 8</p>","<p>import math</p>  <p>math.pow(2,3) # 8.0 bo 2 ** 3 = 8.0</p>","0"),
("29","math.sqrt(x)","<p>UÅ¼yj funkcji kt&oacute;ra spiewiastkuje podane liczby</p>  <p>PrzykÅ‚ady:</p>  <p>9 -&gt;&nbsp;3.0</p>  <p>10 -&gt;&nbsp;3.1622776601683795</p>","<p>import math</p>  <p>math.sqrt(9) # 3.0 bo 3.0 ** 2 = 9</p>  <p>math. sqrt(10) # 3.1622776601683795 bo 3.1622776601683795 ** 2 = 3.10.000000000000002</p>","0"),
("30","math.acos(x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy arc cosinus podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>-1 &nbsp; -&gt; 3.141592653589793</p>  <p>0 &nbsp; &nbsp;-&gt; 1.5707963267948966</p>  <p>0.5 -&gt;&nbsp;1.0471975511965979</p>","<p>import math</p>  <p>math.acos(-1) // 3.141592653589793</p>  <p>math.acos(0) // 1.5707963267948966</p>  <p>math.acos(0.5) // 1.0471975511965979</p>  <p><tt>y&nbsp;=&nbsp;cos(x)</tt>, <tt>x&nbsp;=&nbsp;arccos(y)</tt></p>  <p>Metoda acos() zwraca wartoÅ›Ä‡ numerycznÄ… od 0 do pi dla x pomiÄ™dzy -1 a 1</p>  <p>&nbsp;</p>","0"),
("31","math.asin(x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy arc sinus podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>-1 &nbsp; -&gt;&nbsp;3.141592653589793</p>  <p>0 &nbsp;&nbsp; -&gt;&nbsp;1.5707963267948966</p>  <p>0.5&nbsp;-&gt;&nbsp;1.0471975511965979</p>","<p>import math</p>  <p>math.asin(-1) // 3.141592653589793</p>  <p>math.asin(0) // 1.5707963267948966</p>  <p>math.asin(0.5) // 1.0471975511965979</p>  <p>Metoda asin() zwraca wartoÅ›Ä‡ liczbowÄ… pomiÄ™dzy &ndash;&pi;/2 i &pi;/2 radian&oacute;w dla x z przedziaÅ‚u -1, 1</p>  <p>&nbsp;</p>","0"),
("32","math.atan(x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy&nbsp;arc tangens &nbsp;podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>1&nbsp;-&gt; 0.7853981633974483</p>  <p>0 -&gt;&nbsp;0</p>","<p>import math</p>  <p>math.atan(1)</p>  <p>math.atan(0)</p>","0"),
("33","math.atan2(y, x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy kÄ…t theta punktu (x, y)&nbsp;</p>  <p>PrzykÅ‚ady:</p>  <p>90, 15&nbsp;-&gt; 1.4056476493802699</p>  <p>15, 90 -&gt; 0.16514867741462683</p>","<p>import math</p>  <p>math.atan2(90, 15); // 1.4056476493802699</p>  <p>math.atan2(15, 90); // 0.16514867741462683</p>","0"),
("34","math.cos(x)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy cosinus podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>0 -&gt; 1</p>  <p>1 -&gt; 0.5403023058681398</p>","<p>import math</p>  <p>math.cos(0) // 1</p>  <p>math.cos(1) // 0.5403023058681398</p>","0"),
("35","math.hypot(x, y)","<p>UÅ¼yj funkcji kt&oacute;ra koÅ¼ysta ze wzoru&nbsp;sqrt(x*x + y*y)</p>  <p>PrzykÅ‚ady:</p>  <p>3, 4</p>","<p>import math</p>  <p>math.hypot(3, 4) // 5 poniewaÅ¼ sqrt(3*3+4*4)</p>","0"),
("36","math.sin(x)","<p>UÅ¼yj funkcji kt&oacute;ra oblicza sinus</p>  <p>PrzykÅ‚ady:</p>  <p>0 -&gt; 0</p>  <p>1 -&gt; 0.8414709848078965</p>","<p>import math</p>  <p>math.sin(0) # 0</p>  <p>math.sin(1) # 0.8414709848078965</p>","0"),
("37","math.tan(x)","<p>UÅ¼yj funkcji kt&oacute;ra oblicza tangens podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>tan(0) # 0</p>  <p>tan(1) # 0.8414709848078965</p>","<p>import math</p>  <p>math.tan(0) # 0</p>  <p>math.tan(1) # 1.557...</p>","0"),
("38","math.degrees(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;konwertuje wartoÅ›c radian&oacute;w na stopnie</p>  <p>PrzykÅ‚ady</p>  <p>1 -&gt; 57,2957795</p>","<p>import math</p>  <p>math.degrees(1) #&nbsp;57,2957795</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.degrees.png\" style=\"height:358px; width:531px\" /></p>","0"),
("39","math.radians(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;konwertuje wartoÅ›c stopni&nbsp;na radiany</p>  <p>PrzykÅ‚ady:</p>  <p>57,2957795 -&gt; 1</p>","<p>import math</p>  <p>math.radians(57,2957795 ) #&nbsp;0.9999</p>","0"),
("40","math.acosh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy arcus cosinus hiperboliczny podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>2 -&gt;&nbsp;1.3169578969248166</p>","<p>import math</p>  <p>math.acosh(2) #&nbsp;1.3169578969248166</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.acosh.png\" style=\"height:116px; width:259px\" /></p>","0"),
("41","math.asinh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy arcus s...","<p>import math</p>  <p>math.sinh(2) #&nbsp;3.6268604078470186</p>","0"),
("42","math.atanh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy tanges hiperboliczny podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>0.76159416&nbsp;-&gt;&nbsp;1</p>","<p>import math</p>  <p>math.atanh(0.76159416) # 1,00000001</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.atanh.png\" style=\"height:123px; width:323px\" /></p>","0"),
("43","math.cosh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy cosinus hiperboliczny podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>4 &nbsp;-&gt;&nbsp;27,308233</p>  <p>1&nbsp;&nbsp;-&gt;&nbsp;0,100335348</p>","<p>import math</p>  <p>math.cosh(4) # 27,308233</p>  <p>math.cosh(1) # -0,100335348</p>","0"),
("44","math.sinh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy sinus hiperboliczny podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>0 &nbsp; -&gt;&nbsp;27,308233</p>  <p>1 &nbsp; -&gt;&nbsp;0,100335348</p>","<p>import math</p>  <p>math.sinh(0) // 0</p>  <p>math.sinh(1) // 1.1752011936438014</p>","0"),
("45","math.tanh(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy tangens hiperboliczny podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>-2 &nbsp; -&gt;&nbsp;-0,964028</p>  <p>0.5 -&gt;&nbsp;0,462117</p>","<p>import math</p>  <p>math.tanh(-2) // -0,964028</p>  <p>math.tanh(0.5) // 0,462117</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.tanh.png\" style=\"height:54px; width:134px\" /></p>","0"),
("46","math.erf(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy funkcjÄ™ bÅ‚edu podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>2 -&gt;&nbsp;0.9953222650189527</p>","<p>import math</p>  <p>math.erf(2) #&nbsp;0.9953222650189527</p>  <p>Funkcja bÅ‚Ä™du Gaussa &mdash; funkcja nieelementarna, kt&oacute;ra wystÄ™puje w rachunku prawdopodobieÅ„stwa, statystyce oraz w teorii r&oacute;wnaÅ„ r&oacute;Å¼niczkowych czÄ…stkowych</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.erf.png\" style=\"height:76px; width:255px\" /></p>","0"),
("47","math.erfc(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy uzupeÅ‚niajÄ…cÄ… funkcjÄ™ bÅ‚edu podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>2 -&gt;&nbsp;0.004677734981047268</p>","<p>math.erfc(2) -&gt; 0.004677734981047268</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.erfc.png\" style=\"height:137px; width:574px\" /></p>","0"),
("48","math.gamma(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy wartoÅ›Ä‡ gamma podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>2.5 &nbsp; -&gt; 1,329</p>  <p>3.75 -&gt; 0,268</p>","<p>math.gamma(2.5) &nbsp; # 1,329</p>  <p>math.gamma(3.75) # 0,268</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.gamma.png\" style=\"height:53px; width:284px\" /></p>","0"),
("49","math.lgamma(x)","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;obliczy logarytm naturalny gamma podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <p>2.5 &nbsp; -&gt; 1,329</p>  <p>3.75 -&gt; 0,268</p>","<p>math.lgamma(2.5) &nbsp; #&nbsp;0.2846828704729196</p>  <p>math.lgamma(3.75) #&nbsp;1.4868155785934172</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/math.lgamma.png\" style=\"height:355px; width:392px\" /></p>","0"),
("50","math.pi","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;zwruci wartoÅ›Ä‡ pi</p>","<p>math.pi&nbsp;# 3.141592653589793</p>","0"),
("51","math.ea","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;zwruci wartoÅ›Ä‡ liczby Eulera</p>","<p>import math</p>  <p>math.e</p>  <p>liczba Eulera</p>  <p>e = 2.718281...</p>","0"),
("52","math.tau","<p>UÅ¼yj funkcji kt&oacute;ra&nbsp;zwruci wartoÅ›Ä‡ liczby tau</p>","<p>import math</p>  <p>math.tau #&nbsp;6.283185...</p>","0"),
("53","math.info","<p>UÅ¼yj funkcji nieskoÅ„czonoÅ›ci</p>","<p>import math</p>  <p>math.inf # inf</p>","0"),
("54","math.nano","<p>UÅ¼yj funkcji not a number</p>","<p>math.nan # nan</p>","0"),
("55","platform.architecture()","<p>UÅ¼yj funkcji kt&oacute;ra poda ilu bitowy jest system i wypisze platformÄ™</p>  <p>&nbsp;</p>  <p>#&nbsp;(&#39;32bit&#39;, &#39;WindowsPE&#39;)</p>","<p>import platform</p>  <p>platform.architecture() #&nbsp;(&#39;32bit&#39;, &#39;WindowsPE&#39;)</p>  <p><strong>Windows Preinstallation Environment</strong>,&nbsp;<strong>Windows PE</strong>&nbsp;&ndash; Å›rodowisko przed-instalacyjne systemu Windows</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/platform/WinPE.jpg\" style=\"height:432px; width:1280px\" /></p>","0"),
("56","platform.machine()","<p>UÅ¼yj funkcji kt&oacute;ra poda czy system jest 32 lub 64 bitowy</p>  <p>&nbsp;</p>  <p>#&nbsp;&#39;x86&#39; lub&nbsp;&#39;x64&#39;</p>","<p>import platform</p>  <p>platform.machine() #&nbsp;&#39;x86&#39; lub&nbsp;&#39;x64&#39;</p>","0"),
("57","platform.node()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci nazwÄ™ sieciowÄ… komputera</p>  <p>#&nbsp;&#39;User-PC&#39;</p>","<p>import platform</p>  <p>platform.node() #&nbs...","0"),
("58","platform.platform()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci system operacyjny, jego wersjÄ™, zainstalowany service pack</p>  <p>&nbsp;</p>  <p># Windows-10-10.0.14393-SP0</p>","<p>import platform</p>  <p>platform.platform() #&nbsp;Windows-10-10.0.14393-SP0</p>","0"),
("59","platform.processor()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci nazwÄ™ procesora</p>  <p>&nbsp;</p>  <p># x86 Family 6 Model 37 Stepping 5, GenuineIntel</p>","<p>import platform</p>  <p>platform.processor() #&nbsp;x86 Family 6 Model 37 Stepping 5, GenuineIntel</p>","0"),
("60","platform.python_build()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci wersjÄ™ pythona oraz datÄ™ jego wydania</p>  <p>&nbsp;</p>  <p># (&#39;v3.5.1:37a07cee5969&#39;, &#39;Dec&nbsp; 6 2015 01:38:48&#39;)</p>","<p>import platform</p>  <p>platform.python_build() #&nbsp;(&#39;v3.5.1:37a07cee5969&#39;, &#39;Dec&nbsp; 6 2015 01:38:48&#39;)</p>","0"),
("61","platform.python_compiler()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci kompilator wykoÅ¼ystywany do uruchamiania kodu</p>  <p>&nbsp;</p>  <p># &#39;MSC v.1900 32 bit (Intel)&#39;</p>","<p>import platform</p>  <p>platform.python_compiler() #&nbsp;&#39;MSC v.1900 32 bit (Intel)&#39;</p>","0"),
("62","platform.python_branch()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci wersjÄ™ kompilatora</p>  <p>&nbsp;</p>  <p># &#39;v3.5.1&#39;</p>","<p>import platform</p>  <p>platform.python_branch() # &#39;v3.5.1&#39;</p>","0"),
("63","platform.python_implementation()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci implementacjÄ™ pythona # &#39;CPython&#39;</p>","<p>import platform</p>  <p>platform.python_implementation() # &#39;CPython&#39;</p>  <p>&nbsp;</p>  <p>MoÅ¼liwe wyniki&nbsp;&lsquo;CPython&rsquo;, &lsquo;IronPython&rsquo;, &lsquo;Jython&rsquo;, &lsquo;PyPy&rsquo;</p>","0"),
("64","platform.python_revision()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci&nbsp;SCM revision # &#39;37a07cee5969&#39;</p>","<p>import platform</p>  <p>platform.python_revision() #&nbsp;&#39;37a07cee5969&#39;</p>","0"),
("65","platform.python_version()","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli wersjÄ™ Pythona #&nbsp;&#39;3.5.1&#39;</p>","<p>import platform</p>  <p>platform.python_version() #&nbsp;&#39;3.5.1&#39;</p>","0"),
("66","platform.python_version_tuple()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci wersjÄ™ Pythona #&nbsp;(&#39;3&#39;, &#39;5&#39;, &#39;1&#39;)</p>","<p>import platform</p>  <p>platform.python_version_tuple()&nbsp;#&nbsp;(&#39;3&#39;, &#39;5&#39;, &#39;1&#39;)</p>","0"),
("67","platform.release()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci kt&oacute;ry wersja systemu jest zainstalowana #&nbsp;10</p>","<p>import platform</p>  <p>platform.release() # 10</p>","0"),
("68","platform.system()","<p>UÅ¼yj funkcji pokaÅ¼e kt&oacute;ry system jest zainstalowany #&nbsp;&#39;Windows&#39;</p>","<p>import platform</p>  <p>platform.system() #&nbsp;&#39;Windows&#39;</p>","0"),
("69","platform.system_alias(system, release, version)","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y alians systemowy &nbsp;#&nbsp;(&#39;Windows&#39;, &#39;10&#39;, &#39;10.0.14393&#39;)</p>","<p>import platform</p>  <p>platform.system_alias(platform.system(),platform.release(),platform.version())&nbsp;#&nbsp;(&#39;Windows&#39;,&nbsp;&#39;10&#39;,&nbsp;&#39;10.0.14393&#39;)</p>","0"),
("70","platform.version()","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e dokÅ‚adnÄ… wersjÄ™ systemu #&nbsp;&#39;10.0.14393&#39;</p>","<p>import platform</p>  <p>platform.version() #&nbsp;&#39;10.0.14393&#39;</p>","0"),
("71","platform.uname()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci&nbsp;&nbsp;system, node, release, version, machine i processor</p>  <p># (system=&#39;Windows&#39;, node=&#39;User-PC&#39;, release=&#39;10&#39;, version=&#39;10.0.14393&#39;, machine=&#39;x86&#39;, processor=&#39;x86 Family 6 Model 37 Stepping 5, GenuineIntel&#39;)</p>","<p>import&nbsp;platform</p>  <p>platform.uname() #&nbsp;(system=&#39;Windows&#39;, node=&#39;User-PC&#39;, release=&#39;10&#39;, version=&#39;10.0.14393&#39;, machine=&#39;x86&#39;, processor=&#39;x86 Family 6 Model 37 Stepping 5, GenuineIntel&#39;)</p>  <p>platform.uname()[0] # &#39;Windows&#39;</p>","0"),
("72","platform.java_ver() Java","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci wersjÄ™ Javy</p>","<p>import platform</p>  <p>platform.java_ver()</p>","0"),
("73","platform.win32_ver() Windows","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci OS release, version number,&nbsp;service pack,&nbsp; OS type (multi/single processor) # (&#39;10&#39;, &#39;10.0.14393&#39;, &#39;SP0&#39;, &#39;Multiprocessor Free&#39;)</p>","<p>import platform</p>  <p>platform.win32_ver() #&nbsp;(&#39;10&#39;, &#39;10.0.14393&#39;, &#39;SP0&#39;, &#39;Multiprocessor Free&#39;)</p>","0"),
("74","platform.popen() Win95/98 specific","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci # os._wrap_close object at</p>","<p>import platform</p>  <p>platform.popen(&#39;cmd&#39;) #&nbsp;os._wrap_close object at 0x00EB4910</p>","0"),
("75","platform.mac_ver() Mac OS Platform","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci wersjÄ™ systemu MAC OS X #&nbsp;<code>(&#39;10.5.8&#39;, (&#39;&#39;, &#39;&#39;, &#39;&#39;), &#39;i386&#39;)</code></p>","<pre> <code>import platform platform.mac_ver() # (&#39;10.5.8&#39;, (&#39;&#39;, &#39;&#39;, &#39;&#39;), &#39;i386&#39;)</code></pre>","0"),
("76","platform.dist() Unix Platforms","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wersjÄ™ linuxa # (&#39;debian&#39;,&#39;wheezy/sid&#39;,&#39;&#39;)</p>","<p>import platform<br /> platform.dist() # (&#39;debian&#39;,&#39;wheezy/sid&#39;,&#39;&#39;)</p>","0"),
("77","platform.linux_distribution() Unix Platforms","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wersjÄ™ linuxa # (&#39;debian&#39;,&#39;wheezy/sid&#39;,&#39;&#39;)</p>","<p>import platform</p>  <p><code>platform.linux_distribution() #&nbsp;(&#39;debian&#39;,&#39;wheezy/sid&#39;,&#39;&#39;)</code></p>","0"),
("78","platform.libc_ver() Unix Platforms","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli wersjÄ™ glibc i jego nazwÄ™ # (&#39;glibc&#39;, &#39;2.9&#39;)</p>","<p>import platform</p>  <p>platform.<code>libc_ver()</code></p>","0"),
("79","colorsys.rgb_to_yiq(r, g, b)","<p>Use function that convert the color from RGB coordinates to YIQ coordinates</p>\n\n<p>r = 0.2&nbsp;&nbsp; &nbsp;-&gt; y = 0.33999999999999997<br />\ng = 0.4&nbsp;&nbsp; &nbsp;-&gt; i = -0.11979999999999999<br />\nb = 0.4&nbsp;&nbsp; &nbsp;-&gt; q = -0.04259999999999996<br />\n&nbsp;</p>\n","<p>import colorsys</p>  <p>colorsys.rgb_to_yiq(0.2, 0.4, 0.4) # (0.33999999999999997, -0.11979999999999999, -0.04259999999999996)</p>","0"),
("80","colorsys.yiq_to_rgb(y, i, q)","<p>Use function that convert the color from YIQ coordinates to RGB coordinates</p>\n\n<p>y = 0.33999999999999997&nbsp;&nbsp; &nbsp; -&gt; r = 0.2<br />\ni = -0.11979999999999999 &nbsp; &nbsp; -&gt; g = 0.39999999999999997<br />\nq = -0.04259999999999996 &nbsp; -&gt; b = 0.4<br />\n&nbsp;</p>\n","<p>import&nbsp;colorsys</p>  <p>colorsys.yiq_to_rgb(0.33999999999999997, -0.11979999999999999, -0.04259999999999996) #&nbsp;(0.2, 0.39999999999999997, 0.4)</p>","0"),
("81","colorsys.rgb_to_hls(r, g, b)","<p>Use function that convert the color from RGB coordinates to HLS coordinates</p>\n\n<p>r = 0.2&nbsp;&nbsp; &nbsp;-&gt; h = 0.5<br />\ng = 0.4&nbsp;&nbsp; &nbsp;-&gt; l = 0.30000000000000004<br />\nb = 0.4&nbsp;&nbsp; &nbsp;-&gt; s = 0.3333333333333333</p>\n","<p>import colorsys</p>  <p>colorsys.rgb_to_hls(0.2, 0.4, 0.4) #&nbsp;(0.5, 0.30000000000000004, 0.3333333333333333)</p>","0"),
("82","colorsys.hls_to_rgb(h, l, s)","<p>Use function that convert the color from HLS coordinates to RGB coordinates</p>\n\n<p>h = 0.5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; r = 0.20000000000000007<br />\nl = 0.30000000000000004&nbsp;&nbsp;-&gt; g = 0.39999999999999997<br />\ns = 0.3333333333333333&nbsp;&nbsp; -&gt; b = 0.4</p>\n","<p>import colorsys</p>  <p>colorsys.hls_to_rgb(0.5, 0.30000000000000004, 0.3333333333333333) #&nbsp;(0.20000000000000007, 0.39999999999999997, 0.4)</p>","0"),
("83","colorsys.rgb_to_hsv(r, g, b)","<p>Use function that convert the color from RGB coordinates to HSV coordinates</p>\n\n<p>r = 0.2&nbsp;&nbsp; &nbsp;-&gt; h = 0.5<br />\ng = 0.4&nbsp;&nbsp; &nbsp;-&gt; s = -0.5<br />\nb = 0.4&nbsp;&nbsp; &nbsp;-&gt; v = -0.4</p>\n","<p>import&nbsp;colorsys</p>  <p>colorsys.rgb_to_hsv(0.2, 0.4, 0.4) #&nbsp;(0.5, 0.5, 0.4)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/colorsys/RGB.jpg\" style=\"height:266px; width:514px\" /></p>","0"),
("84","colorsys.hsv_to_rgb(h, s, v)","<p>Use function that convert the color from HSV coordinates to RGB coordinates</p>\n\n<p>h = 0.5&nbsp;&nbsp; &nbsp;-&gt; r = 0.2<br />\ns = 0.5&nbsp;&nbsp; &nbsp;-&gt; g = 0.4<br />\nv = 0.4&nbsp;&nbsp; &nbsp;-&gt; b = 0.4</p>\n","<p>import&nbsp;colorsys</p>  <p>colorsys.hsv_to_rgb(0.5, 0.5, 0.4) #&nbsp;(0.2, 0.4, 0.4)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/colorsys/RGB.jpg\" style=\"height:266px; width:514px\" /></p>","0"),
("85","class array.array(typecode[,initializer])","<p>Utw&oacute;Å¼ tablicÄ™ kt&oacute;ra stwoÅ¼y danÄ™ z okreÅ›lonym typem danych</p>  <p>PrzykÅ‚ady:</p>  <p>&#39;tekst&#39;</p>","<p>import array</p>  <p>s1 = &#39;tekst&#39;</p>  <p>a = array.array(&#39;u&#39;, s1)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/array/array.jpg\" style=\"height:391px; width:496px\" /></p>","0"),
("86","array.typecodes2","<p>UÅ¼yj funkcji kt&oacute;ra poda wszystkie dostÄ™pne typy danych tablicy #&nbsp;&#39;bBuhHiIlLqQfd&#39;</p>","<p>import array</p>  <p>a.typecodes #&nbsp;&#39;bBuhHiIlLqQfd&#39;</p>","0"),
("87","array.typecode","<p>UÅ¼yj funkcji kt&oacute;ra poda typ danych tabl...","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.typecode # &#39;u&#39;</p>","0"),
("88","array.itemsize","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e ilu bytowa jest tablica</p>  <p>PrzykÅ‚ady:</p>  <p>(&#39;u&#39;, &#39;tekst&#39;) -&gt; 2</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/array/array2.jpg\" style=\"height:391px; width:496px\" /></p>","<p>import array</p>  <p>array.array(&#39;u&#39;, &#39;tekst&#39;).itemsize # 2</p>","0"),
("89","array.append(x)","<p>UÅ¼yj funkcji kt&oacute;ra doda tekst na koniec tablicy</p>  <p>PrzykÅ‚ady:</p>  <p>&#39;tekst&#39; -&gt; &#39;tekst1&#39;</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.append(&quot;1&quot;)</p>","0"),
("90","array.buffer_info()","<p>UÅ¼yj funkcji kt&oacute;ra poda adres pamiÄ™ci i iloÅ›c element&oacute;w tablicy.</p>  <p>(&#39;u&#39;, &#39;tekst&#39;) -&gt;&nbsp;(19730232, 5)</p>","<p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)&nbsp;</p>  <p>a.buffer_info() #&nbsp;(19730232, 5)</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst1&#39;)&nbsp;</p>  <p>a.buffer_info() #&nbsp;(19729704, 6)</p>  <p>&nbsp;</p>","0"),
("91","array.byteswap()","<p>UÅ¼yj funkcji kt&oacute;ra wykona operacjÄ™&nbsp;Byteswap.</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.byteswap()</p>","0"),
("92","array.count(x)","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci iloÅ›Ä‡ wystÄ…pieÅ„ danej frazy w tablicy</p>  <p>PrzykÅ‚ady:</p>  <p># (&#39;u&#39;, &#39;tekst&#39;)</p>  <p>&#39;t&#39; -&gt; 2</p>  <p>&#39;x&#39; -&gt; 0</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.count(&#39;x&#39;) # 0</p>  <p>a.count(&#39;t&#39;) # 2</p>","0"),
("93","array.extend(iterable)","<p>UÅ¼yj funkcji kt&oacute;ra poÅ‚Ä…czy dwie tablice</p>  <p>PrzykÅ‚ady:</p>  <p># (&#39;u&#39;, &#39;tekst&#39;) + (&#39;u&#39;, &#39;drugi&#39;) -&gt;&nbsp;(&#39;u&#39;, &#39;tekstdrugi&#39;)</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>b = array.array(&#39;u&#39;, &#39;drugi&#39;)</p>  <p>a.extend(b)</p>  <p>print(a) #&nbsp;array(&#39;u&#39;, &#39;tekstdrugi&#39;)</p>","0"),
("94","array.frombytes(s)","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablicÄ™ z&nbsp;stringiem na tablicÄ™ bitowÄ….</p>  <p>PrzykÅ‚ady:<br /> &#39;test&#39; -&gt;&nbsp;(&#39;b&#39;, [116, 101, 115, 116])</p>","<p>x = array.array(&#39;b&#39;)<br /> x.frombytes(&#39;test&#39;.encode())<br /> print(x) # array(&#39;b&#39;, [116, 101, 115, 116])</p>","0"),
("95","array.fromfile(f, n)","","","0"),
("96","array.fromlist(list)","<p>UÅ¼yj funkcji kt&oacute;ra doda wartoÅ›ci z listy do tablicy</p>  <p>import array</p>  <p># [1,2,3] -&gt; (&#39;i&#39;, [1, 2, 3])</p>","<p>import array</p>  <p>b = [1,2,3]</p>  <p>a = array.array(&#39;i&#39;)</p>  <p>a.fromlist(b)</p>  <p>print(a) # array(&#39;i&#39;, [1, 2, 3])</p>","0"),
("97","array.fromstring()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablicÄ™ z&nbsp;stringiem na tablicÄ™ bitowÄ….</p>  <p>PrzykÅ‚ady:<br /> &#39;test&#39; -&gt;&nbsp;(&#39;b&#39;, [116, 101, 115, 116])</p>","<p>x = array.array(&#39;b&#39;)<br /> x.fromstring(&#39;test&#39;.encode())<br /> print(x) # array(&#39;b&#39;, [116, 101, 115, 116])</p>","0"),
("98","array.fromunicode(s)","<p>UÅ¼yj funckji kt&oacute;ra doda wartoÅ›Ä‡ unicode do tablicy</p>  <p>PrzykÅ‚ady:</p>  <p>u&#39;test&#39; -&gt; array(&#39;u&#39;, &#39;test&#39;)</p>","<p>x = array.array(&#39;u&#39;)</p>  <p>&nbsp;x.fromunicode(u&#39;test&#39;)</p>  <p>print(x) #&nbsp;array(&#39;u&#39;, &#39;test&#39;)</p>  <p>&nbsp;</p>","0"),
("99","array.index(x)","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e na kt&oacute;rym miejscu tablicy jest dana wartoÅ›Ä‡</p>  <p>PrzykÅ‚ady:</p>  <p>(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>t -&gt; 0</p>  <p>k -&gt; 2</p>  <p>&nbsp;</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.index(&#39;t&#39;) # 0</p>  <p>a.index(&#39;k&#39;) # 2</p>  <p>a.index(&#39;q&#39;) # bÅ‚Ä…d zostanie wyÅ›wietlony</p>","0"),
("100","array.insert(i, x)","<p>UÅ¼yj funkcji kt&oacute;ra dopisze wartoÅ›Ä‡ do tablicy na podane miejsce</p>  <p>PrzykÅ‚ady:</p>  <p># (&#39;u&#39;, &#39;tekst&#39;)</p>  <p>tekst -&gt; teXkst</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.insert(2, &#39;X&#39;)</p>  <p>print(a) #&nbsp;array(&#39;u&#39;, &#39;teXkst&#39;)</p>","0");
INSERT INTO function VALUES
("101","array.pop([i])","<p>UÅ¼yj funkcji kt&oacute;ra usunie domyÅ›lnie ostatniÄ… wartoÅ›Ä‡ z tablicy lub podanÄ… przez uÅ¼ytkownika</p>  <p>PrzykÅ‚ady:</p>  <p># (&#39;u&#39;, &#39;tekst&#39;)</p>  <p><font face=\"monospace\">()&nbsp;</font>-&gt;&nbsp;&#39;t&#39;</p>  <p>(2) -&gt; &#39;k&#39;</p>","<p>import array</p>  <p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p><code>a.</code><code>pop</code>() #&nbsp;&#39;t&#39;</p>  <p><code>a.</code><code>pop</code>(2) #&nbsp;&#39;k&#39;</p>  <p>print(a) #&nbsp;array(&#39;u&#39;, &#39;tes&#39;)</p>","0"),
("102","array.remove(x)","<p>UÅ¼yj funkcji kt&oacute;ra usunie pierwsze wystÄ…pienie danej wartoÅ›ci</p>  <p># (&#39;u&#39;, &#39;tekst&#39;)</p>  <p>t -&gt;&nbsp;array(&#39;u&#39;, &#39;ekst&#39;)</p>","<p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)</p>  <p>a.remove(&#39;t&#39;)</p>  <p>print(a) #&nbsp;array(&#39;u&#39;, &#39;ekst&#39;)</p>","0"),
("103","array.reverse()","<p>UÅ¼yj funkcji kt&oacute;ra odwr&oacute;ci wartoÅ›ci w tablicy</p>  <p>tekst -&gt;&nbsp;tsket</p>","<p>a = array.array(&#39;u&#39;, &#39;tekst&#39;)<br /> a.reverse()<br /> print(a) # array(&#39;u&#39;, &#39;tsket&#39;)</p>","0"),
("104","array.tobytes()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablicÄ™ binarnÄ… na string.</p>  <p>PrzykÅ‚ady:</p>  <p>(&#39;b&#39;, [116, 101, 115, 116]) -&gt;&nbsp;&nbsp;b&#39;test&#39;</p>","<p>x = array.array(&#39;b&#39;, [116, 101, 115, 116])</p>  <p>x.tobytes()</p>  <p>print(x) #&nbsp;b&#39;test&#39;</p>","0"),
("105","array.tofile(f)","","","0"),
("106","array.tolist()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablice z wartoÅ›ciami na listÄ™.</p>  <p>PrzykÅ‚ady:</p>  <p>#&nbsp;(&#39;i&#39;, [1, 2, 3]) -&gt;&nbsp;&nbsp;[1, 2, 3]</p>","<p>import array</p>  <p>a = array.array(&#39;i&#39;, [1, 2, 3])</p>  <p>b = a.tolist()</p>  <p>print(b) #&nbsp;[1, 2, 3]</p>","0"),
("107","array.tostring()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablicÄ™ binarnÄ… na string.</p>  <p>PrzykÅ‚ady:</p>  <p>(&#39;b&#39;, [116, 101, 115, 116]) -&gt;&nbsp;&nbsp;b&#39;test&#39;</p>","<p>x = array.array(&#39;b&#39;, [116, 101, 115, 116])</p>  <p>x.tostring()<br /> print(x) # b&#39;test&#39;</p>","0"),
("108","array.tounicode()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje tablicÄ™ unicode na string</p>  <p>PrzykÅ‚ady</p>  <p>(&#39;u&#39;, &#39;test&#39;) -&gt;&nbsp;&#39;test&#39;</p>","<p>x = array.array(&#39;u&#39;, &#39;test&#39;)</p>  <p>x.tounicode() # &#39;test&#39;</p>","0"),
("109","string.ascii_letters","<p>UÅ¼yj funkcji kt&oacute;ra wypisze maÅ‚e i wielkie litery alfabetu angielskiego. #&nbsp;&#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</p>","<p>import string</p>  <p>string.ascii_letters # &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</p>","0"),
("110","string.ascii_lowercase","<p><font face=\"monospace\">UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli wszystkie maÅ‚e litery angielskiego alfabetu #&nbsp;</font>&#39;abcdefghijklmnopqrstuvwxyz&#39;</p>  <p>&nbsp;</p>","<p>import string</p>  <p><code>string.ascii_lowercase # &#39;abcdefghijklmnopqrstuvwxyz&#39;</code></p>","0"),
("111","string.ascii_uppercase","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli wszystkie duÅ¼e litery angielskiego alfabetu. #&nbsp;&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</p>","<p>import string</p>  <p><code>string.ascii_uppercase #&nbsp;&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</code></p>","0"),
("112","string.digits","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszytkie liczby systemu dziesiÄ™tnego #&nbsp;&#39;0123456789&#39;</p>","<p>import string</p>  <p>string.digits #&nbsp;&#39;0123456789&#39;</p>","0"),
("113","string.hexdigits","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie liczby systemu szesnastkowego razem z duÅ¼ymi literami &#39;ABCDEF&#39; kt&oacute;re mogÄ… byÄ‡ stosowane zamiennie z &#39;abcdef&#39;. #&nbsp;&#39;0123456789abcdefABCDEF&#39;</p>","<p>import string</p>  <p>string.hexdigits #&nbsp;&#39;0123456789abcdefABCDEF&#39;</p>  <p>&nbsp;</p>","0"),
("114","string.octdigits","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie liczby systemu &oacute;semkowego.&nbsp;# &#39;01234567&#39;</p>","<p>import string</p>  <p>string.octdigits # &#39;01234567&#39;</p>","0"),
("115","string.punctuation","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie specjalne znaki #&nbsp;&#39;!&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~&#39;</p>","<p>import string</p>  <p>string.punctuation&nbsp;#&nbsp;&#39;!&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[]^_`{|}~&#39;</p>","0"),
("116","string.printable","<p>UÅ¼yj funkcji kt&oacute;ra wypisze <strong>digits, ascii_letters, punctuation</strong>, i <strong>whitespace</strong>.&nbsp;#&nbsp;&#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[]^_`{|}~ x0bx0c&#39;</p>","<p>import string</p>  <p>string.printable #&nbsp;&#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;#$%&amp;&#39;()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~ 	  x0bx0c&#39;</p>","0"),
("117","string.whitespace","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie znaki niedrukowalne czyli takie kt&oacute;re&nbsp;nie widaÄ‡ w gotowym dokumencie lub sÄ… prezentowane jako odstÄ™p na ekranie monitora lub drukarki. #&nbsp;&#39; 	  x0bx0c&#39;</p>","<p>import string</p>  <p>string.whitespace #&nbsp;&#39; x0bx0c&#39;</p>","0"),
("118","class string.Formatter","","","0"),
("119","format(format_string, *args, **kwargs)","","","0"),
("120","vformat(format_string, args, kwargs)","","","0"),
("121","parse(format_string)","","","0"),
("122","get_field(field_name, args, kwargs)","","","0"),
("123","get_value(key, args, kwargs)","","","0"),
("124","check_unused_args(used_args, args, kwargs)","","","0"),
("125","format_field(value, format_spec)","","","0"),
("126","format_field()","","","0"),
("127","convert_field(value, conversion)","","","0"),
("128","class string.Template(template)","","","0"),
("129","substitute(mapping, **kwds)","","","0"),
("130","safe_substitute(mapping, **kwds)","","","0"),
("131","template","","","0"),
("132","string.capwords(s, sep=None)","","","0"),
("133","exception webbrowser.Error","","","0"),
("134","webbrowser.open(url, new=0, autoraise=True)","<p>UÅ¼yj funkcji kt&oacute;ra otwoÅ¼y nowÄ… zakÅ‚adkÄ™ w domyÅ›lnej przeglÄ…darce&nbsp;lub jÄ… uruchomi i wyÅ›wietli adres strony jeÅ¼eli jest wyÅ‚Ä…czona.</p>","<p>import&nbsp;webbrowser</p>  <p>webbrowser.open(&quot;http://www.google.com&quot;)</p>  <p># robi to samo co&nbsp;<code>webbrowser.</code><code>open_new</code>(),&nbsp;<code>webbrowser.</code><code>open_new_tab</code>()</p>","0"),
("135","webbrowser.open_new(url)","<p>UÅ¼yj funkcji kt&oacute;ra otwoÅ¼y nowÄ… zakÅ‚adkÄ™ w domyÅ›lnej przeglÄ…darce&nbsp;lub jÄ… uruchomi i wyÅ›wietli adres strony jeÅ¼eli jest wyÅ‚Ä…czona.</p>  <p>&nbsp;</p>","<p>import webbrowser</p>  <p>webbrowser.open_new(&quot;http://www.google.com&quot;)</p>  <p># robi to samo co&nbsp;webbrowser.open(),&nbsp;<code>webbrowser.</code><code>open_new_tab</code>()</p>","0"),
("136","webbrowser.open_new_tab(url)","<p>UÅ¼yj funkcji kt&oacute;ra otwoÅ¼y nowÄ… zakÅ‚adkÄ™ w domyÅ›lnej przeglÄ…darce&nbsp;lub jÄ… uruchomi i wyÅ›wietli adres strony jeÅ¼eli jest wyÅ‚Ä…czona.</p>","<p>import&nbsp;webbrowser</p>  <p>webbrowser.open_new_tab(&quot;http://www.google.com&quot;)</p>  <p># robi to samo co&nbsp;webbrowser.open(),&nbsp;<code>webbrowser.</code><code>open_new()</code></p>  <p>&nbsp;</p>","0"),
("137","webbrowser.get(using=None)","<p>&nbsp;UÅ¼yj funkcji kt&oacute;ra przejmie kontrolÄ™ nad okreÅ›lonÄ… przegladarkÄ…. #&nbsp;windows-default</p>  <p>&nbsp;</p>","<p>import&nbsp;webbrowser</p>  <p>b = webbrowser.get(&#39;windows-default&#39;)<br /> b.open(&#39;http://docs.python.org/lib/module-webbrowser.html&#39;)</p>","0"),
("138","webbrowser.register(name, constructor, instance=None)","<p>UÅ¼yj funkcji kt&oacute;ra zarejestruje przeglÄ…darkÄ™ #&nbsp;WindowsDefault</p>  <p>&nbsp;</p>","<p>import webbrowser</p>  <p>webbrowser.register(&#39;przegladarka&#39;, None, webbrowser.WindowsDefault)</p>","0"),
("139","controller.open(url, new=0, autoraise=True)","","","0"),
("140","controller.open_new(url)","","","0"),
("141","controller.open_new_tab(url)","","","0"),
("142","statistics.mean(data)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy Å›redniÄ… podanych liczb&nbsp;</p>  <p>PrzykÅ‚ady:</p>  <p>#&nbsp;[1, 2, 3, 4, 4]</p>","<p>import statistics</p>  <p>statistics.mean([1, 2, 3, 4, 4]) # 2.8 bo 1+2+3+4+4 = 14 | 14/5 = 2.8</p>","0"),
("143","statistics.harmonic_mean(data)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy&nbsp;Å›redniÄ… harmonicznÄ… podanych liczb</p>  <p>PrzykÅ‚ady:</p>  <pre> [2.5, 3, 10] -&gt; 3.6</pre>","<p>import statistics</p>  <p>statistics.harmonic_mean([1, 2, 3, 4, 4]) # 3.6</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/harmonic_mean.png\" style=\"height:1024px; width:640px\" /></p>","0"),
("144","statistics.median(data)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy medianÄ™ podanych liczb</p>  <p>[1, 3, 5] -&gt; 3</p>","<p>import&nbsp;statistics</p>  <p>statistics.median([1, 3, 5])</p>  <p># robi to samo co median_grouped()</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/median.jpg\" style=\"height:203px; width:782px\" /></p>","0"),
("145","statistics.median_low(data)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci zwykÅ‚Ä… medialnÄ… w przypadku liczb paÅ¼ystycz lub gdy liczba jest niepaÅ¼ysta zwroci liczbÄ™ na lewo od Å›rodka&nbsp;</p>  <p>PrzykÅ‚ady:</p>  <pre> [1, 3, 5] -&gt; 3</pre>  <pre> [1, 3, 5, 7] -&gt; 3</pre>","<p>import statistics</p>  <pre> statistics.median_high([1, 3, 5]) # 3 statistics.median_high([1, 3, 5, 7]) # 3 </pre>","0"),
("146","statistics.median_high(data)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci zwykÅ‚Ä… medialnÄ… w przypadku liczb paÅ¼ystycz lub gdy liczba jest niepaÅ¼ysta zwroci liczbÄ™ na prawo od Å›rodka&nbsp;</p>  <p>PrzykÅ‚ady:</p>  <pre> [1, 3, 5] -&gt; 3</pre>  <pre> [1, 3, 5, 7] -&gt; 5</pre>","<p>import statistic</p>  <pre> import statistic.median_high([1, 3, 5]) # 3 import statistic.median_high([1, 3, 5, 7]) # 5 </pre>","0"),
("147","statistics.median_grouped(data, interval=1)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy medianÄ™ podanych liczb #&nbsp;[52, 52, 53, 54]</p>  <p>&nbsp;</p>","<p>import&nbsp;statistics</p>  <p>statistics.median_grouped([52, 52, 53, 54]) #&nbsp;52.5</p>","0"),
("148","statistics.mode(data)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci najczÄ™Å›ciej powtaÅ¼ajÄ…ce siÄ™ liczby w ciÄ…gu, jeÅ¼eli istniejÄ… 2 liczby naprzykÅ‚ad 2 i 3 powtaÅ¼ajÄ…ce siÄ™ tyle samo razy i bÄ™dÄ…ce najczÄ™Å›ciej wystÄ™pujÄ…cymi zostanie wzr&oacute;cony bÅ‚Ä…d.</p>  <p>PrzykÅ‚ady:</p>  <p>[1, 1, 2, 3, 3, 3, 3, 4] -&gt; 3</p>  <p>[1, 2, 2, 2, 3, 3, 3, 4] -&gt;&nbsp;no unique mode; found 2 or more equally common values</p>","<p>import statistics</p>  <p>statistics.mode([1, 1, 2, 3, 3, 3, 3, 4])<br /> try:<br /> &nbsp; &nbsp; statistics.mode([1, 2, 2, 2, 3, 3, 3, 4])<br /> except statistics.StatisticsError:<br /> &nbsp; &nbsp; print(&quot;no unique mode; found 2 or more equally common values&quot;)</p>","0"),
("149","statistics.pstdev(data, mu=None)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci &#39;population variance&#39; czyli wariancjÄ™ populacji</p>  <p>PrzykÅ‚ady:</p>  <p>[4,4.2,5,4.3,5.5] -&gt;&nbsp;0.316</p>  <p>&nbsp;</p>","<p>import statistics</p>\n\n<p>data =&nbsp;[4,4.2,5,4.3,5.5]</p>\n\n<p>statistics.mean(data)&nbsp; # 4.6</p>\n\n<p>statistics.pvariance(data) # 0.316</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/population.jpg\" style=\"height:558px; width:1280px\" /></p>\n","0"),
("150","statistics.pvariance(data, mu=None)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci &#39;population standard deviation (the square root of the population variance)&#39; czyli wariancjÄ™ populacji podniesionÄ… do kwadratu</p>  <p>PrzykÅ‚ady:</p>  <p>[4,4.2,5,4.3,5.5] -&gt;&nbsp;0.5621387729022078</p>","<p>import statistics</p>  <p>statistics.pstdev([4,4.2,5,4.3,5.5]) #&nbsp;0.5621387729022078</p>  <p># bo</p>  <p>#&nbsp;statistics.pvariance([4,4.2,5,4.3,5.5]) #&nbsp;0.316</p>  <p>#&nbsp;math.sqrt(0.316) #&nbsp;0.5621387729022078&nbsp;</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/population.jpg\" style=\"height:558px; width:1280px\" /></p>","0"),
("151","statistics.stdev(data, xbar=None)","<p>UÅ¼yj funkcji kt&oacute;ra obliczy &#39;sample standard deviation&#39;.</p>  <p>PrzykÅ‚ady:</p>  <p>[4,3,5,7,2,9,11,7] -&gt;&nbsp;3.070597894314954</p>","<p>import statistics</p>  <p>statistics.stdev([4,3,5,7,2,9,11,7]) #&nbsp;3.070597894314954</p>  <p># bo</p>  <p>#&nbsp;statistics.variance([4,3,5,7,2,9,11,7]) #&nbsp;9.428571428571429</p>  <p>#&nbsp;math.sqrt(9.428571428571429) #&nbsp;3.070597894314954</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/population2.jpg\" style=\"height:683px; width:1280px\" /></p>","0"),
("152","statistics.variance(data, xbar=None)","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci &#39;sample standard deviation (the square root of the sample variance&#39;</p>  <p>PrzykÅ‚ady:</p>  <p>[4,3,5,7,2,9,11,7] -&gt;&nbsp;9.428571428571429</p>","<p>import statistics</p>  <p>statistics.stdev([4,3,5,7,2,9,11,7]) #&nbsp;3.070597894314954</p>  <p># bo</p>  <p>#&nbsp;statistics.variance([4,3,5,7,2,9,11,7]) #&nbsp;9.428571428571429</p>  <p>#&nbsp;math.sqrt(9.428571428571429) #&nbsp;3.070597894314954</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/statistics/population2.jpg\" style=\"height:683px; width:1280px\" /></p>","0"),
("153","exception statistics.StatisticsError","<p>UÅ¼yj funkcji kt&oacute;ra wykoÅ¼ysta statistic error.</p>","<p>import statistics<br /> try:<br /> &nbsp; &nbsp; statistics.mode([1, 2, 2, 2, 3, 3, 3, 4])<br /> except statistics.StatisticsError:<br /> &nbsp; &nbsp; print(&quot;no unique mode; found 2 or more equally common values&quot;)<br /> &nbsp;</p>","0"),
("154","time.altzone()","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli strefÄ™ czasowÄ… DST #&nbsp;-7200</p>","<p>import time</p>  <p>time.altzone #&nbsp;-7200</p>","0"),
("155","time.asctime([t])","<p>UÅ¼yj funkcji kt&oacute;ra wypisze&nbsp;dzieÅ„ miesiÄ…c godzinÄ™ i&nbsp;rok</p>","<p>import time</p>  <p>time.asctime()</p>  <p>&#39;Thu Mar &nbsp;2 17:43:04 2017&#39; # Thursday March 17:43:04 2017 # Czwartek Marzec&nbsp;17:43:04 2017 # dzieÅ„ miesiÄ…c godzina rok</p>","0"),
("156","time.clock()","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e ile sekund mineÅ‚o od czasu pierwszego uÅ¼ycia tej funkcji (pierwszy wynik jest dziwaczny i nic nie daje) #&nbsp;60.024328086551876</p>","<p>import time</p>  <p>time.clock() #&nbsp;1.0265665148374792e-06</p>  <p># po miniÄ™ciu okoÅ‚a minuty</p>  <p>time.clock() #&nbsp;60.024328086551876</p>  <p># robi to samo co funkcja&nbsp;<code>time.</code><code>perf_counter</code>()</p>","0"),
("157","time.clock_getres(clk_id) Unix","","","0"),
("158","time.clock_gettime(clk_id) Unix","","","0"),
("159","time.clock_settime(clk_id, time) Unix","","","0"),
("160","time.CLOCK_HIGHRES Solaris","","","0"),
("161","time.CLOCK_MONOTONIC Unix","","","0"),
("162","time.CLOCK_MONOTONIC_RAW","","","0"),
("163","time.CLOCK_PROCESS_CPUTIME_ID Unix","","","0"),
("164","time.CLOCK_REALTIME Unix","","","0"),
("165","time.ctime([secs])","<p>UÅ¼yj funkcji kt&oacute;ra wypisze dzisiejszy dzieÅ„ (poniedziaÅ‚ek ,wtorek itd.) miesiÄ…c dzieÅ„ ( 1, 2,3 itd.) godzina i rok jeÅ¼eli nie poda siÄ™ Å¼adnego argumentu w funkcji naprzykÅ‚ad zostanie wyswietlone to &#39;Fri Mar &nbsp;3 17:53:18 2017&#39;. W przypadku w kt&oacute;rym podamy argument to w zaleznoÅ›ci jakÄ… liczbÄ™ tam wpiszemy zostanie doliczone do czasu&nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; podana iloÅ›Ä‡ sekund.</p>  <p>PrzykÅ‚ady:</p>  <p>40 -&gt; &#39;Thu Jan &nbsp;1 01:00:40 1970&#39;</p>  <p>&nbsp;</p>","<p>import time</p>  <p>time.ctime(40) #&nbsp;&#39;Thu Jan &nbsp;1 01:00:40 1970&#39;</p>","0"),
("166","time.daylight","<p>UÅ¼yj funkcji kt&oacute;ra wypisze 1 jeÅ¼eli&nbsp;<em>Daylight Saving Time jest zdefiniowany.</em></p>","<p>import time</p>  <p>time.daylight # 1</p>","0"),
("167","time.get_clock_info(name)","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli informacje o niekt&oacute;rych funkcjach w bibliotece time.</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;GetTickCount64()&#39;, monotonic=True, resolution=0.015625)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;GetProcessTimes()&#39;, monotonic=True, resolution=1e-07)</p>  <p>#&nbsp;namespace(adjustable=True, implementation=&#39;GetSystemTimeAsFileTime()&#39;, monotonic=False, resolution=0.015625)</p>","<p>time.get_clock_info(&#39;clock&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>time.get_clock_info(&#39;monotonic&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;GetTickCount64()&#39;, monotonic=True, resolution=0.015625)</p>  <p>time.get_clock_info(&#39;perf_counter&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>time.get_clock_info(&#39;process_time&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;GetProcessTimes()&#39;, monotonic=True, resolution=1e-07)</p>  <p>time.get_clock_info(&#39;time&#39;) #&nbsp;namespace(adjustable=True, implementation=&#39;GetSystemTimeAsFileTime()&#39;, monotonic=False, resolution=0.015625)</p>","0"),
("168","time.gmtime([secs])","<p>Uzyj funkcji kt&oacute;ra wypisze na podstawie daty &nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; nowÄ… datÄ™ dodajÄ…c iloÅ›Ä‡ sekund wpisanych w argumencie funkcji do tej daty. W przypadku nie wpisania nic w argumencie funkcji nic nie zostanie zwr&oacute;cone.</p>  <p>PrzykÅ‚ady:</p>  <p>60 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=1, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>1 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>","<p>import time</p>  <p>time.gmtime(60) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=1, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.gmtime(1) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.gmtime() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=3, tm_hour=17, tm_min=56, tm_sec=37, tm_wday=4, tm_yday=62, tm_isdst=0)</p>","0"),
("169","time.localtime([secs])","<p>Uzyj funkcji kt&oacute;ra wypisze na podstawie daty &nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; nowÄ… datÄ™ lokalnÄ… dodajÄ…c iloÅ›Ä‡ sekund wpisanych w argumencie funkcji do tej daty. W przypadku nie wpisania nic w argumencie funkcji nic nie zostanie zwr&oacute;cone.</p>  <p>PrzykÅ‚ady:</p>  <p>1 -&gt; time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>40 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=40, tm_wday=3, tm_yday=1, tm_isdst=0)</p>","<p>import time</p>  <p>time.localtime(1) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.localtime(40) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=40, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.localtime() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=3, tm_hour=18, tm_min=59, tm_sec=15, tm_wday=4, tm_yday=62, tm_isdst=0)</p>","0"),
("170","time.mktime(t)","","","0"),
("171","time.monotonic()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ile czasu mineÅ‚o od nieokreÅ›lonego zdaÅ¼enia w przeszÅ‚oÅ›ci, ta funkcja nie jest zaleÅ¼na od tego czy zmieni siÄ™ rÄ™cznie czas w systemie operacyjnym.</p>  <p>#&nbsp;435737.671</p>","<p>import time</p>  <p>time.monotonic() #&nbsp;435737.671</p>","0"),
("172","time.perf_counter()","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e ile sekund mineÅ‚o od czasu pierwszego uÅ¼ycia tej funkcji (pierwszy wynik jest dziwaczny i nic nie daje) #&nbsp;60.024328086551876<br /> &nbsp;</p>","<p>import time</p>  <p>time.perf_counter() #&nbsp;1.0265665148374792e-06</p>  <p># po miniÄ™ciu okoÅ‚a minuty</p>  <p>time.perf_counter() #&nbsp;60.024328086551876</p>  <p># robi to samo co&nbsp;time.clock()</p>","0"),
("173","time.process_time()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ile czasu zajmuje CPU przetwoÅ¼enie kodu.</p>","<p>import time</p>  <p>time.process_time() #&nbsp;0.109375</p>","0"),
("174","time.sleep(secs)","<p>UÅ¼yj funkcji zawiesi dziaÅ‚anie programu na okreÅ›lonÄ… iloÅ›Ä‡ sekund.</p>  <p>60 -&gt; czas wykonywania skryptu zawieszony na 60 sekund</p>","<p>import time</p>  <p><code>time.</code><code>sleep</code>(<em>60</em>)</p>","0"),
("175","time.strftime(format[, t])","<p># Dzisiejsza data - 2017-03-03 20:44&nbsp;czyli piÄ…tek</p>  <p>time.strftime(&#39;%a&#39;) #&nbsp;&#39;Fri&#39;</p>  <p>time.strftime(&#39;%A&#39;) #&nbsp;&#39;Friday&#39;</p>  <p>time.strftime(&#39;%b&#39;) #&nbsp;&#39;Mar&#39;</p>  <p>time.strftime(&#39;%B&#39;) #&nbsp;&#39;March&#39;</p>  <p>time.strftime(&#39;%c&#39;) #&nbsp;&#39;Fri Mar &nbsp;3 20:44:02 2017&#39;</p>  <p>time.strftime(&#39;%d&#39;) # &#39;03&#39;</p>  <p>time.strftime(&#39;%H&#39;) # 20&nbsp;</p>  <p>time.strftime(&#39;%I&#39;) &nbsp;# &#39;08&#39;</p>  <p>time.strftime(&#39;%j&#39;) #&nbsp;&#39;062&#39;</p>  <p>time.strftime(&#39;%m&#39;) #&nbsp;&#39;03&#39;</p>  <p>time.strftime(&#39;%M&#39;) # &nbsp;&#39;45&#39;</p>  <p>time.strftime(&#39;%p&#39;) #&nbsp;&#39;PM&#39;</p>  <p>time.strftime(&#39;%S&#39;) #&nbsp;&#39;25&#39;</p>  <p>time.strftime(&#39;%U&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%w&#39;) #&nbsp;&#39;5&#39;</p>  <p>time.strftime(&#39;%W&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%x&#39;) #&nbsp;&#39;03/03/17&#39;</p>  <p>UÅ¼yj funckji kt&oacute;ra w zaleÅ¼noÅ›ci od podanych arhument&oacute;w funkcji wypisze:</p>  <p>godzinÄ™ #&nbsp;&#39;20:45:59&#39;</p>  <p>rok tylko 2 ostatnie liczby&nbsp;#&nbsp;&#39;17&#39;</p>  <p>peÅ‚ny rok #&nbsp;&#39;2017&#39;</p>  <p>strefa czasowa &nbsp;</p>  <p>Polska znajduje siÄ™ w strefach czasowych: UTC+01:00 (czas Å›rodkowoeuropejski (CET), w okresie zimowym) oraz UTC+02:00 (czas Å›rodkowoeuropejski letni (CEST), w okresie letnim). #&nbsp;&#39;+0100&#39;&#39;</p>  <p>strefa czasowa #&nbsp;&#39;Srodkowoeuropejski czas stand.&#39;&nbsp;</p>  <p>znak % #&nbsp;&#39;%&#39;</p>","<p># Dzisiejsza data - 2017-03-03 20:44&nbsp;czyli piÄ…tek</p>  <p>time.strftime(&#39;%a&#39;) #&nbsp;&#39;Fri&#39;</p>  <p>time.strftime(&#39;%A&#39;) #&nbsp;&#39;Friday&#39;</p>  <p>time.strftime(&#39;%b&#39;) #&nbsp;&#39;Mar&#39;</p>  <p>time.strftime(&#39;%B&#39;) #&nbsp;&#39;March&#39;</p>  <p>time.strftime(&#39;%c&#39;) #&nbsp;&#39;Fri Mar &nbsp;3 20:44:02 2017&#39;</p>  <p>time.strftime(&#39;%d&#39;) # &#39;03&#39;</p>  <p>time.strftime(&#39;%H&#39;) # 20&nbsp;</p>  <p>time.strftime(&#39;%I&#39;) &nbsp;# &#39;08&#39;</p>  <p>time.strftime(&#39;%j&#39;) #&nbsp;&#39;062&#39;</p>  <p>time.strftime(&#39;%m&#39;) #&nbsp;&#39;03&#39;</p>  <p>time.strftime(&#39;%M&#39;) # &nbsp;&#39;45&#39;</p>  <p>time.strftime(&#39;%p&#39;) #&nbsp;&#39;PM&#39;</p>  <p>time.strftime(&#39;%S&#39;) #&nbsp;&#39;25&#39;</p>  <p>time.strftime(&#39;%U&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%w&#39;) #&nbsp;&#39;5&#39;</p>  <p>time.strftime(&#39;%W&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%x&#39;) #&nbsp;&#39;03/03/17&#39;</p>  <p>time.strftime(&#39;%X&#39;) #&nbsp;&#39;20:45:59&#39;</p>  <p>time.strftime(&#39;%y&#39;) #&nbsp;&#39;17&#39;</p>  <p>time.strftime(&#39;%Y&#39;) #&nbsp;&#39;2017&#39;</p>  <p>time.strftime(&#39;%z&#39;) #&nbsp;&#39;+0100&#39;&#39;</p>  <p>time.strftime(&#39;%Z&#39;) #&nbsp;&#39;Srodkowoeuropejski czas stand.&#39;</p>  <p>time.strftime(&#39;%%&#39;) #&nbsp;&#39;%&#39;</p>","0"),
("176","time.strptime(string[, format])","<p>UÅ¼yj funkcji kt&oacute;ra po podaniu daty i formatu w jakim ta data jest zapisana wypiszÄ™ listÄ™ zawierajÄ…cÄ…&nbsp;rok, miesiÄ…c, dzieÅ„, godzinÄ™, minutÄ™, sekundÄ™, numer dnia tygodnia, numer dnia roku i znacznik czasu letniego.</p>  <p>PrzykÅ‚ady:</p>  <p>30 Nov 00 -&gt;&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>00 Nov 30 -&gt;&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>&nbsp;</p>","<p>import time</p>  <p>time.strptime(&quot;30 Nov 00&quot;, &quot;%d %b %y&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>time.strptime(&quot;00 Nov 30&quot;, &quot;%y %b %d&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>","0"),
("177","time.struct_time","<p>UÅ¼yj funkcji kt&oacute;ra wypisze atrybuty&nbsp;<code>time.</code><code>struct_time</code></p>","<p>import time</p>  <p>time.strptime(&quot;30 Nov 00&quot;, &quot;%d %b %y&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>","0"),
("178","time.time()","<p>UÅ¼yj funckji kt&oacute;ra wypisze ile sekund upÅ‚yneÅ‚o od &#39;tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=0 tm_wday=3, tm_yday=1, tm_isdst=0&#39;</p>","<p>import time</p>  <p>time.time() #&nbsp;1488572042.5798314</p>  <p>&nbsp;</p>","0"),
("179","time.timezone","<p>UÅ¼yj funkcji kt&oacute;ra wypisze strefÄ™ czasowÄ…</p>  <p>#&nbsp;-3600</p>","<p>import time</p>  <p>time.timezone # -3600</p>","0"),
("180","time.tzname","<p>UÅ¼yj funkcji kt&oacute;ra wypisze lokalny DST #&nbsp;(&#39;Srodkowoeuropejski czas stand.&#39;, &#39;Srodkowoeuropejski czas letni&#39;)</p>","<p>import time</p>  <p>time.tzname #&nbsp;(&#39;Srodkowoeuropejski czas stand.&#39;, &#39;Srodkowoeuropejski czas letni&#39;)</p>","0"),
("181","time.tzset() UNIX","","","0"),
("182","zipapp.create_archive(source, target=None, interpreter=None, main=None)","<p>UÅ¼yj funkcji kt&oacute;ra zapakuje kilka plik&oacute;w do formatu .pyz i je rozpakuje potem.</p>  <p>&#39;game-engine.png&#39; -&gt; &#39;myapp.pyz&#39;<br /> &#39;aaaabbbb.jpg&#39; -&gt; &#39;myapp.pyz&#39;</p>  <p><br /> &#39;myapp.pyz&#39; -&gt; &#39;game-engine.png&#39;<br /> &#39;myapp.pyz&#39; -&gt; &#39;aaaabbbb.jpg&#39;<br /> &nbsp;</p>","<p>import zipapp</p>  <p>zipapp.create_archive(&#39;game-engine.png&#39;, &#39;myapp.pyz&#39;)<br /> zipapp.create_archive(&#39;aaaabbbb.jpg&#39;, &#39;myapp.pyz&#39;)</p>  <p><br /> zipapp.create_archive(&#39;myapp.pyz&#39;, &#39;game-engine.png&#39;)<br /> zipapp.create_archive(&#39;myapp.pyz&#39;, &#39;aaaabbbb.jpg&#39;)<br /> &nbsp;</p>","0"),
("183","zipapp.get_interpreter(archive)","","","0"),
("184","exception zipfile.BadZipFile","","","0"),
("185","exception zipfile.LargeZipFile","","","0"),
("186","class zipfile.ZipFile","","","0"),
("187","class zipfile.PyZipFile","","","0"),
("188","class zipfile.ZipInfo()","","","0"),
("189","zipfile.is_zipfile(filename)","<p>UÅ¼yj funckji kt&oacute;ra sprawdzi czy plik ma rozszeÅ¼enie zip.</p>  <p>&nbsp;</p>","<p>import zipfile</p>  <p>a = zipfile.is_zipfile(&#39;_Python.zip&#39;)</p>  <p>print(a) # true</p>","0"),
("190","zipfile.ZIP_STORED","<p>UÅ¼yj funkcji t&oacute;ra wzr&oacute;ci staÅ‚Ä… wartoÅ›Ä‡ dla niezkompresowanych plik&oacute;w. # 0</p>","<p>import zipfile</p>  <p>zipfile.ZIP_STORED # 0</p>","0"),
("191","zipfile.ZIP_DEFLATED","<p>UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ staÅ‚Ä… standoardowÄ… wartoÅ›Ä‡ skompresowanych plik&oacute;w. # 8</p>","<p>import&nbsp;zipfile</p>  <p>zipfile.ZIP_DEFLATED # 8</p>","0"),
("192","zipfile.ZIP_BZIP2","<p>UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ staÅ‚Ä… standoardowÄ… wartoÅ›Ä‡ konwersji &#39;BZIP2&#39; plik&oacute;w. # 12</p>","<p>import&nbsp;zipfile</p>  <p>zipfile.ZIP_BZIP2 # 12</p>","0"),
("193","zipfile.ZIP_LZMA","<p>UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ staÅ‚Ä… standoardowÄ… wartoÅ›Ä‡ konwersji &#39;LZMA&#39; plik&oacute;w. # 14</p>  <p>&nbsp;</p>","<p>import&nbsp;zipfile</p>  <p>zipfile.ZIP_LZMA # 14</p>","0"),
("194","class zipfile.ZipFile()","<p>UÅ¼yj funkcji kt&oacute;ra zadeklaruje folder zip do uÅ¼ycia jeÅ¼eli nie istnieje to go najpierwt stowÅ¼y. #&nbsp;_Python1.zip</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;w&#39;)</p>","0"),
("195","ZipFile.close()","<p>UÅ¼yj funkcji kt&oacute;ra zamknie archiwum zip. # &#39;_Python1.zip&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;w&#39;)</p>  <p>myzip.close()</p>","0"),
("196","ZipFile.getinfo(name)","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli informacje na temat pliku znajdujÄ…cego siÄ™ w archiwum zip #&nbsp;&#39;Users/User/Documents/_Python/GDI.jpg&#39;</p>  <p>#&nbsp;ZipInfo filename=&#39;Users/User/Documents/_Python/GDI.jpg&#39; filemode=&#39;-rw-rw-rw-&#39; file_size=465716</p>","<p>import zipfile</p>  <p>path = &#39;C:UsersUserDocuments\\_Python&#39;</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;w&#39;)</p>  <p>myzip.write(&#39;GDI.jpg&#39;)</p>  <p>myzip.getinfo(&#39;GDI.jpg&#39;) #&nbsp;ZipInfo filename=&#39;Users/User/Documents/_Python/GDI.jpg&#39; filemode=&#39;-rw-rw-rw-&#39; file_size=465716</p>","0"),
("197","ZipFile.infolist()","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli dane wszystkich plik&oacute;w znajdujÄ…cych siÄ™ w archiwum zip.&nbsp;#&nbsp;&#39;Users/User/Documents/_Python/GDI.jpg&#39;</p>  <p>#&nbsp;ZipInfo filename=&#39;Users/User/Documents/_Python/GDI.jpg&#39; filemode=&#39;-rw-rw-rw-&#39; file_size=465716</p>","<p>import zipfile</p>  <p>path = &#39;C:UsersUserDocuments\\_Python&#39;</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;w&#39;)</p>  <p>myzip.write(&#39;GDI.jpg&#39;)</p>  <p>myzip.infolist() #&nbsp;ZipInfo filename=&#39;Users/User/Documents/_Python/GDI.jpg&#39; filemode=&#39;-rw-rw-rw-&#39; file_size=465716</p>","0"),
("198","ZipFile.namelist()","<p>UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ nazwy wszystkich plik&oacute;w znajdujÄ…cych sie w archiwum zip. #&nbsp;&#39;_Python1.zip&#39;</p>  <p># &#39;GDI.jpg&#39;</p>  <p># &#39;GDI2.jpg&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;w&#39;)</p>  <p>myzip.write(&#39;GDI.jpg&#39;)</p>  <p>myzip.write(&#39;GDI2.jpg&#39;)</p>  <p>myzip.namelist() #&nbsp;[&#39;Users/User/Documents/_Python/GDI.jpg&#39;, &#39;Users/User/Documents/_Python/GDI2.jpg&#39;]</p>","0"),
("199","ZipFile.open()","<p>Uzyj funkcji kt&oacute;ra otwoÅ¼y plik znajdujÄ…cy siÄ™ w archiwum zip i umoÅ¼liwi dostÄ™p do jego binarnego odczytu.</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;r&#39;)</p>  <p>myzip.open(r&#39;Users/User/Documents/_Python/GDI.jpg&#39;)</p>","0"),
("200","ZipFile.extract()","<p>UÅ¼yj funkcji kt&oacute;ra wypakuje z archiwum plik o podanej nazwie i umieÅ›ci go w podanym folderu</p>  <p>folder.zip ------- GDI2.jpg</p>  <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;------- JARVIS.jpg</p>  <p>folder.zipGDI2.jpg -&gt; celGDI2.jpg</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;folder.zip&#39;, &#39;r&#39;)</p>  <p>myzip.extract(&#39;GDI2.jpg&#39;, &#39;cel\\&#39;)<br /> &nbsp;</p>","0");
INSERT INTO function VALUES
("201","ZipFile.extractall()","<p>UÅ¼yj funkcji kt&oacute;ra wypakuje wszystkie pliki z archiwum &nbsp;o podanej nazwie i je umieÅ›ci w podanym foldeÅ¼e</p>  <p>folder.zip ------- GDI2.jpg</p>  <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;------- JARVIS.jpg</p>  <p>folder.zipGDI2.jpg -&gt; celGDI2.jpg</p>  <p>folder.zipJARVIS.jpg -&gt; celGDI2.jpg</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;folder.zip&#39;, &#39;r&#39;)<br /> myzip.extractall(&#39;cel\\&#39;)</p>","0"),
("202","ZipFile.printdir()","<p>Uzyj funckji kt&oacute;ra wyÅ›wietli wszystkie pliki znajdujÄ…ce siÄ™ w danym archiwum zip # folder.zip</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/zipfile/ZipFile.printdir.jpg\" style=\"height:69px; width:815px\" /></p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;folder.zip&#39;, &#39;r&#39;)</p>  <p>myzip.printdir()</p>","0"),
("203","ZipFile.setpassword(pwd)","<p>UÅ¼yj funkcji kt&oacute;ra po otwaricu archiwum &#39;GDI2.zip&#39;&nbsp;wpisze hasÅ‚o &#39;1234&#39; kt&oacute;re zostaÅ‚o ustalone dla danego archiwum, aby moÅ¼liwe byÅ‚o extrudowanie wszystkich plik&oacute;w.</p>","<p>import zipfile<br /> myzip = zipfile.ZipFile(&#39;GDI2.zip&#39;, &#39;r&#39;)<br /> myzip.setpassword(b&#39;1234&#39;)<br /> myzip.extractall(&#39;cel&#39;)</p>","0"),
("204","ZipFile.read(name, pwd=None)","<p>UÅ¼yj funkcji kt&oacute;ra otwoÅ¼y archiwum zip &#39;_Python1.zip&#39; i odczyta wartoÅ›Ä‡ binarnÄ… pliku kt&oacute;ry znajduje siÄ™ w tym archiwum &nbsp;&#39;Users/User/Documents/_Python/GDI.jpg&#39; a nastÄ™pnie jÄ… zapisze jako string w pliku tekstowym &#39;tekst.txt&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;_Python1.zip&#39;, &#39;r&#39;)</p>  <p>myzip.open(r&#39;Users/User/Documents/_Python/GDI.jpg&#39;)<br /> a = myzip.read(r&#39;Users/User/Documents/_Python/GDI.jpg&#39;)</p>  <p>f = open(&#39;test.txt&#39;, &#39;w&#39;)<br /> f.write(str(a))<br /> f.close()</p>","0"),
("205","ZipFile.testzip()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze none jeÅ¼eli wszystko ok lub nazwe pierwszego popsutego pliku w archiwum zip &#39;folder.zip&#39;</p>  <p>&nbsp;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;GDI2.zip&#39;, &#39;r&#39;)<br /> myzip.setpassword(b&#39;1234&#39;)<br /> myzip.testzip() # wypisze none jeÅ¼eli wszystko ok lub nazwe pierwszego popsutego pliku</p>","0"),
("206","ZipFile.write()","<p>UÅ¼yj funkcji kt&oacute;ra doda do utowÅ¼onego archiwum zip&nbsp;&#39;Python.zip&#39; pliki&nbsp;&#39;GDI.jpg&#39; i&nbsp;&#39;GDI2.jpg&#39;.</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;Python.zip&#39;, &#39;w&#39;)</p>  <p>myzip.write(&#39;GDI.jpg&#39;)</p>  <p>myzip.write(&#39;GDI2.jpg&#39;)</p>","0"),
("207","ZipFile.writestr()","","","0"),
("208","ZipFile.debug","<p><font face=\"monospace\">UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ poziom debugowania archiwum &#39;folder.zip&#39; # wartoÅ›c od 0 do 3</font></p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;GDI2.zip&#39;, &#39;r&#39;)</p>  <p>myzip.debug<br /> &nbsp;</p>","0"),
("209","ZipFile.comment","<p>UÅ¼yj funkcji kt&oacute;ra wypiszÄ™ komentaÅ¼&nbsp;z archiwum &#39;folder.zip&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipFile(&#39;folder.zip&#39;, &#39;r&#39;)</p>  <p>myzip.comment<br /> &nbsp;</p>","0"),
("210","class zipfile.PyZipFile()","<p>UÅ¼yj funkcji kt&oacute;ra otwoÅ¼y archiwum&nbsp;zip z plikami *.py &#39;myapp.zip&#39;&nbsp;</p>","<p>import zipfile</p>  <p>myzip = zipfile.PyZipFile(&#39;myapp.zip&#39;, &#39;w&#39;)<br /> &nbsp;</p>","0"),
("211","writepy()","<p>UÅ¼yj funkcji kt&oacute;ra zapakuje do archiwum zip &#39;myapp.zip&#39; plik &#39;Text.py&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.PyZipFile(&#39;myapp.zip&#39;, &#39;w&#39;)<br /> myzip.writepy(&#39;Text.py&#39;)</p>","0"),
("212","classmethod ZipInfo.from_file(filename, arcname=None)","<p>UÅ¼yj funkcji kt&oacute;ra uzyska dostÄ™p do konkretnego pliku &nbsp;&#39;GDI2.jpg&#39; w archiwum &#39;_Python&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> &nbsp;</p>","0"),
("213","ZipInfo.is_dir()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze czy konkretny plik w archiwum jest folderem # False lub True</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>print(myzip.is_dir()) # False</p>","0"),
("214","ZipInfo.filename","<p>UÅ¼yj funkcji kt&oacute;ra wypisze nazwÄ™ pliku zaznaczonego w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> print(myzip.filename) # GDI2.jpg</p>  <p>&nbsp;</p>","0"),
("215","ZipInfo.date_time","<p>UÅ¼yj funkcji kt&oacute;ra wypisze datÄ™ stwoÅ¼enia pliku zaznaczonego w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.date_time # (2017, 3, 6, 19, 29, 0)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/zipfile/index-value.jpg\" style=\"height:292px; width:372px\" /></p>","0"),
("216","ZipInfo.compress_type","<p>UÅ¼yj funkcji kt&oacute;ra wypisze stopieÅ„ kompresji pliku zaznaczonego w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.compress_type # 0</p>","0"),
("217","ZipInfo.comment","<p>UÅ¼yj funkcji kt&oacute;ra wypisze komentaÅ¼ pliku zaznaczonego w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.comment # b&#39;&#39;</p>","0"),
("218","ZipInfo.extra","<p>UÅ¼yj funkcji kt&oacute;ra wypisze rozszeÅ¼ony komentaÅ¼&nbsp;w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.extra # b&#39;&#39;</p>","0"),
("219","ZipInfo.create_system","<p>UÅ¼yj funkcji kt&oacute;ra wypisze kt&oacute;ry stwoÅ¼yÅ‚ archiwum w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.create_system # 0</p>","0"),
("220","ZipInfo.create_version","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wersjÄ™ PKZIP&nbsp; w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)</p>  <p>myzip.create_version # 20</p>","0"),
("221","ZipInfo.extract_version","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wersjÄ™ PKZIP niezbÄ™dnÄ… do wypakowania archiwum w klasie &#39;zipfile.ZipInfo.from_file(full_path,relative_path)&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.extract_version # 20</p>","0"),
("222","ZipInfo.reserved","<p>UÅ¼yj funkcji kt&oacute;ra musi byÄ‡ zerem w bibliotece zipinfo</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.reserved # 0</p>","0"),
("223","ZipInfo.flag_bits","<p>UÅ¼yj funkcji kt&oacute;ra wypisze &#39;ZIP flag bits&#39;</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.flag_bits # 0</p>","0"),
("224","ZipInfo.volume","<p>Uzyj funkcji kt&oacute;ra wypisze objÄ™toÅ›c nagÅ‚&oacute;wka</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.volume # 0</p>","0"),
("225","ZipInfo.internal_attr","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wewnÄ™tÅ¼ne atrybuty</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.internal_attr # 0</p>","0"),
("226","ZipInfo.external_attr","<p>UÅ¼yj funkcji kt&oacute;ra wypisze zewnÄ™tÅ¼ne atrybuty</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.external_attr # 2176188416</p>","0"),
("227","ZipInfo.header_offset","","","0"),
("228","ZipInfo.CRC","","","0"),
("229","ZipInfo.compress_size","","","0"),
("230","ZipInfo.file_size","<p>UÅ¼yj funkcji kt&oacute;ra wypisze rozmiar niezkompresowanych danych.</p>","<p>import zipfile</p>  <p>myzip = zipfile.ZipInfo.from_file(r&#39;C:UsersUserDocuments\\_PythonGDI2.jpg&#39;, &#39;GDI2.jpg&#39;)<br /> myzip.file_size # 0</p>","0"),
("231","class calendar.Calendar(firstweekday=0)","<p>UÅ¼yj klasy kt&oacute;ra zadeklaruje klasÄ™ kalendaÅ¼ i ustawi pierwszy dzieÅ„ tygodnia na niedzielÄ™</p>","<p>import&nbsp;calendar</p>  <p>cal = calendar.Calendar(firstweekday=6)</p>  <p># 0 to poniedziaÅ‚ek 6 to niedziela</p>","0"),
("232","iterweekdays() ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie dni po koleji na podstawie pierszego ustawionego dnia tygodnia.</p>","<p>import&nbsp;calendar</p>  <p>cal = calendar.Calendar(firstweekday=6) # 0 to poniedziaÅ‚ek 6 to niedziela</p>  <p>for i in cal.iterweekdays(): print(i)</p>  <p>#6<br /> #0<br /> #1<br /> #2<br /> #3<br /> #4<br /> #5</p>","0"),
("233","itermonthdates(year, month) ","<p>UÅ¼yj funkcji kt&oacute;ra wypize wszystkie dni w podanym roku i miesiÄ…cu oraz dni z popÅ¼edniego i kolejnego miesiÄ…ca tak aby byÅ‚y pokazane peÅ‚ne tygodnie.</p>","<p>import calendar<br /> cal = calendar.Calendar(firstweekday=6)</p>  <p>for i in cal.itermonthdates(2016, 7): print(i)</p>  <p>#2016-06-26<br /> #2016-06-27<br /> #2016-06-28<br /> #2016-06-29<br /> #2016-06-30<br /> #2016-07-01<br /> #2016-07-02<br /> #2016-07-03<br /> #2016-07-04<br /> #2016-07-05<br /> #2016-07-06<br /> #2016-07-07<br /> #2016-07-08<br /> #2016-07-09<br /> #2016-07-10<br /> #2016-07-11<br /> #2016-07-12<br /> #2016-07-13<br /> #2016-07-14<br /> #2016-07-15<br /> #2016-07-16<br /> #2016-07-17<br /> #2016-07-18<br /> #2016-07-19<br /> #2016-07-20<br /> #2016-07-21<br /> #2016-07-22<br /> #2016-07-23<br /> #2016-07-24<br /> #2016-07-25<br /> #2016-07-26<br /> #2016-07-27<br /> #2016-07-28<br /> #2016-07-29<br /> #2016-07-30<br /> #2016-07-31<br /> #2016-08-01<br /> #2016-08-02<br /> #2016-08-03<br /> #2016-08-04<br /> #2016-08-05<br /> #2016-08-06</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/czerwiec_2016.png\" style=\"height:411px; width:432px\" /></p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/sierpien_2016.png\" style=\"height:412px; width:446px\" /></p>","0"),
("234","itermonthdays2(year, month) ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze&nbsp;numer dnia | dzieÅ„ tygodnia podanego miesiÄ…ca i roku</p>","<p>import calendar<br /> cal = calendar.Calendar(firstweekday=6)</p>  <p>for i in cal.itermonthdays2(2016, 7): print(i)</p>  <p>#(0, 6)<br /> #(0, 0)<br /> #(0, 1)<br /> #(0, 2)<br /> #(0, 3)<br /> #(1, 4)<br /> #2, 5)<br /> #3, 6)<br /> #(4, 0)<br /> #(5, 1)<br /> #(6, 2)<br /> #(7, 3)<br /> #(8, 4)<br /> #(9, 5)<br /> #(10, 6)<br /> #(11, 0)<br /> #(12, 1)<br /> #(13, 2)<br /> #(14, 3)<br /> #(15, 4)<br /> #(16, 5)<br /> #(17, 6)<br /> #(18, 0)<br /> #(19, 1)<br /> #(20, 2)<br /> #(21, 3)<br /> #(22, 4)<br /> #(23, 5)<br /> #(24, 6)<br /> #(25, 0)<br /> #(26, 1)<br /> #(27, 2)<br /> #(28, 3)<br /> #(29, 4)<br /> #(30, 5)<br /> #(31, 6)<br /> #(0, 0)<br /> #(0, 1)<br /> #(0, 2)<br /> #(0, 3)<br /> #(0, 4)<br /> #(0, 5)</p>","0"),
("235","itermonthdays(year, month) ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze&nbsp;numer dnia tygodnia podanego miesiÄ…ca i roku</p>","<p>import calendar<br /> cal = calendar.Calendar(firstweekday=6)</p>  <p>for i in cal.itermonthdays(2016, 7): print(i)</p>  <p>#0<br /> #0<br /> #0<br /> #0<br /> #1<br /> #2<br /> #3<br /> #4<br /> #5<br /> #6<br /> #7<br /> #8<br /> #9<br /> #10<br /> #11<br /> #12<br /> #13<br /> #14<br /> #15<br /> #16<br /> #17<br /> #18<br /> #19<br /> #20<br /> #21<br /> #22<br /> #23<br /> #24<br /> #25<br /> #26<br /> #27<br /> #28<br /> #29<br /> #30<br /> #31<br /> #0<br /> #0<br /> #0<br /> #0<br /> #0<br /> #0</p>","0"),
("236","monthdatescalendar(year, month) ","<p>UÅ¼yj funckji kt&oacute;ra&nbsp;na podstawie podanego roku i miesiÄ…ca wypisze w formacie datetime po koleji dni.</p>  <p>#2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-07-03 2016-07-04 2016-07-05 2016-07-06 2016-07-07 2016-07-08 2016-07-09<br /> #2016-07-10 2016-07-11 2016-07-12 2016-07-13 2016-07-14 2016-07-15 2016-07-16<br /> #2016-07-17 2016-07-18 2016-07-19 2016-07-20 2016-07-21 2016-07-22 2016-07-23<br /> #2016-07-24 2016-07-25 2016-07-26 2016-07-27 2016-07-28 2016-07-29 2016-07-30<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06</p>  <p>&nbsp;</p>  <p>&nbsp;</p>","<p>import calendar<br /> cal = calendar.Calendar(firstweekday=6)</p>  <p>for i in cal.monthdatescalendar(2016, 7): print(*i)</p>  <p>#2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-07-03 2016-07-04 2016-07-05 2016-07-06 2016-07-07 2016-07-08 2016-07-09<br /> #2016-07-10 2016-07-11 2016-07-12 2016-07-13 2016-07-14 2016-07-15 2016-07-16<br /> #2016-07-17 2016-07-18 2016-07-19 2016-07-20 2016-07-21 2016-07-22 2016-07-23<br /> #2016-07-24 2016-07-25 2016-07-26 2016-07-27 2016-07-28 2016-07-29 2016-07-30<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06</p>","0"),
("237","monthdays2calendar(year, month) ","<p>UÅ¼yj funckji kt&oacute;ra wypisze&nbsp;(dzieÅ„ miesiÄ…ca, dzieÅ„ tygodnia) podanego miesiÄ…ca i roku.</p>  <p>#[(0, 6), (0, 0), (0, 1), (0, 2), (0, 3), (1, 4), (2, 5)]<br /> #[(3, 6), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5)]<br /> #[(10, 6), (11, 0), (12, 1), (13, 2), (14, 3), (15, 4), (16, 5)]<br /> #[(17, 6), (18, 0), (19, 1), (20, 2), (21, 3), (22, 4), (23, 5)]<br /> #[(24, 6), (25, 0), (26, 1), (27, 2), (28, 3), (29, 4), (30, 5)]<br /> #[(31, 6), (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]</p>","<p>import calendar<br /> cal = calendar.Calendar(firstweekday=6)</p>  <p>for i in cal.monthdays2calendar(2016, 7): print(i)</p>  <p>#[(0, 6), (0, 0), (0, 1), (0, 2), (0, 3), (1, 4), (2, 5)]<br /> #[(3, 6), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5)]<br /> #[(10, 6), (11, 0), (12, 1), (13, 2), (14, 3), (15, 4), (16, 5)]<br /> #[(17, 6), (18, 0), (19, 1), (20, 2), (21, 3), (22, 4), (23, 5)]<br /> #[(24, 6), (25, 0), (26, 1), (27, 2), (28, 3), (29, 4), (30, 5)]<br /> #[(31, 6), (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]</p>","0"),
("238","monthdayscalendar(year, month) ","<p>UÅ¼yj funkcji kt&oacute;ra na podstawie podanego roku i miesiÄ…ca pogrupuje dni</p>  <p>#[0, 0, 0, 0, 0, 1, 2]<br /> #[3, 4, 5, 6, 7, 8, 9]<br /> #[10, 11, 12, 13, 14, 15, 16]<br /> #[17, 18, 19, 20, 21, 22, 23]<br /> #[24, 25, 26, 27, 28, 29, 30]<br /> #[31, 0, 0, 0, 0, 0, 0]</p>","<p>for i in cal.monthdayscalendar(2016, 7): print(i)</p>  <p>#[0, 0, 0, 0, 0, 1, 2]<br /> #[3, 4, 5, 6, 7, 8, 9]<br /> #[10, 11, 12, 13, 14, 15, 16]<br /> #[17, 18, 19, 20, 21, 22, 23]<br /> #[24, 25, 26, 27, 28, 29, 30]<br /> #[31, 0, 0, 0, 0, 0, 0]</p>","0"),
("239","yeardatescalendar(year, width=3) ","<p>UÅ¼yj funkcji kt&oacute;ra na podstawie podanego roku i miesiÄ…ca wypisze dieÅ„-miesiÄ…c-rok</p>  <p>#2015-12-27 2015-12-28 2015-12-29 2015-12-30 2015-12-31 2016-01-01 2016-01-02<br /> #2016-01-03 2016-01-04 2016-01-05 2016-01-06 2016-01-07 2016-01-08 2016-01-09<br /> #2016-01-10 2016-01-11 2016-01-12 2016-01-13 2016-01-14 2016-01-15 2016-01-16<br /> #2016-01-17 2016-01-18 2016-01-19 2016-01-20 2016-01-21 2016-01-22 2016-01-23<br /> #2016-01-24 2016-01-25 2016-01-26 2016-01-27 2016-01-28 2016-01-29 2016-01-30<br /> #2016-01-31 2016-02-01 2016-02-02 2016-02-03 2016-02-04 2016-02-05 2016-02-06<br /> #2016-01-31 2016-02-01 2016-02-02 2016-02-03 2016-02-04 2016-02-05 2016-02-06<br /> #2016-02-07 2016-02-08 2016-02-09 2016-02-10 2016-02-11 2016-02-12 2016-02-13<br /> #2016-02-14 2016-02-15 2016-02-16 2016-02-17 2016-02-18 2016-02-19 2016-02-20<br /> #2016-02-21 2016-02-22 2016-02-23 2016-02-24 2016-02-25 2016-02-26 2016-02-27<br /> #2016-02-28 2016-02-29 2016-03-01 2016-03-02 2016-03-03 2016-03-04 2016-03-05<br /> #2016-02-28 2016-02-29 2016-03-01 2016-03-02 2016-03-03 2016-03-04 2016-03-05<br /> #2016-03-06 2016-03-07 2016-03-08 2016-03-09 2016-03-10 2016-03-11 2016-03-12<br /> #2016-03-13 2016-03-14 2016-03-15 2016-03-16 2016-03-17 2016-03-18 2016-03-19<br /> #2016-03-20 2016-03-21 2016-03-22 2016-03-23 2016-03-24 2016-03-25 2016-03-26<br /> #2016-03-27 2016-03-28 2016-03-29 2016-03-30 2016-03-31 2016-04-01 2016-04-02<br /> #2016-03-27 2016-03-28 2016-03-29 2016-03-30 2016-03-31 2016-04-01 2016-04-02<br /> #2016-04-03 2016-04-04 2016-04-05 2016-04-06 2016-04-07 2016-04-08 2016-04-09<br /> #2016-04-10 2016-04-11 2016-04-12 2016-04-13 2016-04-14 2016-04-15 2016-04-16<br /> #2016-04-17 2016-04-18 2016-04-19 2016-04-20 2016-04-21 2016-04-22 2016-04-23<br /> #2016-04-24 2016-04-25 2016-04-26 2016-04-27 2016-04-28 2016-04-29 2016-04-30<br /> #2016-05-01 2016-05-02 2016-05-03 2016-05-04 2016-05-05 2016-05-06 2016-05-07<br /> #2016-05-08 2016-05-09 2016-05-10 2016-05-11 2016-05-12 2016-05-13 2016-05-14<br /> #2016-05-15 2016-05-16 2016-05-17 2016-05-18 2016-05-19 2016-05-20 2016-05-21<br /> #2016-05-22 2016-05-23 2016-05-24 2016-05-25 2016-05-26 2016-05-27 2016-05-28<br /> #2016-05-29 2016-05-30 2016-05-31 2016-06-01 2016-06-02 2016-06-03 2016-06-04<br /> #2016-05-29 2016-05-30 2016-05-31 2016-06-01 2016-06-02 2016-06-03 2016-06-04<br /> #2016-06-05 2016-06-06 2016-06-07 2016-06-08 2016-06-09 2016-06-10 2016-06-11<br /> #2016-06-12 2016-06-13 2016-06-14 2016-06-15 2016-06-16 2016-06-17 2016-06-18<br /> #2016-06-19 2016-06-20 2016-06-21 2016-06-22 2016-06-23 2016-06-24 2016-06-25<br /> #2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-07-03 2016-07-04 2016-07-05 2016-07-06 2016-07-07 2016-07-08 2016-07-09<br /> #2016-07-10 2016-07-11 2016-07-12 2016-07-13 2016-07-14 2016-07-15 2016-07-16<br /> #2016-07-17 2016-07-18 2016-07-19 2016-07-20 2016-07-21 2016-07-22 2016-07-23<br /> #2016-07-24 2016-07-25 2016-07-26 2016-07-27 2016-07-28 2016-07-29 2016-07-30<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06<br /> #2016-08-07 2016-08-08 2016-08-09 2016-08-10 2016-08-11 2016-08-12 2016-08-13<br /> #2016-08-14 2016-08-15 2016-08-16 2016-08-17 2016-08-18 2016-08-19 2016-08-20<br /> #2016-08-21 2016-08-22 2016-08-23 2016-08-24 2016-08-25 2016-08-26 2016-08-27<br /> #2016-08-28 2016-08-29 2016-08-30 2016-08-31 2016-09-01 2016-09-02 2016-09-03<br /> #2016-08-28 2016-08-29 2016-08-30 2016-08-31 2016-09-01 2016-09-02 2016-09-03<br /> #2016-09-04 2016-09-05 2016-09-06 2016-09-07 2016-09-08 2016-09-09 2016-09-10<br /> #2016-09-11 2016-09-12 2016-09-13 2016-09-14 2016-09-15 2016-09-16 2016-09-17<br /> #2016-09-18 2016-09-19 2016-09-20 2016-09-21 2016-09-22 2016-09-23 2016-09-24<br /> #2016-09-25 2016-09-26 2016-09-27 2016-09-28 2016-09-29 2016-09-30 2016-10-01<br /> #2016-09-25 2016-09-26 2016-09-27 2016-09-28 2016-09-29 2016-09-30 2016-10-01<br /> #2016-10-02 2016-10-03 2016-10-04 2016-10-05 2016-10-06 2016-10-07 2016-10-08<br /> #2016-10-09 2016-10-10 2016-10-11 2016-10-12 2016-10-13 2016-10-14 2016-10-15<br /> #2016-10-16 2016-10-17 2016-10-18 2016-10-19 2016-10-20 2016-10-21 2016-10-22<br /> #2016-10-23 2016-10-24 2016-10-25 2016-10-26 2016-10-27 2016-10-28 2016-10-29<br /> #2016-10-30 2016-10-31 2016-11-01 2016-11-02 2016-11-03 2016-11-04 2016-11-05<br /> #2016-10-30 2016-10-31 2016-11-01 2016-11-02 2016-11-03 2016-11-04 2016-11-05<br /> #2016-11-06 2016-11-07 2016-11-08 2016-11-09 2016-11-10 2016-11-11 2016-11-12<br /> #2016-11-13 2016-11-14 2016-11-15 2016-11-16 2016-11-17 2016-11-18 2016-11-19<br /> #2016-11-20 2016-11-21 2016-11-22 2016-11-23 2016-11-24 2016-11-25 2016-11-26<br /> #2016-11-27 2016-11-28 2016-11-29 2016-11-30 2016-12-01 2016-12-02 2016-12-03<br /> #2016-11-27 2016-11-28 2016-11-29 2016-11-30 2016-12-01 2016-12-02 2016-12-03<br /> #2016-12-04 2016-12-05 2016-12-06 2016-12-07 2016-12-08 2016-12-09 2016-12-10<br /> #2016-12-11 2016-12-12 2016-12-13 2016-12-14 2016-12-15 2016-12-16 2016-12-17<br /> #2016-12-18 2016-12-19 2016-12-20 2016-12-21 2016-12-22 2016-12-23 2016-12-24<br /> #2016-12-25 2016-12-26 2016-12-27 2016-12-28 2016-12-29 2016-12-30 2016-12-31</p>","<p>for month in cal.yeardatescalendar(2016, width=2):</p>  <p>&nbsp; &nbsp; for week in month:</p>  <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for day in week:</p>  <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(*day)</p>  <p>#2015-12-27 2015-12-28 2015-12-29 2015-12-30 2015-12-31 2016-01-01 2016-01-02<br /> #2016-01-03 2016-01-04 2016-01-05 2016-01-06 2016-01-07 2016-01-08 2016-01-09<br /> #2016-01-10 2016-01-11 2016-01-12 2016-01-13 2016-01-14 2016-01-15 2016-01-16<br /> #2016-01-17 2016-01-18 2016-01-19 2016-01-20 2016-01-21 2016-01-22 2016-01-23<br /> #2016-01-24 2016-01-25 2016-01-26 2016-01-27 2016-01-28 2016-01-29 2016-01-30<br /> #2016-01-31 2016-02-01 2016-02-02 2016-02-03 2016-02-04 2016-02-05 2016-02-06<br /> #2016-01-31 2016-02-01 2016-02-02 2016-02-03 2016-02-04 2016-02-05 2016-02-06<br /> #2016-02-07 2016-02-08 2016-02-09 2016-02-10 2016-02-11 2016-02-12 2016-02-13<br /> #2016-02-14 2016-02-15 2016-02-16 2016-02-17 2016-02-18 2016-02-19 2016-02-20<br /> #2016-02-21 2016-02-22 2016-02-23 2016-02-24 2016-02-25 2016-02-26 2016-02-27<br /> #2016-02-28 2016-02-29 2016-03-01 2016-03-02 2016-03-03 2016-03-04 2016-03-05<br /> #2016-02-28 2016-02-29 2016-03-01 2016-03-02 2016-03-03 2016-03-04 2016-03-05<br /> #2016-03-06 2016-03-07 2016-03-08 2016-03-09 2016-03-10 2016-03-11 2016-03-12<br /> #2016-03-13 2016-03-14 2016-03-15 2016-03-16 2016-03-17 2016-03-18 2016-03-19<br /> #2016-03-20 2016-03-21 2016-03-22 2016-03-23 2016-03-24 2016-03-25 2016-03-26<br /> #2016-03-27 2016-03-28 2016-03-29 2016-03-30 2016-03-31 2016-04-01 2016-04-02<br /> #2016-03-27 2016-03-28 2016-03-29 2016-03-30 2016-03-31 2016-04-01 2016-04-02<br /> #2016-04-03 2016-04-04 2016-04-05 2016-04-06 2016-04-07 2016-04-08 2016-04-09<br /> #2016-04-10 2016-04-11 2016-04-12 2016-04-13 2016-04-14 2016-04-15 2016-04-16<br /> #2016-04-17 2016-04-18 2016-04-19 2016-04-20 2016-04-21 2016-04-22 2016-04-23<br /> #2016-04-24 2016-04-25 2016-04-26 2016-04-27 2016-04-28 2016-04-29 2016-04-30<br /> #2016-05-01 2016-05-02 2016-05-03 2016-05-04 2016-05-05 2016-05-06 2016-05-07<br /> #2016-05-08 2016-05-09 2016-05-10 2016-05-11 2016-05-12 2016-05-13 2016-05-14<br /> #2016-05-15 2016-05-16 2016-05-17 2016-05-18 2016-05-19 2016-05-20 2016-05-21<br /> #2016-05-22 2016-05-23 2016-05-24 2016-05-25 2016-05-26 2016-05-27 2016-05-28<br /> #2016-05-29 2016-05-30 2016-05-31 2016-06-01 2016-06-02 2016-06-03 2016-06-04<br /> #2016-05-29 2016-05-30 2016-05-31 2016-06-01 2016-06-02 2016-06-03 2016-06-04<br /> #2016-06-05 2016-06-06 2016-06-07 2016-06-08 2016-06-09 2016-06-10 2016-06-11<br /> #2016-06-12 2016-06-13 2016-06-14 2016-06-15 2016-06-16 2016-06-17 2016-06-18<br /> #2016-06-19 2016-06-20 2016-06-21 2016-06-22 2016-06-23 2016-06-24 2016-06-25<br /> #2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-06-26 2016-06-27 2016-06-28 2016-06-29 2016-06-30 2016-07-01 2016-07-02<br /> #2016-07-03 2016-07-04 2016-07-05 2016-07-06 2016-07-07 2016-07-08 2016-07-09<br /> #2016-07-10 2016-07-11 2016-07-12 2016-07-13 2016-07-14 2016-07-15 2016-07-16<br /> #2016-07-17 2016-07-18 2016-07-19 2016-07-20 2016-07-21 2016-07-22 2016-07-23<br /> #2016-07-24 2016-07-25 2016-07-26 2016-07-27 2016-07-28 2016-07-29 2016-07-30<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06<br /> #2016-07-31 2016-08-01 2016-08-02 2016-08-03 2016-08-04 2016-08-05 2016-08-06<br /> #2016-08-07 2016-08-08 2016-08-09 2016-08-10 2016-08-11 2016-08-12 2016-08-13<br /> #2016-08-14 2016-08-15 2016-08-16 2016-08-17 2016-08-18 2016-08-19 2016-08-20<br /> #2016-08-21 2016-08-22 2016-08-23 2016-08-24 2016-08-25 2016-08-26 2016-08-27<br /> #2016-08-28 2016-08-29 2016-08-30 2016-08-31 2016-09-01 2016-09-02 2016-09-03<br /> #2016-08-28 2016-08-29 2016-08-30 2016-08-31 2016-09-01 2016-09-02 2016-09-03<br /> #2016-09-04 2016-09-05 2016-09-06 2016-09-07 2016-09-08 2016-09-09 2016-09-10<br /> #2016-09-11 2016-09-12 2016-09-13 2016-09-14 2016-09-15 2016-09-16 2016-09-17<br /> #2016-09-18 2016-09-19 2016-09-20 2016-09-21 2016-09-22 2016-09-23 2016-09-24<br /> #2016-09-25 2016-09-26 2016-09-27 2016-09-28 2016-09-29 2016-09-30 2016-10-01<br /> #2016-09-25 2016-09-26 2016-09-27 2016-09-28 2016-09-29 2016-09-30 2016-10-01<br /> #2016-10-02 2016-10-03 2016-10-04 2016-10-05 2016-10-06 2016-10-07 2016-10-08<br /> #2016-10-09 2016-10-10 2016-10-11 2016-10-12 2016-10-13 2016-10-14 2016-10-15<br /> #2016-10-16 2016-10-17 2016-10-18 2016-10-19 2016-10-20 2016-10-21 2016-10-22<br /> #2016-10-23 2016-10-24 2016-10-25 2016-10-26 2016-10-27 2016-10-28 2016-10-29<br /> #2016-10-30 2016-10-31 2016-11-01 2016-11-02 2016-11-03 2016-11-04 2016-11-05<br /> #2016-10-30 2016-10-31 2016-11-01 2016-11-02 2016-11-03 2016-11-04 2016-11-05<br /> #2016-11-06 2016-11-07 2016-11-08 2016-11-09 2016-11-10 2016-11-11 2016-11-12<br /> #2016-11-13 2016-11-14 2016-11-15 2016-11-16 2016-11-17 2016-11-18 2016-11-19<br /> #2016-11-20 2016-11-21 2016-11-22 2016-11-23 2016-11-24 2016-11-25 2016-11-26<br /> #2016-11-27 2016-11-28 2016-11-29 2016-11-30 2016-12-01 2016-12-02 2016-12-03<br /> #2016-11-27 2016-11-28 2016-11-29 2016-11-30 2016-12-01 2016-12-02 2016-12-03<br /> #2016-12-04 2016-12-05 2016-12-06 2016-12-07 2016-12-08 2016-12-09 2016-12-10<br /> #2016-12-11 2016-12-12 2016-12-13 2016-12-14 2016-12-15 2016-12-16 2016-12-17<br /> #2016-12-18 2016-12-19 2016-12-20 2016-12-21 2016-12-22 2016-12-23 2016-12-24<br /> #2016-12-25 2016-12-26 2016-12-27 2016-12-28 2016-12-29 2016-12-30 2016-12-31</p>","0"),
("240","yeardays2calendar(year, width=3) ","","","0"),
("241","yeardayscalendar(year, width=3) ","","","0"),
("242","class calendar.TextCalendar(firstweekday=0) ","<p>UÅ¼yj klasy&nbsp;kt&oacute;ra zadeklaruje kalendaÅ¼ tekstowy.</p>  <p>&nbsp;</p>  <p>&nbsp;</p>","<p>cal = calendar.TextCalendar(firstweekday=6)</p>","0"),
("243","formatmonth(theyear, themonth, w=0, l=0) ","<p>Uzyj funkcji kt&oacute;ra na podstawie miesiÄ…ca i roku wypisze ciÄ…g z szczeguÅ‚ami takimi jak kiedy jest jaki dzien tygodnia itd</p>  <p>#&#39; &nbsp; &nbsp; July 2016 Su Mo Tu We Th Fr Sa &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1 &nbsp;2 3 &nbsp;4 &nbsp;5 &nbsp;6 &nbsp;7 &nbsp;8 &nbsp;9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &#39;</p>","<p>cal = calendar.TextCalendar(firstweekday=6)<br /> cal.formatmonth(2016, 7)</p>  <p>#&#39; &nbsp; &nbsp; July 2016 Su Mo Tu We Th Fr Sa &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1 &nbsp;2 3 &nbsp;4 &nbsp;5 &nbsp;6 &nbsp;7 &nbsp;8 &nbsp;9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &#39;</p>","0"),
("244","prmonth(theyear, themonth, w=0, l=0) ","<p>UÅ¼yj funckji kt&oacute;ra wypisze okreÅ›lony miesiÄ…c w sformatowany spos&oacute;b</p>  <p>&nbsp; &nbsp; &nbsp;July 2016<br /> Su Mo Tu We Th Fr Sa<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp;2<br /> &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6 &nbsp;7 &nbsp;8 &nbsp;9<br /> 10 11 12 13 14 15 16<br /> 17 18 19 20 21 22 23<br /> 24 25 26 27 28 29 30<br /> 31</p>","<p>cal.prmonth(2016,7)</p>  <p>&nbsp; &nbsp; &nbsp;July 2016<br /> Su Mo Tu We Th Fr Sa<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp;2<br /> &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6 &nbsp;7 &nbsp;8 &nbsp;9<br /> 10 11 12 13 14 15 16<br /> 17 18 19 20 21 22 23<br /> 24 25 26 27 28 29 30<br /> 31</p>","0"),
("245","formatyear(theyear, w=2, l=1, c=6, m=3) ","","","0"),
("246","pryear(theyear, w=2, l=1, c=6, m=3) ","<p>UÅ¼yj funkcji kt&oacute;ra na podstawie podanego roku wyÅ›wietli miesiÄ…ce i dni.</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/2016.png\" style=\"height:732px; width:672px\" /></p>","<p>cal = calendar.TextCalendar(firstweekday=6)</p>  <p>cal.pryear(2016)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/2016.png\" style=\"height:732px; width:672px\" /></p>","0"),
("247","class calendar.HTMLCalendar(firstweekday=0) ","<p>UÅ¼yj klasy kt&oacute;ra zadeklaruje kalendaÅ¼ w wersji HTML</p>","<p>cal = calendar.HTMLCalendar(firstweekday=6)</p>","0"),
("248","formatmonth(theyear, themonth, withyear=True) ","","","0"),
("249","formatyear(theyear, width=3) ","<p>Uzyj funkcji kt&oacute;ra zapisze szczeg&oacute;Å‚y do pliku html na temat danego roku.</p>  <p><!--?xml version=\"1.0\" encoding=\"utf-8\"?--></p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/html_2016.png\" /></p>","<p>cal = calendar.HTMLCalendar(firstweekday=6)</p>  <p>html = cal.formatyearpage(2016, css=None)</p>  <p>file = open(r&#39;C:UserDesktopcal.html&#39;, &#39;wb&#39;)</p>  <p>file.write(html)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/html_2016.png\" /></p>","0"),
("250","formatyearpage()","","","0"),
("251","class calendar.LocaleTextCalendar()","","","0"),
("252","class calendar.LocaleHTMLCalendar()","","","0"),
("253","calendar.setfirstweekday() ","<p>UÅ¼yj funkcji kt&oacute;ra ustawi pierwszy dzieÅ„ tygodnia na # niedzielÄ™</p>  <p>&nbsp;</p>","<p>calendar.setfirstweekday(6)</p>","0"),
("254","calendar.firstweekday() ","<p>UÅ¼yj funkcji t&oacute;ra pokaÅ¼e pierwszy dizeÅ„ tygodnia</p>","<p>calendar.setfirstweekday(6)</p>  <p>calendar.firstweekday() # 6</p>","0"),
("255","calendar.isleap() ","<p>UÅ¼yj funkcji kt&oacute;ra sprawdzi czy podany rok jest przestÄ™pny</p>  <p>&nbsp;</p>","<p>calendar.isleap(2016) #&nbsp;True</p>","0"),
("256","calendar.leapdays() ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ile lat przestÄ™pnych wystÄ™puje pomiÄ™dzy dwoma podanymi rokami.</p>  <p>&nbsp;</p>","<p>calendar.leapdays(1998, 2002) # 1<br /> calendar.leapdays(1998, 2003) # 1<br /> calendar.leapdays(1998, 2004) # 1<br /> calendar.leapdays(1998, 2005) # 2</p>","0"),
("257","calendar.weekday() ","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci dzieÅ„ tygodnia</p>","<p>calendar.weekday(2016, 7, 10) #&nbsp;6</p>","0"),
("258","calendar.weekheader() ","","","0"),
("259","calendar.monthrange() ","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci jaki jest pierwszy dzieÅ„ miesiÄ…ca (sobota, niedziela idt) oraz ile trwa dany miesiÄ…c</p>  <p># (4, 31)</p>","<p>calendar.monthrange(2016, 7)</p>  <p># (4, 31)</p>","0"),
("260","calendar.monthcalendar() ","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci dany miesiÄ…c w danym roku</p>  <p>#0 0 0 0 1 2 3<br /> #4 5 6 7 8 9 10<br /> #11 12 13 14 15 16 17<br /> #18 19 20 21 22 23 24<br /> #25 26 27 28 29 30 31</p>","<p>for i in calendar.monthcalendar(2016, 7): print(*i)</p>  <p>#0 0 0 0 1 2 3<br /> #4 5 6 7 8 9 10<br /> #11 12 13 14 15 16 17<br /> #18 19 20 21 22 23 24<br /> #25 26 27 28 29 30 31</p>","0"),
("261","calendar.prmonth() ","<p>calendar.prmonth(2016, 7)</p>  <p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/My_folder/calendar/July_2016.png\" style=\"height:141px; width:202px\" /></p>","","0"),
("262","calendar.month() ","","","0"),
("263","calendar.prcal() ","","","0"),
("264","calendar.calendar() ","","","0"),
("265","calendar.timegm() ","<p>#1489344552</p>","<p>import time<br /> time.gmtime()<br /> #time.struct_time(tm_year=2017, tm_mon=3, tm_mday=12, tm_hour=18, tm_min=48, tm_sec=55, tm_wday=6, tm_yday=71, tm_isdst=0)<br /> calendar.timegm(time.gmtime())<br /> #1489344552</p>","0"),
("266","calendar.day_name ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie dni tygodnia</p>  <p>#M o n d a y<br /> #T u e s d a y<br /> #W e d n e s d a y<br /> #T h u r s d a y<br /> #F r i d a y<br /> #S a t u r d a y<br /> #S u n d a y</p>","<p>for i in calendar.day_name: print(*i)</p>  <p>#M o n d a y<br /> #T u e s d a y<br /> #W e d n e s d a y<br /> #T h u r s d a y<br /> #F r i d a y<br /> #S a t u r d a y<br /> #S u n d a y</p>","0"),
("267","calendar.day_abbr ","<p>Uzyj funkcji kt&oacute;ra wypisze wszystkie dni tygodnia w skr&oacute;conej wersji</p>  <p>#M o n<br /> #T u e<br /> #W e d<br /> #T h u<br /> #F r i<br /> #S a t<br /> #S u n</p>","<p>for i in calendar.day_abbr: print(*i)</p>  <p>#M o n<br /> #T u e<br /> #W e d<br /> #T h u<br /> #F r i<br /> #S a t<br /> #S u n</p>","0"),
("268","calendar.month_name ","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie miesiÄ…ce roku</p>  <p>#J a n u a r y<br /> #F e b r u a r y<br /> #M a r c h<br /> #A p r i l<br /> #M a y<br /> #J u n e<br /> #J u l y<br /> #A u g u s t<br /> #S e p t e m b e r<br /> #O c t o b e r<br /> #N o v e m b e r<br /> #D e c e m b e r</p>","<p>for i in calendar.month_name: print(*i)</p>  <p>#J a n u a r y<br /> #F e b r u a r y<br /> #M a r c h<br /> #A p r i l<br /> #M a y<br /> #J u n e<br /> #J u l y<br /> #A u g u s t<br /> #S e p t e m b e r<br /> #O c t o b e r<br /> #N o v e m b e r<br /> #D e c e m b e r</p>","0"),
("269","calendar.month_abbr","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie miesiÄ…ce roku w formie skr&oacute;conej</p>  <p>#J a n<br /> #F e b<br /> #M a r<br /> #A p r<br /> #M a y<br /> #J u n<br /> #J u l<br /> #A u g<br /> #S e p<br /> #O c t<br /> #N o v<br /> #D e c</p>","<p>for i in calendar.month_abbr: print(*i)</p>  <p>#J a n<br /> #F e b<br /> #M a r<br /> #A p r<br /> #M a y<br /> #J u n<br /> #J u l<br /> #A u g<br /> #S e p<br /> #O c t<br /> #N o v<br /> #D e c</p>","0"),
("270","random.seed(a=None, version=2)","","","0"),
("271","random.getstate() ","","","0"),
("272","random.setstate(state) ","","","0"),
("273","random.getrandbits(k) ","","","0"),
("274","random.randrange(stop) ","<p>UÅ¼yj funkcji kt&oacute;ra bÄ™dzie losowaÅ‚a liczby od 0 do podanej liczby w funkcji. # 4</p>\n\n<p>UÅ¼yj funkcji kt&oacute;ra wylosuje licczbe z podanego przedziaÅ‚u i gdzie moÅ¼na opcjonalnie ustawiÄ‡ kroki # 1, 25, 4</p>\n","<p>import random<br />\nrandom.randrange(4) # 1<br />\nrandom.randrange(4) # 3<br />\nrandom.randrange(4) # 1<br />\nrandom.randrange(4) # 0<br />\nrandom.randrange(4) # 2<br />\nrandom.randrange(4) # 0<br />\nrandom.randrange(4) # 1</p>\n\n<p>random.randrange(1, 25, 4) # 13<br />\nrandom.randrange(1, 25, 10) # 1<br />\nrandom.randrange(1, 25, 10) # 21<br />\nrandom.randrange(1, 25, 10) # 21<br />\nrandom.randrange(1, 25, 10) # 11<br />\nrandom.randrange(1, 25, 10) # 21<br />\nrandom.randrange(1, 25, 10) # 11<br />\nrandom.randrange(1, 25, 10) # 11</p>\n","0"),
("276","random.randint(a, b) ","<p>UÅ¼yj funkcji kt&oacute;ra losuje liczby caÅ‚kowite z podanego przedziaÅ‚u od do</p>","<p>import random</p>  <p>random.randint(3, 9) # 9<br /> random.randint(3, 9) # 4</p>","0"),
("277","random.choice(seq) ","<p>UÅ¼yj funkcji kt&oacute;ra z listy wylosuje jeden element lub z podanej zmiennej jeden znak.</p>  <p># l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]</p>  <p>#&nbsp;&#39;hello&#39;</p>","<p>import random</p>  <p>l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]<br /> random.choice(l) # &#39;world&#39;<br /> random.choice(l) # &#39;world&#39;<br /> random.choice(l) # &#39;hello&#39;<br /> random.choice(&#39;hello&#39;) #&#39;e&#39;<br /> random.choice(&#39;hello&#39;) #&#39;h&#39;</p>","0"),
("278","random.choices(population, weights=None, *, cum_weights=None, k=1) ","","","0"),
("279","random.shuffle(x[, random]) ","<p>UÅ¼yj funckji kt&oacute;ra losowo pozamienia miejsca wartoÅ›ci w listach.</p>  <p>l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]</p>","<p>import random</p>  <p>l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]</p>  <p>random.shuffle(l)</p>  <p>print(l) # [&#39;how&#39;, &#39;world&#39;, &#39;hello&#39;, &#39;you&#39;, &#39;are&#39;]</p>","0"),
("280","random.sample(population, k) ","<p>UÅ¼yj funckji kt&oacute;ra losowo wybieÅ¼e podanÄ… iloÅ›Ä‡ wynik&oacute;w z listy</p>  <p>l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]</p>  <p>iloÅ›Ä‡ wynik&oacute;w 2</p>  <p>iloÅ›Ä‡ wynik&oacute;w 5</p>","<p>import random</p>  <p>l = [&#39;hello&#39;, &#39;world&#39;, &#39;how&#39;, &#39;are&#39;, &#39;you&#39;]</p>  <p>random.sample(l, 2)<br /> [&#39;world&#39;, &#39;how&#39;]<br /> random.sample(l, 5)<br /> [&#39;world&#39;, &#39;how&#39;, &#39;hello&#39;, &#39;you&#39;, &#39;are&#39;]</p>","0"),
("281","random.random() ","<p>UÅ¼yj funckji kt&oacute;ra wylosuje liczbÄ™ z przedziaÅ‚u&nbsp;[0.0, 1.0)&nbsp;moÅ¼e byÄ‡ 0.0 ale nie moÅ¼e osiÄ…gnÄ…Ä‡ 1.0</p>","<p>import random</p>  <p>random.random() #&nbsp;0.9268821334028684</p>","0"),
("282","random.uniform(a, b) ","<p>UÅ¼yj funkcji kt&oacute;ra wylosuje liczbÄ™ kt&oacute;ra jest pomiÄ™dzy dwoma podanymi liczbami.</p>  <p>(3,4)&nbsp;<br /> (33,4)</p>","<p>import random</p>  <p>random.uniform(3,4) # 3.600343441286606<br /> random.uniform(33,4) # 21.850150058077467</p>","0"),
("283","random.triangular(low, high, mode) ","<p>UÅ¼yj funckji kt&oacute;ra bÄ™dzie losowaÅ‚a liczby od 0 do 1( ale bez peÅ‚nego 1) w zaleÅ¼noÅ›ci od 3 parametr&oacute;w takich jak&nbsp;<em>low</em>,&nbsp;<em>high</em>,&nbsp;<em>mode.</em></p>","<p>import random</p>  <p>random.triangular(0, 1, 0.5) # 0.5816053192910873<br /> random.triangular(0, 1, 0.5) # 0.46043831941142027<br /> random.triangular(0, 1, 0.5) # 0.4887839351511878<br /> random.triangular(0, 1, 0.5) # 0.34607342704552424<br /> random.triangular(0, 1, 0.9) # 0.7252890229049774<br /> random.triangular(0, 1, 0.9) # 0.36210071960893164<br /> random.triangular(0, 1, 0.9) # 0.9046374773800372<br /> random.triangular(0, 1, 0.9) # 0.7522614644846454<br /> random.triangular(0, 1, 0.9) # 0.3492109071802013</p>","0"),
("284","random.betavariate(alpha, beta) ","<p>UÅ¼yj funkcji kt&oacute;ra losuje liczby od 0 do 1 przyjmuje dwa parametry alpha i beta. Na podstawie tego losuje liczbÄ™&nbsp;<code>alpha&nbsp;&gt;&nbsp;0</code>&nbsp;i&nbsp;<code>beta&nbsp;&gt;&nbsp;0</code>.</p>","<p>import random</p>  <p>random.betavariate(1,2) # 0.011248329220626505<br /> random.betavariate(1,2) # 0.6974369713078543<br /> random.betavariate(1,2) # 0.5815701778131186<br /> random.betavariate(1,2) # 0.3070041900320454</p>","0"),
("285","random.expovariate(lambd) ","<p>UÅ¼yj funkcji kt&oacute;ra losuje liczbÄ™ od 0 do nieskoÅ„czonoÅ›ci dodatniej lub ujemnej w zaleÅ¼noÅ›Ä‡ci czy parametr jest ujemny lub nie. Jako parametr trzeba wpisaÄ‡ dwie liczby a / b</p>  <p># 2/3</p>","<p>import random</p>  <p>random.expovariate(2/3) # 2.460447768970361<br /> random.expovariate(2/3) # 2.007413592657961<br /> random.expovariate(2/3) # 1.4936953955553163<br /> random.expovariate(2/3) # 0.9925887038382729</p>  <p>random.expovariate(2/3) # 1.4883504898198323<br /> random.expovariate(2/3) # 0.516773524344673<br /> random.expovariate(2/3) # 0.3795447038826222<br /> random.expovariate(2/3) # 1.6116908674336077<br /> random.expovariate(2/3) # 1.3498556512604398<br /> random.expovariate(2/3) # 1.7125418168764095</p>","0"),
("286","random.gammavariate(alpha, beta) ","","","0"),
("287","random.gauss(mu, sigma) ","","","0"),
("288","random.lognormvariate(mu, sigma) ","","","0"),
("289","random.normalvariate(mu, sigma) ","","","0"),
("290","random.vonmisesvariate(mu, kappa) ","","","0"),
("291","random.paretovariate(alpha) ","","","0"),
("292","random.weibullvariate(alpha, beta) ","","","0"),
("293","class random.SystemRandom([seed])","","","0"),
("294","winsound.Beep(frequency, duration) ","<p>UÅ¼yj funklcji kt&oacute;ra wyda dzwiÄ™k o podanej czÄ™stotliwoÅ›ci i czasie trwania</p>  <p># 196, 261, 293, 349, 329, 261, 329, 523</p>  <p># czas trwania 3 sekundy<br /> &nbsp;</p>","<p>UÅ¼yj funklcji kt&oacute;ra wyda dzwiÄ™k o podanej czÄ™stotliwoÅ›ci i czasie trwania</p>  <p># 196, 261, 293, 349, 329, 261, 329, 523</p>  <p># czas trwania 3 sekundy<br /> &nbsp;</p>","0"),
("295","winsound.PlaySound(sound, flags) ","<p>UÅ¼yj funkcji kt&oacute;ra odtwoÅ¼y dany plik wav. #&nbsp;C:UsersUserDownloadsTONIGHT.wav</p>","<p>import&nbsp;winsound</p>  <p>winsound.PlaySound(r&#39;C:UsersUserDownloadsTONIGHT.wav&#39;, winsound.SND_FILENAME)</p>","0"),
("296","winsound.MessageBeep(type=MB_OK) ","<p>UÅ¼yj funkcji kt&oacute;ra wyda dzwiÄ™k kt&oacute;ry jest wiadomoÅ›ciÄ…</p>","<p>import&nbsp;winsound</p>  <p>winsound.MessageBeep()</p>","0"),
("297","winsound.SND_FILENAME","<p>UÅ¼yj atrybutu kt&oacute;ry trzeba podaÄ‡ jako drugi parametr w funkcji&nbsp;winsound.PlaySound</p>","<p>import&nbsp;winsound</p>  <p>winsound.SND_FILENAME</p>","0"),
("298","Listy","<h1><strong>1 Tworzenie list</strong></h1>\n\n<ul>\n	<li>Listy tworzy siÄ™ gdy chce siÄ™ utworzyÄ‡ zmiennÄ… kt&oacute;ra bÄ™dzie zawieraÅ‚a caÅ‚Ä… seriÄ™ wartoÅ›ci (wiÄ™cej niÅ¼ jednÄ… wartoÅ›Ä‡).</li>\n	<li>\n	<ul>\n		<li>W Pythonie lista jest zbiorem wartoÅ›ci uÅ‚oÅ¼onych w kolejnoÅ›ci. ZnajÄ…c kolejnoÅ›Ä‡ uÅ‚oÅ¼enia element&oacute;w listy, moÅ¼na uzyskiwaÄ‡ do nich dostÄ™p.</li>\n	</ul>\n	</li>\n	<li>PracujÄ…c z listami, nie trzeba okreÅ›laÄ‡ ich rozmiaru w momencie deklaracji. LiczbÄ™ element&oacute;w znajdujÄ…cyh siÄ™ na liÅ›cie moÅ¼na zmieniaÄ‡ w dowolnej chwili.</li>\n	<li>Elementy znajdujÄ…ce siÄ™ na liÅ›cie nie muszÄ… byÄ‡ tego samego typu, choÄ‡ w praktyce czÄ™sto tak siÄ™ zdarza.</li>\n	<li>Elementy kt&oacute;re chce siÄ™ umieÅ›ciÄ‡ na liÅ›cie, naleÅ¼y objÄ…Ä‡ nawiasami kwadratowymi.</li>\n</ul>\n\n<p>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>2 Uzyskiwanie dostÄ™pu do elementu znajdujÄ…cego siÄ™ na liÅ›cie.</strong></h1>\n\n<ul>\n	<li>W celu uzyskania dostÄ™pu do elementu naleÅ¼y podaÄ‡ jego pozycjÄ™ na liÅ›cie. Na przykÅ‚ad:</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>a[1] #&nbsp; &nbsp;&#39;Marcin&#39;</p>\n\n<ul>\n	<li>NotacjÄ™ wykorzystywanÄ… do uzyskiwania dostÄ™pu do elementu listy moÅ¼na stosowaÄ‡ r&oacute;wnieÅ¼ do modyfikacji tego elementu.</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>a[1] = 777</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>JeÅ¼eli bÄ™dzie siÄ™ pr&oacute;bowaÅ‚o uzyskaÄ‡ dostÄ™p do elementu o zbyt duÅ¼ej wartoÅ›ci indeksu (elementu nieznajdujÄ…cego siÄ™ na liÅ›cie), to zostanie wyÅ›wietlony komunikat bÅ‚Ä™du o treÅ›ci index out of range.</li>\n</ul>\n\n<p>a[50] = 777</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>3 Ustalanie dÅ‚ugoÅ›ci listy</strong></h1>\n\n<ul>\n	<li>Aby dowiedzieÄ‡ siÄ™ z ilu element&oacute;w skÅ‚ada siÄ™ lista naleÅ¼y uÅ¼yÄ‡ polecenia len.&nbsp;</li>\n	<li>\n	<ul>\n		<li>Wynik poniÅ¼szego polecenia to 5</li>\n	</ul>\n	</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>len(a)</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>Polecenie len moÅ¼na r&oacute;wnieÅ¼ wykorzystaÄ‡ do okreÅ›lenia dÅ‚ugoÅ›ci Å‚aÅ„cucha</li>\n</ul>\n\n<p>a = &#39;aaaaa&#39;</p>\n\n<p>len(a)</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>4 Dodawanie element&oacute;w do listy</strong></h1>\n\n<ul>\n	<li>W celu wstawienia jednego elementu na koniec listy naleÅ¼y&nbsp;skorzystaÄ‡&nbsp;z polecenia append</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>a.append(&quot;nowy&quot;)</p>\n\n<p>a</p>\n\n<p># [34, &#39;Marcin&#39;, 12, False, 72.3, &#39;nowy&#39;]</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>W celu wstawienia nowego elementu na okreÅ›lonÄ… pozycjÄ™ listy, naleÅ¼y skorzystaÄ‡ z polecenia insert</li>\n	<li>\n	<ul>\n		<li>Pierwszym argumentem tego polecenia jest numer indeksu, po kt&oacute;rym ma byÄ‡ wstawiany nowy element, a drugim argumentem jest wstawiany element</li>\n	</ul>\n	</li>\n</ul>\n\n<p>a.insert(2, &quot;nowy2&quot;)</p>\n\n<p>a</p>\n\n<p>#&nbsp;a = [34, &#39;Marcin&#39;, &#39;nowy2&#39;, 12, False, 72.3]</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>W celu dodania wszystkich element&oacute;w jednej listy do koÅ„ca drugiej listy naleÅ¼y skorzystaÄ‡ z funkcji extend</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>b = [74, 75]</p>\n\n<p>a.extend(b)</p>\n\n<p>a</p>\n\n<p>#&nbsp;a = [34, &#39;Marcin&#39;, 12, False, 72.3, 74, 75]</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>5 Usuwanie element&oacute;w z listy</strong></h1>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>Polecenie pop uÅ¼yte bez jakiegokolwiek parametru usuwa ostatni element listy.</li>\n	<li>Funkcja pop zwraca element usuniÄ™ty z listy</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>a.pop()</p>\n\n<p># 72.3</p>\n\n<ul>\n	<li>Å»eby usunÄ…Ä‡ z listy okreÅ›lony element, trzeba zastosowaÄ‡ funkcjÄ™ pop wraz z parametrem wskazujÄ…cym pozycje elementu, kt&oacute;ry chce siÄ™ usunÄ…Ä‡.</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>a.pop(0)</p>\n\n<p># 34</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>6 Tworzenie listy w wyniku przetwarzania Å‚aÅ„cucha</strong></h1>\n\n<ul>\n	<li>Aby dokonaÄ‡ konwersji Å‚aÅ„cucha zawierajÄ…cego sÅ‚owa oddzielone jakimÅ› znakami na tablicÄ™ Å‚aÅ„cuch&oacute;w (kaÅ¼de sÅ‚owo tworzy odrÄ™bny Å‚aÅ„cuch) naleÅ¼y skorzystaÄ‡ z funkcji split.</li>\n	<li>Polecenie split zastosowane bez parametr&oacute;w zamienia sÅ‚owa znajdujÄ…ce siÄ™ w Å‚aÅ„cuchu na kolejne elementy tablicy</li>\n</ul>\n\n<p>&quot;abc def ghi&quot;.split()</p>\n\n<p># [&#39;abc&#39;, &#39;def&#39;, &#39;ghi&#39;]</p>\n\n<ul>\n	<li>Parametr funkcji split sÅ‚uÅ¼y do okreÅ›lania element&oacute;w rozdzielajÄ…cych wyrazy znajdujÄ…ce siÄ™ w Å‚aÅ„cuchu, naprzykÅ‚ad</li>\n</ul>\n\n<p>&quot;abc---def---ghi&quot;.split(&#39;---&#39;)</p>\n\n<p># [&#39;abc&#39;, &#39;def&#39;, &#39;ghi&#39;]</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>7 Iteracja listy</strong></h1>\n\n<ul>\n	<li>Aby wykonaÄ‡ jakÄ…Å› operacje na kaÅ¼dym elemencie listy naleÅ¼y skorzystaÄ‡ z polecenia for.</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>for x in a:</p>\n\n<p>&nbsp; &nbsp; &nbsp;print(x)</p>\n\n<p>&nbsp;</p>\n\n<p># 34</p>\n\n<p># Marcin</p>\n\n<p># 12</p>\n\n<p># False</p>\n\n<p># 72.3</p>\n\n<ul>\n	<li>BezpoÅ›rednio po poleceniu for naleÅ¼y podaÄ‡ nazwÄ™ zmiennej (w tym przypadku jest to x). Polecenie to nosi nazwÄ™ petli i zostanie wykonane dla kaÅ¼dego elementu okreÅ›lonego po sÅ‚owie kluczowym in.</li>\n	<li>Kod znajdujÄ…cy siÄ™ w kolejnej odpowiednio wciÄ™tej linii zostanie wykonany dla kaÅ¼dego elementu listy. Podczas kaÅ¼dego przebiegu pÄ™tli zmiennej x bÄ™dzie przypisywany kolejny element listy. NastÄ™pnie zawartoÅ›Ä‡ tej zmiennej zostanie wyÅ›wietlona, jak pokazano to w podanym przykÅ‚adzie.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h1><strong>8 Numerowanie element&oacute;w listy</strong></h1>\n\n<ul>\n	<li>Aby poznaÄ‡ numer indeksu kaÅ¼dego elementu listy naleÅ¼y skorzystaÄ‡ z polecenia for oraz enumerate.</li>\n</ul>\n\n<p>a = [34, &#39;Marcin&#39;, 12, False, 72.3]</p>\n\n<p>for (i, x) in enumerate(a):</p>\n\n<p>&nbsp; &nbsp; &nbsp;print(i, x)</p>\n\n<p>&nbsp;</p>\n\n<p># (0, 34)</p>\n\n<p># (1, &#39;Marcin&#39;)</p>\n\n<p># (2, 12)</p>\n\n<p># (3, False)</p>\n\n<p># (4, 72.3)</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>9 Sortowanie listy</strong></h1>\n\n<ul>\n	<li>Aby posortowaÄ‡ elementy listy naleÅ¼y skorzystaÄ‡ z polecenia sort.</li>\n</ul>\n\n<p>a = [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>a.sort()</p>\n\n<p>a</p>\n\n<p># [&#39;byÅ‚y&#39;, &#39;lata&#39;, &#39;najlepsze&#39;, &#39;to&#39;]</p>\n\n<ul>\n	<li>Sortowanie listy powoduje jej modyfikacjÄ™. JeÅ¼eli potrzebna jest&nbsp;oryginalna, nieposortowana lista, to naleÅ¼y jÄ… skopiowaÄ‡ za pomocÄ… funkcji copy. Kt&oacute;ra znajduje siÄ™ w standardowej bibliotece Pythona.</li>\n</ul>\n\n<p>import copy</p>\n\n<p>a = [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b = copy.copy(a)</p>\n\n<p>b.sort()</p>\n\n<p>a</p>\n\n<p># [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b</p>\n\n<p># [&#39;byÅ‚y&#39;, &#39;lata&#39;, &#39;najlepsze&#39;, &#39;to&#39;]</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>10 Wycinanie fragmentu listy</strong></h1>\n\n<ul>\n	<li>Aby stworzyÄ‡ podlistÄ™ zawierajÄ…cÄ… zbi&oacute;r element&oacute;w znajdujÄ…cych siÄ™ juÅ¼ na kolejnej liÅ›cie naleÅ¼y skorzystaÄ‡ ze skÅ‚adni [:] &nbsp;PoniÅ¼szy przykÅ‚adowy kod zwraca nowÄ… listÄ™ skÅ‚adajÄ…cÄ… siÄ™ z element&oacute;w (o indeksach od 1 do 2) przetwarzanej listy. Drugi z indeks&oacute;w wpisywanych w skÅ‚adni [:] okreÅ›la element, kt&oacute;ry nie zostanie umieszczony na nowej liÅ›cie</li>\n</ul>\n\n<p>l = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</p>\n\n<p>l[1:3]</p>\n\n<p>#l[&#39;a&#39;, &#39;b&#39;]</p>\n\n<ul>\n	<li>SkÅ‚adniÄ™ [:] moÅ¼na stosowaÄ‡ na wiele sposob&oacute;w. Niepodanie pierwszego indeksu spowoduje umieszczenie na nowej liÅ›cie zbioru element&oacute;w zaczynajÄ…cych siÄ™ od indeksu o numerze o, a nie podanie drugiego indeksu spowoduje umieszczenie na nowej liÅ›cie zbioru element&oacute;w, kt&oacute;ry bÄ™dzie siÄ™ koÅ„czyÅ‚ na ostatnim elemencie starej listy.</li>\n</ul>\n\n<p>l = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]</p>\n\n<p>l[:3]</p>\n\n<p>#&nbsp;l = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</p>\n\n<ul>\n	<li>W celu odliczania od koÅ„ca listy moÅ¼na stosowaÄ‡ indeksy o ujemnych numerach</li>\n</ul>\n\n<p>l[-2:]</p>\n\n<p>#l[&#39;c&#39;, &#39;d&#39;]</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>11 Przetwarzanie element&oacute;w listy przez funkcjÄ™</strong></h1>\n\n<ul>\n	<li>Aby funkcja przetworzyÅ‚a kaÅ¼dy element listy, a nastÄ™pnie zwr&oacute;ciÅ‚a wynik przeprowadzonych operacji naleÅ¼y skorzystaÄ‡ z tak zwanego zÅ‚oÅ¼enia.</li>\n	<li>W poniÅ¼szym przykÅ‚adzie nastÄ…pi przeksztaÅ‚cenie kaÅ¼dego z Å‚aÅ„cuch&oacute;w w liÅ›cie, tak aby byÅ‚ on zapisany wielkimi literami. Zostanie zwr&oacute;cona lista o takiej samej dÅ‚ugoÅ›ci jak lista Åºr&oacute;dÅ‚owa, ale bÄ™dzie siÄ™ ona skÅ‚adaÄ‡ z element&oacute;w zapisanych tylko wielkimi literami.</li>\n	<li>\n	<ul>\n		<li>Pierwszym elementem zÅ‚oÅ¼enia jest kod, kt&oacute;ry jest wykonywany na kaÅ¼dym z element&oacute;w listy.</li>\n		<li>Zmienna przetwarzania przez pÄ™tlÄ™ zostaÅ‚a umieszczona po komendzie for, a po komendzie in okreÅ›lono uÅ¼ytÄ… listÄ™.</li>\n	</ul>\n	</li>\n</ul>\n\n<p>l = [&quot;abc&quot;, &quot;def&quot;, &quot;ghi&quot;, &quot;ijk&quot;]</p>\n\n<p>[x.upper() for x in l]</p>\n\n<p># [&quot;ABC&quot;, &quot;DEF&quot;, &quot;GHI&quot;, &quot;IJK&quot;]</p>\n\n<p>&nbsp;</p>\n","","0"),
("299","SÅ‚owniki","<h1><strong>1 Tworzenie sÅ‚ownika</strong></h1>\n\n<ul>\n	<li>Aby stworzyÄ‡ tabelÄ™ zawierajÄ…cÄ… powiÄ…zane ze sobÄ… klucze i wartoÅ›ci naleÅ¼y stworzyÄ‡ sÅ‚ownik.</li>\n	<li>Tablice sprawdzajÄ… siÄ™ Å›wietnie, gdy potrzebny jest dostÄ™p do uszeregowanej listy element&oacute;w lub gdy zawsze wie siÄ™ z kt&oacute;rego elementu chce siÄ™ skorzystaÄ‡.</li>\n	<li>W sÅ‚owniku zapisane sÄ… pary klucz-wartoÅ›Ä‡. Klucz moÅ¼e byÄ‡ uÅ¼yty do odczytania wartoÅ›ci.</li>\n	<li>W celu stworzenia sÅ‚ownika naleÅ¼y zastosowaÄ‡ notacjÄ™ {}:</li>\n</ul>\n\n<p>phone_number = {&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<ul>\n	<li>WartoÅ›ci przechowywane w sÅ‚owniku mogÄ… byÄ‡ rownieÅ¼ danymi dowolnego typu - mogÄ… byÄ‡ nawet sÅ‚ownikami lub listami. W poniÅ¼szym przykÅ‚adzie stworzono slownik (a), a nastÄ™pnie umieszczono go jako wartoÅ›Ä‡ w drugim sÅ‚owniku (b):</li>\n</ul>\n\n<p>a = {&#39;klucz1&#39;:&#39;wartoÅ›Ä‡1&#39;, &#39;klucz2&#39;:2}</p>\n\n<p>a</p>\n\n<p>#&nbsp;{&#39;klucz1&#39;:&#39;wartoÅ›Ä‡1&#39;, &#39;klucz2&#39;:2}</p>\n\n<p>b = {b_klucz1&#39;:a}</p>\n\n<p>b</p>\n\n<p># {&#39;b_klucz1&#39; : &nbsp;{&#39;klucz1&#39;:&#39;wartoÅ›Ä‡1&#39;, &#39;klucz2&#39;:2}}</p>\n\n<ul>\n	<li>Po wyÅ›wietleniu zawartoÅ›sci sÅ‚ownika moÅ¼na zauwaÅ¼yÄ‡, Å¼e znajdujÄ…ce siÄ™ w nim elementy mogÄ… byÄ‡ uÅ‚oÅ¼one w innej kolejnoÅ›ci niÅ¼ podczas tworzenia i inicjalizowania sÅ‚ownika.</li>\n	<li>\n	<ul>\n		<li>Elementy uÅ‚oÅ¼one w sÅ‚owniku nie sÄ… uÅ‚oÅ¼oe w okreÅ›lonej kolejnoÅ›ci, tak jak to miaÅ‚o miejsce w przypadku list. KolejnoÅ›Ä‡ element&oacute;w umieszczanych w sÅ‚owniku wydaje siÄ™ losowa. PoniewaÅ¼ sÅ‚ownik opart jest na tablicy mieszajÄ…cej. WartoÅ›ci te przechowywane sÄ… w tablicy wedÅ‚ug funkcji mieszajÄ…cej. Funkcja ta oblicza numeryczny ekwiwalent obiektu dowolnego typu.</li>\n	</ul>\n	</li>\n</ul>\n\n<p>phone_number = {&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<p>phone_numbers</p>\n\n<p># {&#39;Joanna&#39;:&#39;01234 666666&#39;, &#39;Szymon&#39;:&#39;01234 567899&#39; }</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>2 Uzyskiwanie dostÄ™pu do element&oacute;w znajdujÄ…cych siÄ™ w sÅ‚owniku</strong></h1>\n\n<ul>\n	<li>Aby uzyskaÄ‡ dostÄ™p do element&oacute;w sÅ‚ownika i zmodyfikowaÄ‡ je naleÅ¼y skorzystaÄ‡ z notacji []</li>\n	<li>W nawiasach kwadratowych naleÅ¼y umieÅ›ciÄ‡ klucz elementu, do kt&oacute;rego chce siÄ™ uzyskaÄ‡ dostÄ™p.</li>\n	<li>JeÅ¼eli bÄ™dzie siÄ™ pr&oacute;bowaÅ‚o uzyskaÄ‡ dostÄ™p do elementu, kt&oacute;rego klucz nie znajduje siÄ™ w sÅ‚owniku zostanie wyÅ›wietlony komunikat key error.</li>\n</ul>\n\n<p>phone_number = {&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<p>phone_number[&#39;Szymon&#39;]</p>\n\n<p># &#39;&nbsp;01234 567899&#39;</p>\n\n<p>phone_numbers[&#39;Joanna&#39;]</p>\n\n<p># &#39;01234 666666 &#39;</p>\n\n<ul>\n	<li>Notacji []&nbsp;moÅ¼na uÅ¼yÄ‡ do dodania nowych wartoÅ›ci do sÅ‚ownika lub do nadpisania wartoÅ›ci juÅ¼ obecnych w sÅ‚owniku. PoniÅ¼szy kod dodaje nowy element do sÅ‚ownika o kluczu Jan i wartoÅ›ci 01234 777555.&nbsp;</li>\n	<li>\n	<ul>\n		<li>JeÅ¼eli dany klucz nie zostaÅ‚ uÅ¼yty w sÅ‚owniku, to automatycznie tworzony jest w nim nowy element. Gdy dany klucz istnieje to obecna wartoÅ›Ä‡ jest nadpisywana</li>\n	</ul>\n	</li>\n</ul>\n\n<p>phone_numbers[&#39;Jan&#39;] = &#39;01234 777555&#39;</p>\n\n<p>phone_numbers[&#39;Jan&#39;]</p>\n\n<p>#&nbsp;01234 777555</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>3 Usuwanie element&oacute;w ze sÅ‚ownika</strong></h1>\n\n<ul>\n	<li>Aby usunÄ…Ä‡ element ze sÅ‚ownika naleÅ¼y zastosowaÄ‡ polecenie pop okreÅ›lajÄ…cy element kt&oacute;ry chce siÄ™ usunÄ…Ä‡.</li>\n	<li>\n	<ul>\n		<li>Polecenie pop zwraca wartoÅ›Ä‡ elementu usuwanego ze sÅ‚ownika</li>\n	</ul>\n	</li>\n</ul>\n\n<p>phone_number = {&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<p>phone_number.pop(&#39;Joanna&#39;)</p>\n\n<p>#&nbsp;01234 666666</p>\n\n<p>phone_number</p>\n\n<p>{&#39;Szymon&#39;:&#39;01234 567899&#39;}</p>\n\n<p>&nbsp;</p>\n\n<h1><strong>4 Iteracja sÅ‚ownika</strong></h1>\n\n<ul>\n	<li>Aby przeprowadziÄ‡ pewnÄ… operacjÄ™ na kolejnych elementach znajdujÄ…cych siÄ™ w sÅ‚owniku naleÅ¼y zastosowaÄ‡ polecenie for:</li>\n</ul>\n\n<p>phone_numbers =&nbsp;{&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<p>for name in phone_numbers:</p>\n\n<p>&nbsp; &nbsp; &nbsp;print(name)</p>\n\n<p>&nbsp;</p>\n\n<p># Joanna</p>\n\n<p># Szymon</p>\n\n<p>&nbsp;</p>\n\n<p>phone_numbers =&nbsp;{&#39;Szymon&#39;:&#39;01234 567899&#39;, &#39;Joanna&#39;:&#39;01234 666666&#39;}</p>\n\n<p>for name, num in phone_numbers.items():</p>\n\n<p>&nbsp; &nbsp; &nbsp;print(name + &quot; &quot; + num)</p>\n\n<p>&nbsp;</p>\n\n<p># Joanna 01234 666666</p>\n\n<p># Szymon&nbsp;01234 567899</p>\n","","0"),
("300","BÅ‚Ä™dy i wyjÄ…tki","<h1>1. BÅ‚Ä™dy i wyjÄ…tki</h1>\n\n<p>AÅ¼ do teraz, komunikaty o bÅ‚Ä™dach nie byÅ‚y czÄ™sto wspominane, ale jeÅ›li pr&oacute;bowaÅ‚eÅ› uruchamiaÄ‡ wszystkie przykÅ‚ady prawdopodobnie zobaczyÅ‚eÅ› parÄ™. IstniejÄ… (przy najmniej) dwa rozr&oacute;Å¼nialne rodzaje bÅ‚Ä™d&oacute;w:&nbsp;<em>bÅ‚Ä™dy skÅ‚adni</em>&nbsp;i&nbsp;<em>wyjÄ…tki</em>.</p>\n\n<h1>2 BÅ‚Ä™dy skÅ‚adni</h1>\n\n<p>BÅ‚Ä™dy skÅ‚adniowe, znane r&oacute;wnieÅ¼ jako bÅ‚Ä™dy parsingu, sÄ… byÄ‡ moÅ¼e najbardziej powszechnym rodzajem zaÅ¼aleÅ„, kt&oacute;re otrzymuje siÄ™ podczas nauki Pythona:</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/bledy_skladni.jpg\" style=\"height:128px; width:398px\" /></p>\n\n<p>Parser powtarza na wyjÅ›ciu obraÅºliwy dla niego wiersz i wyÅ›wietla maÅ‚Ä… ,,strzaÅ‚kÄ™&#39;&#39;, wskazujÄ…cÄ… na najwczeÅ›niejszy punkt w wierszu gdzie znaleziono bÅ‚Ä…d. BÅ‚Ä…d spowodowany zostaÅ‚ (lub przynajmniej wykryty w) przez skÅ‚adnik<em>poprzedzajÄ…cy</em>&nbsp;strzaÅ‚kÄ™: w tym przykÅ‚adzie, bÅ‚Ä…d wykryty zostaÅ‚ na sÅ‚owie kluczowym&nbsp;<tt>print</tt>, z powodu braku znaku dwukropka (&quot;<tt>:</tt>&quot;) przed tÄ… instrukcjÄ…. Nazwa pliku i numer linii sÄ… r&oacute;wnieÅ¼ wyÅ›wietlane, aby wiedzieÄ‡, gdzie szukaÄ‡ bÅ‚Ä™du, w przypadku gdy na wejÅ›ciu znajdowaÅ‚ siÄ™ skrypt.</p>\n\n<h1>3 WyjÄ…tki</h1>\n\n<p>Nawet gdy wyraÅ¼enie jest skÅ‚adniowo poprawne, moÅ¼e spowodowaÄ‡ bÅ‚Ä…d podczas pr&oacute;by wykonania go. BÅ‚Ä™dy wykryte podczas wykonania nazywane sÄ…&nbsp;<em>wyjÄ…tkami</em>&nbsp;i niekoniecznie muszÄ… zakoÅ„czyÄ‡ program: za chwilÄ™ nauczysz siÄ™ jak radziÄ‡ sobie z nimi w programach Pythona. WiÄ™kszoÅ›Ä‡ wyjÄ…tk&oacute;w nie jest obsÅ‚ugiwana przez programy i objawiajÄ… siÄ™ w komunikatach o bÅ‚Ä™dzie, jak poniÅ¼ej:</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/wyjatki.jpg\" style=\"height:273px; width:577px\" /></p>\n\n<p><small>(<em><strong>ZeroDivisionError</strong>:</em>&nbsp;<em>dzielenie caÅ‚kowite lub operacja modulo</em>)</small></p>\n\n<p><small>(<em><strong>TypeError</strong>:</em>&nbsp;<em>nieprawidÅ‚owy typ argumentu operacji wbudowanej</em>)</small></p>\n\n<p>Ostatnia linia komunikatu o bÅ‚Ä™dzie pokazuje co siÄ™ staÅ‚o. WyjÄ…tki sÄ… r&oacute;Å¼nego typu, i ten typ wyÅ›wietlany jest jako czÄ™Å›Ä‡ komunikatu. W powyÅ¼szym przykÅ‚adzie tymi typami sÄ…&nbsp;<tt>ZeroDivisionError</tt>,&nbsp;<tt>NameError</tt>&nbsp;i&nbsp;<tt>TypeError</tt>. Napis wyÅ›wietlany jako typ wyjÄ…tku jest nazwÄ… wbudowanego w interpreter wyjÄ…tku, kt&oacute;ry siÄ™ wÅ‚aÅ›nie pojawiÅ‚. Zachodzi to dla wszystkich wyjÄ…tk&oacute;w wbudowanych,, lecz niekoniecznie jest to prawdÄ… dla wyjÄ…tk&oacute;w zdefiniowanych przez uÅ¼ytkownika (jakkolwiek, jest to uÅ¼yteczna konwencja). Nazwy standardowych wyjÄ…tk&oacute;w sÄ… wbudowanymi identyfikatorami, a nie zastrzeÅ¼onymi sÅ‚owami kluczowymi.</p>\n\n<p>Reszta wiersza komunikatu w szczeg&oacute;Å‚ach opisuje to, co siÄ™ staÅ‚o. Interpretacja i znaczenie tego opisu zaleÅ¼y od typu wyjÄ…tku.</p>\n\n<p>Pierwsza czÄ™Å›Ä‡ komunikatu pokazuje kontekst, w jakim wyjÄ…tek siÄ™ zdarzyÅ‚, w postaci Å›ladu ze stosu wywoÅ‚aÅ„. Og&oacute;lnie m&oacute;wiÄ…c, kontekst zawiera Å›lady wywoÅ‚aÅ„ w postaci wierszy kodu, aczkolwiek nie pokaÅ¼e wierszy podchodzÄ…cych ze standardowego wejÅ›cia.</p>\n\n<p><em>Opis biblioteki Pythona</em>&nbsp;wyszczeg&oacute;lnia wszystkie wbudowane wyjÄ…tki i przedstawia ich znaczenie.</p>\n\n<h1>4 ObsÅ‚uga wyjÄ…tk&oacute;w</h1>\n\n<p>MoÅ¼liwe jest napisanie programu, kt&oacute;ry obsÅ‚uguje wybrane wyjÄ…tki. Sp&oacute;jrzmy na przykÅ‚ad poniÅ¼ej, w kt&oacute;rym uÅ¼ytkownik podaje dane na wejÅ›ciu aÅ¼ do momentu, kiedy zostanie wprowadzona poprawna liczba caÅ‚kowita. UÅ¼ytkownik moÅ¼e przerwaÄ‡ pracÄ™ (poprzez naciÅ›niÄ™cie&nbsp;<kbd>Control-C</kbd>&nbsp;lub dowolny sposobem, jaki jest moÅ¼liwy poprzez klawiaturÄ™ w danym systemie operacyjnym). Przerwanie uÅ¼ytkownika sygnalizowane jest poprzez zgÅ‚oszenie wyjÄ…tku<tt>KeyboardInterrupt</tt>.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/obsluga_wyjatkow.jpg\" style=\"height:169px; width:823px\" /></p>\n\n<p>Oto jak dziaÅ‚a instrukcja&nbsp;<tt>try</tt>:</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>Na poczÄ…tku wykonywana jest&nbsp;<em>klauzula try</em>&nbsp;(czyli instrukcje pomiÄ™dzy&nbsp;<tt>try</tt>&nbsp;a&nbsp;<tt>except</tt>).\n\n	<p>&nbsp;</p>\n	</li>\n	<li>JeÅ¼eli nie pojawi siÄ™ Å¼aden wyjÄ…tek&nbsp;<em>klauzula except</em>&nbsp;jest pomijana. Wykonanie instrukcji&nbsp;<tt>try</tt>&nbsp;uwaÅ¼a siÄ™ za zakoÅ„czone.\n	<p>&nbsp;</p>\n	</li>\n	<li>JeÅ¼eli podczas wykonywania klauzuli&nbsp;<tt>try</tt>&nbsp;pojawi siÄ™ wyjÄ…tek, reszta niewykonanych instrukcji jest pomijana. NastÄ™pnie, w zaleÅ¼noÅ›ci od tego, czy jego typ pasuje do typ&oacute;w wyjÄ…tk&oacute;w wymienionych w czÄ™Å›ci&nbsp;<tt>except</tt>, wykonywany jest kod nastÄ™pujÄ…cy w tym bloku, a potem interpreter przechodzi do wykonywania instrukcji umieszczonych po caÅ‚ym bloku&nbsp;<tt>try</tt>...<tt>except</tt>.\n	<p>&nbsp;</p>\n	</li>\n	<li>W przypadku pojawienia siÄ™ wyjÄ…tku, kt&oacute;ry nie zostanie dopasowany do Å¼adnego z wyjÄ…tk&oacute;w wymienionych w klauzuli&nbsp;<tt>except</tt>, zostaje on przekazany do do nastÄ™pnych, zewnÄ™trznych instrukcji&nbsp;<tt>try</tt>. JeÅ¼eli r&oacute;wnieÅ¼ tam nie zostanie znaleziony odpowiadajÄ…cy mu blok&nbsp;<tt>except</tt>, wyjÄ…tek ten nie zostanie wyÅ‚apany, stanie&nbsp;<em>nieobsÅ‚uÅ¼onym wyjÄ…tkiem</em>, a wykonywanie programu zostanie wstrzymane wraz z pojawieniem siÄ™ komunikatu podobnego do pokazanego powyÅ¼ej.\n	<p>&nbsp;</p>\n	</li>\n</ul>\n\n<p>Aby umoÅ¼liwiÄ‡ obsÅ‚ugÄ™ wielu wyjÄ…tk&oacute;w, instrukcja&nbsp;<tt>try</tt>&nbsp;moÅ¼e posiadaÄ‡ wiÄ™cej niÅ¼ jednÄ… klauzulÄ™&nbsp;<tt>except</tt>. W takim przypadku, kod dla co najwyÅ¼ej jednego wyjÄ…tku zostanie wykonany. Kody obsÅ‚ugi wyjÄ…tk&oacute;w wykonywane sÄ… tylko dla wyjÄ…tk&oacute;w, kt&oacute;re zostaÅ‚y zgÅ‚oszone w odpowiadajÄ…cej im czÄ™Å›ci&nbsp;<tt>try</tt>, a nie w innych, sÄ…siednich czÄ™Å›ciach&nbsp;<tt>except</tt>. Klauzula&nbsp;<tt>except</tt>&nbsp;moÅ¼e zawieraÄ‡ nazwy wielu wyjÄ…tk&oacute;w, podanych w formie listy otoczonej nawiasami okrÄ…gÅ‚ymi</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/obsluga_wyjatkow2.jpg\" style=\"height:73px; width:530px\" /></p>\n\n<h1>5 PrzykÅ‚ad</h1>\n\n<p><strong>exception statistics.StatisticsError</strong></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/przykad1.jpg\" style=\"height:139px; width:941px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Basics/przykad2.jpg\" style=\"height:119px; width:649px\" /></p>\n\n<p><strong>statistics.mode(data)</strong></p>\n\n<p>Funkcja kt&oacute;ra wzr&oacute;ci najczÄ™Å›ciej powtaÅ¼ajÄ…ce siÄ™ liczby w ciÄ…gu, jeÅ¼eli istniejÄ… 2 liczby naprzykÅ‚ad 2 i 3 powtaÅ¼ajÄ…ce siÄ™ tyle samo razy i bÄ™dÄ…ce najczÄ™Å›ciej wystÄ™pujÄ…cymi zostanie wzr&oacute;cony bÅ‚Ä…d.</p>\n\n<p>PrzykÅ‚ady:</p>\n\n<p>[1, 1, 2, 3, 3, 3, 3, 4] -&gt; 3</p>\n\n<p>[1, 2, 2, 2, 3, 3, 3, 4] -&gt;&nbsp;no unique mode; found 2 or more equally common values</p>\n","","0"),
("301","abs()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci wartoÅ›Ä‡ bewzglÄ™dnÄ… podanej liczby&nbsp;</p>\n\n<p>4 -&gt; 4</p>\n\n<p>-4 -&gt; 4</p>\n","<p>abs(4) # 4<br />\nabs(-4) # 4</p>\n","0");
INSERT INTO function VALUES
("302","all()","<p>UÅ¼yj funkcji kt&oacute;ra poda wartoÅ›Ä‡ True gdy wszystkie elementy listy majÄ… wartoÅ›Ä‡ True</p>\n\n<p>[False, True, True] -&gt; # False<br />\n[True, True, True] -&gt;&nbsp;# True</p>\n","<p>all([False, True, True]) # False<br />\nall([True, True, True]) # True</p>\n","0"),
("303","any()","<p>UÅ¼yj funkcji kt&oacute;ra poda wartoÅ›Ä‡ True gdy chociaÅ¼ jeden element listy ma wartoÅ›Ä‡ True</p>\n\n<p>[False, False, False] -&gt;&nbsp;False<br />\n[False, True, False] -&gt; True</p>\n","<p>any([False, False, False]) # False<br />\nany([False, True, False]) # True</p>\n","0"),
("304","ascii()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci kod unicode jeÅ¼eli podany znak nie naleÅ¼y do&nbsp;ASCII</p>\n\n<p>Ä‡ -&gt; &quot;&#39;u0107&#39;&quot;<br />\na -&gt; a</p>\n","<p>ascii(&#39;Ä‡&#39;) # &quot;&#39;\\u0107&#39;&quot;<br />\nascii(&#39;a&#39;) # &quot;&#39;a&#39;&quot;</p>\n","0"),
("305","bin()","<p>Uzyj funkcji kt&oacute;ra zkonwertuje liczbÄ™ z systemu dziesiÄ™tnego (1,2,3,4,5,6,7,8,9,0) na dw&oacute;jkowy zwany binarnym (0,1)</p>\n\n<p>1 -&gt; &#39;0b1&#39;<br />\n100 -&gt; &#39;0b1100100&#39;<br />\n1000 -&gt; &#39;0b1111101000&#39;</p>\n","<p>bin(1) # &#39;0b1&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/dziesietny_do_dwujkowy1.jpg\" style=\"height:170px; width:984px\" /><br />\nbin(100) # &#39;0b1100100&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/dziesietny_do_dwujkowy2.jpg\" style=\"height:173px; width:982px\" /><br />\nbin(1000) # &#39;0b1111101000&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/dziesietny_do_dwujkowy3.jpg\" style=\"height:171px; width:980px\" /></p>\n","0"),
("306","bool()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze True jeÅ¼eli&nbsp;podana wartosc w funkji bÄ™dzie r&oacute;wna 1 lub True</p>\n\n<p>1 -&gt;True<br />\n0 -&gt; False<br />\nTrue -&gt; True<br />\nFalse -&gt; False</p>\n","<p>bool(1) # True<br />\nbool(0) # False<br />\nbool(True) # True<br />\nbool(False) # False</p>\n","0"),
("307","bytearray()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y listÄ™ o typie danych byte (moÅ¼e przzyjmowaÄ‡ wartoÅ›ci od 0 do 256)&nbsp;z listy o typie danych int #&nbsp;[0, 200, 50, 25, 10, 255]</p>\n","<p>values = bytearray([0, 200, 50, 25, 10, 255])</p>\n\n<p>for value in values:<br />\n&nbsp; &nbsp; print(value)</p>\n\n<p># Robi to samo co bytes</p>\n","0"),
("308","bytes()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y listÄ™ o typie danych byte (moÅ¼e przzyjmowaÄ‡ wartoÅ›ci od 0 do 256)&nbsp;z listy o typie danych int #&nbsp;[0, 200, 50, 25, 10, 255]</p>\n","<p>values = bytes([0, 200, 50, 25, 10, 255])</p>\n\n<p>for value in values:<br />\n&nbsp; &nbsp; print(value)</p>\n\n<p># Robi to samo co bytearray</p>\n","0"),
("309","callable()","<p>Wypisz funkcjÄ™&nbsp;kt&oacute;ra zwr&oacute;ci True jeÅ¼eli da siÄ™ wywoÅ‚aÄ‡ funkcjÄ™ lub klasÄ™&nbsp;</p>\n","<p>#&nbsp;callable(x)</p>\n\n<p>x = 5<br />\nprint(callable(x)) # False</p>\n\n<p>def testFunction():<br />\n&nbsp; print(&quot;Test&quot;)</p>\n\n<p>y = testFunction<br />\nprint(callable(y)) # True</p>\n","0"),
("310","chr()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci znak ASCI na podstawie numeru</p>\n\n<p>97 -&gt; a</p>\n\n<p>48 -&gt; 0</p>\n","<p>chr(97) # &#39;a&#39;<br />\nchr(48) # &#39;0&#39;</p>\n","0"),
("311","classmethod()","<p>Wypisz funkcjÄ™&nbsp;kt&oacute;ra konwertuje funkcjÄ™ na metodÄ™ (kt&oacute;ra wie o isntieniu klasy)</p>\n","<p>class Person:<br />\n&nbsp; &nbsp; age = 25</p>\n\n<p>&nbsp; &nbsp; def printAge(cls):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;The age is:&#39;, cls.age)</p>\n\n<p># create printAge class method<br />\nPerson.printAge = classmethod(Person.printAge)</p>\n\n<p>Person.printAge()</p>\n","0"),
("312","compile()","<p>UÅ¼yj funkcji kt&oacute;ra zkompiluje operacje opisane w ciÄ…gu znak&oacute;w</p>\n\n<p>&#39;a = 5 b=6 sum=a+b print(&quot;sum =&quot;,sum)&#39;</p>\n","<p>codeInString = &#39;a = 5\nb=6\nsum=a+b\nprint(&quot;sum =&quot;,sum)&#39;<br />\ncodeObejct = compile(codeInString, &#39;sumstring&#39;, &#39;exec&#39;)</p>\n\n<p>exec(codeObejct)</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/compile_parameters.jpg\" style=\"height:453px; width:929px\" /></p>\n","0"),
("313","complex()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y liczbÄ™ zespolonÄ… (complex number) na podstawie dw&oacute;ch wartoÅ›ci podancyh w funkcji.</p>\n\n<p>2, -3 -&gt;&nbsp;<samp>(2-3j)</samp></p>\n\n<p>1&nbsp;-&gt;&nbsp;<samp>(1+0j)</samp></p>\n\n<p>5-9j&nbsp;-&gt;&nbsp;<samp>(5-9j)</samp></p>\n","<pre>\nz = complex(2, -3)\nprint(z) # <samp>(2-3j)</samp>\n\nz = complex(1)\nprint(z) # <samp>(1+0j)</samp></pre>\n\n<pre>\n\nz = complex()\nprint(z) # <samp>0j</samp></pre>\n\n<pre>\n\nz = complex(&#39;5-9j&#39;)\nprint(z) # <samp>(5-9j)</samp></pre>\n","0"),
("314","delattr() ","<p>UÅ¼yj funkcji kt&oacute;ra usunie atrybut z obiektu jeÅ¼eli obiekt na to pozwala.</p>\n\n<p>klasa:&nbsp;Coordinate</p>\n\n<p>atrybut 1:&nbsp; x = 10&nbsp;</p>\n\n<p>atrybut 2:&nbsp; y = -5</p>\n\n<p>atrybut 3:&nbsp; z = 0</p>\n\n<p>obiekt:&nbsp;point1 = Coordinate()&nbsp;</p>\n\n<p>atrybut do usuniÄ™cia:&nbsp;atrybut 3</p>\n","<p>class Coordinate:<br />\n&nbsp; x = 10<br />\n&nbsp; y = -5<br />\n&nbsp; z = 0</p>\n\n<p>point1 = Coordinate()&nbsp;</p>\n\n<p>print(&#39;x = &#39;,point1.x)<br />\nprint(&#39;y = &#39;,point1.y)<br />\nprint(&#39;z = &#39;,point1.z)</p>\n\n<p>delattr(Coordinate, &#39;z&#39;)</p>\n\n<p>print(&#39;--After deleting z attribute--&#39;)<br />\nprint(&#39;x = &#39;,point1.x)<br />\nprint(&#39;y = &#39;,point1.y)</p>\n\n<p># Raises Error<br />\nprint(&#39;z = &#39;,point1.z)</p>\n","0"),
("315","dict()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y sÅ‚ownik #&nbsp;{&#39;x&#39;: 5, &#39;y&#39;: 0}</p>\n","<p>numbers = dict(x=5, y=0)<br />\nprint(&#39;numbers = &#39;,numbers) #&nbsp;numbers = &nbsp;{&#39;x&#39;: 5, &#39;y&#39;: 0}<br />\nprint(type(numbers)) #&nbsp;&lt;class &#39;dict&#39;&gt;</p>\n\n<p>empty = dict()<br />\nprint(&#39;empty = &#39;,empty) #&nbsp;empty = &nbsp;{}<br />\nprint(type(empty)) #&nbsp;&lt;class &#39;dict&#39;&gt;</p>\n","0"),
("316","dir()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci wszystkie atrybuty obiektu (klasy),&nbsp;wyÅ›wietli wszystkie zaimportowane moduÅ‚y do skryptu pythona i pokaÅ¼e wszystkie funkcje i atrybuty wskazanego mouÅ‚u.</p>\n\n<p>Atrybuty obiektu:&nbsp;[&#39;area&#39;, &#39;perimeter&#39;, &#39;location&#39;]</p>\n\n<p>WywoÅ‚anie funkcji bez Å¼adnych wartoÅ›ci wewnÄ…tÅ¼ funkcji:&nbsp;&nbsp;[&#39;__annotations__&#39;, &#39;__builtins__&#39;, &#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;]</p>\n\n<p>WywoÅ‚anie funkcji po zaimportowaniu moduÅ‚u math #&nbsp;[&#39;__annotations__&#39;, &#39;__builtins__&#39;, &#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;math&#39;]</p>\n\n<p>WywoÅ‚anie funkcji po wpisaniu moduÅ‚u math wewnÄ…tÅ¼ funkcji: #&nbsp;[&#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;acos&#39;, &#39;acosh&#39;, &#39;asin&#39;, &#39;asinh&#39;, &#39;atan&#39;, &#39;atan2&#39;, &#39;atanh&#39;, &#39;ceil&#39;, &#39;copysign&#39;, &#39;cos&#39;, &#39;cosh&#39;, &#39;degrees&#39;, &#39;e&#39;, &#39;erf&#39;, &#39;erfc&#39;, &#39;exp&#39;, &#39;expm1&#39;, &#39;fabs&#39;, &#39;factorial&#39;, &#39;floor&#39;, &#39;fmod&#39;, &#39;frexp&#39;, &#39;fsum&#39;, &#39;gamma&#39;, &#39;gcd&#39;, &#39;hypot&#39;, &#39;inf&#39;, &#39;isclose&#39;, &#39;isfinite&#39;, &#39;isinf&#39;, &#39;isnan&#39;, &#39;ldexp&#39;, &#39;lgamma&#39;, &#39;log&#39;, &#39;log10&#39;, &#39;log1p&#39;, &#39;log2&#39;, &#39;modf&#39;, &#39;nan&#39;, &#39;pi&#39;, &#39;pow&#39;, &#39;radians&#39;, &#39;sin&#39;, &#39;sinh&#39;, &#39;sqrt&#39;, &#39;tan&#39;, &#39;tanh&#39;, &#39;tau&#39;, &#39;trunc&#39;]</p>\n","<p>class Shape:</p>\n\n<p>&nbsp;def __dir__(self):</p>\n\n<p>&nbsp; return [&#39;area&#39;, &#39;perimeter&#39;, &#39;location&#39;]</p>\n\n<p>s = Shape()</p>\n\n<p>dir(s) # [&#39;area&#39;, &#39;location&#39;, &#39;perimeter&#39;]</p>\n\n<p>&nbsp;</p>\n\n<p>dir() # [&#39;__annotations__&#39;, &#39;__builtins__&#39;, &#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;]</p>\n\n<p>import math<br />\ndir() # [&#39;__annotations__&#39;, &#39;__builtins__&#39;, &#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;math&#39;]</p>\n\n<p>dir(math) # [&#39;__doc__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;acos&#39;, &#39;acosh&#39;, &#39;asin&#39;, &#39;asinh&#39;, &#39;atan&#39;, &#39;atan2&#39;, &#39;atanh&#39;, &#39;ceil&#39;, &#39;copysign&#39;, &#39;cos&#39;, &#39;cosh&#39;, &#39;degrees&#39;, &#39;e&#39;, &#39;erf&#39;, &#39;erfc&#39;, &#39;exp&#39;, &#39;expm1&#39;, &#39;fabs&#39;, &#39;factorial&#39;, &#39;floor&#39;, &#39;fmod&#39;, &#39;frexp&#39;, &#39;fsum&#39;, &#39;gamma&#39;, &#39;gcd&#39;, &#39;hypot&#39;, &#39;inf&#39;, &#39;isclose&#39;, &#39;isfinite&#39;, &#39;isinf&#39;, &#39;isnan&#39;, &#39;ldexp&#39;, &#39;lgamma&#39;, &#39;log&#39;, &#39;log10&#39;, &#39;log1p&#39;, &#39;log2&#39;, &#39;modf&#39;, &#39;nan&#39;, &#39;pi&#39;, &#39;pow&#39;, &#39;radians&#39;, &#39;sin&#39;, &#39;sinh&#39;, &#39;sqrt&#39;, &#39;tan&#39;, &#39;tanh&#39;, &#39;tau&#39;, &#39;trunc&#39;]</p>\n","0"),
("317","divmod()","<p>UÅ¼yj funkcji kt&oacute;ra otrzymujÄ…c dwie liczby, zwr&oacute;ci listÄ™ skÅ‚adajÄ…cÄ… sie z dw&oacute;ch element&oacute;w iloczynu i reszty.</p>\n\n<p>(8, 3)&nbsp; -&gt; (2, 2) bo 8 / 3 = 2 reszty 2<br />\n(3, 8) -&gt; &nbsp;(0, 3)&nbsp;bo 3 / 8 = 0 reszty 3<br />\n(5, 5) -&gt; &nbsp;(1, 0)&nbsp;bo 5 / 5 = 1 reszty 0<br />\n(8.0, 3) -&gt; &nbsp;(2.0, 2.0)&nbsp;bo 8.0 / 3= 2&nbsp;reszty 2<br />\n(3, 8.0) -&gt; &nbsp;(0.0, 3.0)&nbsp;bo 3 / 8&nbsp;= 0&nbsp;reszty 3<br />\n(7.5, 2.5) -&gt; &nbsp;(3.0, 0.0)&nbsp;bo 7.5 / 2.5 = 3 reszty 0&nbsp;<br />\n(2.6, 0.5) -&gt;&nbsp;(5.0, 0.10000000000000009)&nbsp;bo 2.6 / 0.5 = 5 reszty 0.1&nbsp;</p>\n","<p>divmod(8, 3) #&nbsp;(2, 2)<br />\ndivmod(3, 8) #&nbsp;(0, 3)<br />\ndivmod(5, 5) #&nbsp;(1, 0)</p>\n\n<p><br />\ndivmod(8.0, 3) #&nbsp;(2.0, 2.0)<br />\ndivmod(3, 8.0) #&nbsp;(0.0, 3.0)<br />\ndivmod(7.5, 2.5) #&nbsp;(3.0, 0.0)<br />\ndivmod(2.6, 0.5) #&nbsp;(5.0, 0.10000000000000009)</p>\n","0"),
("318","enumerate()","<p>UÅ¼yj funkcji kt&oacute;ra ponumeruje elementy listy, podajÄ…c drugi opcjonalny argument moÅ¼na zaczÄ…Ä‡ numerowanie od innej liczby a nie od 0</p>\n\n<p>[&#39;bread&#39;, &#39;milk&#39;, &#39;butter&#39;] -&gt;&nbsp;[(0, &#39;bread&#39;), (1, &#39;milk&#39;), (2, &#39;butter&#39;)]</p>\n\n<p>[&#39;bread&#39;, &#39;milk&#39;, &#39;butter&#39;] -&gt; [(10, &#39;bread&#39;), (11, &#39;milk&#39;), (12, &#39;butter&#39;)]</p>\n","<p>grocery = [&#39;bread&#39;, &#39;milk&#39;, &#39;butter&#39;]<br />\nenumerateGrocery = enumerate(grocery)<br />\ntype(enumerateGrocery) # &lt;class &#39;enumerate&#39;&gt;<br />\nenumerateGrocery # &lt;enumerate object at 0x0219C558&gt;<br />\ngrocery # [&#39;bread&#39;, &#39;milk&#39;, &#39;butter&#39;]<br />\nb = list(enumerateGrocery)<br />\nb # [(0, &#39;bread&#39;), (1, &#39;milk&#39;), (2, &#39;butter&#39;)]<br />\nb[0] # (0, &#39;bread&#39;)<br />\nb[0][0] # 0<br />\nb[0][1] # &#39;bread&#39;<br />\nenumerateGrocery = enumerate(grocery, 10)<br />\nb = list(enumerateGrocery)<br />\nb # [(10, &#39;bread&#39;), (11, &#39;milk&#39;), (12, &#39;butter&#39;)]</p>\n","0"),
("319","eval()","<p>UÅ¼yj funkcji kt&oacute;ra wykona operacje zapisanÄ… w stringu</p>\n\n<p>from math import *</p>\n\n<p>a = 1</p>\n\n<p>&#39;sqrt(5)&#39;&nbsp;-&gt;&nbsp;<samp>2.23606797749979 </samp></p>\n\n<p>&#39;a + 1&#39; -&gt; 2</p>\n\n<p>&nbsp;</p>\n","<p>from math import *</p>\n\n<p>a = 1</p>\n\n<p>eval(&#39;sqrt(5)&#39;) #&nbsp;<samp>2.23606797749979 </samp></p>\n\n<p>eval(&#39;a + 1&#39;) # 2</p>\n","0"),
("320","exec()","<p>UÅ¼yj funkcji kt&oacute;ra wykona operacje opisane w stringu</p>\n\n<p>&#39;a = 5\nb=10\nprint(&quot;Sum =&quot;, a+b)&#39; -&gt;&nbsp;<samp>Sum = 15</samp></p>\n","<pre>\n<samp>program = &#39;a = 5\nb=10\nprint(&quot;Sum =&quot;, a+b)&#39;\nexec(program) # Sum = 15</samp></pre>\n","0"),
("321","filter()","<p>UÅ¼yj funkcji kt&oacute;ra przefiltruje listÄ™ numer 1 tak Å¼e pokaÅ¼e tylko elementy listy kt&oacute;re wystÄ™pujÄ… w liÅ›cie numer 2</p>\n\n<p>alphabets = [&#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;e&#39;, &#39;i&#39;, &#39;j&#39;, &#39;o&#39;]</p>\n\n<p>vowels = [&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</p>\n\n<p><samp># The filtered vowels are: </samp></p>\n\n<p><samp># a </samp></p>\n\n<p><samp># e </samp></p>\n\n<p><samp># i </samp></p>\n\n<p><samp># o</samp></p>\n","<p># list of alphabets<br />\nalphabets = [&#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;e&#39;, &#39;i&#39;, &#39;j&#39;, &#39;o&#39;]</p>\n\n<p># function that filters vowels<br />\ndef filterVowels(alphabet):<br />\n&nbsp; &nbsp; vowels = [&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</p>\n\n<p>&nbsp; &nbsp; if(alphabet in vowels):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return True<br />\n&nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return False</p>\n\n<p>filteredVowels = filter(filterVowels, alphabets)</p>\n\n<p>print(&#39;The filtered vowels are:&#39;)<br />\nfor vowel in filteredVowels:<br />\n&nbsp; &nbsp; print(vowel)</p>\n\n<pre>\n<samp># The filtered vowels are:\n# a\n# e\n# i\n# o</samp></pre>\n","0"),
("322","float()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje int lub string na wartoÅ›c zmienoprzecinkowÄ… lub wypisze 0.0 gdy Å¼adna wartoÅ›Ä‡ nie zostanie wpisana w funkcjÄ™.</p>\n\n<p>10 -&gt;&nbsp;10.0</p>\n\n<p>11.22 -&gt;&nbsp;11.22</p>\n\n<p>&quot;-13.33&quot; -&gt;&nbsp;-13.33</p>\n","<p>float(10) #&nbsp;10.0</p>\n\n<p>float(11.22) #&nbsp;11.22</p>\n\n<p>float(&quot;-13.33&quot;) #&nbsp;-13.33</p>\n\n<p>float() # 0.0</p>\n","0"),
("323","format()","<p>UÅ¼yj funkcji kt&oacute;ra zapisze podane w niej dane w okreÅ›lonym formacie (int, float, binary)</p>\n\n<p># integer</p>\n\n<p>123 -&gt; 123</p>\n\n<p># float</p>\n\n<p>123.4567898 -&gt;&nbsp;123.4567898</p>\n\n<p># binary</p>\n\n<p>12 -&gt;&nbsp;<samp>1100</samp></p>\n","<p>#&nbsp;integer<br />\nformat(123, &quot;d&quot;) #&nbsp;<samp>123</samp></p>\n\n<p># float<br />\nformat(123.4567898, &quot;f&quot;) # 123.4567898</p>\n\n<p># binary<br />\nformat(12, &quot;b&quot;) #&nbsp;<samp>1100</samp></p>\n","0"),
("324","frozenset()","<p>UÅ¼yj funkcji kt&oacute;ra przeksztaÅ‚ci listÄ™ na frozenset</p>\n\n<p><br />\n(&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;) -&gt;&nbsp;<samp>frozenset({&#39;i&#39;, &#39;a&#39;, &#39;u&#39;, &#39;e&#39;, &#39;o&#39;})</samp></p>\n","<p>vowels = (&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;)</p>\n\n<p>fSet = frozenset(vowels)</p>\n\n<p>print(&#39;The frozen set is:&#39;, fSet) #&nbsp;<samp>The frozen set is: frozenset({&#39;i&#39;, &#39;a&#39;, &#39;u&#39;, &#39;e&#39;, &#39;o&#39;})</samp></p>\n\n<p>print(&#39;The empty frozen set is:&#39;, frozenset()) #&nbsp;<samp>The empty frozen set is: frozenset()</samp></p>\n","0"),
("325","getattr()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci poadany atrybut obiektu</p>\n\n<p>age = 5</p>\n\n<p>(obiekt, &quot;age&quot;) # 5</p>\n","<p>class Person:<br />\n&nbsp; &nbsp; age = 23<br />\n&nbsp; &nbsp; name = &quot;Adam&quot;</p>\n\n<p>person = Person()<br />\nprint(&#39;The age is:&#39;, getattr(person, &quot;age&quot;))<br />\nprint(&#39;The age is:&#39;, person.age)</p>\n","0"),
("326","globals()","<p>UÅ¼yj funkcji kt&oacute;ra zmieni globalne wartoÅ›ci zmiennych, gdy nic siÄ™ nie poda wewnÄ…tÅ¼ funkcji to wyÅ›wietli wszystkie zaimportowane moduÅ‚y, atrybuty, zmienne i ich wartoÅ›ci</p>\n\n<p>age = 23</p>\n\n<p>zamiana zmiennej globalnej: age = 25</p>\n\n<p>import math</p>\n\n<p>nie podanie niczego wewnÄ…trz funkcji:&nbsp;{&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: , &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: , &#39;math&#39;: }</p>\n\n<p>&nbsp;</p>\n","<p>age = 23</p>\n\n<p>globals()[&#39;age&#39;] = 25<br />\nage # 25</p>\n\n<p>import math<br />\nglobals() # {&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;class &#39;_frozen_importlib.BuiltinImporter&#39;&gt;, &#39;__spec__&#39;: None, &#39;__annotations__&#39;: {}, &#39;__builtins__&#39;: &lt;module &#39;builtins&#39; (built-in)&gt;, &#39;age&#39;: 25, &#39;math&#39;: &lt;module &#39;math&#39; (built-in)&gt;}</p>\n","0"),
("327","hasattr()","<p>UÅ¼yj funkcji kt&oacute;ra przyjmuje jako parametry obiekt oraz nazwÄ™ atrybutu i zwraza true jeÅ¼eli atrybut isnieje.</p>\n\n<p>class Person:<br />\n&nbsp; &nbsp; age = 23<br />\n&nbsp; &nbsp; name = &#39;Adam&#39;</p>\n\n<p>age -&gt; true</p>\n\n<p>salary -&gt; false</p>\n","<p>class Person:<br />\n&nbsp; &nbsp; age = 23<br />\n&nbsp; &nbsp; name = &#39;Adam&#39;</p>\n\n<p>person = Person()</p>\n\n<p>print(&#39;Person has age?:&#39;, hasattr(person, &#39;age&#39;))<br />\nprint(&#39;Person has salary?:&#39;, hasattr(person, &#39;salary&#39;))</p>\n","0"),
("328","hash()","<p>UÅ¼yj funkcji kt&oacute;ra zamieni dane o typie int, str, float idt na wartoÅ›Ä‡ liczbowÄ… zhashowanÄ… (mozna to wykoÅ¼ystywaÄ‡ do sprawdzania czy zaszÅ‚a jakaÅ› zmiana w dokumencie, jeÅ¼eli zmienimy jedna maÅ‚a Å¼ecz od razu na poczÄ…tku zhasowanej liczby zobaczy inne wartoÅ›ci.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/hash.jpg\" style=\"height:770px; width:1214px\" /></p>\n","<p># hash for integer unchanged<br />\nprint(&#39;Hash for 181 is:&#39;, hash(181)) #&nbsp;<samp>Hash for 181 is: 181</samp></p>\n\n<p># hash for decimal<br />\nprint(&#39;Hash for 181.23 is:&#39;,hash(181.23)) #&nbsp;<samp>Hash for 181.23 is: 530343892119126197</samp></p>\n\n<p># hash for string<br />\nprint(&#39;Hash for Python is:&#39;, hash(&#39;Python&#39;)) #&nbsp;<samp>Hash for Python is: 2230730083538390373</samp></p>\n","0"),
("329","help()","","<p>&gt;&gt;&gt; help(list)<br />\nHelp on class list in module builtins:</p>\n\n<p>class list(object)<br />\n&nbsp;| &nbsp;list() -&gt; new empty list<br />\n&nbsp;| &nbsp;list(iterable) -&gt; new list initialized from iterable&#39;s items<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;Methods defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__add__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self+value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__contains__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return key in self.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__delitem__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Delete self[key].<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__eq__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self==value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ge__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getattribute__(self, name, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return getattr(self, name).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getitem__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;x.__getitem__(y) &lt;==&gt; x[y]<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__gt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__iadd__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement self+=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__imul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement self*=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__init__(self, /, *args, **kwargs)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Initialize self. &nbsp;See help(type(self)) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__iter__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement iter(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__le__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__len__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return len(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__lt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__mul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self*value.n<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ne__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self!=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__new__(*args, **kwargs) from builtins.type<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Create and return a new object. &nbsp;See help(type) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__repr__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return repr(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__reversed__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.__reversed__() -- return a reverse iterator over the list<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__rmul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self*value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__setitem__(self, key, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Set self[key] to value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__sizeof__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.__sizeof__() -- size of L in memory, in bytes<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;append(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.append(object) -&gt; None -- append object to end<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;clear(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.clear() -&gt; None -- remove all items from L<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;copy(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.copy() -&gt; list -- a shallow copy of L<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;count(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.count(value) -&gt; integer -- return number of occurrences of value<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;extend(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.extend(iterable) -&gt; None -- extend list by appending elements from the iterable<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;index(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.index(value, [start, [stop]]) -&gt; integer -- return first index of value.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises ValueError if the value is not present.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;insert(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.insert(index, object) -- insert object before index<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;pop(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.pop([index]) -&gt; item -- remove and return item at index (default last).<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises IndexError if list is empty or index is out of range.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;remove(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.remove(value) -&gt; None -- remove first occurrence of value.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises ValueError if the value is not present.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;reverse(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.reverse() -- reverse *IN PLACE*<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;sort(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.sort(key=None, reverse=False) -&gt; None -- stable sort *IN PLACE*<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;----------------------------------------------------------------------<br />\n&nbsp;| &nbsp;Data and other attributes defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__hash__ = None</p>\n\n<p>&gt;&gt;&gt; help(dict)<br />\nHelp on class dict in module builtins:</p>\n\n<p>class dict(object)<br />\n&nbsp;| &nbsp;dict() -&gt; new empty dictionary<br />\n&nbsp;| &nbsp;dict(mapping) -&gt; new dictionary initialized from a mapping object&#39;s<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;(key, value) pairs<br />\n&nbsp;| &nbsp;dict(iterable) -&gt; new dictionary initialized as if via:<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;d = {}<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;for k, v in iterable:<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;d[k] = v<br />\n&nbsp;| &nbsp;dict(**kwargs) -&gt; new dictionary initialized with the name=value pairs<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;in the keyword argument list. &nbsp;For example: &nbsp;dict(one=1, two=2)<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;Methods defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__contains__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;True if D has a key k, else False.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__delitem__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Delete self[key].<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__eq__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self==value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ge__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getattribute__(self, name, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return getattr(self, name).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getitem__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;x.__getitem__(y) &lt;==&gt; x[y]<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__gt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__init__(self, /, *args, **kwargs)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Initialize self. &nbsp;See help(type(self)) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__iter__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement iter(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__le__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__len__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return len(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__lt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ne__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self!=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__new__(*args, **kwargs) from builtins.type<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Create and return a new object. &nbsp;See help(type) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__repr__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return repr(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__setitem__(self, key, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Set self[key] to value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__sizeof__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.__sizeof__() -&gt; size of D in memory, in bytes<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;clear(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.clear() -&gt; None. &nbsp;Remove all items from D.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;copy(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.copy() -&gt; a shallow copy of D<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;fromkeys(iterable, value=None, /) from builtins.type<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Returns a new dict with keys from iterable and values equal to value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;get(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.get(k[,d]) -&gt; D[k] if k in D, else d. &nbsp;d defaults to None.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;items(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.items() -&gt; a set-like object providing a view on D&#39;s items<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;keys(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.keys() -&gt; a set-like object providing a view on D&#39;s keys<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;pop(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.pop(k[,d]) -&gt; v, remove specified key and return the corresponding value.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;If key is not found, d is returned if given, otherwise KeyError is raised<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;popitem(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.popitem() -&gt; (k, v), remove and return some (key, value) pair as a<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;2-tuple; but raise KeyError if D is empty.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;setdefault(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.setdefault(k[,d]) -&gt; D.get(k,d), also set D[k]=d if k not in D<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;update(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.update([E, ]**F) -&gt; None. &nbsp;Update D from dict/iterable E and F.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;If E is present and has a .keys() method, then does: &nbsp;for k in E: D[k] = E[k]<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;If E is present and lacks a .keys() method, then does: &nbsp;for k, v in E: D[k] = v<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;In either case, this is followed by: for k in F: &nbsp;D[k] = F[k]<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;values(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;D.values() -&gt; an object providing a view on D&#39;s values<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;----------------------------------------------------------------------<br />\n&nbsp;| &nbsp;Data and other attributes defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__hash__ = None</p>\n\n<p>&gt;&gt;&gt; help(print)<br />\nHelp on built-in function print in module builtins:</p>\n\n<p>print(...)<br />\n&nbsp; &nbsp; print(value, ..., sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)</p>\n\n<p>&nbsp; &nbsp; Prints the values to a stream, or to sys.stdout by default.<br />\n&nbsp; &nbsp; Optional keyword arguments:<br />\n&nbsp; &nbsp; file: &nbsp;a file-like object (stream); defaults to the current sys.stdout.<br />\n&nbsp; &nbsp; sep: &nbsp; string inserted between values, default a space.<br />\n&nbsp; &nbsp; end: &nbsp; string appended after the last value, default a newline.<br />\n&nbsp; &nbsp; flush: whether to forcibly flush the stream.</p>\n\n<p>&gt;&gt;&gt; help([1, 2, 3])<br />\nHelp on list object:</p>\n\n<p>class list(object)<br />\n&nbsp;| &nbsp;list() -&gt; new empty list<br />\n&nbsp;| &nbsp;list(iterable) -&gt; new list initialized from iterable&#39;s items<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;Methods defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__add__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self+value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__contains__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return key in self.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__delitem__(self, key, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Delete self[key].<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__eq__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self==value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ge__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getattribute__(self, name, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return getattr(self, name).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__getitem__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;x.__getitem__(y) &lt;==&gt; x[y]<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__gt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&gt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__iadd__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement self+=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__imul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement self*=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__init__(self, /, *args, **kwargs)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Initialize self. &nbsp;See help(type(self)) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__iter__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Implement iter(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__le__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__len__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return len(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__lt__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self&lt;value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__mul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self*value.n<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__ne__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self!=value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__new__(*args, **kwargs) from builtins.type<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Create and return a new object. &nbsp;See help(type) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__repr__(self, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return repr(self).<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__reversed__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.__reversed__() -- return a reverse iterator over the list<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__rmul__(self, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Return self*value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__setitem__(self, key, value, /)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Set self[key] to value.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__sizeof__(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.__sizeof__() -- size of L in memory, in bytes<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;append(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.append(object) -&gt; None -- append object to end<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;clear(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.clear() -&gt; None -- remove all items from L<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;copy(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.copy() -&gt; list -- a shallow copy of L<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;count(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.count(value) -&gt; integer -- return number of occurrences of value<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;extend(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.extend(iterable) -&gt; None -- extend list by appending elements from the iterable<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;index(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.index(value, [start, [stop]]) -&gt; integer -- return first index of value.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises ValueError if the value is not present.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;insert(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.insert(index, object) -- insert object before index<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;pop(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.pop([index]) -&gt; item -- remove and return item at index (default last).<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises IndexError if list is empty or index is out of range.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;remove(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.remove(value) -&gt; None -- remove first occurrence of value.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Raises ValueError if the value is not present.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;reverse(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.reverse() -- reverse *IN PLACE*<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;sort(...)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;L.sort(key=None, reverse=False) -&gt; None -- stable sort *IN PLACE*<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;----------------------------------------------------------------------<br />\n&nbsp;| &nbsp;Data and other attributes defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__hash__ = None</p>\n\n<p>&gt;&gt;&gt; help(&#39;random thing&#39;)<br />\nNo Python documentation found for &#39;random thing&#39;.<br />\nUse help() to get the interactive help utility.<br />\nUse help(str) for help on the str class.</p>\n\n<p>&gt;&gt;&gt; help(&#39;print&#39;)<br />\nHelp on built-in function print in module builtins:</p>\n\n<p>print(...)<br />\n&nbsp; &nbsp; print(value, ..., sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)</p>\n\n<p>&nbsp; &nbsp; Prints the values to a stream, or to sys.stdout by default.<br />\n&nbsp; &nbsp; Optional keyword arguments:<br />\n&nbsp; &nbsp; file: &nbsp;a file-like object (stream); defaults to the current sys.stdout.<br />\n&nbsp; &nbsp; sep: &nbsp; string inserted between values, default a space.<br />\n&nbsp; &nbsp; end: &nbsp; string appended after the last value, default a newline.<br />\n&nbsp; &nbsp; flush: whether to forcibly flush the stream.</p>\n\n<p>&gt;&gt;&gt; help(&#39;def&#39;)<br />\nFunction definitions<br />\n********************</p>\n\n<p>A function definition defines a user-defined function object (see<br />\nsection The standard type hierarchy):</p>\n\n<p>&nbsp; &nbsp;funcdef &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ::= [decorators] &quot;def&quot; funcname &quot;(&quot; [parameter_list] &quot;)&quot; [&quot;-&gt;&quot; expression] &quot;:&quot; suite<br />\n&nbsp; &nbsp;decorators &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::= decorator+<br />\n&nbsp; &nbsp;decorator &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ::= &quot;@&quot; dotted_name [&quot;(&quot; [argument_list [&quot;,&quot;]] &quot;)&quot;] NEWLINE<br />\n&nbsp; &nbsp;dotted_name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ::= identifier (&quot;.&quot; identifier)*<br />\n&nbsp; &nbsp;parameter_list &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::= defparameter (&quot;,&quot; defparameter)* [&quot;,&quot; [parameter_list_starargs]]<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | parameter_list_starargs<br />\n&nbsp; &nbsp;parameter_list_starargs ::= &quot;*&quot; [parameter] (&quot;,&quot; defparameter)* [&quot;,&quot; [&quot;**&quot; parameter [&quot;,&quot;]]]<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &quot;**&quot; parameter [&quot;,&quot;]<br />\n&nbsp; &nbsp;parameter &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ::= identifier [&quot;:&quot; expression]<br />\n&nbsp; &nbsp;defparameter &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::= parameter [&quot;=&quot; expression]<br />\n&nbsp; &nbsp;funcname &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;::= identifier</p>\n\n<p>A function definition is an executable statement. &nbsp;Its execution binds<br />\nthe function name in the current local namespace to a function object<br />\n(a wrapper around the executable code for the function). &nbsp;This<br />\nfunction object contains a reference to the current global namespace<br />\nas the global namespace to be used when the function is called.</p>\n\n<p>The function definition does not execute the function body; this gets<br />\nexecuted only when the function is called. [3]</p>\n\n<p>A function definition may be wrapped by one or more *decorator*<br />\nexpressions. Decorator expressions are evaluated when the function is<br />\ndefined, in the scope that contains the function definition. &nbsp;The<br />\nresult must be a callable, which is invoked with the function object<br />\nas the only argument. The returned value is bound to the function name<br />\ninstead of the function object. &nbsp;Multiple decorators are applied in<br />\nnested fashion. For example, the following code</p>\n\n<p>&nbsp; &nbsp;@f1(arg)<br />\n&nbsp; &nbsp;@f2<br />\n&nbsp; &nbsp;def func(): pass</p>\n\n<p>is roughly equivalent to</p>\n\n<p>&nbsp; &nbsp;def func(): pass<br />\n&nbsp; &nbsp;func = f1(arg)(f2(func))</p>\n\n<p>except that the original function is not temporarily bound to the name<br />\n&quot;func&quot;.</p>\n\n<p>When one or more *parameters* have the form *parameter* &quot;=&quot;<br />\n*expression*, the function is said to have &quot;default parameter values.&quot;<br />\nFor a parameter with a default value, the corresponding *argument* may<br />\nbe omitted from a call, in which case the parameter&#39;s default value is<br />\nsubstituted. &nbsp;If a parameter has a default value, all following<br />\nparameters up until the &quot;&quot;*&quot;&quot; must also have a default value --- this<br />\nis a syntactic restriction that is not expressed by the grammar.</p>\n\n<p>**Default parameter values are evaluated from left to right when the<br />\nfunction definition is executed.** This means that the expression is<br />\nevaluated once, when the function is defined, and that the same &quot;pre-<br />\ncomputed&quot; value is used for each call. &nbsp;This is especially important<br />\nto understand when a default parameter is a mutable object, such as a<br />\nlist or a dictionary: if the function modifies the object (e.g. by<br />\nappending an item to a list), the default value is in effect modified.<br />\nThis is generally not what was intended. &nbsp;A way around this is to use<br />\n&quot;None&quot; as the default, and explicitly test for it in the body of the<br />\nfunction, e.g.:</p>\n\n<p>&nbsp; &nbsp;def whats_on_the_telly(penguin=None):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;if penguin is None:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;penguin = []<br />\n&nbsp; &nbsp; &nbsp; &nbsp;penguin.append(&quot;property of the zoo&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;return penguin</p>\n\n<p>Function call semantics are described in more detail in section Calls.<br />\nA function call always assigns values to all parameters mentioned in<br />\nthe parameter list, either from position arguments, from keyword<br />\narguments, or from default values. &nbsp;If the form &quot;&quot;*identifier&quot;&quot; is<br />\npresent, it is initialized to a tuple receiving any excess positional<br />\nparameters, defaulting to the empty tuple. If the form<br />\n&quot;&quot;**identifier&quot;&quot; is present, it is initialized to a new ordered<br />\nmapping receiving any excess keyword arguments, defaulting to a new<br />\nempty mapping of the same type. &nbsp;Parameters after &quot;&quot;*&quot;&quot; or<br />\n&quot;&quot;*identifier&quot;&quot; are keyword-only parameters and may only be passed<br />\nused keyword arguments.</p>\n\n<p>Parameters may have annotations of the form &quot;&quot;: expression&quot;&quot; following<br />\nthe parameter name. &nbsp;Any parameter may have an annotation even those<br />\nof the form &quot;*identifier&quot; or &quot;**identifier&quot;. &nbsp;Functions may have<br />\n&quot;return&quot; annotation of the form &quot;&quot;-&gt; expression&quot;&quot; after the parameter<br />\nlist. &nbsp;These annotations can be any valid Python expression and are<br />\nevaluated when the function definition is executed. &nbsp;Annotations may<br />\nbe evaluated in a different order than they appear in the source code.<br />\nThe presence of annotations does not change the semantics of a<br />\nfunction. &nbsp;The annotation values are available as values of a<br />\ndictionary keyed by the parameters&#39; names in the &quot;__annotations__&quot;<br />\nattribute of the function object.</p>\n\n<p>It is also possible to create anonymous functions (functions not bound<br />\nto a name), for immediate use in expressions. &nbsp;This uses lambda<br />\nexpressions, described in section Lambdas. &nbsp;Note that the lambda<br />\nexpression is merely a shorthand for a simplified function definition;<br />\na function defined in a &quot;&quot;def&quot;&quot; statement can be passed around or<br />\nassigned to another name just like a function defined by a lambda<br />\nexpression. &nbsp;The &quot;&quot;def&quot;&quot; form is actually more powerful since it<br />\nallows the execution of multiple statements and annotations.</p>\n\n<p>**Programmer&#39;s note:** Functions are first-class objects. &nbsp;A &quot;&quot;def&quot;&quot;<br />\nstatement executed inside a function definition defines a local<br />\nfunction that can be returned or passed around. &nbsp;Free variables used<br />\nin the nested function can access the local variables of the function<br />\ncontaining the def. &nbsp;See section Naming and binding for details.</p>\n\n<p>See also:</p>\n\n<p>&nbsp; **PEP 3107** - Function Annotations<br />\n&nbsp; &nbsp; &nbsp;The original specification for function annotations.</p>\n\n<p>&gt;&gt;&gt; import math<br />\n&gt;&gt;&gt; help(&#39;math.pow&#39;)<br />\nHelp on built-in function pow in math:</p>\n\n<p>math.pow = pow(...)<br />\n&nbsp; &nbsp; pow(x, y)</p>\n\n<p>&nbsp; &nbsp; Return x**y (x to the power of y).</p>\n\n<p>help()</p>\n\n<p>Welcome to Python 3.6&#39;s help utility!</p>\n\n<p>If this is your first time using Python, you should definitely check out<br />\nthe tutorial on the Internet at http://docs.python.org/3.6/tutorial/.</p>\n\n<p>Enter the name of any module, keyword, or topic to get help on writing<br />\nPython programs and using Python modules. &nbsp;To quit this help utility and<br />\nreturn to the interpreter, just type &quot;quit&quot;.</p>\n\n<p>To get a list of available modules, keywords, symbols, or topics, type<br />\n&quot;modules&quot;, &quot;keywords&quot;, &quot;symbols&quot;, or &quot;topics&quot;. &nbsp;Each module also comes<br />\nwith a one-line summary of what it does; to list the modules whose name<br />\nor summary contain a given string such as &quot;spam&quot;, type &quot;modules spam&quot;.</p>\n\n<p>&gt;&gt;&gt; help(math)<br />\nHelp on built-in module math:</p>\n\n<p>NAME<br />\n&nbsp; &nbsp; math</p>\n\n<p>DESCRIPTION<br />\n&nbsp; &nbsp; This module is always available. &nbsp;It provides access to the<br />\n&nbsp; &nbsp; mathematical functions defined by the C standard.</p>\n\n<p>FUNCTIONS<br />\n&nbsp; &nbsp; acos(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; acos(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the arc cosine (measured in radians) of x.</p>\n\n<p>&nbsp; &nbsp; acosh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; acosh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the inverse hyperbolic cosine of x.</p>\n\n<p>&nbsp; &nbsp; asin(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; asin(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the arc sine (measured in radians) of x.</p>\n\n<p>&nbsp; &nbsp; asinh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; asinh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the inverse hyperbolic sine of x.</p>\n\n<p>&nbsp; &nbsp; atan(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; atan(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the arc tangent (measured in radians) of x.</p>\n\n<p>&nbsp; &nbsp; atan2(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; atan2(y, x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the arc tangent (measured in radians) of y/x.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; Unlike atan(y/x), the signs of both x and y are considered.</p>\n\n<p>&nbsp; &nbsp; atanh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; atanh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the inverse hyperbolic tangent of x.</p>\n\n<p>&nbsp; &nbsp; ceil(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ceil(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the ceiling of x as an Integral.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; This is the smallest integer &gt;= x.</p>\n\n<p>&nbsp; &nbsp; copysign(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; copysign(x, y)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return a float with the magnitude (absolute value) of x but the sign<br />\n&nbsp; &nbsp; &nbsp; &nbsp; of y. On platforms that support signed zeros, copysign(1.0, -0.0)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; returns -1.0.</p>\n\n<p>&nbsp; &nbsp; cos(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; cos(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the cosine of x (measured in radians).</p>\n\n<p>&nbsp; &nbsp; cosh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; cosh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the hyperbolic cosine of x.</p>\n\n<p>&nbsp; &nbsp; degrees(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; degrees(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Convert angle x from radians to degrees.</p>\n\n<p>&nbsp; &nbsp; erf(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; erf(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Error function at x.</p>\n\n<p>&nbsp; &nbsp; erfc(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; erfc(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Complementary error function at x.</p>\n\n<p>&nbsp; &nbsp; exp(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; exp(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return e raised to the power of x.</p>\n\n<p>&nbsp; &nbsp; expm1(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; expm1(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return exp(x)-1.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.</p>\n\n<p>&nbsp; &nbsp; fabs(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; fabs(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the absolute value of the float x.</p>\n\n<p>&nbsp; &nbsp; factorial(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; factorial(x) -&gt; Integral</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Find x!. Raise a ValueError if x is negative or non-integral.</p>\n\n<p>&nbsp; &nbsp; floor(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; floor(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the floor of x as an Integral.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; This is the largest integer &lt;= x.</p>\n\n<p>&nbsp; &nbsp; fmod(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; fmod(x, y)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return fmod(x, y), according to platform C. &nbsp;x % y may differ.</p>\n\n<p>&nbsp; &nbsp; frexp(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; frexp(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the mantissa and exponent of x, as pair (m, e).<br />\n&nbsp; &nbsp; &nbsp; &nbsp; m is a float and e is an int, such that x = m * 2.**e.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If x is 0, m and e are both 0. &nbsp;Else 0.5 &lt;= abs(m) &lt; 1.0.</p>\n\n<p>&nbsp; &nbsp; fsum(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; fsum(iterable)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return an accurate floating point sum of values in the iterable.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; Assumes IEEE-754 floating point arithmetic.</p>\n\n<p>&nbsp; &nbsp; gamma(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; gamma(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Gamma function at x.</p>\n\n<p>&nbsp; &nbsp; gcd(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; gcd(x, y) -&gt; int<br />\n&nbsp; &nbsp; &nbsp; &nbsp; greatest common divisor of x and y</p>\n\n<p>&nbsp; &nbsp; hypot(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; hypot(x, y)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the Euclidean distance, sqrt(x*x + y*y).</p>\n\n<p>&nbsp; &nbsp; isclose(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0) -&gt; bool</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Determine whether two floating point numbers are close in value.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rel_tol<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;maximum difference for being considered &quot;close&quot;, relative to the<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;magnitude of the input values<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; abs_tol<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;maximum difference for being considered &quot;close&quot;, regardless of the<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;magnitude of the input values</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return True if a is close in value to b, and False otherwise.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; For the values to be considered close, the difference between them<br />\n&nbsp; &nbsp; &nbsp; &nbsp; must be smaller than at least one of the tolerances.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; -inf, inf and NaN behave similarly to the IEEE 754 Standard. &nbsp;That<br />\n&nbsp; &nbsp; &nbsp; &nbsp; is, NaN is not close to anything, even itself. &nbsp;inf and -inf are<br />\n&nbsp; &nbsp; &nbsp; &nbsp; only close to themselves.</p>\n\n<p>&nbsp; &nbsp; isfinite(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; isfinite(x) -&gt; bool</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return True if x is neither an infinity nor a NaN, and False otherwise.</p>\n\n<p>&nbsp; &nbsp; isinf(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; isinf(x) -&gt; bool</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return True if x is a positive or negative infinity, and False otherwise.</p>\n\n<p>&nbsp; &nbsp; isnan(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; isnan(x) -&gt; bool</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return True if x is a NaN (not a number), and False otherwise.</p>\n\n<p>&nbsp; &nbsp; ldexp(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ldexp(x, i)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return x * (2**i).</p>\n\n<p>&nbsp; &nbsp; lgamma(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; lgamma(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Natural logarithm of absolute value of Gamma function at x.</p>\n\n<p>&nbsp; &nbsp; log(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; log(x[, base])</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the logarithm of x to the given base.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If the base not specified, returns the natural logarithm (base e) of x.</p>\n\n<p>&nbsp; &nbsp; log10(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; log10(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the base 10 logarithm of x.</p>\n\n<p>&nbsp; &nbsp; log1p(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; log1p(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the natural logarithm of 1+x (base e).<br />\n&nbsp; &nbsp; &nbsp; &nbsp; The result is computed in a way which is accurate for x near zero.</p>\n\n<p>&nbsp; &nbsp; log2(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; log2(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the base 2 logarithm of x.</p>\n\n<p>&nbsp; &nbsp; modf(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; modf(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the fractional and integer parts of x. &nbsp;Both results carry the sign<br />\n&nbsp; &nbsp; &nbsp; &nbsp; of x and are floats.</p>\n\n<p>&nbsp; &nbsp; pow(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pow(x, y)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return x**y (x to the power of y).</p>\n\n<p>&nbsp; &nbsp; radians(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; radians(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Convert angle x from degrees to radians.</p>\n\n<p>&nbsp; &nbsp; sin(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; sin(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the sine of x (measured in radians).</p>\n\n<p>&nbsp; &nbsp; sinh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; sinh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the hyperbolic sine of x.</p>\n\n<p>&nbsp; &nbsp; sqrt(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; sqrt(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the square root of x.</p>\n\n<p>&nbsp; &nbsp; tan(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; tan(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the tangent of x (measured in radians).</p>\n\n<p>&nbsp; &nbsp; tanh(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; tanh(x)</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Return the hyperbolic tangent of x.</p>\n\n<p>&nbsp; &nbsp; trunc(...)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; trunc(x:Real) -&gt; Integral</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; Truncates x to the nearest Integral toward 0. Uses the __trunc__ magic method.</p>\n\n<p>DATA<br />\n&nbsp; &nbsp; e = 2.718281828459045<br />\n&nbsp; &nbsp; inf = inf<br />\n&nbsp; &nbsp; nan = nan<br />\n&nbsp; &nbsp; pi = 3.141592653589793<br />\n&nbsp; &nbsp; tau = 6.283185307179586</p>\n\n<p>FILE<br />\n&nbsp; &nbsp; (built-in)</p>\n","0"),
("330","hex()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje liczbÄ™ z systemu dziesiÄ™tnego (decimal) do szesnastkowego (hex lub zwany teÅ¼&nbsp;hexadecimal)</p>\n\n<p>5 -&gt; 5</p>\n\n<p>11 -&gt; B</p>\n","<p>hex(5) # 5</p>\n\n<p>hex(11) # B</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/hex_table.jpg\" style=\"height:666px; width:847px\" /></p>\n","0"),
("331","id()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci&nbsp;identity (unique integer) danego obiektu.</p>\n\n<p>5 -&gt;&nbsp;<samp>140472391630016</samp></p>\n\n<p>a = 5&nbsp;-&gt;&nbsp;<samp>140472391630016</samp></p>\n\n<p>b = a -&gt;&nbsp;<samp>140472391630016</samp></p>\n\n<p>c = 5.0&nbsp;-&gt;&nbsp;<samp>140472372786520</samp></p>\n","<p>id(5) #&nbsp;<samp>140472391630016</samp></p>\n\n<p>a = 5<br />\nid(a) #&nbsp;<samp>140472391630016</samp></p>\n\n<p>b = a<br />\nid(b) #&nbsp;<samp>140472395630516</samp></p>\n\n<p>c = 5.0<br />\nid(c) #&nbsp;<samp>140472391630016</samp></p>\n","0"),
("332","input()","<p>UÅ¼yj funkcji kt&oacute;ra odczyta wartoÅ›c wprowadzonÄ… przez uÅ¼ytkownika w konsoli pythona, opcjonalnie moÅ¼e przyjmowaÄ‡ atrybut ktory jest wyÅ›wietlanÄ… wiadomoÅ›ciÄ… dla uÅ¼ytkownika.</p>\n","<p>&gt;&gt;&gt; a = input()<br />\nWiedza<br />\n&gt;&gt;&gt; a<br />\n&#39;Wiedza&#39;</p>\n\n<p>&gt;&gt;&gt; a = input(&quot;Wpisz dowolne sÅ‚owo: &quot;)<br />\nWpisz dowolne sÅ‚owo: Kotek<br />\n&gt;&gt;&gt; a<br />\n&#39;Kotek&#39;</p>\n","0"),
("333","int()","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje podane typy danych na int, lub jeÅ¼eli nie poda siÄ™ Å¼adnego argumentu funkcji to wyÅ›wietli 0</p>\n\n<p>() -&gt; 0</p>\n\n<p>&#39;1&#39; -&gt; 1</p>\n\n<p>(&#39;1010&#39;, 2) -&gt; 10</p>\n","<p>int() # 0</p>\n\n<p># Ineteger</p>\n\n<p>int(1) # 1<br />\nint(&#39;1&#39;) # 1<br />\nint(25.5) # 25</p>\n\n<p>#&nbsp;binary 0b lub 0B<br />\nint(&#39;1010&#39;, 2) # 10<br />\nint(&#39;0b1010&#39;, 2) # 10</p>\n\n<p># octal 0o lub 0O<br />\nint(&#39;12&#39;, 8) # 10<br />\nint(&#39;0o12&#39;, 8) # 10</p>\n\n<p>#&nbsp;hexadecimal<br />\nint(&#39;A&#39;, 16) # 10<br />\nint(&#39;0xA&#39;, 16) # 10</p>\n","0"),
("334","isinstance()","<p>UÅ¼yj funkcji kt&oacute;ra przyjmuje dwa argumenty obiekt oraz typ obiektu i zwaraca True jeÅ¼eli podany obiekt i typ obiektu siÄ™ zgadzajÄ….</p>\n\n<pre>\n<samp>[1, 2, 3] instance of list? -&gt; True\n[1, 2, 3] instance of dict? -&gt; False\n[1, 2, 3] instance of dict or list? -&gt; True\n5 instance of list? -&gt; False\n5 instance of int? -&gt; True</samp></pre>\n","<p>numbers = [1, 2, 3]</p>\n\n<p>result = isinstance(numbers, list)<br />\nprint(numbers,&#39;instance of list?&#39;, result)</p>\n\n<p>result = isinstance(numbers, dict)<br />\nprint(numbers,&#39;instance of dict?&#39;, result)</p>\n\n<p>result = isinstance(numbers, (dict, list))<br />\nprint(numbers,&#39;instance of dict or list?&#39;, result)</p>\n\n<p>number = 5</p>\n\n<p>result = isinstance(number, list)<br />\nprint(number,&#39;instance of list?&#39;, result)</p>\n\n<p>result = isinstance(number, int)<br />\nprint(number,&#39;instance of int?&#39;, result)</p>\n","0"),
("335","issubclass()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci True jeÅ¼eli podana podklasa jest Å¼eczywuÅ›cie podklasÄ… klasy.&nbsp;</p>\n\n<p>class Polygon:<br />\n&nbsp; def __init__(polygonType):<br />\n&nbsp; &nbsp; print(&#39;Polygon is a &#39;, polygonType)</p>\n\n<p>class Triangle(Polygon):<br />\n&nbsp; def __init__(self):<br />\n&nbsp; &nbsp; Polygon.__init__(&#39;triangle&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\n(Triangle, Polygon) -&gt; True</p>\n","<p>class Polygon:<br />\n&nbsp; def __init__(polygonType):<br />\n&nbsp; &nbsp; print(&#39;Polygon is a &#39;, polygonType)</p>\n\n<p>class Triangle(Polygon):<br />\n&nbsp; def __init__(self):<br />\n&nbsp; &nbsp; Polygon.__init__(&#39;triangle&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\nprint(issubclass(Triangle, Polygon))</p>\n","0"),
("336","iter()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y iteator listy.</p>\n\n<p><strong># Iterator</strong>&nbsp;&ndash; obiekt pozwalajÄ…cy na sekwencyjny dostÄ™p do wszystkich element&oacute;w lub czÄ™Å›ci zawartych w innym obiekcie</p>\n\n<p>vowels = [&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</p>\n\n<p>&nbsp;</p>\n","<p># lista<br />\nvowels = [&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</p>\n\n<p>vowelsIter = iter(vowels)</p>\n\n<p>next(vowelsIter) # a</p>\n\n<p>next(vowelsIter) # e</p>\n\n<p>next(vowelsIter) # i</p>\n\n<p>next(vowelsIter) # o</p>\n\n<p>next(vowelsIter) # u</p>\n","0"),
("337","len()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze iloÅ›c element&oacute;w obiektu</p>\n\n<p>testList = [] &nbsp;# 0</p>\n\n<p>testList = [1, 2, 3] # 3</p>\n\n<p>testTuple = (1, 2, 3) # 3</p>\n\n<p>testRange = range(1, 10) # 9</p>\n","<p>testList = []<br />\nlen(testList) # 0</p>\n\n<p>testList = [1, 2, 3]</p>\n\n<p>len(testList) # 3</p>\n\n<p>testTuple = (1, 2, 3)</p>\n\n<p>len(testTuple) # 3</p>\n\n<p>testRange = range(1, 10)</p>\n\n<p>len(testRange) # 9</p>\n","0"),
("338","list()","<p>Uzyj funkcji kt&oacute;ra przekonwertuje obiekt na listÄ™</p>\n\n<p># empty list</p>\n\n<p>() -&gt;&nbsp;<samp>[]</samp></p>\n\n<p>&#39;aeiou&#39; -&gt;&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p>(&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;) -&gt;&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;] -&gt;&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p>{&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;} -&gt;&nbsp;<samp>[&#39;a&#39;, &#39;o&#39;, &#39;u&#39;, &#39;e&#39;, &#39;i&#39;]</samp></p>\n\n<p>{&#39;a&#39;: 1, &#39;e&#39;: 2, &#39;i&#39;: 3, &#39;o&#39;:4, &#39;u&#39;:5} -&gt;&nbsp;<samp>[&#39;o&#39;, &#39;e&#39;, &#39;a&#39;, &#39;u&#39;, &#39;i&#39;]</samp></p>\n","<p># empty list</p>\n\n<p>list() #&nbsp;<samp>[]</samp></p>\n\n<p># vowel string<br />\nvowelString = &#39;aeiou&#39;<br />\nlist(vowelString) #&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p># vowel tuple<br />\nvowelTuple = (&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;)<br />\nlist(vowelTuple) #&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p># vowel list<br />\nvowelList = [&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]<br />\nlist(vowelList) #&nbsp;<samp>[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;]</samp></p>\n\n<p># vowel set<br />\nvowelSet = {&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;}<br />\nlist(vowelSet) #&nbsp;<samp>[&#39;a&#39;, &#39;o&#39;, &#39;u&#39;, &#39;e&#39;, &#39;i&#39;]</samp></p>\n\n<p># vowel dictionary<br />\nvowelDictionary = {&#39;a&#39;: 1, &#39;e&#39;: 2, &#39;i&#39;: 3, &#39;o&#39;:4, &#39;u&#39;:5}<br />\nlist(vowelDictionary) #&nbsp;<samp>[&#39;o&#39;, &#39;e&#39;, &#39;a&#39;, &#39;u&#39;, &#39;i&#39;]</samp></p>\n","0"),
("339","locals()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze wszystkie informacje na temat lokalnych wartoÅ›ci takie jak&nbsp;zmienne, metody, klasy</p>\n","<p>def localsNotPresent():<br />\n&nbsp; &nbsp; return locals()</p>\n\n<p>def localsPresent():<br />\n&nbsp; &nbsp; present = True<br />\n&nbsp; &nbsp; return locals()</p>\n\n<p>print(&#39;localsNotPresent:&#39;, localsNotPresent())<br />\nprint(&#39;localsPresent:&#39;, localsPresent())</p>\n","0"),
("340","map()","<p>UÅ¼yj funkcji kt&oacute;ra wykona podanÄ… funkcjÄ™ na kaÅ¼dym elemencie listy</p>\n\n<p>def calculateSquare(n):<br />\n&nbsp; return n*n</p>\n\n<p>(1, 2, 3, 4) -&gt; (1, 4, 9, 16)</p>\n","<p>def calculateSquare(n):<br />\n&nbsp; return n*n</p>\n\n<p>numbers = (1, 2, 3, 4)<br />\nresult = map(calculateSquare, numbers)<br />\nresult # &lt;map object at 0x7f722da129e8</p>\n\n<p>numbersSquare = tuple(result)<br />\nnumbersSquare # (1, 4, 9, 16)</p>\n","0"),
("341","max()","<pre>\nUÅ¼yj funkcji kt&oacute;ra poda najwiÄ™kszy podany atrybut funkcji lub najwiekszÄ… wartoÅ›Ä‡ w iterable\n</pre>\n","<p># using max(arg1, arg2, *args)<br />\nmax(1, 3, 2, 5, 4) # 5</p>\n\n<p># using max(iterable)<br />\nnum = [1, 3, 2, 8, 5, 10, 6]<br />\nmax(num) # 10</p>\n","0"),
("342","memoryview()","<p>UÅ¼yj funkcji kt&oacute;ra odczytuje wartoÅ›Ä‡ memory z obiektu</p>\n\n<pre>\n(b&#39;abcefg&#39;) -&gt; memory at 0x01EA6780</pre>\n","<p>v = memoryview(b&#39;abcefg&#39;)<br />\nv # memory at 0x01EA6780</p>\n\n<p>v[1] # 98</p>\n\n<p>v[2] # 99</p>\n\n<p>v[3] # 101</p>\n\n<p>v[4] # 102</p>\n\n<p>v[5] # 103</p>\n\n<p>bytes(v) #&nbsp;b&#39;abcefg&#39;</p>\n","0"),
("343","min()","<pre>\nUÅ¼yj funkcji kt&oacute;ra poda najmniejszy podany atrybut funkcji lub najmniejszÄ… wartoÅ›Ä‡ w iterable</pre>\n","<p># using max(arg1, arg2, *args)<br />\nmin(1, 3, 2, 5, 4) # 1</p>\n\n<p># using max(iterable)<br />\nnum = [1, 3, 2, 8, 5, 10, 6]<br />\nmin(num) # 1</p>\n","0"),
("344","next()","<p>UÅ¼yj funkcji kt&oacute;ra poda kolejne wartoÅ›ci z&nbsp;iteratora&nbsp;</p>\n\n<p>random = [5, 9, &#39;cat&#39;]<br />\nrandomIterator = iter(random)<br />\nrandomIterator #&nbsp;<samp>&lt;list_iterator object at 0x7feb49032b00&gt;</samp></p>\n\n<p>next(randomIterator) # 5</p>\n","","0"),
("345","object()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y obiekt (obiekt featureless czyli obiekt tylko z rzeczami typu&nbsp;<samp>&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39; itd.</samp></p>\n","<p>test = object()</p>\n\n<p>type(test)&nbsp;#&nbsp;<samp>&lt;class &#39;object&#39;&gt;</samp></p>\n\n<p>dir(test) #&nbsp;<samp>[&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;]</samp></p>\n","0"),
("346","oct()","<p>UÅ¼yj funkcji kt&oacute;ra zamieni wartoÅ›c z systemu liczbowego decimal,&nbsp;hexadecimal, binary na system octogonalny (&oacute;semkowy).</p>\n\n<p># decimal number<br />\n10 -&gt; <samp>0o12</samp></p>\n\n<p># binary number<br />\n0b101 -&gt;&nbsp;<samp>0o5</samp></p>\n\n<p># hexadecimal number<br />\n0XA -&gt;&nbsp;<samp>0o12</samp></p>\n\n<p><samp><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/hex_table.jpg\" style=\"height:666px; width:847px\" /></samp></p>\n","<p># decimal number<br />\noct(10)) #&nbsp;<samp>0o12</samp></p>\n\n<p># binary number<br />\noct(0b101)) #&nbsp;<samp>0o5</samp></p>\n\n<p># hexadecimal number<br />\noct(0XA)) #&nbsp;<samp>0o12</samp></p>\n","0"),
("347","open()","<p>Uzyj funkcji kt&oacute;ra otwoÅ¼y podany plik (funckja ta domyÅ›lnie wpisuje typ otwierania na read jeÅ¼eli nie poda siÄ™ inaczej)</p>\n\n<p>&nbsp;</p>\n","<p><code>#f = open(&quot;path_to_file&quot;, mode = &#39;r&#39;, encoding=&#39;utf-8&#39;)</code></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/open_mode.jpg\" /></p>\n\n<p>file = r&#39;C:UsersUserDesktop\\_aaaaa\\_Test.txt&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/General_Information/Bult in Functions/Test.txt.jpg\" style=\"height:476px; width:1280px\" /></p>\n\n<p>f = open(file)<br />\nf.readline() # &#39;String 1 &#39;<br />\nf.readline() # &#39;String 2 &#39;<br />\nf.readline() # &#39;String 3 &#39;<br />\nf.readline() # &#39;String 4&#39;</p>\n\n<p>f.readline() # &#39;&#39;</p>\n\n<p>f = open(file)</p>\n\n<p>f.read() # &#39;String 1 String 2 String 3 String 4&#39;</p>\n\n<p>print(f.read())</p>\n\n<p># String 1<br />\n# String 2<br />\n# String 3<br />\n# String 4&nbsp;</p>\n\n<p>f.close()</p>\n\n<p>&nbsp;</p>\n","0"),
("348","ord()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci numer&nbsp;na podstawie znaku ASCI</p>\n\n<p>a -&gt; 97</p>\n\n<p>0 -&gt; 48</p>\n","<p>ord(&#39;a&#39;) # 97</p>\n\n<p>ord(&#39;0&#39;) # 48</p>\n","0"),
("349","pow()","<p>UÅ¼yj funkcji kt&oacute;ra zpotÄ™guje podane dwie liczby i opcjonalnie przyjmuje 3 atrybut kt&oacute;rym jest liczba module.</p>\n\n<p>(2, 2) -&gt; 4</p>\n\n<p>(-2, 2) -&gt; 4 bo -2 * -2 = 4</p>\n\n<p>(2, -2) -&gt; 0.25 bo (1/2)**2 = 1/4</p>\n","<p>pow(2, 2) # 4</p>\n\n<p>pow(-2, 2) # 4 bo -2 * -2 = 4</p>\n\n<p>pow(2, -2) # 0.25 bo (1/2)**2 = 1/4</p>\n","0"),
("350","print()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze do konsolie podanÄ… w atrybucie wartoÅ›Ä‡.</p>\n\n<p>Kotek</p>\n","<p>print(&#39;Kotek&#39;)</p>\n","0"),
("351","property()","<p>UÅ¼yj funkcji kt&oacute;ra wzr&oacute;ci&nbsp;property attribute</p>\n\n<p>class Person:<br />\n&nbsp; &nbsp; def __init__(self, name):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self._name = name</p>\n\n<p>&nbsp; &nbsp; def getName(self):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Getting name&#39;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return self._name</p>\n\n<p>&nbsp; &nbsp; def setName(self, value):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Setting name to &#39; + value)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self._name = value</p>\n\n<p>&nbsp; &nbsp; def delName(self):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Deleting name&#39;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; del self._name</p>\n\n<p>p = Person(&#39;Adam&#39;)<br />\nprint(p.name)</p>\n\n<p>p.name = &#39;John&#39;</p>\n\n<p>del p.name</p>\n","<p>class Person:<br />\n&nbsp; &nbsp; def __init__(self, name):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self._name = name</p>\n\n<p>&nbsp; &nbsp; def getName(self):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Getting name&#39;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return self._name</p>\n\n<p>&nbsp; &nbsp; def setName(self, value):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Setting name to &#39; + value)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self._name = value</p>\n\n<p>&nbsp; &nbsp; def delName(self):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Deleting name&#39;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; del self._name</p>\n\n<p>&nbsp; &nbsp; # Set property to use getName, setName<br />\n&nbsp; &nbsp; # and delName methods<br />\n&nbsp; &nbsp; name = property(getName, setName, delName, &#39;Name property&#39;)</p>\n\n<p><br />\np = Person(&#39;Adam&#39;)<br />\nprint(p.name)</p>\n\n<p>p.name = &#39;John&#39;</p>\n\n<p>del p.name</p>\n","0"),
("352","range()","<p>UÅ¼yj funckji kt&oacute;ra wzr&oacute;ci sekwencjÄ™ liczb&nbsp;</p>\n\n<pre>\n(stop)\n(start, stop[, step])\n</pre>\n","<p>llist(range(0)) #&nbsp;<samp>[]</samp></p>\n\n<p>llist(range(10)) #&nbsp;<samp>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</samp></p>\n\n<p>llist(range(1, 10)) #&nbsp;<samp>[1, 2, 3, 4, 5, 6, 7, 8, 9]</samp></p>\n\n<p>list(range(2, 14, 2)) #&nbsp;<samp>[2, 4, 6, 8, 10, 12]</samp></p>\n\n<p><samp>list(range(2, -14, -2)) #&nbsp;[2, 0, -2, -4, -6, -8, -10, -12]</samp></p>\n\n<p>&nbsp;</p>\n","0"),
("353","repr()","<p>UÅ¼yj funckji kt&oacute;ra zwr&oacute;ci printable representation of the given object</p>\n\n<p>var = &#39;foo&#39;</p>\n\n<p>repr(var)</p>\n\n<p>class Person:<br />\n&nbsp; &nbsp; name = &#39;Adam&#39;</p>\n\n<p>&nbsp; &nbsp; def __repr__(self):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return repr(self.name)</p>\n\n<p>repr(Person())</p>\n\n<p>&nbsp;</p>\n\n<p>var -&gt;&nbsp;<samp>&quot;&#39;foo&#39;&quot;</samp></p>\n\n<p>Person() -&gt;&nbsp;<samp>&quot;&#39;Adam&#39;&quot;</samp></p>\n","","0"),
("354","reversed()","<p>UÅ¼yj funckcji kt&oacute;ra odwr&oacute;ci kolejnoÅ›c znak&oacute;w typ&oacute;w danych takich jak&nbsp;string, tuple, list and range.</p>\n\n<p># for string<br />\nseqString = &#39;Python&#39; -&gt;&nbsp;<samp>[&#39;n&#39;, &#39;o&#39;, &#39;h&#39;, &#39;t&#39;, &#39;y&#39;, &#39;P&#39;]</samp></p>\n\n<p># for tuple<br />\nseqTuple = (&#39;P&#39;, &#39;y&#39;, &#39;t&#39;, &#39;h&#39;, &#39;o&#39;, &#39;n&#39;)&nbsp; -&gt;&nbsp;<samp>[&#39;n&#39;, &#39;o&#39;, &#39;h&#39;, &#39;t&#39;, &#39;y&#39;, &#39;P&#39;]</samp></p>\n\n<p># for range<br />\nseqRange = range(5, 9)&nbsp; -&gt;&nbsp;<samp>[8, 7, 6, 5]</samp></p>\n\n<p># for list<br />\nseqList = [1, 2, 4, 3, 5] -&gt;&nbsp;<samp>[5, 3, 4, 2, 1]</samp></p>\n","<p># for string<br />\nseqString = &#39;Python&#39;<br />\nlist(reversed(seqString)) #&nbsp;<samp>[&#39;n&#39;, &#39;o&#39;, &#39;h&#39;, &#39;t&#39;, &#39;y&#39;, &#39;P&#39;]</samp></p>\n\n<p># for tuple<br />\nseqTuple = (&#39;P&#39;, &#39;y&#39;, &#39;t&#39;, &#39;h&#39;, &#39;o&#39;, &#39;n&#39;)<br />\nlist(reversed(seqTuple)) #&nbsp;<samp>[&#39;n&#39;, &#39;o&#39;, &#39;h&#39;, &#39;t&#39;, &#39;y&#39;, &#39;P&#39;]</samp></p>\n\n<p># for range<br />\nseqRange = range(5, 9)<br />\nlist(reversed(seqRange)) #&nbsp;<samp>[8, 7, 6, 5]</samp></p>\n\n<p># for list<br />\nseqList = [1, 2, 4, 3, 5]<br />\nllist(reversed(seqList)) #&nbsp;<samp>[5, 3, 4, 2, 1]</samp></p>\n","0"),
("355","round()","<p>UÅ¼yj funkcji kt&oacute;ra zaokrÄ…gli podanÄ… liczbÄ™ opcjonalnie moÅ¼na podaÄ‡ do ilu miejsc po przecinku ma byÄ‡ zaokrÄ…glona.<br />\n10 -&gt; 10<br />\n10.7 -&gt; 11<br />\n5.5 -&gt; 6</p>\n\n<p>(2.665,2) -&gt; 2.67<br />\n(2.675,2) -&gt; 2.67</p>\n","<p># for integers<br />\nround(10) # 10</p>\n\n<p># for floating point<br />\nround(10.7) # 11</p>\n\n<p># even choice<br />\nround(5.5)&nbsp;# 6</p>\n\n<p>round(2.665, 2)&nbsp;# 2.67</p>\n\n<p># cannot be represented exactly as float<br />\nround(2.675, 2) #&nbsp;2.67</p>\n","0"),
("356","set()","<p>Uzyj funkcji kt&oacute;ra stwoÅ¼y&nbsp;iterable.<br />\n<samp>() -&gt;&nbsp;set()<br />\n&#39;Python&#39; -&gt;&nbsp;{&#39;P&#39;, &#39;o&#39;, &#39;t&#39;, &#39;n&#39;, &#39;y&#39;, &#39;h&#39;}<br />\n(&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;) -&gt;&nbsp;{&#39;a&#39;, &#39;o&#39;, &#39;e&#39;, &#39;u&#39;, &#39;i&#39;}<br />\n[&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;] -&gt;&nbsp;{&#39;a&#39;, &#39;o&#39;, &#39;e&#39;, &#39;u&#39;, &#39;i&#39;}</samp></p>\n\n<p><samp>range(5) -&gt;&nbsp;{0, 1, 2, 3, 4}</samp></p>\n","<p><samp>set() #&nbsp;set()<br />\nset(&#39;Python&#39;) #&nbsp;{&#39;P&#39;, &#39;o&#39;, &#39;t&#39;, &#39;n&#39;, &#39;y&#39;, &#39;h&#39;}<br />\nset((&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;)) #&nbsp;{&#39;a&#39;, &#39;o&#39;, &#39;e&#39;, &#39;u&#39;, &#39;i&#39;}<br />\nset([&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;])&nbsp;#&nbsp;{&#39;a&#39;, &#39;o&#39;, &#39;e&#39;, &#39;u&#39;, &#39;i&#39;}<br />\nset(range(5)) #&nbsp;{0, 1, 2, 3, 4}</samp></p>\n","0"),
("357","setattr()","<p>UÅ¼yj funkcji kt&oacute;ra zmieni podany atrybut w klasie na danÄ… wartoÅ›Ä‡</p>\n\n<p>class Person:<br />\n&nbsp; &nbsp; name = &#39;Adam&#39;<br />\n&nbsp; &nbsp;&nbsp;<br />\np = Person()<br />\nprint(&#39;Before modification:&#39;, p.name) #&nbsp;<samp>Before modification: Adam</samp></p>\n\n<p># Zamiana zmiennej name na&nbsp;John</p>\n\n<p>print(&#39;After modification:&#39;, p.name) #&nbsp;<samp>After modification: John</samp></p>\n","","0"),
("358","slice()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ciÄ…g string, bytes, tuple, list lub range danego obiektu</p>\n\n<p># contains indices (0, 1, 2)</p>\n\n<p>(3) -&gt;&nbsp;<samp>slice(None, 3, None)</samp></p>\n\n<p>(1, 5, 2) -&gt;&nbsp;<samp>slice(1, 5, 2)</samp></p>\n","<p># contains indices (0, 1, 2)</p>\n\n<p>slice(3)<br />\nslice(1, 5, 2)</p>\n\n<p>pyString = &#39;Python&#39;<br />\nsObject = slice(3)</p>\n\n<p>pyString[sObject]<br />\nsObject = slice(1, 5, 2)</p>\n\n<p>pyString[sObject]</p>\n","0"),
("359","sorted()","<p>Uzyj funkcji kt&oacute;ra posortuje zbiur danych taki jak&nbsp;(string, tuple, list) lub collection (set, dictionary, frozen set) alfabetyczne lub odwrotnie (liczby od najmniejszej do najwiÄ™kszej lub odwrotnie)</p>\n\n<p>[&#39;e&#39;, &#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;c&#39;] -&gt; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</p>\n\n<p>&#39;eabdc&#39; -&gt;&nbsp;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</p>\n\n<p>(&#39;e&#39;, &#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;c&#39;) -&gt;&nbsp;[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</p>\n\n<p>(5, 3, 2, 4, 1) -&gt; [1, 2, 3, 4, 5]</p>\n\n<p>&nbsp;</p>\n","<p># vowels list<br />\npyList = [&#39;e&#39;, &#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;c&#39;]<br />\nprint(sorted(pyList))</p>\n\n<p># string&nbsp;<br />\npyString = &#39;eabdc&#39;<br />\nprint(sorted(pyString))</p>\n\n<p># vowels tuple<br />\npyTuple = (&#39;e&#39;, &#39;a&#39;, &#39;b&#39;, &#39;d&#39;, &#39;c&#39;)<br />\nprint(sorted(pyTuple))</p>\n\n<p># vowels tuple<br />\npyTuple = (5, 3, 2, 4, 1)<br />\nprint(sorted(pyTuple))</p>\n","0"),
("360","staticmethod()","<p>UÅ¼yj funkcji dziÄ™ki kt&oacute;rej bÄ™dzie moÅ¼liwe odwoÅ‚anie siÄ™ do statycznej metody, czyli odwoÅ‚anie sie do funkcji w klasie bez twoÅ¼enia obiewktu.</p>\n\n<p>Metoda statyczna albo metoda klasowa &ndash; metoda klasy, kt&oacute;ra nie jest wywoÅ‚ywana w kontekÅ›cie Å¼adnego konkretnego obiektu tej klasy. Metody statyczne z reguÅ‚y sÅ‚uÅ¼Ä… do obsÅ‚ugi skÅ‚adowych statycznych klas.</p>\n\n<p>class Mathematics:</p>\n\n<p>&nbsp; &nbsp; def addNumbers(x, y):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return x + y<br />\n# stwoÅ¼enie statyczne j metody&nbsp;addNumbers</p>\n\n<p>Mathematics.addNumbers(5, 10) # 15</p>\n","<p>class Mathematics:</p>\n\n<p>&nbsp; &nbsp; def addNumbers(x, y):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return x + y</p>\n\n<p># create addNumbers static method<br />\nMathematics.addNumbers = staticmethod(Mathematics.addNumbers)</p>\n\n<p>print(&#39;The sum is:&#39;, Mathematics.addNumbers(5, 10))</p>\n","0"),
("361","str()","<p>Uzyj funkcji kt&oacute;ra przekonwertoruje typy danych na str. Opcjonalnie jako drugi argument zabiera encoding a trzeci czy ma igrnorowaÄ‡ bÅ‚edy.</p>\n\n<p>10 -&gt; &#39;10&#39;</p>\n\n<p>&#39;10&#39; -&gt; &#39;10&#39;</p>\n\n<p><code>b = bytes(&#39;pyth&ouml;n&#39;, encoding=&#39;utf-8&#39;) </code></p>\n\n<p><code>(b, encoding=&#39;ascii&#39;, errors=&#39;ignore&#39;) -&gt;&nbsp;</code><samp>pythn</samp></p>\n\n<p>&nbsp;</p>\n","<p>str(10)</p>\n\n<p>str(&#39;10&#39;)</p>\n\n<pre>\n<code>b = bytes(&#39;pyth&ouml;n&#39;, encoding=&#39;utf-8&#39;)\n\nprint(str(b, encoding=&#39;ascii&#39;, errors=&#39;ignore&#39;))</code></pre>\n","0"),
("362","sum()","<p>UÅ¼yj funckji kt&oacute;ra zsumuje iterable i zwr&oacute;ci wynik opcjonalnie&nbsp;drugi argument podany w funkcji spowoduje dodanie zsumowanego iterable do liczby z drugiego atrybutu.</p>\n\n<p>#&nbsp;(iterable, start)</p>\n\n<p>numbers = [2.5, 3, 4, -5]</p>\n\n<p>numbers -&gt; 4.5<br />\n(numbers, 10) -&gt; 14.5<br />\n&nbsp;</p>\n","<p>numbers = [2.5, 3, 4, -5]</p>\n\n<p># start parameter is not provided<br />\nnumbersSum = sum(numbers)<br />\nprint(numbersSum)</p>\n\n<p># start = 10<br />\nnumbersSum = sum(numbers, 10)<br />\nprint(numbersSum)</p>\n","0"),
("363","super()","<p>UÅ¼yj funkcji dziÄ™ki kt&oacute;rej nie trzeba deklarowaÄ‡ klasy</p>\n\n<p>class Mammal():<br />\n&nbsp; def __init__(self, mammalName):<br />\n&nbsp; &nbsp; print(mammalName, &#39;is a warm-blooded animal.&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\nclass Dog(Mammal):<br />\n&nbsp; def __init__(self):<br />\n&nbsp; &nbsp; print(&#39;Dog has four legs.&#39;)<br />\nobiekt = Mammal(&#39;Max&#39;) # coÅ› co robi to samo<br />\n&nbsp; &nbsp;&nbsp;<br />\nd1 = Dog()</p>\n","<p>class Mammal():<br />\n&nbsp; def __init__(self, mammalName):<br />\n&nbsp; &nbsp; print(mammalName, &#39;is a warm-blooded animal.&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\nclass Dog(Mammal):<br />\n&nbsp; def __init__(self):<br />\n&nbsp; &nbsp; print(&#39;Dog has four legs.&#39;)<br />\n&nbsp; &nbsp; super().__init__(&#39;Max&#39;) # obiekt = Mammal(&#39;Max&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\nd1 = Dog()</p>\n","0"),
("364","tuple()","<p>UÅ¼yj funkcji kt&oacute;ra stwoÅ¼y krotke (tuple) iterable kt&oacute;rego nie moÅ¼na zmodyfikowaÄ‡.</p>\n\n<p>() -&gt;&nbsp;<samp>()</samp></p>\n\n<p>[1, 4, 6] -&gt;&nbsp;<samp>(1, 4, 6)</samp></p>\n\n<p>(&#39;Python&#39;) -&gt;&nbsp;<samp>(&#39;P&#39;, &#39;y&#39;, &#39;t&#39;, &#39;h&#39;, &#39;o&#39;, &#39;n&#39;)</samp></p>\n\n<p>{1: &#39;one&#39;, 2: &#39;two&#39;} -&gt;&nbsp;<samp>(1, 2)</samp></p>\n","<p>tuple() # &nbsp;<samp>()</samp></p>\n\n<p># creating a tuple from a string<br />\ntuple(&#39;Python&#39;) # &nbsp;<samp>(1, 4, 6)</samp></p>\n\n<p># creating a tuple from a dictionary<br />\ntuple({1: &#39;one&#39;, 2: &#39;two&#39;}) # &nbsp;<samp>(&#39;P&#39;, &#39;y&#39;, &#39;t&#39;, &#39;h&#39;, &#39;o&#39;, &#39;n&#39;)</samp></p>\n\n<p># creating a tuple from a list<br />\ntuple([1, 4, 6]) # &nbsp;<samp>(1, 2)</samp></p>\n","0"),
("365","type()","<p>UÅ¼yj funkcji kt&oacute;razwr&oacute;ci typ podanego obiektu</p>\n\n<p>numberList = [1, 2]</p>\n\n<p>numberDict = {1: &#39;one&#39;, 2: &#39;two&#39;}</p>\n\n<p>class Foo:<br />\n&nbsp; &nbsp; a = 0</p>\n\n<p>InstanceOfFoo = Foo()</p>\n","","0"),
("366","vars()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci wszysteki atrybuty instancji klasy.</p>\n\n<p>class Foo:<br />\n&nbsp; def __init__(self, a = 5, b = 10):<br />\n&nbsp; &nbsp; self.a = a<br />\n&nbsp; &nbsp; self.b = b<br />\n&nbsp;&nbsp;<br />\nInstanceOfFoo = Foo()</p>\n","","0"),
("367","zip()","<p>UÅ¼yj funkcji kt&oacute;ra poÅ‚Ä…czy ze sobÄ… kilka iterable.</p>\n\n<p>[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]<br />\nresultList = list(result)<br />\n(numberList, strList) -&gt; []<br />\nresultSet = set(result)<br />\nresultSet -&gt;&nbsp;<samp>{(2, &#39;two&#39;), (3, &#39;three&#39;), (1, &#39;one&#39;)}</samp></p>\n\n<p>&nbsp;</p>\n\n<p>numbersList = [1, 2, 3]<br />\nstrList = [&#39;one&#39;, &#39;two&#39;]<br />\nnumbersTuple = (&#39;ONE&#39;, &#39;TWO&#39;, &#39;THREE&#39;, &#39;FOUR&#39;)<br />\nresultSet = set(result)<br />\nresultSet -&gt;&nbsp;<samp>{(2, &#39;TWO&#39;), (3, &#39;THREE&#39;), (1, &#39;ONE&#39;)}</samp></p>\n\n<p>result = ...(numbersList, strList, numbersTuple)<br />\nresultSet = set(result)<br />\nresultSet -&gt;<samp>{(2, &#39;two&#39;, &#39;TWO&#39;), (1, &#39;one&#39;, &#39;ONE&#39;)}</samp></p>\n","","0"),
("368","__import__()","<p>Uzyj funkcji kt&oacute;ra pozwala zaiportowaÄ‡ inne moduÅ‚y.</p>\n\n<p>mathematics = ...(&#39;math&#39;, globals(), locals(), [], 0)</p>\n\n<p>mathematics.fabs(-2.5) # 2.5</p>\n","<p>mathematics = __import__(&#39;math&#39;, globals(), locals(), [], 0)</p>\n\n<p>print(mathematics.fabs(-2.5))</p>\n","0"),
("537","Forklift truck driver","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Stationary_courses/Forklift_truck_driver/Wozki_widowe.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Stationary_courses/Forklift_truck_driver/002.jpg\" /></p>\n","","0"),
("374","is_integer","<p>Uzyj funkcji kt&oacute;ra sprawdzi czy liczba bÄ™dÄ…ca float moÅ¼e byÄ‡ teÅ¼ typu int.</p>\n\n<pre>\n(-2.0) -&gt; True\n(3.2) -&gt; False</pre>\n","<pre>\n(-2.0).is_integer() # True\n(3.2).is_integer() # False</pre>\n","0"),
("375","as_integer_ratio()","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci pare dw&oacute;ch liczb int na podstawie float. Tak Å¼e dzielÄ…c jednÄ… liczbÄ™ przez drugÄ… otrzymamy liczbÄ™ float.</p>\n\n<pre>\n1.5 -&gt; (3, 2)</pre>\n","<pre>\n1.5.as_integer_ratio() # (3, 2)</pre>\n","0"),
("376","bit_length","<pre>\nUÅ¼yj funkcji kt&oacute;ra wypidze ile bit&oacute;w potrzeba aby zaprezentowaÄ‡ liczbÄ™ int w formacie binary.\nn = -37\nbin(n) # &#39;-0b100101&#39;\n&#39;-0b100101&#39; -&gt; 6</pre>\n","<pre>\nn = -37\nbin(n) # &#39;-0b100101&#39;\nn.bit_length() # 6</pre>\n","0"),
("377","to_bytes","<p>UÅ¼yj funkcji kt&oacute;ra zamieni int na bytes</p>\n","<p>&gt;&gt;&gt; (1024).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x04x00&#39;<br />\n&gt;&gt;&gt; (1024).to_bytes(2, byteorder=&#39;little&#39;)<br />\nb&#39;x00x04&#39;</p>\n\n<p>&gt;&gt;&gt; (4).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x04&#39;<br />\n&gt;&gt;&gt; (1).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x01&#39;<br />\n&gt;&gt;&gt; (2).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x02&#39;<br />\n&gt;&gt;&gt; (3).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x03&#39;<br />\n&gt;&gt;&gt; (5).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x05&#39;<br />\n&gt;&gt;&gt; (6).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00x06&#39;<br />\n&gt;&gt;&gt; (60).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00&lt;&#39;<br />\n&gt;&gt;&gt; (70).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x00F&#39;<br />\n&gt;&gt;&gt; (2048).to_bytes(2, byteorder=&#39;big&#39;)<br />\nb&#39;x08x00&#39;</p>\n","0"),
("378","from_bytes","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje wartoÅ›Ä‡ bytes na int&nbsp;</p>\n\n<p>(4).to_bytes(2, byteorder=&#39;big&#39;) # b&#39;x00x04&#39;</p>\n\n<p>(60).to_bytes(2, byteorder=&#39;big&#39;) # b&#39;x00&lt;&#39;</p>\n","<p>(4).to_bytes(2, byteorder=&#39;big&#39;) # b&#39;x00x04&#39;</p>\n\n<p>(60).to_bytes(2, byteorder=&#39;big&#39;) # b&#39;x00&lt;&#39;</p>\n\n<p>int.from_bytes(b&#39;x00x04&#39;, byteorder=&#39;big&#39;) # 4<br />\nint.from_bytes(b&#39;x00&lt;&#39;, byteorder=&#39;big&#39;) # 60</p>\n","0"),
("384","capitalize()","<p>UÅ¼yj funkcji kt&oacute;ra pierwszy znak zrobi duÅ¼Ä… literÄ….</p>\n\n<p>&#39;abc&#39; -&gt; &#39;Abc&#39;</p>\n","<p>&#39;abc&#39;.capitalize() # Abc</p>\n","0"),
("538","tkinter.Tk()","<p>UÅ¼yj klasy kt&oacute;ra zaincijanizuje moduÅ‚ GUI Tkinker. UÅ¼yj nastÄ™pujÄ…cych metod dostÄ™pnych w tej klasie:</p>\n\n<ul>\n	<li>Ustawienie rozmiar&oacute;w okna</li>\n	<li>Ustawienie ikony (*.ico)</li>\n	<li>Ustawienie tytuÅ‚u</li>\n	<li>Zablokowanie rozszeÅ¼ania ekranu</li>\n</ul>\n","<p>import tkinter<br />\ntop = tkinter.Tk()<br />\ntop.geometry(&quot;500x500&quot;)<br />\ntop.iconbitmap(&#39;favicon.ico&#39;)<br />\ntop.title(&quot;Tytul&quot;)<br />\ntop.resizable(False, False) # (x,y)</p>\n\n<p>top.mainloop()</p>\n","0"),
("386","center()","<p>UÅ¼y funkcji w zaleÅ¼noÅ›ci od tego jak dÅ‚ugi ma byÄ‡ string funkcja ta doda spacje (lub wartoÅ›Ä‡ podana w drugim argumencie)&nbsp;po lewej i prawej stronie stringu.</p>\n\n<p>&quot;this is string example....wow!!!&quot; -&gt;&nbsp;&#39;AAthis is string example....wow!!!AA&#39;</p>\n\n<p>&quot;this is string example....wow!!!&quot; -&gt;&nbsp;&#39; &nbsp;this is string example....wow!!! &nbsp;&#39;</p>\n","<p>str = &quot;this is string example....wow!!!&quot;;</p>\n\n<p>str.center(36,&#39;A&#39;) #&nbsp;&#39;AAthis is string example....wow!!!AA&#39;</p>\n\n<p>str.center(36) #&nbsp;&#39; &nbsp;this is string example....wow!!! &nbsp;&#39;</p>\n","0"),
("387","count()","<p>UÅ¼yj funkcji kt&oacute;ra policzy wystÄ…pienia danego znaku w zmiennej.</p>\n\n<p>str = &quot;this is string example....wow!!!&quot;<br />\nsub = &quot;i&quot;</p>\n\n<p>Wynik: 3</p>\n","<pre>\n# str.count(sub, start= 0,end=len(string))</pre>\n\n<p>str = &quot;this is string example....wow!!!&quot;<br />\nsub = &quot;i&quot;<br />\nstr.count(sub) # 3</p>\n","0"),
("388","encode","<p>UÅ¼yj funckji kt&oacute;ra zakoduje sÅ‚owa</p>\n","<p>a = &quot;example&quot;.encode()<br />\nprint(a) # b&#39;example&#39;</p>\n\n<p>a = &quot;exampleÅ›&quot;.encode(encoding=&#39;UTF-8&#39;) # b&#39;examplexc5x9b&#39;</p>\n\n<p>a = &quot;exampleÅ›&quot;.encode() # b&#39;examplexc5x9b&#39;</p>\n\n<p>a.decode()&nbsp; # &#39;exampleÅ›&#39;</p>\n","0"),
("389","decode","<p>Uzyj funkcji kt&oacute;ra odkoduje dany ciÄ…g znak&oacute;w</p>\n","<pre>\na = &quot;example&quot;.encode() # b&#39;example&#39;\n</pre>\n\n<p>a.decode() #&nbsp;&#39;example&#39;</p>\n","0"),
("390","endswith","<p>Uzyj funkcji kt&oacute;ra sprawdzi czy sÅ‚owo koÅ„czy siÄ™ podanym przez nas ciÄ…giem znak&oacute;w.</p>\n\n<p>str = &quot;this is string example....wow!!!&quot;;<br />\nsuffix = &quot;wow!!!&quot;;<br />\n... -&gt;&nbsp;True<br />\nsuffix = &quot;is&quot;;<br />\n... -&gt; &nbsp;False</p>\n","<p>str = &quot;this is string example....wow!!!&quot;;<br />\nsuffix = &quot;wow!!!&quot;;<br />\nstr.endswith(suffix) # True<br />\nsuffix = &quot;is&quot;;<br />\nstr.endswith(suffix) # False</p>\n","0"),
("391","endswith","<p>UÅ¼yj funkcji kt&oacute;ra doda okreÅ›lÄ…nÄ… iloÅ›Ä‡ spacji w miejsce 	 &nbsp;w zmiennej</p>\n\n<p>str = &quot;this is string 	example....wow!!!&quot;;<br />\nstr # &#39;this is string 	example....wow!!!&#39;<br />\n(5) -&gt;&#39;this is string &nbsp; &nbsp; &nbsp;example....wow!!!&#39;<br />\nprints(str) #&nbsp;this is string &nbsp;example....wow!!!</p>\n","<p>str = &quot;this is string example....wow!!!&quot;;<br />\nstr # &#39;this is string example....wow!!!&#39;<br />\nstr.expandtabs(5)<br />\n&#39;this is string &nbsp; &nbsp; &nbsp;example....wow!!!&#39;<br />\nprints(str) #&nbsp;this is string &nbsp;example....wow!!!</p>\n","0"),
("392","find()","<p>UÅ¼yj funkcji kt&oacute;ra poda pozycjÄ™ okreÅ›lonego zwrotu w zmiennej opcjonalnie moÅ¼na podaÄ‡ od kÄ…d do kÄ…d ma szukaÄ‡.</p>\n\n<p>#&nbsp;(str, beg=0, end=len(string))</p>\n\n<pre>\nstr1 = &quot;abc&quot;;\nstr2 = &quot;b&quot;;</pre>\n\n<p>Wynik: 1</p>\n","<pre>\n&#39;abc&#39;.find(&#39;b&#39;) # 1</pre>\n\n<p>&#39;abc&#39;.find(&#39;k&#39;) # -1</p>\n\n<p>&#39;abc&#39;.find(&#39;l&#39;) # -1</p>\n","0"),
("393","index","<p>UÅ¼yj funkcji kt&oacute;ra poda pozycjÄ™ okreÅ›lonego zwrotu w zmiennej opcjonalnie moÅ¼na podaÄ‡ od kÄ…d do kÄ…d ma szukaÄ‡. JeÅ¼li danego ciÄ…gu nie znajdzie to wyswietli bÅ‚Ä…d ValueError.</p>\n\n<p>str1 = &#39;abc&#39;</p>\n\n<p>str2 = &#39;c&#39; -&gt; 2</p>\n\n<p>str3 = &#39;d&#39; -&gt; bÅ‚Ä…d</p>\n","<p>&#39;abc&#39;.index(&#39;b&#39;) # 1<br />\n&#39;abc&#39;.index(&#39;c&#39;) # 2<br />\n&#39;abc&#39;.index(&#39;d&#39;)<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br />\nValueError: substring not found</p>\n","0"),
("394","isalnum","<p>UÅ¼yj funkcji kt&oacute;ra wypisze prawdÄ™ jeÅ¼eli zmienna zÅ‚oÅ¼ona jest tylko z&nbsp;alphanumeric characters czyli wszystkie litery i liczby ale na przykÅ‚ad spacja juÅ¼ nie.</p>\n\n<p>&#39;a&#39; &nbsp;-&gt; True<br />\n&#39;&#39; -&gt; False<br />\n&#39; &#39; -&gt; False<br />\n&#39;@&#39; -&gt; False<br />\n&#39;1&#39; -&gt;&nbsp;True</p>\n","<p>&#39;a&#39;.isalnum() # True<br />\n&#39;&#39;.isalnum() # False<br />\n&#39; &#39;.isalnum() # False<br />\n&#39;@&#39;.isalnum() # False<br />\n&#39;1&#39;.isalnum() # True</p>\n","0"),
("395","isalpha","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci prawdÄ™ jeÅ¼eli string zawiera tylko znaki alfabetu</p>\n\n<p>&quot;this&quot; -&gt; True</p>\n\n<p>&quot;this is string example....wow!!!&quot; -&gt;&nbsp;False</p>\n","<p>&quot;this&quot;.isalpha() # True</p>\n\n<p>&quot;this is string example....wow!!!&quot;.isalpha() # False</p>\n","0"),
("396","isdigit","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli string zawiera tylko liczby</p>\n\n<p>&#39;12&#39; -&gt; True</p>\n\n<p>&#39;abc1&#39; -&gt; False</p>\n","<p>&#39;12&#39;.isdigit() # True<br />\n&#39;abc1&#39;.isdigit() # False</p>\n","0"),
("397","islower","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli wszystkie znaki sÄ… pisane maÅ‚ymi literami</p>\n\n<p>&#39;abcA&#39; -&gt;&nbsp;False</p>\n\n<p>&#39;abc&#39; -&gt;&nbsp;True</p>\n","<p>&#39;abcA&#39;.islower() # False<br />\n&#39;abc&#39;.islower() # True</p>\n","0"),
("398","isnumeric","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli wszystkie znaki w stringu sÄ… liczbami</p>\n\n<p>&quot;this2009&quot; -&gt;&nbsp;False</p>\n\n<p>&quot;2009&quot; -&gt;&nbsp;True</p>\n","<p>&quot;this2009&quot;.isnumeric() # False<br />\n&quot;2009&quot;.isnumeric() # True</p>\n","0"),
("399","isspace","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli string zawiera tylko spacje</p>\n\n<p>&#39;abc def&#39; -&gt; &nbsp;False<br />\n&#39; &nbsp; &#39; &nbsp;-&gt; True</p>\n","<p>&#39;abc def&#39;.isspace() # False<br />\n&#39; &nbsp; &#39;.isspace() # True</p>\n","0"),
("400","istitle","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli wszystkie sÅ‚owa zaczynajÄ… siÄ™ od duÅ¼ej litery a wszystkie pozostaÅ‚e znaki sÄ… pisane maÅ‚ymi.</p>\n\n<pre>\n&quot;This Is String Example...Wow!!!&quot; -&gt; True\n&quot;This is string example....wow!!!&quot; -&gt; False\n</pre>\n","<p>&quot;This Is String Example...Wow!!!&quot;.istitle() # True</p>\n\n<p>&quot;This is string example....wow!!!&quot;.istitle() # False</p>\n","0"),
("401","isupper","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli wszystkie znaki w stringu sÄ… duÅ¼ymi literami.</p>\n\n<p>&quot;THIS IS STRING EXAMPLE....WOW!!!&quot; -&gt; True</p>\n\n<p>&quot;THIS is string example....wow!!!&quot; -&gt; False</p>\n","<p>&quot;THIS IS STRING EXAMPLE....WOW!!!&quot;.isupper() True</p>\n\n<pre>\n&quot;THIS is string example....wow!!!&quot;.isupper() # False</pre>\n","0"),
("402","join","<p>UÅ¼yj funkcji kt&oacute;ra poÅ‚Ä…czy wartoÅ›ci w liÅ›cie okreÅ›lonym zankie.</p>\n\n<pre>\ns = &quot;-&quot;;\nseq = (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;); # This is sequence of strings.\nWynik: a-b-c</pre>\n","<pre>\ns = &quot;-&quot;;\nseq = (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;); # This is sequence of strings.\nprint s.join(seq)</pre>\n","0"),
("403","ljust","<p>UÅ¼yj funkcji w kt&oacute;rej dopisze okreÅ›lony znak na koÅ„cu stringu w zaleÅ¼noÅ›ci od tego jaki width ustawiliÅ›my.</p>\n\n<p>#&nbsp;(width[, fillchar])</p>\n\n<p>(5, &#39;0&#39;) -&gt; &#39;abc00&#39;<br />\n(1, &#39;0&#39;) -&gt; &#39;abc&#39;<br />\n(4, &#39;0&#39;) -&gt; &#39;abc0&#39;</p>\n","<p>&#39;abc&#39;.ljust(5, &#39;0&#39;) # &#39;abc00&#39;<br />\n&#39;abc&#39;.ljust(1, &#39;0&#39;) # &#39;abc&#39;<br />\n&#39;abc&#39;.ljust(4, &#39;0&#39;) # &#39;abc0&#39;</p>\n","0"),
("404","lower","<p>UÅ¼yj funkcji kt&oacute;ra przekonwertuje wszystkei znaki z podanego stringu na maÅ‚e znaki.</p>\n\n<p>&quot;THIS IS STRING EXAMPLE....WOW!!!&quot; -&gt; &#39;this is string example....wow!!!&#39;</p>\n","<p>&quot;THIS IS STRING EXAMPLE....WOW!!!&quot;.lower() # &#39;this is string example....wow!!!&#39;</p>\n","0"),
("405","lstrip","<p>UÅ¼yj funkcji kt&oacute;ra usunie z poczÄ…tku stringu okreÅ›lony znak domyÅ›lnie spacjÄ™.</p>\n\n<p>&quot; this is string example....wow!!! &quot; -&gt;&nbsp;&#39;this is string example....wow!!!&#39;</p>\n\n<p>&quot;88888888this is string example....wow!!!8888888&quot; -&gt;&nbsp;&#39;this is string example....wow!!!8888888&#39;</p>\n","<p>&quot; this is string example....wow!!! &quot;.lstrip() # &#39;this is string example....wow!!!&#39;</p>\n\n<p>&quot;88888888this is string example....wow!!!8888888&quot;.lstrip(&#39;8&#39;) # &#39;this is string example....wow!!!8888888&#39;</p>\n","0"),
("406","maketrans","<pre>\nUÅ¼yj funkcji kt&oacute;ra w stringu zamieni konkretne litery na inne\n\nfrom string import maketrans   # Required to call maketrans function.\n\nintab = &quot;aeiou&quot;\nouttab = &quot;12345&quot;\ntrantab = maketrans(intab, outtab)\n\nstr = &quot;this is string example....wow!!!&quot;\n(trantab) -&gt; th3s 3s str3ng 2x1mpl2....w4w!!!</pre>\n","<pre>\nfrom string import maketrans   # Required to call maketrans function.\nintab = &quot;aeiou&quot;\nouttab = &quot;12345&quot;\ntrantab = maketrans(intab, outtab)\nstr = &quot;this is string example....wow!!!&quot;\nstr.translate(trantab)</pre>\n","0"),
("407","max","<p>UÅ¼yj funkcji kt&oacute;ra poda znak alfabetu najbareziej odalonego od poczÄ…tku alfabetu.</p>\n\n<p>(&#39;dcab&#39;) -&gt; &#39;d&#39;<br />\n(&#39;dcab2&#39;) -&gt; &#39;d&#39;<br />\n(&#39;dcab9&#39;) -&gt; &#39;d&#39;<br />\n(&#39;cabd&#39;) -&gt; &#39;d&#39;</p>\n","<p>max(&#39;dcab&#39;) # &#39;d&#39;<br />\nmax(&#39;dcab2&#39;) # &#39;d&#39;<br />\nmax(&#39;dcab9&#39;) # &#39;d&#39;<br />\nmax(&#39;cabd&#39;) # &#39;d&#39;</p>\n","0"),
("408","min","<p>UÅ¼yj funkcji kt&oacute;ra poda znak alfabetu najbliÅ¼ej poczÄ…tku alfabetu.</p>\n\n<p>(&#39;dcab&#39;) -&gt; &#39;a&#39;<br />\n(&#39;dcab2&#39;) -&gt; &#39;a&#39;<br />\n(&#39;dcab9&#39;) -&gt; &#39;a&#39;<br />\n(&#39;cabd&#39;) -&gt; &#39;a&#39;</p>\n","<p>min(&#39;dcab&#39;) # &#39;a&#39;<br />\nmin(&#39;dcab2&#39;) # &#39;a&#39;<br />\nmin(&#39;dcab9&#39;) # &#39;a&#39;<br />\nmin(&#39;cabd&#39;) # &#39;a&#39;</p>\n","0"),
("409","replace","<pre>\nUÅ¼yj funkcji kt&oacute;ra zamieni okreÅ›lone znaki na inne opcjonalnie moÅ¼na okreÅ›liÄ‡ ile element&oacute;w maksymalnie ma byÄ‡ zmienione.\nstr = &quot;this is string example....wow!!! this is really string&quot;\n(&quot;is&quot;, &quot;was&quot;) -&gt; &#39;thwas was string example....wow!!! thwas was really string&#39;\n(&quot;is&quot;, &quot;was&quot;, 3) -&gt; &#39;thwas was string example....wow!!! thwas is really string&#39;\n</pre>\n","<p>str.replace(&quot;is&quot;, &quot;was&quot;) # &#39;thwas was string example....wow!!! thwas was really string&#39;</p>\n\n<p>str.replace(&quot;is&quot;, &quot;was&quot;, 3) # &#39;thwas was string example....wow!!! thwas is really string&#39;</p>\n","0"),
("410","rfind","<p>UÅ¼yj funkcji kt&oacute;ra poda pozycjÄ™ ostatniego wystÄ…pienia okreÅ›lonego znaku w stringu</p>\n\n<p>&#39;accccca&#39;.find(&#39;a&#39;) # 0</p>\n\n<p>&#39;accccca&#39; -&gt; 6</p>\n","<p>&#39;accccca&#39;.rfind(&#39;a&#39;) # 6</p>\n","0");
INSERT INTO function VALUES
("411","rindex","<p>UÅ¼yj funkcji kt&oacute;ra poda pozycjÄ™ ostatnie wystapienie zwrotu w zmiennej opcjonalnie moÅ¼na podaÄ‡ od kÄ…d do kÄ…d ma szukaÄ‡. JeÅ¼li danego ciÄ…gu nie znajdzie to wyswietli bÅ‚Ä…d ValueError.</p>\n\n<p>&#39;accccca&#39;.index(&#39;a&#39;) # 0</p>\n\n<p>&#39;accccca&#39; -&gt; 6</p>\n\n<p>&nbsp;</p>\n","<p>&#39;accccca&#39;.index(&#39;a&#39;) # 0<br />\n&#39;accccca&#39;.rindex(&#39;a&#39;) # 6</p>\n","0"),
("412","rjust","<p>UÅ¼yj funkcji w kt&oacute;rej dopisze okreÅ›lony znak na poczÄ…tku stringu w zaleÅ¼noÅ›ci od tego jaki width ustawiliÅ›my</p>\n\n<p>#&nbsp;(width[, fillchar])</p>\n\n<p>(5, &#39;0&#39;) -&gt; &#39;00abc&#39;<br />\n(1, &#39;0&#39;) -&gt; &#39;abc&#39;<br />\n(4, &#39;0&#39;) -&gt; &#39;0abc&#39;</p>\n","<p>&#39;abc&#39;.rjust(5, &#39;0&#39;) # &#39;00abc&#39;<br />\n&#39;abc&#39;.rjust(1, &#39;0&#39;) # &#39;abc&#39;<br />\n&#39;abc&#39;.rjust(4, &#39;0&#39;) # &#39;0abc&#39;</p>\n","0"),
("413","rstrip","<p>UÅ¼yj funkcji kt&oacute;ra usunie z koÅ„ca stringu okreÅ›lony znak domyÅ›lnie spacjÄ™</p>\n\n<p>&quot; this is string example....wow!!! &quot; -&gt;&nbsp;&#39; this is string example....wow!!!&#39;</p>\n\n<p>&quot;88888888this is string example....wow!!!8888888&quot; -&gt;&nbsp;&#39;8888888this is string example....wow!!!&#39;</p>\n","<p>&quot; this is string example....wow!!! &quot;.rstrip() # &#39; this is string example....wow!!!&#39;</p>\n\n<p>&quot;88888888this is string example....wow!!!8888888&quot;.rstrip(&#39;8&#39;) # &#39;8888888this is string example....wow!!!&#39;</p>\n","0"),
("414","split","<p>UÅ¼yj funkcji kt&oacute;ra na podstawie podanego stringu rozdzieli go i utwoÅ¼y listÄ™ wartoÅ›ci jeÅ¼eli nic nie poda siÄ™ jako parametr w funkcji to rozdzieli na podstawie znaku spacji i zignoruje n (new line)</p>\n\n<p>str = &quot;Line1-abcdef Line2-abc Line4-abcd&quot;;</p>\n\n<p>str -&gt;&nbsp;[&#39;Line1-abcdef&#39;, &#39;Line2-abc&#39;, &#39;Line4-abcd&#39;]<br />\nstr -&gt; [&#39;Line1-abcdef&#39;, &#39; Line2-abc&#39;, &#39; Line4-abcd&#39;]<br />\nstr -&gt; [&#39;Line1-abcdef &#39;, &#39;Line2-abc &#39;, &#39;Line4-abcd&#39;]<br />\nstr -&gt; [&#39;Line1-abcdef&#39;, &#39; Line2-abc Line4-abcd&#39;]<br />\nstr -&gt; [&#39;Line1-abcdef Line2-abc Line4-abcd&#39;]</p>\n","<p>str = &quot;Line1-abcdef \nLine2-abc \nLine4-abcd&quot;;<br />\nstr.split() # [&#39;Line1-abcdef&#39;, &#39;Line2-abc&#39;, &#39;Line4-abcd&#39;]<br />\nstr.split(&#39; &#39;) # [&#39;Line1-abcdef&#39;, &#39;\nLine2-abc&#39;, &#39;\nLine4-abcd&#39;]<br />\nstr.split(&#39;\n&#39;) # [&#39;Line1-abcdef &#39;, &#39;Line2-abc &#39;, &#39;Line4-abcd&#39;]<br />\nstr.split(&#39; &#39;,1) # [&#39;Line1-abcdef&#39;, &#39;\nLine2-abc \nLine4-abcd&#39;]<br />\nstr.split(&#39; &#39;,0) # [&#39;Line1-abcdef \nLine2-abc \nLine4-abcd&#39;]</p>\n","0"),
("415","splitlines","<p>UÅ¼yj funkcji kt&oacute;ra na podstawie podanego stringu rozdzieli go na podstawie nowych liÅ„&nbsp;i utwoÅ¼y listÄ™</p>\n\n<p>str =&nbsp;&quot;Line1-abcdef Line2-abc Line4-abcd&quot;</p>\n\n<p>str -&gt; [&#39;Line1-abcdef &#39;, &#39;Line2-abc &#39;, &#39;Line4-abcd&#39;] #&nbsp;[&#39;Line1-abcdef &#39;, &#39;Line2-abc &#39;, &#39;Line4-abcd&#39;]</p>\n","<p>str.splitlines() # [&#39;Line1-abcdef &#39;, &#39;Line2-abc &#39;, &#39;Line4-abcd&#39;]</p>\n","0"),
("416","startswith","<pre>\nUÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci True jeÅ¼eli string zaczyna siÄ™ od okreÅ›lonych znak&oacute;w\nstr = &quot;this is string example....wow!!!&quot;\nstr -&gt; True</pre>\n\n<p>str -&gt;&nbsp;False</p>\n","<pre>\nstr.startswith(&#39;this&#39;) # True</pre>\n\n<p>str.startswith(&#39;abc&#39;) # False</p>\n","0"),
("417","strip","<p>UÅ¼yj funkcji kt&oacute;ra usunie z poczÄ…tku i koÅ„ca stringu okreÅ›lony znak domyÅ›lnie spacjÄ™</p>\n\n<pre>\nstr = &quot;0000000this is string example....wow!!!0000000&quot;</pre>\n\n<pre>\n(&#39;0&#39;) -&gt; &#39;this is string example....wow!!!&#39;\n</pre>\n","<pre>\nstr = &quot;0000000this is string example....wow!!!0000000&quot;</pre>\n\n<pre>\nstr.strip(&#39;0&#39;) # &#39;this is string example....wow!!!&#39;</pre>\n","0"),
("418","swapcase","<p>UÅ¼yj funkcji kt&oacute;ra zamieni maÅ‚e litery na duÅ¼e a duÅ¼e na maÅ‚e</p>\n\n<p>str = &quot;this is string example....wow!!!&quot;<br />\nstr -&gt; &#39;THIS IS STRING EXAMPLE....WOW!!!&#39;<br />\nstr = &quot;this is string example....Wow!!!&quot;<br />\nstr -&gt; &#39;THIS IS STRING EXAMPLE....wOW!!!&#39;<br />\nstr = &quot;THIS IS STRING EXAMPLE....WOW!!!&quot;<br />\nstr -&gt; &#39;this is string example....wow!!!&#39;</p>\n","<p>str = &quot;this is string example....wow!!!&quot;<br />\nstr.swapcase() # &#39;THIS IS STRING EXAMPLE....WOW!!!&#39;<br />\nstr = &quot;this is string example....Wow!!!&quot;<br />\nstr.swapcase() # &#39;THIS IS STRING EXAMPLE....wOW!!!&#39;<br />\nstr = &quot;THIS IS STRING EXAMPLE....WOW!!!&quot;<br />\nstr.swapcase() # &#39;this is string example....wow!!!&#39;</p>\n","0"),
("419","title","<p>UÅ¼yj funkcji kt&oacute;ra zrobi tak Å¼e wszystkie wyrazy bÄ™dÄ… zaczyhnaÅ‚y siÄ™ od duÅ¼ej litery.</p>\n\n<pre>\nstr = &quot;this is string example....wow!!!&quot;\nstr -&gt; &#39;This Is String Example....Wow!!!&#39;\n</pre>\n","<p>str = &quot;this is string example....wow!!!&quot;</p>\n\n<p>str.title() # &#39;This Is String Example....Wow!!!&#39;</p>\n","0"),
("420","translate","<pre>\nUÅ¼yj funkcji kt&oacute;ra w stringu zamieni konkretne litery na inne\n\nfrom string import maketrans   # Required to call maketrans function.\n\nintab = &quot;aeiou&quot;\nouttab = &quot;12345&quot;\ntrantab = maketrans(intab, outtab)\n\nstr = &quot;this is string example....wow!!!&quot;\n(trantab) -&gt; th3s 3s str3ng 2x1mpl2....w4w!!!</pre>\n","<pre>\nfrom string import maketrans   # Required to call maketrans function.\nintab = &quot;aeiou&quot;\nouttab = &quot;12345&quot;\ntrantab = maketrans(intab, outtab)\nstr = &quot;this is string example....wow!!!&quot;\nstr.translate(trantab)</pre>\n","0"),
("421","upper","<p>UÅ¼yj funkcji dziiÄ™ki kt&oacute;rej wszystkie znaki w stringu bÄ™dÄ… z duÅ¼ej litery</p>\n\n<p>&#39;abc&#39; -&gt; &#39;ABC&#39;<br />\n&#39;Abc&#39; -&gt;&nbsp;&#39;ABC&#39;</p>\n","<p>&#39;abc&#39;.upper() # &#39;ABC&#39;<br />\n&#39;Abc&#39;.upper() # &#39;ABC&#39;</p>\n","0"),
("422","zfill","<p>UÅ¼yj funkcji kt&oacute;ra doda na poczÄ…tku stringu kilk 0 w zaleÅ¼noÅ›ci od parametru width</p>\n\n<p>str = &#39;abc&#39;</p>\n\n<p>(5) -&gt;&nbsp;&#39;00abc&#39;</p>\n\n<p>(2) -&gt;&nbsp;&#39;abc&#39;</p>\n\n<p>(4) -&gt;&nbsp;&#39;0abc&#39;</p>\n","<p>&#39;abc&#39;.zfill(5) # &#39;00abc&#39;<br />\n&#39;abc&#39;.zfill(2) # &#39;abc&#39;<br />\n&#39;abc&#39;.zfill(4) # &#39;0abc&#39;</p>\n","0"),
("423","isdecimal","<p>Uzyj funkcji kt&oacute;ra zwroci True jeÅ¼eli string jest decimal</p>\n\n<p>&quot;this2009&quot; -&gt; False<br />\n&quot;2009&quot; -&gt;&nbsp;True</p>\n","<p>&quot;this2009&quot;.isdecimal() # False<br />\n&quot;2009&quot;.isdecimal() # True</p>\n","0"),
("539","tkinter.Button()","<p>UÅ¼yj widgetu kt&oacute;ry ukaÅ¼e button</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>from tkinter import messagebox</p>\n\n<p>top = Tk()<br />\ntop.geometry(&quot;300x200&quot;)<br />\ndef helloCallBack():<br />\n&nbsp; &nbsp;msg = messagebox.showinfo( &quot;Hello Python&quot;, &quot;Hello World&quot;)</p>\n\n<p>B = Button(top, text = &quot;Hellon&quot;, command = helloCallBack, wraplength=1)<br />\nB.place(x = 50,y = 50)<br />\ntop.mainloop()<br />\n&nbsp;</p>\n\n<table>\n	<tbody>\n		<tr>\n			<th>S.No.</th>\n			<th>Option &amp; Description</th>\n		</tr>\n		<tr>\n			<td>1</td>\n			<td>\n			<p><strong>activebackground</strong></p>\n\n			<p>Background color when the button is under the cursor.</p>\n\n			<p>activebackground=&#39;green&#39;</p>\n\n			<p><u><em><strong>Po naciÅ›niÄ™ciu</strong></em></u></p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button1.jpg\" style=\"height:252px; width:320px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>2</td>\n			<td>\n			<p><strong>activeforeground</strong></p>\n\n			<p>Foreground color when the button is under the cursor.</p>\n\n			<p>activeforeground=&#39;red&#39;</p>\n\n			<p><u><em><strong>Po naciÅ›niÄ™ciu</strong></em></u></p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button2.jpg\" style=\"height:265px; width:332px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>3</td>\n			<td>\n			<p><strong>bd</strong></p>\n\n			<p>Border width in pixels. Default is 2.</p>\n\n			<p>bd = 10</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button3.jpg\" style=\"height:270px; width:336px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>4</td>\n			<td>\n			<p><strong>bg</strong></p>\n\n			<p>Normal background color.</p>\n\n			<p>bg = &#39;red&#39;</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button4.jpg\" style=\"height:281px; width:338px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>5</td>\n			<td>\n			<p><strong>command</strong></p>\n\n			<p>Function or method to be called when the button is clicked.</p>\n\n			<p>def helloCallBack():<br />\n			&nbsp; &nbsp;msg = messagebox.showinfo( &quot;Hello Python&quot;, &quot;Hello World&quot;)</p>\n\n			<p>command =&nbsp;helloCallBack</p>\n			</td>\n		</tr>\n		<tr>\n			<td>6</td>\n			<td>\n			<p><strong>fg</strong></p>\n\n			<p>Normal foreground (text) color.</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button5.jpg\" style=\"height:291px; width:350px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>7</td>\n			<td>\n			<p><strong>font</strong></p>\n\n			<p>Text font to be used for the button&#39;s label.</p>\n\n			<p>font = (&quot;Times New Roman&quot;, 12, &quot;italic&quot;)) # Po rozmiaÅ¼e 12 mozna w r&oacute;Å¼nej kolejnoÅ›ci dodawaÄ‡ italic, bold</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button6.jpg\" style=\"height:284px; width:342px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>8</td>\n			<td>\n			<p><strong>height</strong></p>\n\n			<p>Height of the button in text lines (for textual buttons) or pixels (for images).</p>\n\n			<p>height = 10</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button7.jpg\" style=\"height:509px; width:558px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>9</td>\n			<td>\n			<p><strong>highlightcolor</strong></p>\n\n			<p>The color of the focus highlight when the widget has focus.</p>\n			</td>\n		</tr>\n		<tr>\n			<td>10</td>\n			<td>\n			<p><strong>image</strong></p>\n\n			<p>Image to be displayed on the button (instead of text).</p>\n\n			<p>mi=PhotoImage(file=&quot;button.gif&quot;)<br />\n			B.config(image=mi)</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button8.jpg\" style=\"height:411px; width:546px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>&nbsp;</td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td>11</td>\n			<td>\n			<p><strong>state</strong></p>\n\n			<p>Set this option to DISABLED to gray out the button and make it unresponsive. Has the value ACTIVE when the mouse is over it. Default is NORMAL.</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button9.jpg\" style=\"height:286px; width:334px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>12</td>\n			<td>\n			<p><strong>underline</strong></p>\n\n			<p>Default is -1, meaning that no character of the text on the button will be underlined. If nonnegative, the corresponding text character will be underlined.</p>\n\n			<p>underline = 0</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button10.jpg\" style=\"height:272px; width:337px\" /></p>\n\n			<p>underline = 2</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button11.jpg\" style=\"height:287px; width:333px\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>13</td>\n			<td>\n			<p><strong>width</strong></p>\n\n			<p>Width of the button in letters (if displaying text) or pixels (if displaying an image).</p>\n\n			<p>width=20</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button12.jpg\" /></p>\n			</td>\n		</tr>\n		<tr>\n			<td>14</td>\n			<td>\n			<p><strong>wraplength</strong></p>\n\n			<p>If this value is set to a positive number, the text lines will be wrapped to fit within this length.</p>\n\n			<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tk_button13.jpg\" style=\"height:274px; width:330px\" /></p>\n			</td>\n		</tr>\n	</tbody>\n</table>\n","0"),
("428","capitalize()","","","0"),
("429","center()","","","0"),
("430","count()","","","0"),
("431","decode","","","0"),
("432","e","","","0"),
("433","endswith","","","0"),
("434","g","","","0"),
("435","h","","","0"),
("436","i","","","0"),
("437","4","","","0"),
("438","5","","","0"),
("439","6","","","0"),
("440","8","","","0"),
("441","10","","","0"),
("442","13","","","0"),
("443","14","","","0"),
("444","15","","","0"),
("445","16","","","0"),
("446","17","","","0"),
("447","18","","","0"),
("448","19","","","0"),
("449","20","","","0"),
("450","21","","","0"),
("451","22","","","0"),
("452","23","","","0"),
("453","24","","","0"),
("454","25","","","0"),
("455","26","","","0"),
("456","27","","","0"),
("457","28","","","0"),
("458","29","","","0"),
("459","30","","","0"),
("460","31","","","0"),
("461","32","","","0"),
("462","33","","","0"),
("463","34","","","0"),
("464","35","","","0"),
("465","36","","","0"),
("466","37","","","0"),
("467","append","","","0"),
("468","capitalize()","","","0"),
("469","center()","","","0"),
("470","clear","","","0"),
("471","copy","","","0"),
("472","count()","","","0"),
("473","decode","","","0"),
("474","e","","","0"),
("475","endswith","","","0"),
("476","extend","","","0"),
("477","g","","","0"),
("478","h","","","0"),
("479","i","","","0"),
("480","4","","","0"),
("481","insert","","","0"),
("482","5","","","0"),
("483","6","","","0"),
("484","8","","","0"),
("485","10","","","0"),
("486","13","","","0"),
("487","14","","","0"),
("488","15","","","0"),
("489","16","","","0"),
("490","17","","","0"),
("491","18","","","0"),
("492","19","","","0"),
("493","20","","","0"),
("494","21","","","0"),
("495","pop","","","0"),
("496","remove","","","0"),
("497","22","","","0"),
("498","reverse","","","0"),
("499","23","","","0"),
("500","24","","","0"),
("501","25","","","0"),
("502","26","","","0"),
("503","27","","","0"),
("504","28","","","0"),
("505","29","","","0"),
("506","30","","","0"),
("507","31","","","0"),
("508","32","","","0"),
("509","33","","","0"),
("510","34","","","0"),
("511","35","","","0"),
("512","36","","","0"),
("513","37","","","0");
INSERT INTO function VALUES
("514","Counting with small numbers","","","0"),
("515","Practice: Count with small numbers","","","0"),
("516","Counting in order","","","0"),
("517","Practice: Count in order","","","0"),
("518","Practice: Find 1 more or 1 less than a number","","","0"),
("519","Practice: Missing numbers","","","0"),
("520","Number grid","","","0"),
("521","Missing numbers between 0 and 120","","","0"),
("522","Practice: Numbers to 100","","","0"),
("523","Practice: Numbers to 120","","","0"),
("524","Practice: Count tens","","","0"),
("525","Counting in pictures","","","0"),
("526","Practice: Count in pictures","","","0"),
("527","Counting objects 1","","","0"),
("528","Practice: Counting objects 1","","","0"),
("529","Counting objects 2","","","0"),
("530","Practice: Counting objects 2","","","0"),
("531","Comparing numbers of objects","","","0"),
("532","Practice: Compare numbers of objects 1","","","0"),
("533","Comparing numbers on the number line","","","0"),
("534","Practice: Comparing numbers to 10","","","0"),
("535","Counting by category","","","0"),
("536","Practice: Compare numbers of objects 2","","","0"),
("6062","digest","","","0"),
("6063","hexdigest","","<p>import&nbsp;hashlib</p>\n\n<p>a = &quot;example&quot;.encode()</p>\n\n<p>print(a) #&nbsp;b&#39;example&#39;</p>\n\n<p>m = hashlib.md5(a) #&nbsp;md5 HASH object @ 0x00B556C8</p>\n\n<p>m.hexdigest() #&nbsp;&#39;1a79a4d60de6718e8e5b326e338ae533&#39;</p>\n\n<p>a.decode() # &#39;example&#39;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n","0"),
("6064","copy","","","0"),
("6065","digest","","","0"),
("6055","new","","","0"),
("6056","algorithms_guaranteed","","","0"),
("6057","algorithms_available","","<p>hashlib.algorithms_available</p>\n\n<p>&#39;&#39;&#39;<br />\n{&#39;dsaWithSHA&#39;, &#39;sha384&#39;, &#39;sha3_384&#39;, &#39;md5&#39;, &#39;sha224&#39;, &#39;sha512&#39;, &#39;sha3_512&#39;, &#39;md4&#39;, &#39;SHA512&#39;, &#39;sha256&#39;, &#39;sha&#39;, &#39;SHA256&#39;, &#39;sha3_256&#39;, &#39;sha3_224&#39;, &#39;DSA-SHA&#39;, &#39;ecdsa-with-SHA1&#39;, &#39;shake_128&#39;, &#39;SHA224&#39;, &#39;MD4&#39;, &#39;DSA&#39;, &#39;MD5&#39;, &#39;whirlpool&#39;, &#39;shake_256&#39;, &#39;SHA1&#39;, &#39;sha1&#39;, &#39;ripemd160&#39;, &#39;blake2s&#39;, &#39;blake2b&#39;, &#39;dsaEncryption&#39;, &#39;RIPEMD160&#39;, &#39;SHA384&#39;, &#39;SHA&#39;}</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("6058","digest_size","","","0"),
("6059","block_size","","","0"),
("6060","name","","","0"),
("6061","update","","","0"),
("540","tkinter.Canvas()","<pre>\n# !/usr/bin/python3\nfrom tkinter import *\n\nfrom tkinter import messagebox\n\ntop = Tk()\n\nC = Canvas(top, bg = &quot;blue&quot;, height = 250, width = 300)\n\ncoord = 10, 50, 240, 210\narc = C.create_arc(coord, start = 0, extent = 150, fill = &quot;red&quot;)\nline = C.create_line(10,10,200,200,fill = &#39;white&#39;)\nC.pack()\ntop.mainloop()</pre>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/canvas_1.jpg\" style=\"height:681px; width:1280px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/canvas_2.jpg\" style=\"height:677px; width:1280px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/canvas_3.jpg\" style=\"height:711px; width:1196px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/canvas_4.jpg\" style=\"height:713px; width:829px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/canvas_5.jpg\" style=\"height:717px; width:951px\" /></p>\n","","0"),
("541","tkinter.Checkbutton()","<p>UÅ¼yj widgetu kt&oacute;ry stwoÅ¼y checkbutton.</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>import tkinter<br />\n&nbsp; &nbsp;&nbsp;<br />\ntop = Tk()<br />\nCheckVar1 = IntVar()<br />\nCheckVar2 = IntVar()<br />\nCheckVar1.set(1) # Ustawienie Checkbutton o nazwie music na zaznaczony domyÅ›lnie<br />\nC1 = Checkbutton(top, text = &quot;Music&quot;, variable = CheckVar1, onvalue = 1, offvalue = 0, height=5, width = 20, )<br />\nC2 = Checkbutton(top, text = &quot;Video&quot;, variable = CheckVar2, onvalue = 1, offvalue = 0, height=5, width = 20)<br />\nC1.pack()<br />\nC2.pack()<br />\ntop.mainloop()</p>\n\n<p>print(CheckVar1.get()) # unchecked to 0 checked to 1<br />\nprint(CheckVar2.get())</p>\n","0"),
("542","tkinter.Entry()","<p>UÅ¼yj widgetu entry</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>top = Tk()<br />\nL1 = Label(top, text = &quot;User Name&quot;)<br />\nL1.pack( side = LEFT)<br />\nv = StringVar()<br />\nv.set(&quot;a default value&quot;)<br />\nE1 = Entry(top, textvariable=v)<br />\nE1.pack(side = RIGHT)</p>\n\n<p>top.mainloop()<br />\nprint(v.get())</p>\n","0"),
("543","Frame()","<p>UÅ¼yj widgetu frame</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tkframe.jpg\" style=\"height:80px; width:123px\" /></p>\n","","0"),
("544","Label()","<p>Uzyj widgetu label</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tklabel.jpg\" style=\"height:53px; width:140px\" /></p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()</p>\n\n<p>var = StringVar()<br />\nlabel = Label( root, textvariable = var, relief = RAISED )</p>\n\n<p>var.set(&quot;Hey!? How are you doing?&quot;)<br />\nlabel.pack()<br />\nroot.mainloop()<br />\n&nbsp;</p>\n","0"),
("545","Listbox()","<p>UÅ¼yj widgetu Listbox()</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>import tkinter</p>\n\n<p>top = Tk()<br />\ntop.geometry(&quot;500x500&quot;)<br />\nLb1 = Listbox(top)<br />\nLb1.insert(1, &quot;Python&quot;)<br />\nLb1.insert(2, &quot;Perl&quot;)<br />\nLb1.insert(3, &quot;C&quot;)<br />\nLb1.insert(4, &quot;PHP&quot;)<br />\nLb1.insert(5, &quot;JSP&quot;)<br />\nLb1.insert(6, &quot;Ruby&quot;)<br />\nLb1.delete(0)</p>\n\n<p>def check_list():<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; s = Lb1.selection_get()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;selected:&#39;, s)<br />\n&nbsp; &nbsp; except:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;no selection&#39;)</p>\n\n<p>B = Button(top, text = &quot;OK&quot;, command = check_list)<br />\nB.place(x = 50,y = 250)</p>\n\n<p>Lb1.pack()<br />\ntop.mainloop()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/listbox.jpg\" style=\"height:789px; width:1280px\" /><br />\n&nbsp;</p>\n","0"),
("546","Menu()","<p>UÅ¼yj widgetu menu</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/menu.jpg\" style=\"height:439px; width:241px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tkmenu.jpg\" style=\"height:258px; width:211px\" /></p>\n","<p>from tkinter import *<br />\ndef donothing():<br />\n&nbsp; &nbsp;filewin = Toplevel(root)<br />\n&nbsp; &nbsp;button = Button(filewin, text=&quot;Do nothing button&quot;)<br />\n&nbsp; &nbsp;button.pack()<br />\n&nbsp; &nbsp;<br />\nroot = Tk()<br />\nmenubar = Menu(root)</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>filemenu = Menu(menubar, tearoff=0)<br />\nfilemenu.add_command(label=&quot;New&quot;, command=donothing)<br />\nfilemenu.add_command(label=&quot;Open&quot;, command=donothing)<br />\nfilemenu.add_command(label=&quot;Save&quot;, command=donothing)<br />\nfilemenu.add_command(label=&quot;Save as...&quot;, command=donothing)<br />\nfilemenu.add_command(label=&quot;Close&quot;, command=donothing)<br />\nfilemenu.add_separator()<br />\nfilemenu.add_command(label=&quot;Exit&quot;, command=root.quit)<br />\nmenubar.add_cascade(label=&quot;File&quot;, menu=filemenu)</p>\n\n<p>editmenu = Menu(menubar, tearoff=0)<br />\neditmenu.add_command(label=&quot;Undo&quot;, command=donothing)<br />\neditmenu.add_separator()<br />\neditmenu.add_command(label=&quot;Cut&quot;, command=donothing)<br />\neditmenu.add_command(label=&quot;Copy&quot;, command=donothing)<br />\neditmenu.add_command(label=&quot;Paste&quot;, command=donothing)<br />\neditmenu.add_command(label=&quot;Delete&quot;, command=donothing)<br />\neditmenu.add_command(label=&quot;Select All&quot;, command=donothing)<br />\nmenubar.add_cascade(label=&quot;Edit&quot;, menu=editmenu)</p>\n\n<p>helpmenu = Menu(menubar, tearoff=0)<br />\nhelpmenu.add_command(label=&quot;Help Index&quot;, command=donothing)<br />\nhelpmenu.add_command(label=&quot;About...&quot;, command=donothing)<br />\nmenubar.add_cascade(label=&quot;Help&quot;, menu=helpmenu)</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>root.config(menu=menubar)<br />\nroot.mainloop()</p>\n\n<p>#&nbsp;filemenu = Menu(menubar, tearoff=0) -&gt; deklaracja nowego okenka menu<br />\n# filemenu.add_command -&gt; dodanie nowego elementu do menu<br />\n# menubar.add_cascade(label=&quot;File&quot;, menu=filemenu) -&gt; dodanie nazwy menu</p>\n","0"),
("547","Menubutton()","<p>Uzyj widgetu menubotton()</p>\n","<p>from tkinter import *<br />\nimport tkinter</p>\n\n<p>top = Tk()</p>\n\n<p>mb = &nbsp;Menubutton ( top, text = &quot;condiments&quot;, relief = RAISED )<br />\nmb.grid()<br />\nmb.menu &nbsp;= &nbsp;Menu ( mb, tearoff = 0 )<br />\nmb[&quot;menu&quot;] &nbsp;= &nbsp;mb.menu<br />\n&nbsp; &nbsp;&nbsp;<br />\nmayoVar &nbsp;= IntVar()<br />\nketchVar = IntVar()</p>\n\n<p>mb.menu.add_checkbutton ( label = &quot;mayo&quot;,variable = mayoVar )<br />\nmb.menu.add_checkbutton ( label = &quot;ketchup&quot;,variable = ketchVar )</p>\n\n<p><br />\nmb.pack()<br />\ntop.mainloop()<br />\nprint(mayoVar.get())<br />\nmayoVar.set(0) # Ustawienie wartoÅ›ci na 0 czyli nie zanaczone<br />\nprint(mayoVar.get())<br />\n&nbsp;</p>\n","0"),
("548","Message()","<p>UÅ¼yj widgetu message</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()</p>\n\n<p>var = StringVar()<br />\nlabel = Message( root, textvariable = var, relief = RAISED )</p>\n\n<p>var.set(&quot;Hey!? How are you doing?&quot;)<br />\nlabel.pack()<br />\nroot.mainloop()<br />\n&nbsp;</p>\n","0"),
("549","Radiobutton()","<p>UÅ¼yj widgetu Radiobutton</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>def sel():<br />\n&nbsp; &nbsp;selection = &quot;You selected the option &quot; + str(var.get())<br />\n&nbsp; &nbsp;label.config(text = selection)</p>\n\n<p>root = Tk()<br />\nvar = IntVar()<br />\nR1 = Radiobutton(root, text = &quot;Option 1&quot;, variable = var, value = 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; command = sel)<br />\nR1.pack( anchor = W )</p>\n\n<p>R2 = Radiobutton(root, text = &quot;Option 2&quot;, variable = var, value = 2,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; command = sel)<br />\nR2.pack( anchor = W )</p>\n\n<p>R3 = Radiobutton(root, text = &quot;Option 3&quot;, variable = var, value = 3,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; command = sel)<br />\nR3.pack( anchor = W)</p>\n\n<p>label = Label(root)<br />\nlabel.pack()<br />\nroot.mainloop()<br />\nprint(var.get())</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/radionbutton.jpg\" /></p>\n","0"),
("550","Scale","<p>UÅ¼yj widgetu scale</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/scale.jpg\" /></p>\n","<p>from tkinter import *</p>\n\n<p>def sel():<br />\n&nbsp; &nbsp;selection = &quot;Value = &quot; + str(var.get())<br />\n&nbsp; &nbsp;label.config(text = selection)</p>\n\n<p>root = Tk()<br />\nvar = DoubleVar()<br />\nscale = Scale( root, variable = var )<br />\nscale.pack(anchor = CENTER)</p>\n\n<p>button = Button(root, text = &quot;Get Scale Value&quot;, command = sel)<br />\nbutton.pack(anchor = CENTER)</p>\n\n<p>label = Label(root)<br />\nlabel.pack()</p>\n\n<p>root.mainloop()<br />\n&nbsp;</p>\n","0"),
("551","Scrollbar","<p>UÅ¼yj widgetu scrollbar</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/Scrollbar.jpg\" style=\"height:414px; width:1280px\" /></p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()<br />\nscrollbar = Scrollbar(root)<br />\nscrollbar.pack( side = RIGHT, fill = Y )</p>\n\n<p>def check_list():<br />\n&nbsp; &nbsp;try:<br />\n&nbsp; &nbsp; &nbsp; s = mylist.selection_get()<br />\n&nbsp; &nbsp; &nbsp; print(&#39;selected:&#39;, s)<br />\n&nbsp; &nbsp;except:<br />\n&nbsp; &nbsp; &nbsp; print(&#39;no selection&#39;)</p>\n\n<p><br />\nmylist = Listbox(root, yscrollcommand = scrollbar.set )<br />\nfor line in range(11):<br />\n&nbsp; &nbsp;mylist.insert(line, &quot;This is line number &quot; + str(line))</p>\n\n<p>mylist.delete(10)</p>\n\n<p>mylist.pack( side = LEFT, fill = BOTH )<br />\nscrollbar.config( command = mylist.yview )</p>\n\n<p>B = Button(root, text = &quot;OK&quot;, command = check_list)<br />\nB.place(x = 200,y = 20)</p>\n\n<p>&nbsp; &nbsp;<br />\nmainloop()<br />\n&nbsp;</p>\n","0"),
("552","Text","<p>UÅ¼yj widgetu Text</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/Text.jpg\" style=\"height:838px; width:1280px\" /></p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()</p>\n\n<p>def check_list():</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; s = text.get(1.0, 1.49)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;|&#39; + s + &#39;|&#39;) # |Hello.....Bye Bye.....|<br />\n&nbsp; &nbsp; &nbsp; &nbsp; s = text.get(2.0, 2.49)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;|&#39; + s + &#39;|&#39;) # ||<br />\n&nbsp; &nbsp; &nbsp;<br />\ntext = Text(root, width=49)<br />\ntext.insert(INSERT, &quot;Hello.....&quot;)<br />\ntext.insert(END, &quot;Bye Bye.....&quot;)<br />\ntext.pack()</p>\n\n<p>text.tag_add(&quot;here&quot;, &quot;1.0&quot;, &quot;1.4&quot;)<br />\ntext.tag_add(&quot;start&quot;, &quot;1.8&quot;, &quot;1.13&quot;)<br />\ntext.tag_config(&quot;here&quot;, background = &quot;yellow&quot;, foreground = &quot;blue&quot;)<br />\ntext.tag_config(&quot;start&quot;, background = &quot;black&quot;, foreground = &quot;green&quot;)</p>\n\n<p>B = Button(root, text = &quot;OK&quot;, command = check_list)<br />\nB.place(x = 50,y = 250)</p>\n\n<p><br />\nroot.mainloop()<br />\n&nbsp;</p>\n","0"),
("553","Toplevel","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()<br />\nroot.title(&quot;hello&quot;)</p>\n\n<p>top = Toplevel()<br />\ntop.title(&quot;Python&quot;)<br />\ntop.mainloop()</p>\n\n<p># Po zamkniÄ™ciu hello oby siÄ™ zamykajÄ…<br />\n&nbsp;</p>\n","","0"),
("554","Spinbox","<p>UÅ¼yj widgetu&nbsp;Spinbox</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tkspinbox.jpg\" style=\"height:118px; width:263px\" /></p>\n","<p>from tkinter import *</p>\n\n<p>master = Tk()</p>\n\n<p>def check_list():</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; s = w.get()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(s)</p>\n\n<p>w = Spinbox(master, from_ = 0, to = 10)<br />\nw.pack()</p>\n\n<p>B = Button(master, text = &quot;OK&quot;, command = check_list)<br />\nB.place(x = 50,y = 250)</p>\n\n<p>mainloop()<br />\n&nbsp;</p>\n","0"),
("555","PanedWindow","<p>UÅ¼yj widgetu&nbsp;PanedWindow</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/tkpanedwindow.jpg\" style=\"height:105px; width:254px\" /></p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>m1 = PanedWindow()<br />\nm1.pack(fill = BOTH, expand = 1)</p>\n\n<p>left = Entry(m1, bd = 5)<br />\nm1.add(left)</p>\n\n<p>m2 = PanedWindow(m1, orient = VERTICAL)<br />\nm1.add(m2)</p>\n\n<p>top = Scale( m2, orient = HORIZONTAL)<br />\nm2.add(top)</p>\n\n<p>bottom = Button(m2, text = &quot;OK&quot;)<br />\nm2.add(bottom)</p>\n\n<p>mainloop()<br />\n&nbsp;</p>\n","0"),
("556","LabelFrame","<p>UÅ¼yj widgetu&nbsp;LabelFrame</p>\n","<p># !/usr/bin/python3<br />\nfrom tkinter import *</p>\n\n<p>root = Tk()</p>\n\n<p>labelframe = LabelFrame(root, text = &quot;This is a LabelFrame&quot;)<br />\nlabelframe.pack()<br />\n&nbsp;<br />\nleft = Label(labelframe, text = &quot;Inside the LabelFrame&quot;)<br />\nleft.pack()<br />\n&nbsp;<br />\nroot.mainloop()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/labelform_1.jpg\" style=\"height:838px; width:1063px\" /></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/tkinter/labelform_2.jpg\" style=\"height:572px; width:1280px\" /></p>\n","0"),
("557","tkMessageBox","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli wiadomoÅ›Ä‡:</p>\n\n<ul>\n	<li>\n	<p>showinfo()</p>\n	</li>\n	<li>\n	<p>showwarning()</p>\n	</li>\n	<li>\n	<p>showerror ()</p>\n	</li>\n	<li>\n	<p>askquestion()</p>\n	</li>\n	<li>\n	<p>askokcancel()</p>\n	</li>\n	<li>\n	<p>askyesno ()</p>\n	</li>\n	<li>\n	<p>askretrycancel ()</p>\n	</li>\n</ul>\n","<p>from tkinter import *</p>\n\n<p>from tkinter import messagebox</p>\n\n<p>top = Tk()<br />\ntop.geometry(&quot;500x500&quot;)<br />\ndef showinfo():<br />\n&nbsp; &nbsp;a = messagebox.showinfo(&quot;message&quot;, &quot;showinfo&quot;)<br />\n&nbsp; &nbsp;print(a) # ok<br />\ndef showwarning():<br />\n&nbsp; &nbsp;a = messagebox.showwarning(&quot;message&quot;, &quot;showwarning&quot;)<br />\n&nbsp; &nbsp;print(a) # ok<br />\ndef showerror():<br />\n&nbsp; &nbsp;a = messagebox.showerror(&quot;message&quot;, &quot;showerror&quot;)<br />\n&nbsp; &nbsp;print(a) # ok<br />\ndef askquestion():<br />\n&nbsp; &nbsp;a = messagebox.askquestion(&quot;message&quot;, &quot;askquestion&quot;)<br />\n&nbsp; &nbsp;print(a) # no | yes<br />\ndef askokcancel():<br />\n&nbsp; &nbsp;a = messagebox.askokcancel(&quot;message&quot;, &quot;askokcancel&quot;)<br />\n&nbsp; &nbsp;print(a) # True | False<br />\ndef askyesno():<br />\n&nbsp; &nbsp;a = messagebox.askyesno(&quot;message&quot;, &quot;askyesno&quot;)<br />\n&nbsp; &nbsp;print(a) # True | False<br />\ndef askretrycancel():<br />\n&nbsp; &nbsp;a = messagebox.askretrycancel(&quot;message&quot;, &quot;askretrycancel&quot;)<br />\n&nbsp; &nbsp;print(a) # True | False</p>\n\n<p>A = Button(top, text = &quot;showinfo&quot;, command = showinfo)<br />\nA.place(x = 35,y = 50)</p>\n\n<p>B = Button(top, text = &quot;showwarning&quot;, command = showwarning)<br />\nB.place(x = 35,y = 100)</p>\n\n<p>C = Button(top, text = &quot;showerror&quot;, command = showerror)<br />\nC.place(x = 35,y = 150)</p>\n\n<p>D = Button(top, text = &quot;askquestion&quot;, command = askquestion)<br />\nD.place(x = 35,y = 200)</p>\n\n<p>E = Button(top, text = &quot;askokcancel&quot;, command = askokcancel)<br />\nE.place(x = 35,y = 250)</p>\n\n<p>F = Button(top, text = &quot;askyesno&quot;, command = askyesno)<br />\nF.place(x = 35,y = 300)</p>\n\n<p>G = Button(top, text = &quot;askretrycancel&quot;, command = askretrycancel)<br />\nG.place(x = 35,y = 350)</p>\n\n<p>top.mainloop()</p>\n","0"),
("558","pack()","","","0"),
("559","grid()","","","0"),
("560","place()","","","0"),
("561","pygame.key.get_focused","<p>UÅ¼yj funkcji kt&oacute;ra zwr&oacute;ci 1 jeÅ¼eli aktywne okienko to te wygenerowane z pygame.</p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; print(pygame.key.get_focused())</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.key/get_focused.jpg\" style=\"height:703px; width:1280px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.key/get_focused2.jpg\" style=\"height:707px; width:1280px\" /></p>\n","0"),
("562","pygame.key.get_pressed","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli stan wszystkich dostÄ™pnych przycisk&oacute;w jeÅ¼eli naciÅ›niÄ™ty to pisze 1</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.key/get_pressed.jpg\" style=\"height:320px; width:1280px\" /></p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.get_pressed())</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("563","pygame.key.get_mods","<p>UÅ¼yj funkcji kt&oacute;ra wypisze kt&oacute;ry modifer key jest wciÅ›niÄ™ty 0 jeÅ¼eli Å¼aden.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.key/modifier_keys.jpg\" style=\"height:132px; width:383px\" /></p>\n\n<p>Shift -&gt; 1</p>\n\n<p>Crl -&gt; 64</p>\n\n<p>Alt -&gt; 256</p>\n\n<p>Right&nbsp;Shift -&gt; 2</p>\n\n<p>Right Crl -&gt; 128</p>\n\n<p>Right Alt -&gt; 576</p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.get_mods())<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(&#39;&#39;)</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("564","pygame.key.set_mods","<p>UÅ¼yj funkcji kt&oacute;ra sprawi Å¼e przycisk&nbsp;modifier keys jest tymczasowo wciÅ›niÄ™ty.</p>\n\n<p>Shift -&gt; 1</p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pygame.key.set_mods(1)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.get_mods())<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(&#39;&#39;)</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("565","pygame.key.set_repeat","<p>UÅ¼yj funkcji kt&oacute;ra kontroluje jak przyciski sÄ… wciÅ›niÄ™te</p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pygame.key.set_repeat(500,30)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.get_repeat()) #&nbsp;(500,30)</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("566","pygame.key.get_repeat","<p>UÅ¼yj funkcji kt&oacute;ra sprawdzi w jaki spos&oacute;b przyciski sÄ… wciskane</p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pygame.key.set_repeat(500,30)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.get_repeat()) #&nbsp;(500,30)</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("567","pygame.key.name","<p>UÅ¼yj funkcji kt&oacute;ra wypisze nazwÄ™ przycisku na podstwie numeru</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.key/key.name.jpg\" style=\"height:242px; width:823px\" /></p>\n","<p>import pygame</p>\n\n<p>pygame.init()</p>\n\n<p>gameDisplay = pygame.display.set_mode((1000,800))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while 1:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pygame.quit()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; quit()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(event)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(event.key)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(pygame.key.name(event.key))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60) &nbsp;</p>\n\n<p><br />\npygame.quit()<br />\nquit()</p>\n","0"),
("568","pygame.examples.aliens.main","<p>Uruchom aliens</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/1.aliens.jpg\" style=\"height:519px; width:637px\" /></p>\n","<p>import pygame.examples.aliens<br />\npygame.examples.aliens.main()</p>\n","0"),
("569","pygame.examples.oldalien.main","<p>Uruchom oldalien</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/2.oldalien.jpg\" style=\"height:518px; width:641px\" /></p>\n","<p>import pygame.examples.oldalien<br />\npygame.examples.oldalien.main()</p>\n","0"),
("570","pygame.examples.stars.main","<p>Uruchom stars</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/3.stars.jpg\" style=\"height:516px; width:639px\" /></p>\n","<p>import pygame.examples.stars<br />\npygame.examples.stars.main()</p>\n","0"),
("571","pygame.examples.chimp.main","<p>Uruchom&nbsp;chimp</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/4.chimp.jpg\" style=\"height:94px; width:462px\" /></p>\n","<p>import pygame.examples.chimp<br />\npygame.examples.chimp.main()</p>\n","0"),
("572","pygame.examples.moveit.main","<p>Uruchom&nbsp;moveit</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/5.moveit.jpg\" style=\"height:514px; width:636px\" /></p>\n","<p>import pygame.examples.moveit<br />\npygame.examples.moveit.main()</p>\n","0"),
("573","pygame.examples.fonty.main","<p>Uruchom&nbsp;fonty</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/6.fonty.jpg\" style=\"height:230px; width:398px\" /></p>\n","<p>import pygame.examples.fonty<br />\npygame.examples.fonty.main()</p>\n","0"),
("597","Taskbar","<p>Run python scripts (*.py) or executable program (*.exe). Chose type of file (python script or executable program), add paths and descriptions to files you want to open. And then just select form tray menu previously defined file to run.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/Autoit/Taskbar/taskbar_1.jpg\" style=\"height:276px; width:545px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/Autoit/Taskbar/taskbar_2.jpg\" style=\"height:227px; width:467px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/Autoit/Taskbar/taskbar_3.jpg\" style=\"height:234px; width:453px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/Autoit/Taskbar/taskbar_4.jpg\" style=\"height:228px; width:820px\" /></p>\n","","0"),
("576","pygame.examples.eventlist.main","<p>Uruchom&nbsp;eventlist</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/7.eventlist.jpg\" style=\"height:509px; width:640px\" /></p>\n","<p>import pygame.examples.eventlist<br />\npygame.examples.eventlist.main()</p>\n","0"),
("577","pygame.examples.arraydemo.main","<p>Uruchom&nbsp;arraydemo</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/8.arraydemo.jpg\" style=\"height:176px; width:413px\" /></p>\n","<p>import pygame.examples.arraydemo<br />\npygame.examples.arraydemo.main()</p>\n","0"),
("578","pygame.examples.sound.main","<p>Uruchom&nbsp;sound</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/9.sound.jpg\" style=\"height:187px; width:356px\" /></p>\n","<p>import pygame.examples.sound<br />\npygame.examples.sound.main()</p>\n","0"),
("579","pygame.examples.sound_array_demos.main","<p>Uruchom&nbsp;sound_array_demos</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/10.sound_array_demos.jpg\" style=\"height:720px; width:545px\" /></p>\n","<p>import pygame.examples.sound_array_demos<br />\npygame.examples.sound_array_demos.main()</p>\n","0"),
("581","pygame.examples.liquid.main","<p>Uruchom&nbsp;liquid</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/11.liquid.jpg\" style=\"height:509px; width:634px\" /></p>\n","<p>import pygame.examples.liquid<br />\npygame.examples.liquid.main()</p>\n","0"),
("582","pygame.examples.glcube.main","<p>Uruchom&nbsp;glcube</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/12.glcube.jpg\" style=\"height:514px; width:641px\" /></p>\n","<p>import pygame.examples.glcube<br />\npygame.examples.glcube.main()</p>\n","0"),
("583","pygame.examples.blend_fill.main","<p>Uruchom&nbsp;blend_fill</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/13.blend_fill.jpg\" style=\"height:639px; width:1159px\" /></p>\n","<p>import pygame.examples.blend_fill<br />\npygame.examples.blend_fill.main()</p>\n","0"),
("584","pygame.examples.cursors.main","<p>Uruchom&nbsp;cursors</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/14.cursors.jpg\" style=\"height:620px; width:801px\" /></p>\n","<p>import pygame.examples.cursors<br />\npygame.examples.cursors.main()</p>\n","0"),
("585","pygame.examples.midi.main","<p>Uruchom&nbsp;midi</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/15.midi.jpg\" style=\"height:194px; width:585px\" /></p>\n","<p>import pygame.examples.midi<br />\npygame.examples.midi.main()</p>\n","0"),
("586","pygame.examples.scroll.main","<p>Uruchom&nbsp;scroll</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.examples/16.scroll.jpg\" style=\"height:350px; width:392px\" /></p>\n","<p>import pygame.examples.scroll<br />\npygame.examples.scroll.main()</p>\n","0"),
("598","Dos Game","<p>Play old classics games that you couldn&rsquo;t directly run on your new computer. Chose category which is the first letter of games and then select game you are interested in. Now you will see window with name of selected game, company that produced it, date of release, description of this game and play button that will open selected game.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/DosGames/DosGames_1.jpg\" style=\"height:625px; width:1049px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/DosGames/DosGames_2.jpg\" style=\"height:399px; width:641px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/DosGames/DosGames_3.jpg\" style=\"height:475px; width:632px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Programing_Project/DosGames/DosGames_4.jpg\" style=\"height:395px; width:636px\" /></p>\n","","0"),
("652","bluetoothGetConnectedDeviceName","","","0"),
("651","bluetoothDiscoveryStart","","","0"),
("653","bluetoothGetLocalAddress","","","0"),
("654","bluetoothGetLocalName","","","0"),
("655","bluetoothGetRemoteDeviceName","","","0"),
("656","bluetoothGetScanMode","","","0"),
("657","bluetoothIsDiscovering","","","0"),
("658","bluetoothMakeDiscoverable","","","0"),
("659","bluetoothRead","","","0"),
("660","bluetoothReadBinary","","","0"),
("661","bluetoothReadLine","","","0"),
("662","bluetoothReadReady","","","0"),
("650","bluetoothDiscoveryCancel","","","0"),
("649","bluetoothConnect","","","0"),
("648","bluetoothActiveConnections","","","0"),
("647","bluetoothAccept","","","0"),
("646","launch","","","0"),
("645","getRunningPackages","<p>Returns a list of packages running activities or services</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.getRunningPackages()</p>\n\n<p>[u&#39;com.android.bluetooth&#39;, u&#39;com.qualcomm.qcrilmsgtunnel&#39;, u&#39;com.google.android.gms&#39;, u&#39;com.android.smspush&#39;, u&#39;org.codeaurora.bluetooth&#39;, u&#39;com.android.inputmethod.latin&#39;, u&#39;com.dsi.ant.server&#39;, u&#39;org.codeaurora.ims&#39;, u&#39;com.huawei.powergenie&#39;, u&#39;com.android.mediacenter&#39;, u&#39;com.huawei.hwnff&#39;, u&#39;com.android.server.telecom&#39;, u&#39;org.kenig39apps.wifitransfer&#39;, u&#39;com.alarmclock.xtreme.free&#39;, u&#39;com.android.keyguard&#39;, u&#39;com.qualcomm.qti.phonefeature&#39;, u&#39;com.android.chrome&#39;, u&#39;com.google.android.tts&#39;, u&#39;com.qualcomm.location&#39;, u&#39;com.android.systemui&#39;, u&#39;com.android.phone&#39;, u&#39;com.android.incallui&#39;, u&#39;com.android.vending&#39;, u&#39;com.googlecode.android_scripting&#39;, u&#39;com.qualcomm.simcontacts&#39;, u&#39;android&#39;, u&#39;com.android.stk&#39;, u&#39;com.cootek.smartinputv5&#39;]</p>\n","0"),
("601","example","","","0"),
("602","setResultBoolean","","","0");
INSERT INTO function VALUES
("603","setResultBooleanArray","","","0"),
("604","setResultByte","","","0"),
("605","setResultByteArray","","","0"),
("606","setResultChar","","","0"),
("607","setResultCharArray","","","0"),
("608","setResultDouble","","","0"),
("609","setResultDoubleArray","","","0"),
("610","setResultFloat","","","0"),
("611","setResultFloatArray","","","0"),
("612","setResultInteger","","","0"),
("613","setResultIntegerArray","","","0"),
("614","setResultLong","","","0"),
("615","setResultLongArray","","","0"),
("616","setResultSerializable","","","0"),
("617","setResultShort","","","0"),
("618","setResultShortArray","","","0"),
("619","setResultString","","","0"),
("620","setResultStringArray","","","0"),
("621","environment","","","0"),
("622","getClipboard","<p>Read text from the clipboard</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.getClipboard().result</p>\n","0"),
("623","getConstants","<p>Get list of constants (static final fields) for a class</p>\n","","0"),
("624","getInput","<p>Queries the user for a text input</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetInput.jpg\" style=\"height:400px; width:224px\" /></p>\n\n<p>If we click Cancel result will be None</p>\n","<p>import android&nbsp;<br />\ndroid = android.Android()&nbsp;<br />\nuname = droid.dialogGetInput(&quot;Title example&quot;,&quot;Enter your name&quot;)<br />\nprint(uname.result) &nbsp;</p>\n\n<p>#&nbsp;getInput don&#39;t work enymore</p>\n","0"),
("625","getIntent","<p>Returns the intent that launched the script</p>\n","<p>import android&nbsp;<br />\ndroid = android.Android()&nbsp;<br />\ndroid.getIntent()</p>\n\n<p># {u&#39;packagename&#39;: u&#39;com.googlecode.android_scripting&#39;, u&#39;classname&#39;: u&#39;com.googlecode.android_scripting.activity.ScriptingLayerService&#39;, u&#39;extras&#39;: {u&#39;com.googlecode.android_scripting.extra.SCRIPT_PATH&#39;: u&#39;/storage/sdcard0/sl4a/scripts/Testy/battery.py&#39;}, u&#39;flags&#39;: 0, u&#39;action&#39;: u&#39;com.googlecode.android_scripting.action.LAUNCH_FOREGROUND_SCRIPT&#39;, u&#39;categories&#39;: None}</p>\n","0"),
("626","getPackageVersion","<p>Returns package version name</p>\n","","0"),
("627","getPackageVersionCode","","","0"),
("628","getPassword","<p>Queries the user for a password</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetPassword.jpg\" style=\"height:426px; width:214px\" /></p>\n","<p>import android&nbsp;<br />\ndroid = android.Android()&nbsp;<br />\ndroid.dialogGetPassword()</p>\n\n<p>&nbsp;</p>\n\n<p># getPassword don&#39;t work</p>\n","0"),
("629","log","","","0"),
("630","makeIntent","","","0"),
("631","makeToast","<p>Displays a short-duration Toast notification</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/makeToast.jpg\" /></p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.makeToast(&#39;my text to print should be inside the quotes&#39;)</p>\n","0"),
("632","notify","<p>Displays a notification that will be canceled when the user clicks on it.&nbsp;<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/notify.jpg\" /></p>\n\n<p>&nbsp;</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.notify(&quot;Title examle&quot;, &quot;message example&quot;)</p>\n","0"),
("633","requiredVersion","","","0"),
("634","sendBroadcast","","","0"),
("635","sendBroadcastIntent","","","0"),
("636","sendEmail","<p>Launches an activity that sends an e-mail message to a given recipient.&nbsp;<br />\nIt will ask user do the work through ... and user how to chose aplication</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/sendEmail.jpg\" style=\"height:428px; width:220px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/sendEmail2.jpg\" /></p>\n\n<pre>\n\n&nbsp;</pre>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.sendEmail(&quot;szymonotreba@interia.pl&quot;,&quot;Title&quot;,&quot;Subject&quot;)</p>\n","0"),
("637","setClipboard","<p>Put text in the clipboard</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.setClipboard(&quot;example&quot;)</p>\n","0"),
("638","startActivity","","","0"),
("639","startActivityForResult","","","0"),
("640","startActivityForResultIntent","","","0"),
("641","startActivityIntent","","","0"),
("642","vibrate","<p>Vibrates the phone or a specified duration in milliseconds</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.vibrate(60000)</p>\n","0"),
("643","forceStopPackage","<p>Force stops a package</p>\n\n<p># Don&#39;t&nbsp;work</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.forceStopPackage(&#39;com.alarmclock.xtreme.free&#39;)</p>\n\n<p># Don&#39;t work</p>\n","0"),
("644","getLaunchableApplications","<p>Returns a list of all launchable application class names</p>\n","<p>import android<br />\ndroid = android.Android()<br />\ndroid.getLaunchableApplications()</p>\n\n<p>{u&#39;WiFi File Transfer&#39;: u&#39;org.kenig39apps.wifitransfer.WifiFileTransferActivity&#39;, u&#39;Internet&#39;: u&#39;com.android.browser.BrowserActivity&#39;, u&#39;Kalkulator&#39;: u&#39;com.android.calculator2.Calculator&#39;, u&#39;WPS Office&#39;: u&#39;cn.wps.moffice.documentmanager.PreStartActivity&#39;, u&#39;Galeria&#39;: u&#39;com.huawei.gallery.app.GalleryMain&#39;, u&#39;T-Point&#39;: u&#39;activity.SplashScreen&#39;, u&#39;Pliki&#39;: u&#39;com.huawei.hidisk.filemanager.FileManager&#39;, u&#39;Data Enabler&#39;: u&#39;com.farproc.data.enabler.Main&#39;, u&#39;Blokada ekranu&#39;: u&#39;com.android.keyguard.keyguardplus.OneKeyLockActivity&#39;, u&#39;Aparat&#39;: u&#39;com.huawei.camera&#39;, u&#39;Ustawienia&#39;: u&#39;com.android.settings.SettingsTab&#39;, u&#39;my giffgaff&#39;: u&#39;com.giffgaffmobile.controller.SplashActivity&#39;, u&#39;Pogoda&#39;: u&#39;com.huawei.android.totemweather.WeatherHome&#39;, u&#39;Muzyka&#39;: u&#39;com.android.mediacenter.PageActivity&#39;, u&#39;QuickSupport&#39;: u&#39;com.teamviewer.quicksupport.ui.QSActivity&#39;, u&#39;Linux Command CheatSheet&#39;: u&#39;com.solutions.kaitec.linuxcommandcheatsheet.LinuxCommandCheatSheet&#39;, u&#39;Pirates&#39;: u&#39;com.ubisoft.assassin.pirates.SparkActivity&#39;, u&#39;ACR&#39;: u&#39;com.nll.acr.activity.MainActivity&#39;, u&#39;ARChon Packager&#39;: u&#39;me.bpear.archonpackager.activityWizard&#39;, u&#39;Filmy&#39;: u&#39;com.huawei.hwvplayer.framework.MainActivity&#39;, u&#39;Przenou015bny punkt dostu0119pu&#39;: u&#39;com.android.settings.Settings$TetherSettingsActivity&#39;, u&#39;Skype&#39;: u&#39;com.skype.raider.Main&#39;, u&#39;Volume Booster GOODEV&#39;: u&#39;com.goodev.volume.booster.SpeakerBoost&#39;, u&#39;Sklep Play&#39;: u&#39;com.android.vending.AssetBrowserActivity&#39;, u&#39;Pobrane&#39;: u&#39;com.android.providers.downloads.ui.DownloadList&#39;, u&#39;Gmail&#39;: u&#39;com.google.android.gm.ConversationListActivityGmail&#39;, u&#39;Evernote&#39;: u&#39;com.evernote.ui.HomeActivity&#39;, u&#39;OneDrive&#39;: u&#39;com.microsoft.skydrive.MainActivity&#39;, u&#39;Klawiatura Google&#39;: u&#39;com.android.inputmethod.latin.setup.SetupActivity&#39;, u&#39;Narzu0119dzia SIM&#39;: u&#39;com.android.stk.StkLauncherActivity&#39;, u&#39;Gry Play&#39;: u&#39;com.google.android.gms.games.ui.destination.main.MainActivity&#39;, u&#39;Proyectos Pi&#39;: u&#39;berkinalex.raspberrypi.preinicio&#39;, u&#39;Apollo Taxis&#39;: u&#39;com.auriga.taxi.core.SplashActivity&#39;, u&#39;WhatsApp&#39;: u&#39;com.whatsapp.Main&#39;, u&#39;Roller Coaster VR&#39;: u&#39;com.unity3d.player.UnityPlayerProxyActivity&#39;, u&#39;Total Commander&#39;: u&#39;com.ghisler.android.TotalCommander.TotalCommander&#39;, u&#39;Settings&#39;: u&#39;gudaps.apnmaster.MyDialog&#39;, u&#39;Osoby&#39;: u&#39;com.android.contacts.activities.PeopleActivity&#39;, u&#39;AutoMapa&#39;: u&#39;pl.aqurat.automapa.info.SplashScreenActivity&#39;, u&#39;Zegar&#39;: u&#39;com.android.deskclock.AlarmsMainActivity&#39;, u&#39;TouchPal&#39;: u&#39;com.cootek.smartinput5.GateActivity&#39;, u&#39;Poczta Gu0142osowa PRO&#39;: u&#39;com.play.vvm.activity.LoadingActivity_&#39;, u&#39;Pulpit zdalny&#39;: u&#39;org.chromium.chromoting.Chromoting&#39;, u&#39;Aktualizator&#39;: u&#39;com.huawei.android.hwouc.ui.activities.MainEntranceActivity&#39;, u&#39;Clouto&#39;: u&#39;clouto.mobile.android.BlankActivity&#39;, u&#39;Ustawienia alarmxf3w&#39;: u&#39;com.android.cellbroadcastreceiver.ui.CellBroadcastListActivity&#39;, u&#39;Telefon&#39;: u&#39;com.android.contacts.activities.DialtactsActivity&#39;, u&#39;YouTube&#39;: u&#39;com.google.android.youtube.app.honeycomb.Shell$HomeActivity&#39;, u&#39;xb5Torrent&#39;: u&#39;com.bittorrent.client.EntryActivity&#39;, u&#39;Hangouts&#39;: u&#39;com.google.android.talk.SigningInActivity&#39;, u&#39;Wyszukiwanie gu0142osowe&#39;: u&#39;com.google.android.googlequicksearchbox.VoiceSearchActivity&#39;, u&#39;Mapy&#39;: u&#39;com.google.android.maps.MapsActivity&#39;, u&#39;Latarka&#39;: u&#39;com.huawei.flashlight.FlashLightActivity&#39;, u&#39;Explorer&#39;: u&#39;com.speedsoftware.explorer.Explorer&#39;, u&#39;Python for Android&#39;: u&#39;com.googlecode.pythonforandroid.PythonMain&#39;, u&#39;Muzyka Play&#39;: u&#39;com.android.music.activitymanagement.TopLevelActivity&#39;, u&#39;Opera&#39;: u&#39;com.opera.Opera&#39;, u&#39;Wrexham Taxis&#39;: u&#39;com.autocab.premiumapp3.ui.activities.MapViewActivity&#39;, u&#39;Kopia zapasowa&#39;: u&#39;com.huawei.KoBackup.InitializeActivity&#39;, u&#39;Wiu2011Fi Direct&#39;: u&#39;com.android.settings.Settings$WifiP2pSettingsActivity&#39;, u&#39;Alarm Clock Xtreme&#39;: u&#39;com.alarmclock.xtreme.free.AlarmClock&#39;, u&#39;Rejestrator du017awiu0119ku&#39;: u&#39;com.android.soundrecorder.SoundRecorder&#39;, u&#39;Kalendarz&#39;: u&#39;pl.mb.calendar.FullActivity&#39;, u&#39;Halifax&#39;: u&#39;com.halifax.halifax.GrappleActivity&#39;, u&#39;Zarzu0105dzanie energiu0105&#39;: u&#39;com.android.settings.Settings$PowerSaveModeSettingsActivity&#39;, u&#39;SL4A&#39;: u&#39;com.googlecode.android_scripting.activity.ScriptManager&#39;, u&#39;Filmy Play&#39;: u&#39;com.google.android.youtube.videos.EntryPoint&#39;, u&#39;Chrome&#39;: u&#39;com.google.android.apps.chrome.Main&#39;, u&#39;AirDroid&#39;: u&#39;com.sand.airdroid.ui.splash.SplashActivity_&#39;, u&#39;Internet Connection App&#39;: u&#39;com.InternetConnectionCheck.MainActivity&#39;, u&#39;Notatnik&#39;: u&#39;com.example.android.notepad.NotePadActivity&#39;, u&#39;Kalkulator Plus&#39;: u&#39;com.digitalchemy.calculator.droidphone.CalculatorMainActivity&#39;, u&#39;E-mail&#39;: u&#39;com.android.email.activity.Welcome&#39;, u&#39;Free Adblocker Browser&#39;: u&#39;com.hsv.freeadblockerbrowser.App&#39;, u&#39;Ninja Rush HD&#39;: u&#39;com.feelingtouch.ninjarush.hd2.FirstPage&#39;, u&#39;Speedtest&#39;: u&#39;com.ookla.speedtest.softfacade.MainActivity&#39;, u&#39;vmall&#39;: u&#39;com.hwc.PersonalMovil.PersonalMovilActivity&#39;, u&#39;Ustawienia Google&#39;: u&#39;com.google.android.gms.app.settings.GoogleSettingsActivity&#39;, u&#39;Tu0142umacz&#39;: u&#39;com.google.android.apps.translate.TranslateActivity&#39;, u&#39;Motywy&#39;: u&#39;com.huawei.android.thememanager.HwThemeManagerActivity&#39;, u&#39;Zdju0119cia&#39;: u&#39;com.google.android.apps.photos.home.HomeActivity&#39;, u&#39;Perfect Building Minecraft&#39;: u&#39;com.thunderhorsedev.perfectbuildingminecraft.MainActivity&#39;, u&#39;Wiadomou015bci&#39;: u&#39;com.android.mms.ui.ConversationList&#39;, u&#39;VideoDownloader&#39;: u&#39;com.harkerapps.download.video.ui.activity.MainActivity&#39;, u&#39;Google&#39;: u&#39;com.google.android.googlequicksearchbox.SearchActivity&#39;, u&#39;Transparent weather clock&#39;: u&#39;com.droid27.transparentclockweather.LauncherActivity&#39;, u&#39;Dysk&#39;: u&#39;com.google.android.apps.docs.app.NewMainProxyActivity&#39;, u&#39;Radio&#39;: u&#39;com.caf.fmradio.FMRadio&#39;, u&#39;VR Cave&#39;: u&#39;com.unity3d.player.UnityPlayerNativeActivity&#39;, u&#39;Earth&#39;: u&#39;com.google.earth.EarthActivity&#39;, u&#39;Dead Effect 2&#39;: u&#39;com.gamedonia.sdk.GamedoniaUnityPlayerActivity&#39;}</p>\n","0"),
("600","sqlitebrowser","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Windows/Database/SQLite_Database_Browser.jpg\" /></p>\n","","0"),
("663","bluetoothSetLocalName","","","0"),
("664","bluetoothStop","","","0"),
("665","bluetoothWrite","","","0"),
("666","bluetoothWriteBinary","","","0"),
("667","checkBluetoothState","","","0"),
("668","toggleBluetoothState","","","0"),
("669","cameraCapturePicture","<p>Take a picture and save it to the specified path</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/cameraCapturePicture1.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/snapshot2.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.cameraCapturePicture(&#39;/sdcard/snapshot2.jpg&#39;)</p>\n","0"),
("670","cameraInteractiveCapturePicture","<p>Starts the image capture application to take a picture and saves it to the specified path</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/cameraInteractiveCapturePicture.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/cameraInteractiveCapturePicture2.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/snapshot21.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.cameraInteractiveCapturePicture(&#39;/sdcard/snapshot2.jpg&#39;)</p>\n","0"),
("671","batteryCheckPresent","<p>Return None if Monitoring battery don&#39;t work or True otherwise.</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;<br />\ndroid.batteryCheckPresent().result &nbsp;# True</p>\n\n<p>&nbsp;</p>\n\n<p>import android</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryCheckPresent().result &nbsp;# None</p>\n\n<p>&nbsp;</p>\n","0"),
("672","batteryGetHealth","<p>Returns the most recently received battery health data</p>\n\n<p>1 - unknown;<br />\n2 - good;<br />\n3 - overheat;<br />\n4 - dead;<br />\n5 - over voltage;<br />\n6 - unspecified failure;</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.batteryGetHealth().result # &nbsp;2</p>\n\n<p>&nbsp;</p>\n","0"),
("673","batteryGetLevel","<p>Returns the most recently received battery level (percentage).&nbsp;</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.batteryGetLevel().result</p>\n","0"),
("674","batteryGetPlugType","<p>Returns the most recently received plug type data</p>\n\n<p>-1 - unknown<br />\n0 - unplugged;<br />\n1 - power source is an AC charger<br />\n2 - power source is a USB port</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.batteryGetPlugType().result</p>\n","0"),
("675","batteryGetStatus","<p>Returns the most recently received battery status data</p>\n\n<p>1 - unknown;<br />\n2 - charging;<br />\n3 - discharging;<br />\n4 - not charging;<br />\n5 - full;</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.batteryGetStatus().result&nbsp;</p>\n","0"),
("676","batteryGetTechnology","<p>Returns the most recently received battery technology data</p>\n\n<p># don&#39;t work</p>\n","","0"),
("677","batteryGetTemperature","<p>Returns the most recently received battery temperature in kelvin</p>\n\n<p>&nbsp;</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>batteryTemperature = droid.batteryGetTemperature().result</p>\n\n<p>print(&quot;Kelvin: &quot; + str(batteryTemperature ) + &quot; Celcius: &quot; + str(batteryTemperature - 273.15))</p>\n","0"),
("678","batteryGetVoltage","<p>Returns the most recently received battery voltage</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.batteryGetVoltage().result #&nbsp;3955</p>\n\n<p>&nbsp;</p>\n","0"),
("679","batteryStartMonitoring","<p>Starts tracking battery state</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>&nbsp;</p>\n","0"),
("680","batteryStopMonitoring","<p>Stops tracking battery state</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n","0"),
("681","readBatteryData","<p>Returns the most recently recorded battery data</p>\n\n<p>#&nbsp;{u&#39;status&#39;: 3, u&#39;temperature&#39;: 307, u&#39;level&#39;: 68, u&#39;battery_present&#39;: True, u&#39;plugged&#39;: 0, u&#39;health&#39;: 2, u&#39;voltage&#39;: 3955, u&#39;technology&#39;: u&#39;&#39;}</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()<br />\ndroid.batteryStartMonitoring()&nbsp;</p>\n\n<p>droid.readBatteryData().result</p>\n\n<p>droid.batteryStopMonitoring</p>\n","0"),
("682","pick","","","0"),
("683","scanBarcode","","","0"),
("684","search","<p>Starts a search for the given query</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/search.jpg\" style=\"height:1024px; width:570px\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.search(&quot;pdf&quot;)</p>\n","0"),
("685","view","","","0"),
("686","viewContacts","<p>Opens the list of contacts</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/viewContacts.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.viewContacts()</p>\n","0"),
("687","viewHtml","","","0"),
("688","viewMap","","","0"),
("689","contactsGet","","","0"),
("690","contactsGetAttributes","<p>Returns a List of all possible attributes for contacts</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.contactsGetAttributes()<br />\nprint(a.result)</p>\n\n<p># [u&#39;sort_key&#39;, u&#39;photo_uri&#39;, u&#39;send_to_voicemail&#39;, u&#39;contact_status&#39;, u&#39;contact_status_label&#39;, u&#39;pinned&#39;, u&#39;display_name&#39;, u&#39;phonebook_label_alt&#39;, u&#39;phonebook_bucket&#39;, u&#39;contact_status_res_package&#39;, u&#39;in_default_directory&#39;, u&#39;photo_id&#39;, u&#39;custom_ringtone&#39;, u&#39;_id&#39;, u&#39;raw_contact_is_read_only&#39;, u&#39;times_contacted&#39;, u&#39;data_set&#39;, u&#39;phonebook_label&#39;, u&#39;account_type&#39;, u&#39;display_name_alt&#39;, u&#39;lookup&#39;, u&#39;phonetic_name&#39;, u&#39;last_time_contacted&#39;, u&#39;contact_last_updated_timestamp&#39;, u&#39;has_phone_number&#39;, u&#39;in_visible_group&#39;, u&#39;display_name_source&#39;, u&#39;photo_file_id&#39;, u&#39;is_user_profile&#39;, u&#39;contact_status_ts&#39;, u&#39;sort_key_alt&#39;, u&#39;phonebook_bucket_alt&#39;, u&#39;contact_presence&#39;, u&#39;starred&#39;, u&#39;photo_thumb_uri&#39;, u&#39;contact_status_icon&#39;, u&#39;account_name&#39;, u&#39;contact_chat_capability&#39;, u&#39;phonetic_name_style&#39;, u&#39;name_raw_contact_id&#39;]</p>\n","0"),
("691","contactsGetById","","","0"),
("692","contactsGetCount","<p>Returns the number of contacts</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.contactsGetCount()<br />\nprint(a.result) # 74<br />\n&nbsp;</p>\n","0"),
("693","contactsGetIds","","","0"),
("694","pickContact","","","0"),
("695","pickPhone","","","0"),
("696","queryAttributes","","","0"),
("697","queryContent","","","0"),
("698","eventClearBuffer","","","0"),
("699","eventGetBrodcastCategories","","","0"),
("700","eventPoll","","","0"),
("701","eventPost","","","0"),
("702","eventRegisterForBroadcast","","","0"),
("703","eventUnregisterForBroadcast","","","0"),
("704","eventWait","","","0"),
("705","eventWaitFor","","","0"),
("706","receiveEvent","","","0"),
("707","rpcPostEvent","","","0"),
("708","startEventDispatcher","","","0"),
("709","stopEventDispatcher","","","0"),
("710","waitForEvent","","","0"),
("711","ttsSpeak","<p>Speaks the provided message via TTS</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/ttsSpeak1.png\" style=\"height:424px; width:215px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/ttsSpeak2.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/ttsSpeak3.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/ttsSpeak4.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/ttsSpeak5.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\n# droid.ttsSpeak(&quot;ByÅ‚em w Londynie przez tydzieÅ„&quot;)<br />\ndroid.ttsSpeak(&quot;When i want to get the Uri of a image stored on drawable, i use this and it works perfect&quot;)</p>\n","0"),
("712","geocode","<p>Returns a list of addresses for the given latitude and longitude</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()</p>\n\n<p>e = droid.geocode(49.987972399999997,18.609508000000002,1).result</p>\n\n<p># [{u&#39;country_name&#39;: u&#39;Polska&#39;, u&#39;feature_name&#39;: u&#39;68&#39;, u&#39;thoroughfare&#39;: u&#39;Wojska Polskiego&#39;, u&#39;country_code&#39;: u&#39;PL&#39;, u&#39;locality&#39;: u&#39;Jastrzu0119bie-Zdrxf3j&#39;}]</p>\n","0"),
("713","getLastKnownLocation","<p>Returns the last known location of the device.&nbsp;</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\na = droid.getLastKnownLocation().result</p>\n\n<p>droid.stopLocating</p>\n\n<p># {u&#39;passive&#39;: {u&#39;bearing&#39;: 81, u&#39;altitude&#39;: 0, u&#39;provider&#39;: u&#39;fused&#39;, u&#39;longitude&#39;: 18.609508000000002, u&#39;time&#39;: 1497911169500L, u&#39;latitude&#39;: 49.987972399999997, u&#39;speed&#39;: 0, u&#39;accuracy&#39;: 1655.7923583984375}, u&#39;network&#39;: {u&#39;bearing&#39;: 0, u&#39;altitude&#39;: 0, u&#39;provider&#39;: u&#39;network&#39;, u&#39;longitude&#39;: 18.609508000000002, u&#39;time&#39;: 1497911138382L, u&#39;latitude&#39;: 49.987972399999997, u&#39;speed&#39;: 0, u&#39;accuracy&#39;: 22.5}, u&#39;gps&#39;: None}</p>\n","0"),
("714","locationProviderEnabled","<p>Ask if provider is enabled</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\nb = droid.locationProviderEnabled().result</p>\n\n<p>print(b)&nbsp;# None</p>\n","0"),
("715","locationProviders","<p>Returns availables providers on the phone</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\nc = droid.locationProviders().result</p>\n\n<p>print(c) # [u&#39;passive&#39;, u&#39;gps&#39;, u&#39;network&#39;]</p>\n","0"),
("716","readLocation","<p>Returns the current location as indicated by all available providers</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\nd = droid.readLocation().result<br />\ndroid.stopLocating</p>\n\n<p>print(d) #&nbsp;# {}</p>\n\n<p>&nbsp;</p>\n","0"),
("717","startLocating","<p>Starts collecting location data</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\na = droid.getLastKnownLocation().result<br />\nb = droid.locationProviderEnabled().result<br />\nc = droid.locationProviders().result<br />\nd = droid.readLocation().result<br />\ne = droid.geocode(49.987972399999997,18.609508000000002,1).result<br />\ndroid.stopLocating</p>\n","0"),
("718","stopLocating","<p>Stops collecting location data</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(15)<br />\ndroid.startLocating()<br />\na = droid.getLastKnownLocation().result<br />\nb = droid.locationProviderEnabled().result<br />\nc = droid.locationProviders().result<br />\nd = droid.readLocation().result<br />\ne = droid.geocode(49.987972399999997,18.609508000000002,1).result<br />\ndroid.stopLocating</p>\n","0"),
("719","mediaIsPlaying","","","0");
INSERT INTO function VALUES
("720","mediaPlay","","","0"),
("721","mediaPlayClose","","","0"),
("722","mediaPlayInfo","","","0"),
("723","mediaPlayList","","","0"),
("724","mediaPlayPause","","","0"),
("725","mediaPlaySeek","","","0"),
("726","mediaPlaySetLooping","","","0"),
("727","mediaPlayStart","","","0"),
("728","recorderCaptureVideo","<p>Records video (and optionally audio) from the camera and saves it to the given location.&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/recorderCaptureVideo.jpg\" style=\"height:428px; width:218px\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.recorderCaptureVideo(&#39;/sdcard/video.mp4&#39;,20,True)</p>\n","0"),
("729","recorderStartMicrophone","<p>Records audio from the microphone and saves it to the given location</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.recorderStartMicrophone(&#39;/sdcard/video.mp3&#39;)<br />\ntime.sleep(25)<br />\ndroid.recorderStop()</p>\n","0"),
("730","recorderStartVideo","<p>Records video from the camera and saves it to the given location.&nbsp;</p>\n\n<p>#&nbsp;videoSize: 0=160x120, 1=320x240, 2=352x288, 3=640x480, 4=800x480</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.recorderStartVideo(&#39;/sdcard/video.mp4&#39;,20,4)</p>\n","0"),
("731","recorderStop","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.recorderStartVideo(&#39;/sdcard/video.mp4&#39;,0,4)<br />\ntime.sleep(5)<br />\ndroid.recorderStop()</p>\n","","0"),
("732","startInteractiveVideoRecording","<p>Starts the video capture application to record a video and saves it to the specified path</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/startInteractiveVideoRecording.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startInteractiveVideoRecording(&#39;/sdcard/video.mp4&#39;)</p>\n","0"),
("733","checkNetworkRoaming","<p>Returns true if the device is considered roaming on the current network, for GSM purposes</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.checkNetworkRoaming().result<br />\nprint(a) # False</p>\n","0"),
("734","getCellLocation","<p>Returns the current cell location</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getCellLocation().result<br />\nprint(a) # {u&#39;cid&#39;: 2335560, u&#39;lac&#39;: 297}</p>\n","0"),
("735","getDeviceId","<p>Returns the unique device ID, for example, the IMEI for GSM and the MEID for CDMA phones. Return null if device ID is not available</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getDeviceId().result<br />\nprint(a) # 867818021243495</p>\n","0"),
("736","getDeviceSoftwareVersion","<p>Returns the software version number for the device, for example, the IMEI/SV for GSM phones. Return null if the software version is not available</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getDeviceSoftwareVersion().result<br />\nprint(a) # 46</p>\n","0"),
("737","getLine1Number","<p>Returns the phone number string for line 1, for example, the MSISDN for a GSM phone. Return null if it is unavailable.<br />\n&nbsp;</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getLine1Number().result<br />\nprint(a) #&nbsp;</p>\n","0"),
("738","getNeighboringCellInfo","<p>Returns the neighboring cell information of the device</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getNeighboringCellInfo().result<br />\nprint(a) # []<br />\n&nbsp;</p>\n","0"),
("739","getNetworkOperator","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getNetworkOperator().result<br />\nprint(a) # 26006<br />\n&nbsp;</p>\n","","0"),
("740","getNetworkOperatorName","<p>Returns the alphabetic name of current registered operator</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getNetworkOperatorName().result<br />\nprint(a) # PLAY</p>\n","0"),
("741","getNetworkType","<p>Returns a the radio technology (network type) currently in use on the device</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getNetworkType().result<br />\nprint(a) # None</p>\n","0"),
("742","getPhoneType","<p>Returns the device phone type</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getPhoneType().result<br />\nprint(a) # gsm</p>\n","0"),
("743","getSimCountryIso","<p>Returns the ISO country code equivalent for the SIM provider&#39;s country code</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSimCountryIso().result<br />\nprint(a) # pl</p>\n","0"),
("744","getSimOperator","<p>Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM. 5 or 6 decimal digits.</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSimOperator().result<br />\nprint(a) # 26006</p>\n","0"),
("745","getSimOperatorName","<p>Returns the Service Provider Name (SPN).</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSimOperatorName().result<br />\nprint(a) # Play</p>\n","0"),
("746","getSimSerialNumber","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSimSerialNumber().result<br />\nprint(a) # 89480610500320422362</p>\n","","0"),
("747","getSimState","<p>Returns the state of the device SIM card</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSimState().result<br />\nprint(a) # ready</p>\n","0"),
("748","getSubscriberId","<p>Returns the unique subscriber ID, for example, the IMSI for a GSM phone. Return null if it is unavailable</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getSubscriberId().result<br />\nprint(a) # 260060082042236</p>\n","0"),
("749","getVoiceMailAlphaTag","<p>Retrieves the alphabetic identifier associated with the voice mail number</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getVoiceMailAlphaTag().result<br />\nprint(a) # poczta glosowa</p>\n","0"),
("750","getVoiceMailNumber","<p>Returns the voice mail number. Return null if it is unavailable</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getVoiceMailNumber().result<br />\nprint(a) # +48790200200</p>\n","0"),
("751","phoneCall","","","0"),
("752","phoneCallNumber","<p>Calls a phone number</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/phoneCallNumber.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.phoneCallNumber(&quot;+48602808086&quot;)</p>\n","0"),
("753","phoneDial","","","0"),
("754","phoneDialNumber","<p>Dials a phone number</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/phoneDialNumber.jpg\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.phoneDialNumber(&quot;+48602808086&quot;)<br />\n&nbsp;</p>\n","0"),
("755","readPhoneState","<p>Returns the current phone state and incoming number</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingPhoneState()<br />\na = droid.readPhoneState().result<br />\ndroid.stopTrackingPhoneState()<br />\nprint(a) # {u&#39;incomingNumber&#39;: u&#39;&#39;, u&#39;state&#39;: u&#39;idle&#39;}</p>\n","0"),
("756","startTrackingPhoneState","<p>Starts tracking phone state</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingPhoneState()<br />\na = droid.readPhoneState().result<br />\ndroid.stopTrackingPhoneState()<br />\nprint(a) # {u&#39;incomingNumber&#39;: u&#39;&#39;, u&#39;state&#39;: u&#39;idle&#39;}</p>\n\n<p><br />\nfile = open(&quot;text.txt&quot;,&quot;w&quot;)<br />\nfile.write(str(a))&nbsp;</p>\n","0"),
("757","stopTrackingPhoneState","<p>Stops tracking phone state</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingPhoneState()<br />\na = droid.readPhoneState().result<br />\ndroid.stopTrackingPhoneState()<br />\nprint(a) # {u&#39;incomingNumber&#39;: u&#39;&#39;, u&#39;state&#39;: u&#39;idle&#39;}<br />\n&nbsp;</p>\n","0"),
("758","prefGetAll","<p>Get list of Shared Preference Values</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.prefGetAll().result<br />\nprint(a) # {u&#39;use_service_port&#39;: u&#39;0&#39;, u&#39;bell&#39;: True, u&#39;use_quick_menu&#39;: True, u&#39;lasteditpos./storage/sdcard0/sl4a/scripts/hello_world.py&#39;: 77, u&#39;enableAutoClose&#39;: True, u&#39;fullscreen&#39;: False, u&#39;editor_fontsize&#39;: u&#39;10&#39;, u&#39;hideServiceNotifications&#39;: False, u&#39;lasteditpos./storage/sdcard0/sl4a/scripts/Testy/battery.py&#39;: 140, u&#39;show_all_files&#39;: False, u&#39;keepalive&#39;: True, u&#39;editor_auto_indent&#39;: False, u&#39;helpForceBrowser&#39;: True, u&#39;camera&#39;: u&#39;Ctrl+A then Space&#39;, u&#39;present_usagetracking&#39;: False, u&#39;bellVibrate&#39;: True, u&#39;rotation&#39;: u&#39;Default&#39;, u&#39;bumpyarrows&#39;: True, u&#39;scrollback&#39;: u&#39;140&#39;, u&#39;keymode&#39;: u&#39;Use right-side keys&#39;, u&#39;hidekeyboard&#39;: False, u&#39;usagetracking&#39;: True, u&#39;fontsize&#39;: u&#39;10&#39;, u&#39;lasteditpos./storage/sdcard0/sl4a/scripts/simon.py&#39;: 127}</p>\n","0"),
("759","prefGetValue","<p>Read a value from shared preferences</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.prefGetValue(&quot;bell&quot;).result<br />\nprint(a) # True</p>\n","0"),
("760","prefPutValue","<p>Write a value to shared preferences</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.prefPutValue(&quot;bell&quot;,False).result # java.io.IOException: Can&#39;t write to default preferences.<br />\na = droid.prefGetValue(&quot;bell&quot;).result<br />\nprint(a) # True</p>\n","0"),
("761","readSensors","<p>Returns the most recently recorded sensor data</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ndroid.startSensingTimed(5,8)<br />\ntime.sleep(10)<br />\na = droid.readSensors().result &nbsp;# Requested sensor is not supported in your device...<br />\ndroid.stopSensing()<br />\nprint(a) # [None, None, None]</p>\n","0"),
("762","sensorsGetAccuracy","","","0"),
("763","sensorsGetLight","","","0"),
("764","sensorsReadAccelerometer","","","0"),
("765","sensorsReadMagnetometer","","","0"),
("766","sensorsReadOrientation","","","0"),
("767","startSensing","","","0"),
("768","startSensingThreshold","","","0"),
("769","startSensingTimed","","","0"),
("770","stopSensing","","","0"),
("771","checkAirplaneMode","<p>Checks the airplane mode setting</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.checkAirplaneMode().result<br />\nprint(a) # False</p>\n","0"),
("772","checkRingerSilentMode","<p>Checks the ringer silent mode setting</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.checkRingerSilentMode().result<br />\nprint(a) # False</p>\n","0"),
("773","checkScreenOn","<p>Checks if the screen is on or off</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.checkScreenOn().result<br />\nprint(a) # True</p>\n","0"),
("774","getMaxMediaVolume","<p>Returns the maximum media volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getMaxMediaVolume().result<br />\nprint(a) # 15</p>\n","0"),
("775","getMaxRingerVolume","<p>Returns the maximum ringer volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getMaxRingerVolume().result<br />\nprint(a) # 7</p>\n","0"),
("776","getMediaVolume","<p>Returns the current media volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getMediaVolume().result<br />\nprint(a) # 7</p>\n","0"),
("777","getRingerVolume","<p>Returns the current ringer volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getRingerVolume().result<br />\nprint(a) # 7</p>\n","0"),
("778","getScreenBrightness","<p>Returns the screen backlight brightness</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getScreenBrightness().result<br />\nprint(a) # 255</p>\n","0"),
("779","getScreenTimeout","<p>Returns the current screen timeout in seconds.</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getScreenTimeout().result<br />\nprint(a) # 60</p>\n\n<p># Don&#39;t work</p>\n","0"),
("780","getVibrateMode","<p>Checks Vibration setting. If ringer=true then query Ringer setting, else query Notification setting</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\na = droid.getVibrateMode().result<br />\nprint(a) # None</p>\n","0"),
("781","setMediaVolume","<p>Sets the media volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.setMediaVolume(15)<br />\na = droid.getMediaVolume().result<br />\nprint(a) # 15</p>\n","0"),
("782","setRingerVolume","<p>Sets the ringer volume</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.setRingerVolume(6)<br />\na = droid.getRingerVolume().result<br />\nprint(a) # 6</p>\n","0"),
("783","setScreenBrightness","<p>Sets the the screen backlight brightness</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.setScreenBrightness(10)<br />\na = droid.getScreenBrightness().result<br />\nprint(a) # 30</p>\n","0"),
("784","setScreenTimeout","<p>Sets the screen timeout to this number of seconds</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.setScreenTimeout(5)<br />\na = droid.getScreenTimeout().result<br />\nprint(a) # 5</p>\n\n<p>&nbsp;</p>\n\n<p># Don&#39;t work</p>\n","0"),
("785","toggleAirplaneMode","<p>Toggles airplane mode on and off.&nbsp;</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.toggleAirplaneMode(True) # can;t invoke su binary, is this rooted device?<br />\na = droid.checkAirplaneMode().result<br />\nprint(a) # False</p>\n","0"),
("786","toggleRingerSilentMode","<p>Toggles ringer silent mode on and off.&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/toggleRingerSilentMode.jpg\" style=\"height:434px; width:225px\" /></p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.toggleRingerSilentMode(True)<br />\na = droid.checkRingerSilentMode().result<br />\nprint(a) # True</p>\n","0"),
("787","toggleVibrateMode","","","0"),
("788","readSignalStrengths","<p>Returns the current signal strengths</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingSignalStrengths()<br />\na = droid.readSignalStrengths().result<br />\ndroid.stopTrackingSignalStrengths()<br />\nprint(a) # {u&#39;cdma_ecio&#39;: -160, u&#39;evdo_dbm&#39;: -120, u&#39;cdma_dbm&#39;: -120, u&#39;evdo_ecio&#39;: -1, u&#39;gsm_signal_strength&#39;: 11, u&#39;gsm_bit_error_rate&#39;: 0}</p>\n","0"),
("789","startTrackingSignalStrengths","<p>Starts tracking signal strengths</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingSignalStrengths()<br />\na = droid.readSignalStrengths().result<br />\ndroid.stopTrackingSignalStrengths()<br />\nprint(a) # {u&#39;cdma_ecio&#39;: -160, u&#39;evdo_dbm&#39;: -120, u&#39;cdma_dbm&#39;: -120, u&#39;evdo_ecio&#39;: -1, u&#39;gsm_signal_strength&#39;: 11, u&#39;gsm_bit_error_rate&#39;: 0}</p>\n","0"),
("790","stopTrackingSignalStrengths","<p>Stops tracking signal strength</p>\n","<p>import android, time<br />\ndroid = android.Android()<br />\ntime.sleep(5)<br />\ndroid.startTrackingSignalStrengths()<br />\na = droid.readSignalStrengths().result<br />\ndroid.stopTrackingSignalStrengths()<br />\nprint(a) # {u&#39;cdma_ecio&#39;: -160, u&#39;evdo_dbm&#39;: -120, u&#39;cdma_dbm&#39;: -120, u&#39;evdo_ecio&#39;: -1, u&#39;gsm_signal_strength&#39;: 11, u&#39;gsm_bit_error_rate&#39;: 0}</p>\n","0"),
("791","smsDeleteMessage","<p>Deletes a message</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()</p>\n\n<p>droid.smsDeleteMessage(429)</p>\n","0"),
("792","smsGetAttributes","<p>Returns a List of all possible message attributes</p>\n","<p>import android<br />\nimport time<br />\nimport pprint # The pprint module provides a capability to &ldquo;pretty-print&rdquo; arbitrary Python data structures in a form which can be used as input to the interpreter</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()<br />\npprint.pprint(droid.smsGetAttributes().result) # [u&#39;_id&#39;, u&#39;thread_id&#39;, u&#39;address&#39;, u&#39;person&#39;, u&#39;date&#39;, u&#39;date_sent&#39;, u&#39;protocol&#39;, u&#39;read&#39;, u&#39;status&#39;, u&#39;type&#39;, u&#39;reply_path_present&#39;, u&#39;subject&#39;, u&#39;body&#39;, u&#39;service_center&#39;, u&#39;locked&#39;, u&#39;phone_id&#39;, u&#39;error_code&#39;, u&#39;seen&#39;, u&#39;priority&#39;, u&#39;isgroup&#39;, u&#39;sub_id&#39;]</p>\n","0"),
("793","smsGetMessageById","<p>Returns message attributes</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)</p>\n\n<p>droid = android.Android()</p>\n\n<p>print(droid.smsGetMessageById(430).result) # {u&#39;date&#39;: u&#39;1490966781627&#39;, u&#39;body&#39;: u&#39;I sended you 85 pounds for renting room.&#39;, u&#39;_id&#39;: u&#39;430&#39;, u&#39;read&#39;: u&#39;1&#39;, u&#39;address&#39;: u&#39;00447976336020&#39;}<br />\n&nbsp;</p>\n","0"),
("794","smsGetMessageCount","<p>Returns the number of messages</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p><br />\nprint(&#39;Read messages &#39; + str(droid.smsGetMessageCount(False).result)) # 460<br />\nprint(&#39;Unread messages &#39; + str(droid.smsGetMessageCount(True).result)) # 0</p>\n","0"),
("795","smsGetMessageIds","<p>Returns a List of all message IDs</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>print(droid.smsGetMessageIds(False).result) [630, 629, 628, 627, 626, 625, 624, 621, 619, 616, 613, 612, 611, 608, 607, 606, 604, 600, 598, 597, 596, 595, 594, 593, 592, 591, 588, 587, 585, 584, 582, 581, 580, 579, 578, 577, 576, 575, 574, 572, 571, 568, 567, 566, 565, 564, 562, 558, 557, 556, 554, 553, 551, 548, 547, 546, 545, 544, 542, 538, 537, 536, 535, 533, 532, 531, 529, 528, 525, 524, 523, 522, 520, 519, 518, 517, 516, 515, 514, 513, 512, 511, 510, 509, 508, 506, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493, 491, 489, 490, 488, 487, 486, 485, 484, 483, 482, 481, 480, 477, 476, 475, 474, 473, 472, 471, 470, 467, 466, 465, 463, 462, 459, 458, 457, 456, 454, 450, 448, 447, 446, 445, 444, 442, 437, 436, 435, 433, 432, 431, 428, 426, 424, 423, 421, 419, 417, 414, 412, 411, 407, 406, 404, 402, 398, 397, 396, 395, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 382, 381, 380, 379, 378, 376, 374, 372, 370, 367, 364, 361, 360, 358, 356, 354, 352, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 333, 332, 331, 330, 329, 351, 328, 327, 324, 323, 322, 321, 320, 318, 315, 313, 312, 311, 310, 309, 308, 307, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 226, 225, 224, 223, 222, 221, 220, 218, 217, 216, 219, 214, 213, 210, 209, 207, 205, 201, 200, 195, 193, 190, 188, 187, 182, 181, 178, 174, 172, 171, 169, 166, 164, 162, 160, 158, 157, 155, 154, 148, 147, 146, 145, 143, 177, 176, 175, 141, 140, 139, 138, 136, 135, 134, 132, 130, 128, 127, 126, 125, 124, 123, 122, 121, 120, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 102, 101, 100, 99, 97, 96, 95, 94, 93, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 68, 67, 65, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 46, 44, 43, 42, 41, 39, 38, 37, 36, 35, 33, 32, 29, 28, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 13, 12, 9, 8, 7, 6, 5, 4, 3, 2, 1]<br />\nprint(droid.smsGetMessageIds(True).result) []</p>\n","0"),
("796","smsGetMessages","<p>Returns a List of all messages</p>\n","","0"),
("797","smsMarkMessageRead","<p>Marks messages as read</p>\n","","0"),
("798","smsSend","<p>Sends an SMS</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>droid.smsSend(&quot;+4407563941851&quot;,&quot;testowy SMS&quot;)</p>\n","0"),
("799","recognizeSpeech","<p>Recognizes user&#39;s speech and returns the most likely result</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/recognizeSpeech1.jpg\" style=\"height:432px; width:224px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/recognizeSpeech2.jpg\" style=\"height:425px; width:219px\" /></p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>a = droid.recognizeSpeech(&quot;Speak somethinh&quot;).result # Hello I am Simon from Polands<br />\nprint(a)</p>\n","0"),
("800","ttsIsSpeaking","<p>Returns True if speech is currently in progress</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>droid.ttsSpeak(&quot;A facade containing RPC implementations related to the speech-to-text functionality of Android&quot;)<br />\ntime.sleep(1)<br />\nprint(droid.ttsIsSpeaking().result) # True</p>\n","0"),
("801","ttsSpeak","<p>Speaks the provided message via TTS</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>droid.ttsSpeak(&quot;A facade containing RPC implementations related to the speech-to-text functionality of Android&quot;)<br />\ntime.sleep(1)<br />\nprint(droid.ttsIsSpeaking().result) # True</p>\n","0"),
("802","generateDtmfTones","<p>Generate DTMF tones for the given phone number</p>\n\n<p># I don&#39;t know how this thing work</p>\n","<p>import android<br />\nimport time</p>\n\n<p>time.sleep(5)<br />\ndroid = android.Android()</p>\n\n<p>droid.generateDtmfTones(&quot;602808086&quot;)</p>\n","0"),
("803","addContextMenuItem","<p>Adds a new item to context menu (Work only in Firefox)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/addContextMenuItem.jpg\" style=\"height:263px; width:600px\" /></p>\n","","0"),
("804","addOptionsMenuItem","<p>Adds a new item to options menu (Don&#39;t work)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/addOptionsMenuItem.jpg\" style=\"height:800px; width:448px\" /></p>\n","<p>import android<br />\ndroid=android.Android()<br />\n&nbsp;<br />\ndroid.addOptionsMenuItem(&quot;Silly&quot;,&quot;silly&quot;,None,&quot;star_on&quot;)<br />\ndroid.addOptionsMenuItem(&quot;Sensible&quot;,&quot;sensible&quot;,&quot;I bet.&quot;,&quot;star_off&quot;)<br />\ndroid.addOptionsMenuItem(&quot;Off&quot;,&quot;off&quot;,None,&quot;ic_menu_revert&quot;)<br />\n&nbsp;<br />\nprint(&quot;Hit menu to see extra options.&quot;)<br />\nprint(&quot;Will timeout in 10 seconds if you hit nothing.&quot;)<br />\n&nbsp;<br />\nwhile True: # Wait for events from the menu.<br />\n&nbsp; response=droid.eventWait(10000).result<br />\n&nbsp; if response==None:<br />\n&nbsp; &nbsp; break<br />\n&nbsp; print response<br />\n&nbsp; if response[&quot;name&quot;]==&quot;off&quot;:<br />\n&nbsp; &nbsp; break<br />\nprint(&quot;And done.&quot;) &nbsp;</p>\n","0"),
("805","clearContextMenu","","","0"),
("806","clearOptionsMenu","","","0"),
("807","dialogCreateAlert","<p>Create alert dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateAlert.jpg\" style=\"height:442px; width:231px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateAlert2.jpg\" style=\"height:1024px; width:578px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateAlert3.jpg\" style=\"height:1024px; width:576px\" /></p>\n","<p>import android<br />\ndroid=android.Android()<br />\ndroid.dialogCreateAlert(&quot;I like swords.&quot;,&quot;Do you like swords?&quot;)<br />\ndroid.dialogSetPositiveButtonText(&quot;Yes&quot;)<br />\ndroid.dialogSetNegativeButtonText(&quot;No&quot;)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()<br />\nif response.has_key(&quot;which&quot;):<br />\n&nbsp;result=response[&quot;which&quot;]<br />\n&nbsp;if result==&quot;positive&quot;:<br />\n&nbsp; &nbsp;print &quot;Yay! I like swords too!&quot;<br />\n&nbsp;elif result==&quot;negative&quot;:<br />\n&nbsp; &nbsp;print &quot;Oh. How sad.&quot;<br />\nelif response.has_key(&quot;canceled&quot;): # Yes, I know it&#39;s mispelled.<br />\n&nbsp;print &quot;You can&#39;t even make up your mind?&quot;<br />\nelse:<br />\n&nbsp;print &quot;Unknown response=&quot;,response</p>\n\n<p>print &quot;Done&quot;</p>\n","0"),
("808","dialogCreateDatePicker","<p>Create date picker dialog</p>\n\n<p><strong>year (Integer)</strong>&nbsp;(default=1970)&nbsp;<br />\n<strong>month (Integer)</strong>&nbsp;(default=1)&nbsp;<br />\n<strong>day (Integer)</strong>&nbsp;(default=1)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateDatePicker.jpg\" style=\"height:435px; width:226px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateDatePicker2.jpg\" style=\"height:1024px; width:576px\" /></p>\n","<p>import android<br />\ndroid=android.Android()<br />\ndroid.dialogCreateDatePicker()<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response)&nbsp;</p>\n","0"),
("809","dialogCreateHorizontalProgress","<p>Create a horizontal progress dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateHorizontalProgress.jpg\" /></p>\n","<p>import android, time<br />\ndroid=android.Android()</p>\n\n<p>title = &#39;Horizontal&#39;<br />\nmessage = &#39;This is simple horizontal progress.&#39;<br />\nmaximum_progress = 100</p>\n\n<p>droid.dialogCreateHorizontalProgress(title, message, maximum_progress)<br />\ndroid.dialogShow()<br />\nfor x in range(0, maximum_progress):<br />\n&nbsp;&nbsp; &nbsp;time.sleep(0.1)<br />\n&nbsp;&nbsp; &nbsp;droid.dialogSetCurrentProgress(x)<br />\ndroid.dialogDismiss()&nbsp;</p>\n","0"),
("810","dialogCreateInput","<p>Create a text input dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateInput.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateInput2.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &quot;Title&quot;<br />\nmessage = &quot;Message&quot;<br />\ndefaultText = &quot;123&quot;&nbsp;<br />\ninputType = &quot;number&quot; &nbsp;</p>\n\n<p>droid.dialogCreateInput(title, message, defaultText, inputType)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response)&nbsp;</p>\n\n<p>file = open(&quot;text.txt&quot;,&quot;w&quot;)</p>\n\n<p>file.write(str(response))</p>\n","0"),
("811","dialogCreatePassword","<p>Create a password input dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreatePassword.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &quot;Title&quot;<br />\nmessage = &quot;Message&quot;</p>\n\n<p>droid.dialogCreatePassword(title, message)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response)&nbsp;</p>\n","0"),
("812","dialogCreateSeekBar","<p>Create seek bar dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateSeekBar.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &quot;Title&quot;<br />\nmessage = &quot;Message&quot;<br />\nstarting_value = 50<br />\nmaximum_value = 100</p>\n\n<p>droid.dialogCreateSeekBar(starting_value,maximum_value,title,message)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response) #&nbsp;{u&#39;canceled&#39;: True, u&#39;progress&#39;: 50}</p>\n","0"),
("813","dialogCreateSpinnerProgress","<p>Create a spinner progress dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateSpinnerProgress.jpg\" /></p>\n","<p>import android, time<br />\ndroid=android.Android()</p>\n\n<p>title = &quot;Title&quot;<br />\nmessage = &quot;Message&quot;<br />\nmaximum_progress = 100</p>\n\n<p>droid.dialogCreateSpinnerProgress(title,message,maximum_progress)<br />\ndroid.dialogShow()<br />\ntime.sleep(5)<br />\ndroid.dialogDismiss()&nbsp;<br />\n&nbsp;</p>\n","0"),
("814","dialogCreateTimePicker","<p>Create time picker dialog</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateTimePicker.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateTimePicker2.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>hour = 0<br />\nminute = 0<br />\nis24hour = False</p>\n\n<p>droid.dialogCreateTimePicker(hour,minute,is24hour)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response) #&nbsp;{u&#39;minute&#39;: 0, u&#39;hour&#39;: 0, u&#39;which&#39;: u&#39;positive&#39;} or if we click concel&nbsp;{u&#39;minute&#39;: 0, u&#39;hour&#39;: 0, u&#39;which&#39;: u&#39;negative&#39;}</p>\n","0"),
("815","dialogDismiss","<p>Dismiss dialog</p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>hour = 0<br />\nminute = 0<br />\nis24hour = False</p>\n\n<p>droid.dialogCreateTimePicker(hour,minute,is24hour)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response)&nbsp;</p>\n","0"),
("816","dialogGetInput","<p>Queries the user for a text input</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetInput1.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>print(droid.dialogGetInput(&quot;Title&quot;,&quot;Message&quot;,&quot;Default&quot;).result) # user input or None if Concel clicked</p>\n","0"),
("817","dialogGetPassword","<p>Queries the user for a password</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetPassword.jpg\" /></p>\n\n<p>&nbsp;</p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>print(droid.dialogGetPassword(&quot;Title&quot;,&quot;Message&quot;).result)</p>\n","0"),
("818","dialogGetResponse","<p>Returns dialog response</p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &quot;Title&quot;<br />\nmessage = &quot;Message&quot;<br />\nstarting_value = 50<br />\nmaximum_value = 100</p>\n\n<p>droid.dialogCreateSeekBar(starting_value,maximum_value,title,message)<br />\ndroid.dialogShow()<br />\nresponse=droid.dialogGetResponse().result<br />\ndroid.dialogDismiss()&nbsp;<br />\nprint(response) #&nbsp;{u&#39;canceled&#39;: True, u&#39;progress&#39;: 50}</p>\n","0"),
("819","dialogGetSelectedItems","<p>This method provides list of items user selected</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetSelectedItems.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &#39;GUI Test?&#39;<br />\ndroid.dialogCreateAlert(title)<br />\ndroid.dialogSetSingleChoiceItems([&#39;Continue&#39;, &#39;Skip&#39;, &#39;baz&#39;])<br />\ndroid.dialogSetPositiveButtonText(&#39;Yay!&#39;)<br />\ndroid.dialogShow()<br />\nresponse = droid.dialogGetResponse().result<br />\nprint(response) # {u&#39;which&#39;: u&#39;positive&#39;} or {u&#39;canceled&#39;: True}<br />\nchoices = droid.dialogGetSelectedItems().result<br />\nprint(choices) # [0]</p>\n","0");
INSERT INTO function VALUES
("820","dialogSetCurrentProgress","<p>Set progress dialog current value</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogCreateHorizontalProgress.jpg\" style=\"height:431px; width:223px\" /></p>\n","<p>import android, time<br />\ndroid=android.Android()</p>\n\n<p>title = &#39;Horizontal&#39;<br />\nmessage = &#39;This is simple horizontal progress.&#39;<br />\nmaximum_progress = 100</p>\n\n<p>droid.dialogCreateHorizontalProgress(title, message, maximum_progress)<br />\ndroid.dialogShow()<br />\nfor x in range(0, maximum_progress):<br />\n&nbsp;&nbsp; &nbsp;time.sleep(0.1)<br />\n&nbsp;&nbsp; &nbsp;droid.dialogSetCurrentProgress(x)<br />\ndroid.dialogDismiss()&nbsp;</p>\n","0"),
("821","dialogSetItems","<p>Set alert dialog list items</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogSetItems.jpg\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &#39;Alert&#39;<br />\ndroid.dialogCreateAlert(title)<br />\ndroid.dialogSetItems([&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;])<br />\ndroid.dialogShow()<br />\nresponse = droid.dialogGetResponse().result</p>\n","0"),
("822","dialogSetMaxProgress","","","0"),
("823","dialogSetMultiChoiceItems","","","0"),
("824","dialogSetNegativeButtonText","","","0"),
("825","dialogSetNeutralButtonText","","","0"),
("826","dialogSetPositiveButtonText","","","0"),
("827","dialogSetSingleChoiceItems","<p>Set dialog single choice items and selected item</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/dialogGetSelectedItems.jpg\" style=\"height:431px; width:224px\" /></p>\n","<p>import android<br />\ndroid=android.Android()</p>\n\n<p>title = &#39;GUI Test?&#39;<br />\ndroid.dialogCreateAlert(title)<br />\ndroid.dialogSetSingleChoiceItems([&#39;Continue&#39;, &#39;Skip&#39;, &#39;baz&#39;])<br />\ndroid.dialogSetPositiveButtonText(&#39;Yay!&#39;)<br />\ndroid.dialogShow()<br />\nresponse = droid.dialogGetResponse().result<br />\nprint(response) # {u&#39;which&#39;: u&#39;positive&#39;} or {u&#39;canceled&#39;: True}<br />\nchoices = droid.dialogGetSelectedItems().result<br />\nprint(choices) # [0]</p>\n","0"),
("828","dialogShow","","","0"),
("829","fullDismiss","","","0"),
("830","fullKeyOverride","","","0"),
("831","fullQuery","","","0"),
("832","fullQueryDetail","","","0"),
("833","fullSetList","","","0"),
("834","fullSetProperty","","","0"),
("835","fullSetTitle","","","0"),
("836","fullShow","","","0"),
("837","webViewShow","<p>Display a WebView with the given URL</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Sl4a/webViewShow.jpg\" style=\"height:432px; width:224px\" /></p>\n","<p>import android<br />\nimport time</p>\n\n<p>droid = android.Android()<br />\ndroid.webViewShow(&quot;file:///sdcard/sl4a/test.html&quot;)<br />\ntime.sleep(50)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>test.html</strong></p>\n\n<p>&lt;html&gt;<br />\n&nbsp; &nbsp; &lt;head&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;meta name=&quot;viewport&quot; id=&quot;viewport&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content=&quot;width=device-width, target-densitydpi=device-dpi,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; /&gt;<br />\n&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { background-color: #EEE }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #banner { text-align: center }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #userin {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 64px;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: absolute;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; left: 10px;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; right: 10px;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;<br />\n&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;script&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var droid = new Android();<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; function postInput(input) {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Post the content of the text field to the python side if<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // the user has pressed enter (or soft keyboard equivalent)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (event.keyCode == 13)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; droid.eventPost(&#39;line&#39;, input);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/script&gt;<br />\n&nbsp; &nbsp; &lt;/head&gt;<br />\n&nbsp;<br />\n&nbsp; &nbsp; &lt;body&gt;<br />\n&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=&quot;banner&quot;&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;SL4A&lt;/h1&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;Text to Speech Machine&lt;/h2&gt;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;input id=&quot;userin&quot; type=&quot;text&quot; spellcheck=&quot;false&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; autofocus=&quot;autofocus&quot; onkeyup=&quot;postInput(this.value)&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; /&gt;<br />\n&nbsp;<br />\n&nbsp; &nbsp; &lt;/body&gt;<br />\n&lt;/html&gt;</p>\n","0"),
("838","wakeLockAcquireBright","<p>Acquires a bright wake lock (CPU on, screen bright).</p>\n","<p>import android<br />\nimport time</p>\n\n<p>droid = android.Android()<br />\ndroid.wakeLockAcquireBright()</p>\n\n<p>print(&quot;a1&quot;)<br />\ntime.sleep(15)</p>\n\n<p>droid.wakeLockRelease()</p>\n","0"),
("839","wakeLockAcquireDim","<p>Acquires a dim wake lock (CPU on, screen dim).</p>\n","","0"),
("840","wakeLockAcquireFull","<p>Acquires a full wake lock (CPU on, screen bright, keyboard bright).</p>\n","","0"),
("841","wakeLockAcquirePartial","<p>Acquires a partial wake lock (CPU on).</p>\n","","0"),
("842","wakeLockRelease","<p>Releases the wake lock.</p>\n","","0"),
("843","cameraStartPreview","","","0"),
("844","cameraStopPreview","","","0"),
("845","webcamAdjustQuality","","","0"),
("846","webcamStart","","","0"),
("847","webcamStop","","","0"),
("848","checkWifiState","<p>Checks Wifi state</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.checkWifiState().result<br />\nprint(a) # True if Wifi is enabled</p>\n","0"),
("849","toggleWifiState","<p>Toggle Wifi on and off</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.toggleWifiState().result&nbsp;<br />\nprint(a) # True if Wifi is enabled or False if Wifi is not enabled&nbsp;</p>\n","0"),
("850","wifiDisconnect","<p>Disconnects from the currently active access point</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.wifiDisconnect().result&nbsp;<br />\nprint(a) # True</p>\n","0"),
("851","wifiGetConnectionInfo","<p>Returns information about the currently active access point</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.wifiGetConnectionInfo().result&nbsp;<br />\nprint(a) # {u&#39;ssid&#39;: u&#39;&quot;FRITZ!Box 7369&quot;&#39;, u&#39;bssid&#39;: u&#39;9c:c7:a6:c6:27:a9&#39;, u&#39;network_id&#39;: 21, u&#39;supplicant_state&#39;: u&#39;completed&#39;, u&#39;link_speed&#39;: 57, u&#39;mac_address&#39;: u&#39;bc:25:e0:2a:86:11&#39;, u&#39;rssi&#39;: -68, u&#39;ip_address&#39;: 934455488, u&#39;hidden_ssid&#39;: False}<br />\n&nbsp;</p>\n","0"),
("852","wifiGetScanResults","<p>Returns the list of access points found during the most recent Wifi scan</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.wifiGetScanResults().result&nbsp;<br />\nprint(a) # [{u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2442, u&#39;ssid&#39;: u&#39;Rosali gast&#39;, u&#39;bssid&#39;: u&#39;e0:3f:49:ee:4c:d1&#39;, u&#39;level&#39;: -66}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][WPS][ESS]&#39;, u&#39;frequency&#39;: 2442, u&#39;ssid&#39;: u&#39;Rosali&#39;, u&#39;bssid&#39;: u&#39;e0:3f:49:ee:4c:d0&#39;, u&#39;level&#39;: -66}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2462, u&#39;ssid&#39;: u&#39;anomic-guest&#39;, u&#39;bssid&#39;: u&#39;82:2a:a8:d1:34:7d&#39;, u&#39;level&#39;: -68}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2462, u&#39;ssid&#39;: u&#39;anomic&#39;, u&#39;bssid&#39;: u&#39;80:2a:a8:d1:34:7d&#39;, u&#39;level&#39;: -67}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][WPS][ESS]&#39;, u&#39;frequency&#39;: 2412, u&#39;ssid&#39;: u&#39;FRITZ!BoxGJ&#39;, u&#39;bssid&#39;: u&#39;36:31:c4:47:b8:48&#39;, u&#39;level&#39;: -74}, {u&#39;capabilities&#39;: u&#39;[WPA-PSK-TKIP][WPA2-PSK-CCMP][WPS][ESS]&#39;, u&#39;frequency&#39;: 2412, u&#39;ssid&#39;: u&#39;FRITZ!Box 7369&#39;, u&#39;bssid&#39;: u&#39;9c:c7:a6:c6:27:a9&#39;, u&#39;level&#39;: -74}, {u&#39;capabilities&#39;: u&#39;[WPA2-EAP-CCMP+TKIP][ESS]&#39;, u&#39;frequency&#39;: 2412, u&#39;ssid&#39;: u&#39;Ziggo&#39;, u&#39;bssid&#39;: u&#39;c6:27:95:84:f3:21&#39;, u&#39;level&#39;: -81}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2437, u&#39;ssid&#39;: u&#39;anomic-guest&#39;, u&#39;bssid&#39;: u&#39;82:2a:a8:d1:30:b1&#39;, u&#39;level&#39;: -82}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2437, u&#39;ssid&#39;: u&#39;anomic&#39;, u&#39;bssid&#39;: u&#39;80:2a:a8:d1:30:b1&#39;, u&#39;level&#39;: -82}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][WPS][ESS]&#39;, u&#39;frequency&#39;: 2412, u&#39;ssid&#39;: u&#39;&#39;, u&#39;bssid&#39;: u&#39;34:31:c4:47:b8:48&#39;, u&#39;level&#39;: -75}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][ESS]&#39;, u&#39;frequency&#39;: 2412, u&#39;ssid&#39;: u&#39;anomic&#39;, u&#39;bssid&#39;: u&#39;80:2a:a8:d1:32:83&#39;, u&#39;level&#39;: -81}, {u&#39;capabilities&#39;: u&#39;[WPA2-PSK-CCMP][WPS][ESS]&#39;, u&#39;frequency&#39;: 2422, u&#39;ssid&#39;: u&#39;VFNL-E199F8&#39;, u&#39;bssid&#39;: u&#39;00:1d:aa:e1:99:f8&#39;, u&#39;level&#39;: -87}, {u&#39;capabilities&#39;: u&#39;[WPS][WEP][ESS]&#39;, u&#39;frequency&#39;: 2462, u&#39;ssid&#39;: u&#39;router&#39;, u&#39;bssid&#39;: u&#39;00:22:75:a3:3e:8c&#39;, u&#39;level&#39;: -87}]<br />\n&nbsp;</p>\n","0"),
("853","wifiLockAcquireFull","","","0"),
("854","wifiLockAcquireScanOnly","","","0"),
("855","wifiLockRelease","","","0"),
("856","wifiReassociate","","","0"),
("857","wifiReconnect","","","0"),
("858","wifiStartScan","<p>Starts a scan for Wifi access points and return&nbsp;True if the scan was initiated successfully</p>\n","<p>import android<br />\ndroid=android.Android()<br />\na = droid.wifiStartScan().result&nbsp;<br />\nprint(a) # True</p>\n","0"),
("859","HotKey","<p>Set key or a combination of keys on a computer keyboard that, when pressed at one time, performs a task of opening file that you can specified. Supported file formats: *.py (python script), *.au3 (autoIt script), *.exe (executable program).</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image002_2.jpg\" style=\"height:353px; width:751px\" /></p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image004_2.jpg\" style=\"height:349px; width:752px\" /></p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image005.png\" style=\"height:247px; width:454px\" /></p>\n","","0"),
("860","Webcam_screean_capture","<p>Capture view from webcam and desktop and join them to one image. You can chose how often operation of capturing view from webcam and desktop will occur, chose form 1 to 60 minutes by clicking left or right sign button. To star operation of capturing simply click Start button and when you want to stop click Stop button.&nbsp;</p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image002.jpg\" /></p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image002.jpg\" /></p>\n","","0"),
("861","RandomTask","<p>Learn English by solving tasks. Take tasks from the SQLite database and shows them in random order so that the sentence appears only once. You can chose in what language question will appear by clicking Polish or British flag. After you will answer it you can click example answer button to receive sample answer.</p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image002_1.jpg\" /></p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image004_1.jpg\" /></p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image006_1.jpg\" /></p>\n","","0"),
("862","makingnotes","<p>Register on my webpage&nbsp;<a href=\"http://makingnotes.ovh/\" style=\"margin:0px; padding:0px; font-family:Arial, \">makingnotes.ovh</a>&nbsp;to create and organize notes. This web aplication allows users to create notes using integrated text editor ckeditor and uploaad files using bult in file manager. Organize notes by putimg them in specyfic group, department, category, subcategory etc. Check your knowlage by creating tasks and checking if answer is correct.</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image002_5.jpg\" style=\"height:237px; margin:0px; width:720px\" /></p>\n\n<p>Table Relationships&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image004_5.jpg\" style=\"height:474px; margin:0px; width:720px\" /></p>\n\n<p>Webpage connection</p>\n\n<p><strong>&nbsp;</strong><strong><img src=\"http://simon.otreba.co.uk/images/clip_image006_3.jpg\" style=\"height:202px; margin:0px; width:285px\" /></strong></p>\n\n<p><strong>Notes tree</strong></p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image008_1.jpg\" style=\"height:500px; margin:0px; width:310px\" /></p>\n\n<p><strong>&nbsp;Notes tree example 1</strong></p>\n\n<p><img src=\"http://simon.otreba.co.uk/images/clip_image010_1.jpg\" style=\"height:505px; margin:0px; width:386px\" /></p>\n\n<p><strong>&nbsp;Notes example 2</strong></p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image012.jpg\" style=\"height:405px; margin:0px; width:779px\" /></p>\n\n<p>1.index.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image014.jpg\" style=\"height:219px; margin:0px; width:779px\" /></p>\n\n<p>2.forgot_password.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image016.jpg\" style=\"height:286px; margin:0px; width:779px\" /></p>\n\n<p>3.register.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image018.jpg\" style=\"height:386px; margin:0px; width:779px\" /></p>\n\n<p>4. departments.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image020.jpg\" style=\"height:323px; margin:0px; width:780px\" /></p>\n\n<p>5. edit_departments.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image022.jpg\" style=\"height:386px; margin:0px; width:779px\" /></p>\n\n<p>6. modules.php</p>\n\n<p><strong><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image024.jpg\" style=\"height:363px; margin:0px; width:779px\" /></strong></p>\n\n<p>7.edit_modules.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image026.jpg\" style=\"height:385px; margin:0px; width:780px\" /></p>\n\n<p>8.&nbsp; function_list.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image028.jpg\" style=\"height:250px; margin:0px; width:779px\" /></p>\n\n<p>9. edit_function_list.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image030.jpg\" style=\"height:284px; margin:0px; width:780px\" /></p>\n\n<p>10. function.php</p>\n\n<p><img alt=\"\" src=\"http://simon.otreba.co.uk/images/clip_image032.jpg\" style=\"height:368px; margin:0px; width:779px\" /></p>\n\n<p>11. edit_function.php</p>\n","","0"),
("863","Python lectures","","","0"),
("864","Mobile Platform Lectures","","","0"),
("865","Hacking lectures","","","0"),
("866","Overhead cranes, hoist and hoisting winches and workshop fixed cranes","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Overhead_cranes_hoist_and_hoisting_winches_and_workshop_fixed_cranes/Suwnica.jpg\" style=\"height:443px; width:1280px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Overhead_cranes_hoist_and_hoisting_winches_and_workshop_fixed_cranes/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("867","Rolling access platform","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Rolling_access_platform/Podesty_ruchome.jpg\" style=\"height:432px; width:1280px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Rolling_access_platform/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("868","Forklift truck technician","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Forklift_truck_technician/001.jpg\" style=\"height:1024px; width:728px\" /></p>\n","","0"),
("869","Polish Association of Electrical Engineers","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/SEP/SEP_Eksploatacja.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/SEP/Szkolenie_SEP.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/SEP/Szkolenie_SEP_cz_2.jpg\" /></p>\n","","0"),
("870","CNC operator and programmer of numerically controlled machine tools ","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/CNC_operator/Operator_maszyn_CNC.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/CNC_operator/Operator_maszyn_CNC_-_oceny.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/CNC_operator/001.jpg\" /></p>\n","","0"),
("871","Excel","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Excel/Excel.jpg\" /></p>\n","","0"),
("872","Adwance Excel","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Adwance_Excel/Excel_Zaawansowany.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Adwance_Excel/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("873","Survival techniques","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Survival_techniques/Przetrwanie.jpg\" style=\"height:876px; width:637px\" /></p>\n","","0"),
("874","Cash register","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Cash_register/Kasy_fiskalne.jpg\" style=\"height:876px; width:637px\" /></p>\n","","0"),
("875","Memory techniques part 1 ","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Memory_techniques_part_1/Trening_pamici_modu_I.jpg\" /></p>\n","","0"),
("876","Memory techniques part 2","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Memory_techniques_part_2/Trening_pamici_modu_II.jpg\" /></p>\n","","0"),
("877","Memory techniques part 3","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Memory_techniques_part_3/Trening_pamici_modu_III.jpg\" /></p>\n","","0"),
("878","Fast reading part 1","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Fast_reading_part_1/Trening_szybkiego_czytania_modu_I.jpg\" /></p>\n","","0"),
("879","Fast reading part 2","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Courses/Fast_reading_part_2/Trening_szybkiego_czytania_modu_II.jpg\" /></p>\n","","0"),
("880","Bodyguard","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Bodyguard/Ochronia.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Bodyguard/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("881","Forklift Driver","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Forklift_Driver/Operator_wozka_widowego.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Forklift_Driver/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Forklift_Driver/002.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("882","Computer Network Administrator","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Computer_Network_Administrator/Administrator_sieci_informatycznej.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Computer_Network_Administrator/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("883","Assistant operator of packing line","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Assistant_operator_of_packing_line/Pomocnik_operatora_lini_pakujcej_cz-1.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Assistant_operator_of_packing_line/Pomocnik_operatora_lini_pakujcej_cz-2.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Assistant_operator_of_packing_line/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p>&nbsp;</p>\n","","0"),
("884","Junior Operator of Conventional Machines and CNC","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Junior_Operator_of_Conventional_Machines_and_CNC/Modszy_operator_maszyn_konwencjonalnych_i_CNC.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Poland/Junior_Operator_of_Conventional_Machines_and_CNC/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("885","General operative","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/UK/Gap_Personnel_1.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/UK/Gap_Personnel_2.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("886","Werhaus worker","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Netherlands/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Reference/Netherlands/002.jpg\" /></p>\n","","0"),
("887","ARMADILLO IT LIMITED","","","0"),
("888","Other documents","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Gap_Personnel_1.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Gap_Personnel_2.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Halifax_activation_code.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Halifax_Username.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p>599157326</p>\n\n<p>Nocswietego1572</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Landlord_1.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Landlord_2.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/NIN.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Suits_Me.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/UK_Documents/Other_documents/Ria.jpg\" style=\"height:651px; width:800px\" /></p>\n","","0"),
("889","Elementary","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Primary/Podstawowka.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Primary/Podstawoowka_cz_2.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Primary/Egzamin_podstawowka.jpg\" style=\"height:876px; width:637px\" /></p>\n","","0"),
("890","Junior high school","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Junior_high_school/Gimnazjum.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Junior_high_school/Gimnazjum_cz_2.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Junior_high_school/Egzamin_gimnazjalny.jpg\" style=\"height:876px; width:637px\" /></p>\n","","0"),
("891","High school ","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/High_school_/Liceum_cz-1.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/High_school_/Liceum_cz-2.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/High_school_/wiadectwo_dojrzaoci.jpg\" style=\"height:876px; width:637px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/High_school_/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("892","Informatics college of futher education","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Informatics_college_of_futher_education/001.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Informatics_college_of_futher_education/002.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Informatics_college_of_futher_education/0011.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/School/Informatics_college_of_futher_education/0021.jpg\" style=\"height:1024px; width:745px\" /></p>\n","","0"),
("893","Functions","","","0"),
("894","Websites","","","0"),
("895","Database Administration","","","0"),
("896","Internet Applications Programming","","","0"),
("897","Desktop app","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/hacking_phones.jpg\" /></p>\n\n<p>1. Memory Palace</p>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>Kraj:&nbsp;Anglia</li>\n	<li>Miasto:&nbsp;Liverpool</li>\n	<li>ZnajomosÄ‡ jÄ™zyka:&nbsp;Praca bez znajomoÅ›ci jÄ™zyka</li>\n	<li>Data rozpoczÄ™cia pracy:&nbsp;od zaraz</li>\n	<li>Przewidywany czas zatrudnienia:&nbsp;na staÅ‚e</li>\n	<li>Zakwaterowanie:&nbsp;Zapewnione zakwaterowanie pÅ‚atne</li>\n	<li>Opublikowany:&nbsp;24 wrzeÅ›nia 2017 04:36</li>\n	<li>Wygasa:&nbsp;22 godzin, 59 minut</li>\n</ul>\n\n<p><a href=\"http://praca-anglia24.pl/wp-content/uploads/2017/09/797993-500x332.jpg\"><img alt=\"Anglia praca jako kierowca kat. CE  bez jÄ™zyka od zaraz w Liverpool\" src=\"http://praca-anglia24.pl/wp-content/uploads/2017/09/797993-200x132.jpg\" title=\"Anglia praca jako kierowca kat. CE  bez jÄ™zyka od zaraz w Liverpool\" /></a></p>\n\n<h3>Opis</h3>\n\n<p>Firma transportowa z miasta Liverpool obecnie poszukuje kierowc&oacute;w kat. C+E do pracy w Anglii. Zatrudnienie przy przewozie towar&oacute;w na zlecenie market&oacute;w BM.</p>\n\n<p>Brytyjska firma zatrudni od zaraz na staÅ‚e 30 kierowc&oacute;w CE (class1) dla swojego partnera sieci market&oacute;w BM w Liverpool. Dodatkowo ze wzglÄ™du na ugruntowanÄ… pozycjÄ™ na rynku ( jako firma funkcjonujemy i rekrutujemy juÅ¼ od 5 lat ) wsp&oacute;Å‚pracujemy r&oacute;wnieÅ¼ z wieloma innymi firmami takimi jak Eddie Stobart w Manchester, Mark Thompson w Warrington oraz BTS, dziÄ™ki czemu mamy ciÄ…gÅ‚e zlecenie na pracÄ™.</p>\n\n<p>Posiadamy swoich polskich dyspozytor&oacute;w oraz tÅ‚umaczy dlatego NIE WYMAGAMY jÄ™zyka angielskiego od naszych pracownik&oacute;w.</p>\n\n<p>Nie narzucamy nikomu ustalonych z g&oacute;ry system&oacute;w pracy dlatego kaÅ¼dy nasz kierowca moÅ¼e wracaÄ‡ do Polski w takich odstÄ™pach czasu jakie sÄ… dla niego komfortowe.</p>\n\n<p>Aktualnie poszukujemy kandydat&oacute;w do pracy na stanowisku kierowcy CE dla firmy BM w Liverpool. W miarÄ™ upÅ‚ywu czasu istnieje moÅ¼liwoÅ›Ä‡ wybrania sobie przez kierowcy firmy, kt&oacute;ra najlepiej odpowiada jego wymaganiom i preferencjom.</p>\n\n<p>Praca dla BM polega na dowozie produkt&oacute;w spoÅ¼ywczych i przemysÅ‚owych do sklep&oacute;w (nie wiÄ™cej niÅ¼ 2/3 punkty) oraz do centrum przeÅ‚adowczych/logistycznych naleÅ¼Ä…cych do tej najwiÄ™kszej sieci market&oacute;w. Kierowca przychodzÄ…c do pracy odbiera zaÅ‚adowany i gotowy do jazdy ciÄ…gnik tak aÅ¼eby maksymalnie uÅ‚atwiÄ‡ pracÄ™ dla kierowc&oacute;w. Czas pracy w tej firmie wynosi Å›rednio 11h-15h dziennie. Kierowcy majÄ… pÅ‚acone tu w systemie godzinowym: 10/11 funt&oacute;w na rÄ™kÄ™ za godzinÄ™ w tygodniu oraz 12/13 funt&oacute;w na rÄ™kÄ™ za godzinÄ™ w weekendy i Å›wiÄ™ta.</p>\n\n<p>Dla os&oacute;b nie posiadajÄ…cych doÅ›wiadczenia w jeÅºdzie po Anglii, w tym r&oacute;wnieÅ¼ ciÄ…gnikami angielskimi przewidujemy szkolenia i wprowadzenia w system pracy panujÄ…cy w firmie. KaÅ¼dy kandydat na poczÄ…tku ma moÅ¼liwoÅ›Ä‡ otrzymania staÅ‚ych punkt&oacute;w dziÄ™ki czemu ma moÅ¼liwoÅ›Ä‡ bezstresowego wdroÅ¼enia siÄ™ w system pracy oraz angielskÄ… kulturÄ™ jazdy.</p>\n\n<p>Ze wzglÄ™du na dÅ‚ugoletnie doÅ›wiadczenie zdajemy sobie sprawÄ™, Å¼e szczeg&oacute;lnie na poczÄ…tku nowi kierowcy potrzebujÄ… pomocy z zakwaterowaniem, otwarciem konta w banku, czy z zorganizowaniem numeru NIN, dlatego zawsze pomagamy wszystkim w zaÅ‚atwieniu formalnoÅ›ci oraz r&oacute;wnieÅ¼ odbieramy z nowych pracownik&oacute;w z lotnisk i dworc&oacute;w PKS/PKP.</p>\n\n<p>Oferujemy:<br />\n&bull; staÅ‚Ä… pracÄ™<br />\n&bull; stawki godzinowe (10-13 funt&oacute;w/h)<br />\n&bull; pracÄ™ na peÅ‚ny etat<br />\n&bull; system zmianowy<br />\n&bull; polscy dyspozytorzy na zmianie!<br />\n&bull; profesjonalnÄ… pomoc w zaÅ‚atwianiu formalnoÅ›ci<br />\n&bull; pomoc w zakwaterowaniu i formalnoÅ›ciach<br />\n&bull; 24 funty za kaÅ¼dy nocleg w samochodzie<br />\n&bull; Å›rednie tygodniowe wynagrodzenie 600-700 funt&oacute;w do rÄ™ki<br />\n&bull; przestrzeganie czas&oacute;w pracy<br />\n&bull; system zmianowy<br />\n&bull; polscy dyspozytorzy na zmianie!<br />\n&bull; profesjonalnÄ… pomoc w zaÅ‚atwianiu formalnoÅ›ci<br />\n&bull; pomoc w zakwaterowaniu</p>\n\n<p>Kandydat do naszej firmy powinien posiadaÄ‡:<br />\n&bull; waÅ¼ne prawo jazdy z kodem 95<br />\n&bull; kartÄ™ kierowcy do tachografu<br />\n&bull; posiadaÄ‡ minimum 6msc kategoriÄ™ C+E<br />\n&bull; ukoÅ„czone minimum 22 lata</p>\n\n<p>Wszystkich zainteresowanych podjÄ™ciem pracy prosimy o wysÅ‚anie C.V na adres: drivers.recruitment.liverpool@wp.pl lub kontakt telefoniczny pod numerem +48 785 108 868 lub +48 796 525 294.</p>\n","","0"),
("898","Equipment","<p>GoPro Hero5 + uchwyty</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/GoPro_HEROE_5.png\" /></p>\n","","0"),
("899","Django app","<p>1. Autoresponder</p>\n\n<p>2. Video</p>\n\n<p>3. Travel Map</p>\n\n<p>4. SQL Lite menager</p>\n\n<p>5. Car choose</p>\n\n<p>6. Download YTD copy</p>\n\n<p>7 Find persoon</p>\n\n<p>8. DosGames</p>\n\n<p>9. Blend4Web games small</p>\n","","0"),
("900","Games","<p>1. Meditation VR (sith temple, jedi, viking)</p>\n\n<p>2. Time menager</p>\n","","0"),
("901","Robots","<p>1. Pi Robots with Raspberry Pi Camera HD&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/piRobot.jpg\" style=\"height:276px; width:400px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/raspberry-pi-camera-hd-kamera-dla-raspberry-pi.jpg\" style=\"height:400px; width:400px\" /></p>\n\n<p>2.&nbsp;Aperture Hexacopter Aerial Photography Drone (RTF)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/Drone.jpg\" /></p>\n\n<p>&nbsp;</p>\n","","0"),
("902","Video Tutorials","<p>1. Python in one video</p>\n\n<p>2. Math module</p>\n\n<p>3. Pygame presentation</p>\n\n<p>4. Parkout</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/hacking_phones.jpg\" style=\"height:221px; width:400px\" /></p>\n\n<p>5. Robots presentation</p>\n","","0"),
("5987","overview","<p>Counting<br />\nAddition and subtraction intro<br />\nPlace value (tens and hundreds)<br />\nAddition and subtraction within 20<br />\nAddition and subtraction within 100<br />\nAddition and subtraction within 1000<br />\nMeasurement and data<br />\nGeometry</p>\n","","0"),
("903","Quick tips","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Simple_Notes/Quick_Tips/quick_tips1.jpg\" style=\"height:457px; width:855px\" /></p>\n\n<p>Solution for copying content from webpage even if left button ic orginaly block on this webpage</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Simple_Notes/Quick_Tips/quick_tips2.jpg\" style=\"height:626px; width:1280px\" /></p>\n","","0"),
("904","Kreta 2015","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Simple_Notes/Vacation/Heraklion.jpg\" /></p>\n","","0"),
("905","ElementNotInteractableException","","","0"),
("906","ElementNotSelectableException","","","0"),
("907","ElementNotVisibleException","","","0"),
("908","ErrorInResponseException","","","0"),
("909","ImeActivationFailedException","","","0"),
("910","ImeNotAvailableException","","","0"),
("911","InvalidArgumentException","","","0"),
("912","InvalidCookieDomainException","","","0"),
("913","InvalidElementStateException","","","0"),
("914","InvalidSelectorException","","","0"),
("915","InvalidSwitchToTargetException","","","0"),
("916","MoveTargetOutOfBoundsException","","","0"),
("917","NoAlertPresentException","","","0"),
("918","NoSuchAttributeException","","","0");
INSERT INTO function VALUES
("919","NoSuchElementException","","","0"),
("920","NoSuchFrameException","","","0"),
("921","NoSuchWindowException","","","0"),
("922","RemoteDriverServerException","","","0"),
("923","StaleElementReferenceException","","","0"),
("924","TimeoutException","","","0"),
("925","UnableToSetCookieException","","","0"),
("926","UnexpectedAlertPresentException","","","0"),
("927","UnexpectedTagNameException","","","0"),
("928","WebDriverException","","","0"),
("929","find_element_by_id","<p>Controls the ChromeDriver and allows you to drive the browser</p>\n","<p>from selenium import webdriver<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;</p>\n\n<p>driver=webdriver.Chrome(path_chromedrive)<br />\ndriver.get(&quot;http://www.yahoo.com&quot;)<br />\ndriver.close()</p>\n","0"),
("930","ActionChains","","","0"),
("931","click","","","0"),
("932","click_and_hold","","","0"),
("933","context_click","","","0"),
("934","double_click","","","0"),
("935","drag_and_drop","","","0"),
("936","drag_and_drop_by_offset","","","0"),
("937","key_down","","","0"),
("938","key_up","","","0"),
("939","move_by_offset","","","0"),
("940","move_to_element","","","0"),
("941","move_to_element_with_offset","","","0"),
("942","perform","","","0"),
("943","release","","","0"),
("944","reset_actions","","","0"),
("945","send_keys","","","0"),
("946","send_keys_to_element","","","0"),
("947","Alert","<p>Use this class to interact with alert prompts</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;</p>\n\n<p>driver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)<br />\ndriver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)<br />\nselenium.webdriver.common.alert.Alert(driver).accept()</p>\n","0"),
("948","accept","<p>Accepts the alert available</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;</p>\n\n<p>driver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)<br />\ndriver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)<br />\nselenium.webdriver.common.alert.Alert(driver).accept()</p>\n\n<p>&nbsp;</p>\n\n<p><strong>index.php</strong></p>\n\n<p><strong><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Selenium/seleniumwebdrivercommonalert/alert.jpg\" style=\"height:60px; width:459px\" /></strong></p>\n","0"),
("949","authenticate","<p>Send the username / password to an Authenticated dialog (like with Basic HTTP Auth). Implicitly &lsquo;clicks ok&rsquo;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Selenium/seleniumwebdrivercommonalert/authetication.png\" /></p>\n","<p>import selenium</p>\n\n<p>username = &quot;username &quot;</p>\n\n<p>password&nbsp;= &quot;password&nbsp;&quot;<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)<br />\ndriver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)<br />\nselenium.webdriver.common.alert.Alert(driver).authenticate(username, password)</p>\n","0"),
("950","dismiss","<p>Dismisses the alert available</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)<br />\ndriver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)<br />\nselenium.webdriver.common.alert.Alert(driver).dismiss()</p>\n","0"),
("951","send_keys","","","0"),
("952","text","<p>Gets the text of the Alert</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)<br />\ndriver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)<br />\nselenium.webdriver.common.alert.Alert(driver).text # &#39;treÅ›Ä‡ komunikatu&#39;</p>\n","0"),
("953","By","","","0"),
("954","DesiredCapabilities","","","0"),
("955","Keys","","","0"),
("956","find_connectable_ip","","","0"),
("957","free_port","","","0"),
("958","is_connectable","","","0"),
("959","is_url_connectable","","","0"),
("960","join_host_port","","","0"),
("961","keys_to_typing","","","0"),
("962","find_element_by_id","<p>Find elements using one of the&nbsp;<cite>find_element_by_*</cite>methods -&gt;&nbsp;find_element_by_id</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p><br />\nusername = driver.find_element_by_id(&#39;username&#39;)<br />\npassword = driver.find_element_by_id(&#39;password&#39;)<br />\ncontinue1 = driver.find_element_by_id(&#39;continue&#39;)</p>\n\n<p>username.send_keys(&quot;user_test&quot;)<br />\npassword.send_keys(&quot;password_test&quot;)<br />\ncontinue1.submit()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_id.jpg&amp;1499802596\" /></p>\n","0"),
("963","find_element_by_id","","","0"),
("964","add_cookie","","","0"),
("965","application_cache","","","0"),
("966","back","","","0"),
("967","close","","","0"),
("968","create_web_element","","","0"),
("969","current_url","","","0"),
("970","current_window_handle","","","0"),
("971","delete_all_cookies","","","0"),
("972","delete_cookie","","","0"),
("973","desired_capabilities","","","0"),
("974","execute","","","0"),
("975","execute_async_script","","","0"),
("976","execute_script","","","0"),
("977","file_detector","","","0"),
("978","file_detector_context","","","0"),
("979","find_element","","","0"),
("980","find_element_by_class_name","","","0"),
("981","find_element_by_css_selector","","","0"),
("982","find_element_by_id","","","0"),
("983","find_element_by_link_text","","","0"),
("984","find_element_by_name","","","0"),
("985","find_element_by_partial_link_text","","","0"),
("986","find_element_by_tag_name","","","0"),
("987","find_element_by_xpath","","","0"),
("988","find_elements","","","0"),
("989","find_elements_by_class_name","","","0"),
("990","find_elements_by_css_selector","","","0"),
("991","find_elements_by_id","","","0"),
("992","find_elements_by_link_text","","","0"),
("993","find_elements_by_name","","","0"),
("994","find_elements_by_partial_link_text","","","0"),
("995","find_elements_by_tag_name","","","0"),
("996","find_elements_by_xpath","","","0"),
("997","forward","","","0"),
("998","get","","","0"),
("999","get_cookie","","","0"),
("1000","get_cookies","","","0"),
("1001","get_log","","","0"),
("1002","get_screenshot_as_base64","","","0"),
("1003","get_screenshot_as_file","","","0"),
("1004","get_screenshot_as_png","","","0"),
("1005","get_window_position","","","0"),
("1006","get_window_rect","","","0"),
("1007","get_window_size","","","0"),
("1008","implicitly_wait","","","0"),
("1009","log_types","","","0"),
("1010","maximize_window","","","0"),
("1011","mobile","","","0"),
("1012","name","","","0"),
("1013","orientation","","","0"),
("1014","page_source","","","0"),
("1015","quit","","","0"),
("1016","refresh","","","0"),
("1017","save_screenshot","","","0"),
("1018","set_page_load_timeout","","","0");
INSERT INTO function VALUES
("1019","set_script_timeout","","","0"),
("1020","set_window_position","","","0"),
("1021","set_window_rect","","","0"),
("1022","set_window_size","","","0"),
("1023","start_client","","","0"),
("1024","start_session","","","0"),
("1025","stop_client","","","0"),
("1026","switch_to","","","0"),
("1027","switch_to_active_element","","","0"),
("1028","switch_to_alert","","","0"),
("1029","switch_to_default_content","","","0"),
("1030","switch_to_frame","","","0"),
("1031","switch_to_window","","","0"),
("1032","title","","","0"),
("1033","window_handles","","","0"),
("1034","WebElement","","","0"),
("1035","clear","","","0"),
("1036","click","","","0"),
("1037","find_element","","","0"),
("1038","find_element_by_class_name","","","0"),
("1039","find_element_by_css_selector","","","0"),
("1040","find_element_by_id","","","0"),
("1041","find_element_by_link_text","","","0"),
("1042","find_element_by_name","","","0"),
("1043","find_element_by_partial_link_text","","","0"),
("1044","find_element_by_tag_name","","","0"),
("1045","find_element_by_xpath","","","0"),
("1046","find_elements","","","0"),
("1047","find_elements_by_class_name","","","0"),
("1048","find_elements_by_css_selector","","","0"),
("1049","find_elements_by_id","","","0"),
("1050","find_elements_by_link_text","","","0"),
("1051","find_elements_by_name","","","0"),
("1052","find_elements_by_partial_link_text","","","0"),
("1053","find_elements_by_tag_name","","","0"),
("1054","find_elements_by_xpath","","","0"),
("1055","get_attribute","","","0"),
("1056","get_property","","","0"),
("1057","id","","","0"),
("1058","is_displayed","","","0"),
("1059","is_enabled","","","0"),
("1060","is_selected","","","0"),
("1061","location","","","0"),
("1062","location_once_scrolled_into_view","","","0"),
("1063","parent","","","0"),
("1064","rect","","","0"),
("1065","screenshot","","","0"),
("1066","screenshot_as_base64","","","0"),
("1067","screenshot_as_png","","","0"),
("1068","send_keys","","","0"),
("1069","size","","","0"),
("1070","submit","","","0"),
("1071","tag_name","","","0"),
("1072","text","","","0"),
("1073","value_of_css_property","","","0"),
("1074","Color","<p>Color conversion support class</p>\n","<p>from selenium.webdriver.support.color import Color</p>\n\n<p>print(Color.from_string(&#39;#00ff33&#39;).rgba) # rgba(0, 255, 51, 1)<br />\nprint(Color.from_string(&#39;rgb(1, 255, 3)&#39;).hex) # #01ff03<br />\nprint(Color.from_string(&#39;blue&#39;).rgba) # rgba(0, 0, 255, 1)</p>\n","0"),
("1075","alert_is_present","","","0"),
("1076","element_located_selection_state_to_be","","","0"),
("1077","element_located_to_be_selected","","","0"),
("1078","element_selection_state_to_be","","","0"),
("1079","element_to_be_clickable","","","0"),
("1080","element_to_be_selected","","","0"),
("1081","frame_to_be_available_and_switch_to_it","","","0"),
("1082","invisibility_of_element_located","","","0"),
("1083","new_window_is_opened","","","0"),
("1084","number_of_windows_to_be","","","0"),
("1085","presence_of_all_elements_located","","","0"),
("1086","presence_of_element_located","","","0"),
("1087","staleness_of","","","0"),
("1088","text_to_be_present_in_element","","","0"),
("1089","text_to_be_present_in_element_value","","","0"),
("1090","title_contains","","","0"),
("1091","title_is","","","0"),
("1092","visibility_of","","","0"),
("1093","visibility_of_all_elements_located","","","0"),
("1094","visibility_of_any_elements_located","","","0"),
("1095","visibility_of_element_located","","","0"),
("1096","Select","","","0"),
("1097","all_selected_options","","","0"),
("1098","deselect_all","","","0"),
("1099","deselect_by_index","","","0"),
("1100","deselect_by_value","","","0"),
("1101","deselect_by_visible_text","","","0"),
("1102","first_selected_option","","","0"),
("1103","options","","","0"),
("1104","select_by_index","","","0"),
("1105","select_by_value","","","0"),
("1106","select_by_visible_text","","","0"),
("1107","WebDriverWait","","","0"),
("1108","until","","","0"),
("1109","until_not","","","0"),
("1110","UK - Wrexham","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Simple_Notes/Vacation/UK_-_Wrexham.jpg\" style=\"height:371px; width:800px\" /></p>\n","","0"),
("1111","Holland","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Simple_Notes/Vacation/holland.jpg\" style=\"height:372px; width:800px\" /></p>\n","","0"),
("1112","sqlabs","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Windows/Database/sqlabs.jpg\" style=\"height:416px; width:800px\" /></p>\n","","0"),
("1113","video recorder","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Windows/Database/streaming_video_recorder.jpg\" style=\"height:450px; width:800px\" /></p>\n","","0"),
("1114","Python tutorials","","","0"),
("1115","IT tutorials","","","0"),
("1116","Rest","","","0"),
("1117","Miusic","","","0"),
("1118","Spy videos","","","0");
INSERT INTO function VALUES
("1119","USA","<p>https://www.wgu.edu/online_it_degrees/software_development_degree</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/transport.jpg\" style=\"height:512px; width:800px\" /></p>\n\n<table summary=\"Recommended order in which courses in this program should be taken.\">\n	<thead>\n		<tr>\n			<th>Course</th>\n			<th>Competency Units</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td>1 Introduction to IT</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>2 Critical Thinking and Logic</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>3 Introduction to Communication</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>4 English Composition I</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>5 English Composition II</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>6 Integrated Physical Sciences</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>7 Scripting and Programming - Foundations</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>8 Web Development Foundations</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>9 Introduction to Humanities</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>10 Network and Security - Foundations</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>11 College Algebra</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>12 Introduction to Geography</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>13 Natural Science Lab</td>\n			<td>2</td>\n		</tr>\n		<tr>\n			<td>14 IT Foundations</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>15 IT Applications</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>16 Organizational Behavior and Leadership</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>17 Introduction to Probability and Statistics</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>18 Scripting and Programming - Applications</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>19 Technical Communication</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>20 User Interface Design</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>21 Data Management - Foundations</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>22 Data Management - Applications</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>23 Operating Systems for Programmers</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>24 Software Engineering</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>25 Data Management for Programmers</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>26 Web Development Applications</td>\n			<td>6</td>\n		</tr>\n		<tr>\n			<td>27 Software I</td>\n			<td>6</td>\n		</tr>\n		<tr>\n			<td>28 Principles of Management</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>29 Business of IT - Applications</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>30 Software II - Advanced Java Concepts</td>\n			<td>6</td>\n		</tr>\n		<tr>\n			<td>31 Client-Server Application Development</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>32 Mobile Application Development</td>\n			<td>3</td>\n		</tr>\n		<tr>\n			<td>33 Business of IT - Project Management</td>\n			<td>4</td>\n		</tr>\n		<tr>\n			<td>34 IT Capstone Written Project</td>\n			<td>4</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<ul>\n	<li>CompTIA A+&nbsp;https://certification.comptia.org/docs/default-source/exam-objectives/comptia-a-220-901-exam-objectives.pdf</li>\n</ul>\n\n<p>https://www.youtube.com/watch?v=pgJEhzIRfMY</p>\n\n<p>http://amzn.to/2g0Ggs9</p>\n\n<ul>\n	<li>CompTIA Project+</li>\n	<li>CIW Site Development Associate</li>\n</ul>\n\n<ul>\n	<li>CIW User Interface Designer</li>\n	<li>CIW Advanced HTML5 and CSS Specialis</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/CIW_USER_INTERFACE.jpg\" style=\"height:400px; width:800px\" /></p>\n\n<h3>Speaking with your Enrollment Counselor</h3>\n\n<p>Your Enrollment Counselor will help you determine if WGU is the right school for you and your educational goals. When you&rsquo;re ready, your Enrollment Counselor will guide you through the admissions process.</p>\n\n<p>When you&nbsp;<a href=\"https://www.wgu.edu/wgu/inquiry_form\">request more information</a>&nbsp;about WGU, you will be contacted by an Enrollment Counselor. Your Enrollment Counselor&rsquo;s sole purpose is to help you determine if WGU is the right school for your educational and career goals.</p>\n\n<p>This individual has specialized knowledge in your program of interest. You and your Enrollment Counselor will discuss your academic and career background and how they fit with WGU&rsquo;s program offerings and nature of study. Our emphasis is on counseling you to make the best possible decision about your future&mdash;whether it&rsquo;s with WGU or not. (Our counselors are non-commissioned professionals.) When you&rsquo;re ready, your Enrollment Counselor will guide you through the admissions process.</p>\n\n<p>Your&nbsp;<a href=\"https://www.wgu.edu/wgu/inquiry_form\">Enrollment Counselor</a>&nbsp;is available to you by phone and email</p>\n\n<h3>How WGU&rsquo;s Class Schedule Works</h3>\n\n<p>WGU offers degrees, not classes. <strong>You can begin your degree program on the first of any month</strong>, which begins your first term.</p>\n\n<p>A term at WGU is six months in length. The six months that make up your term are based on when you begin your program. For example, if you begin your program March 1st, your first term lasts from March 1st to August 31st. Your second term would begin September 1st.</p>\n\n<p><a href=\"https://www.wgu.edu/tuition_financial_aid/tuition\">Tuition</a>&nbsp;is billed at a flat-rate every term, so you pay for the time, not by credit hour or by course. Since you&rsquo;re paying for the time, you&rsquo;re encouraged to complete as many assessments as you can in those six months. If you can complete your assessments in less time, your program will be shorter and you&rsquo;ll pay less.</p>\n\n<h3>Self Pay</h3>\n\n<p>For students who plan to pay for tuition without government assistance, payments or payment arrangements must be completed on or before:</p>\n\n<ul>\n	<li>The 22nd day of the month prior to program start date for new students paying first-term tuition.</li>\n	<li>The first day of the new term for second and subsequent terms.</li>\n</ul>\n\n<p>Per Year:</p>\n\n<p><img src=\"https://www.wgu.edu/sites/wgu.edu/files/custom_uploads/tuition_comparison.png\" /></p>\n\n<table cellpadding=\"0\" cellspacing=\"0\">\n	<tbody>\n		<tr>\n			<td>INFORMATION TECHNOLOGY PROGRAMS:</td>\n			<td>$2,890 PER TERM</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Plans/WGU_population_students.jpg\" style=\"height:526px; width:800px\" /></p>\n\n<h2>isa and Immigration Information</h2>\n\n<p>&nbsp;</p>\n\n<p>The United States is very welcoming to foreign citizens who wish to study in the United States, whether as an exchange student or for your entire undergraduate degree. This doesn&rsquo;t mean that you can just walk into the United States, however. There are a few things that you need to do in order to enter the United States as an international student.</p>\n\n<p>Before you even get started with the process of applying for a visa, you should be accepted into your college program. Unlike other countries, you need to be accepted to university before you can apply for your visa (some countries require you to have a visa before you can apply to a university). To learn more, see the&nbsp;<a href=\"http://eca.state.gov/educationusa\" target=\"_blank\">EducationUSA&nbsp;website</a>&nbsp;and contact a&nbsp;Student Advising Center&nbsp;or review the&nbsp;<a href=\"http://exchanges.state.gov/\" rel=\"external nofollow\">Exchanges program</a>&nbsp;website. They can give you the information you need about applying for your visa.</p>\n\n<h4>Types of Visas</h4>\n\n<p>There are two major types of visas for those who plan to study in the United States; the F-1 Visa or the M-1 Visa. Here&rsquo;s a quick look at each of them.</p>\n\n<ul>\n	<li>F-1 Visa. Most students who go to the United States for university will go on what is called an F-1 Visa. This visa is for students who are in elementary school, secondary school, seminary, conservatory, academic institutions, language training programs, university, and/or college.</li>\n	<li>M-1 Visa. These visas are for those who are attending vocational schools, or another recognized non-academic program.</li>\n</ul>\n\n<p>There are no exceptions to this, either; even if you are part of the Visa Waiver Program (<a href=\"http://travel.state.gov/visa/temp/without/without_1990.html\" rel=\"external nofollow\">VWP</a>) program or have a Visitor &ldquo;B&rdquo; Visa, you cannot study in the United States for an extended period of time unless you are taking a short class as part of tourism (and not toward a degree). You must have a F-1 or M-1 visa in order to attend the United States university which you were accepted to.</p>\n\n<h4>Applying for a Visa</h4>\n\n<p>You have to follow several certain steps in order to apply for a visa. You can check out the particular steps that students from your home country have to follow from the United States Embassy located in your country. If you do not know how to contact them, take&nbsp;a look at the&nbsp;<a href=\"http://www.usembassy.gov/\" rel=\"external nofollow\">U.S. Embassy website</a>and find your closest Embassy.</p>\n\n<p>Next, you will have to go through an interview process if you are between the ages of 14 and 79. The consular officers at the Embassy will perform the interview. If you are concerned about the amount of time necessary, check out the U.S. Embassy FAQ page about&nbsp;<a href=\"http://travel.state.gov/visa/temp/wait/wait_4638.html\" rel=\"external nofollow\">wait times</a>. These can change, so make sure you apply early. You can have your visa issued up to 120 days before you start your coursework, but you cannot enter the United States until approximately a month prior to that date.</p>\n\n<h4>Other Documentation</h4>\n\n<p>There will be some documentation that you will need to take with you when you attend your visa interview. Here are some of the items that you should have with you at that point.</p>\n\n<ul>\n	<li><strong>Passport&nbsp;valid for travel to the U. S.</strong>&nbsp;&ndash; Your passport must be valid for at least six months beyond your period of stay in the U. S. (unless exempt by&nbsp;<a href=\"http://www.state.gov/documents/organization/104770.pdf\" rel=\"external nofollow\">country-specific agreements</a>).</li>\n	<li>There is an online application, known as the&nbsp;<strong>Online Nonimmigrant Visa Application</strong>,&nbsp;<a href=\"http://travel.state.gov/visa/forms/forms_4230.html\">Form DS-160</a>. Complete this and print it out when you go to the interview. You will also have to pay a fee and upload a photo.</li>\n	<li><strong>Certificate of Eligibility for Nonimmigrant (F-1) Student Status-For Academic and Language Students, Form I-20A-B or Certificate of Eligibility for Nonimmigrant (M-1) Student Status for Vocational Students, Form I-20M-N</strong>&ndash; Your university will send you the appropriate forms and let you know which of these that you have to submit at your visa interview.</li>\n	<li><strong>Proof of your academic progress.</strong>&nbsp;This can include any secondary schooling degrees and anything that you may need for postgraduate work.</li>\n	<li><strong>Your intent to depart the U.S. upon completion of the course of study</strong>. This is usually paperwork that you need to sign that states you will leave the country after you have finished schoolwork. This is only necessary if you live in a country that has an excess of immigrants in the United States currently.</li>\n	<li><strong>How you will pay all educational, living and travel costs</strong>. This is also dependent on the country that you live in.</li>\n</ul>\n","","0"),
("1120","find_element_by_name","<p>Find elements using one of the&nbsp;<cite>find_element_by_*</cite>methods -&gt;&nbsp;find_element_by_name</p>\n","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p><br />\nusername = driver.find_element_by_name(&#39;username&#39;)<br />\npassword = driver.find_element_by_name(&#39;password&#39;)<br />\ncontinue1 = driver.find_element_by_name(&#39;continue&#39;)</p>\n\n<p>username.send_keys(&quot;user_test&quot;)<br />\npassword.send_keys(&quot;password_test&quot;)<br />\ncontinue1.submit()</p>\n\n<p><strong>index.php</strong></p>\n\n<p><!--?php<br /--></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Selenium/driver/find_element_by_name.jpg\" style=\"height:254px; width:530px\" /><br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Selenium/driver/result.jpg\" style=\"height:243px; width:800px\" /></p>\n\n<p>&nbsp;</p>\n\n<p><br />\n&nbsp; &nbsp;<br />\n&nbsp; &nbsp;<br />\n&nbsp; &nbsp;<br />\n&nbsp; &nbsp;<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n","0"),
("1121","find_element_by_xpath","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p><br />\nusername = driver.find_element_by_xpath(&#39;//*[@id=&quot;username&quot;]&#39;)<br />\npassword = driver.find_element_by_xpath(&#39;//*[@id=&quot;password&quot;]&#39;)<br />\ncontinue1 = driver.find_element_by_xpath(&#39;//*[@id=&quot;continue&quot;]&#39;)</p>\n\n<p>username.send_keys(&quot;user_test&quot;)<br />\npassword.send_keys(&quot;password_test&quot;)<br />\ncontinue1.submit()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_id.jpg&amp;1499803825\" style=\"height:238px; width:509px\" /></p>\n","0"),
("1122","find_element_by_link_text","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>cancel = driver.find_element_by_link_text(&#39;Cancel&#39;)<br />\ncancel.click()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_link_text.jpg&amp;1499804555\" /></p>\n","0"),
("1123","find_element_by_partial_link_text","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>cancel = driver.find_element_by_partial_link_text(&#39;Canc&#39;)<br />\ncancel.click()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_link_text.jpg&amp;1499804555\" /></p>\n","","0"),
("1124","find_element_by_tag_name","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>heading1 = driver.find_element_by_tag_name(&#39;h1&#39;)<br />\nheading1.text # &#39;Welcome&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_tag_name.jpg&amp;1499805493\" style=\"height:94px; width:326px\" /></p>\n","0"),
("1125","find_element_by_class_name","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>content = driver.find_element_by_class_name(&#39;content&#39;)<br />\ncontent.text # &#39;Site content goes here.&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_class_name.jpg&amp;1499806080\" style=\"height:84px; width:454px\" /></p>\n","0"),
("1126","find_element_by_css_selector","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>content = driver.find_element_by_css_selector(&#39;p.content&#39;)<br />\ncontent.text # &#39;Site content goes here.&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_class_name.jpg&amp;1499806080\" /></p>\n","0"),
("1127","find_elements_by_name","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p><br />\ncontent = driver.find_elements_by_name(&#39;1&#39;)<br />\nfor x in content:<br />\n&nbsp; &nbsp; print(x.text)</p>\n\n<p># Welcome<br />\n# Site content goes here.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_elements_by_name.jpg&amp;1499808456\" style=\"height:97px; width:407px\" /></p>\n","0"),
("1128","find_elements_by_xpath","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p><br />\ncontent = driver.find_elements_by_xpath(&#39;//p&#39;)<br />\nfor x in content:<br />\n&nbsp; &nbsp; print(x.text)</p>\n\n<p><br />\n# Welcome<br />\n# Site content goes here.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_elements_by_xpath.jpg&amp;1499809480\" style=\"height:112px; width:317px\" /></p>\n","0"),
("1129","find_elements_by_link_text","","","0"),
("1130","find_elements_by_partial_link_text","","","0"),
("1131","find_elements_by_tag_name","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>tag = driver.find_elements_by_tag_name(&#39;p&#39;)</p>\n\n<p>for x in tag:<br />\n&nbsp; &nbsp; print(x.text)<br />\n&nbsp; &nbsp;&nbsp;<br />\n# Welcome<br />\n# Site content goes here.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_elements_by_xpath.jpg&amp;1499810689\" /></p>\n\n<p><strong>example</strong></p>\n\n<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>tag = driver.find_elements_by_tag_name(&#39;a&#39;)</p>\n\n<p>for x in tag:<br />\n&nbsp; &nbsp; print(x.get_attribute(&#39;href&#39;))<br />\n&nbsp; &nbsp; print(x.text)<br />\n&nbsp; &nbsp; print(&quot;&quot;)</p>\n\n<pre>\n# <a href=\"http://python-nauka.cba.pl/continue.html\" target=\"_blank\">http://python-nauka.cba.pl/continue.html</a>\n# Continue\n# \n# <a href=\"http://python-nauka.cba.pl/cancel.html\" target=\"_blank\">http://python-nauka.cba.pl/cancel.html</a>\n# Cancel</pre>\n","0"),
("1132","find_elements_by_class_name","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>content = driver.find_elements_by_class_name(&#39;cla&#39;)<br />\nfor x in content:<br />\n&nbsp; &nbsp; print(x.text)<br />\n&nbsp; &nbsp;&nbsp;<br />\n# Welcome<br />\n# Site content goes here.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_elements_by_class_name.jpg&amp;1499811330\" /></p>\n","0"),
("1133","find_elements_by_css_selector","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>content = driver.find_elements_by_css_selector(&#39;p.content&#39;)<br />\nfor x in content:<br />\n&nbsp; &nbsp; print(x.text)<br />\n&nbsp; &nbsp;&nbsp;<br />\n# Welcome<br />\n# Site content goes here.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Selenium/driver/find_elements_by_css_selector.jpg\" style=\"height:112px; width:485px\" /></p>\n","0"),
("1134","click","","<p>import selenium<br />\npath_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\ndriver=selenium.webdriver.chrome.webdriver.WebDriver(path_chromedrive)</p>\n\n<p>driver.get(&quot;http://python-nauka.cba.pl/index.php&quot;)</p>\n\n<p>cancel = driver.find_element_by_partial_link_text(&#39;Canc&#39;)<br />\ncancel.click()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FSelenium%2Fdriver%2Ffind_element_by_link_text.jpg&amp;1499804555\" /></p>\n","0"),
("1135","click_and_hold","","","0"),
("1136","context_click","","","0"),
("1137","double_click","","","0"),
("1138","drag_and_drop","","","0"),
("1139","drag_and_drop_by_offset","","","0"),
("1140","key_down","","","0"),
("1141","key_up","","","0"),
("1142","move_by_offset","","","0"),
("1143","move_to_element","","","0"),
("1144","move_to_element_with_offset","","","0"),
("1145","perform","","","0"),
("1146","release","","","0"),
("1147","reset_actions","","","0"),
("1148","send_keys","","","0"),
("1149","send_keys_to_element","","","0"),
("1150","current_url","","","0"),
("1151","close","","","0"),
("1152","get","","","0"),
("1153","clear","","","0"),
("1154","text","","","0"),
("1156","pygame.cdrom.init","<p>Initialize the cdrom module. This will scan the system for all&nbsp;<code>CD</code>&nbsp;devices. The module must be initialized before any other functions will work</p>\n","<p>import pygame<br />\npygame.cdrom.init()</p>\n\n<p># Code<br />\npygame.cdrom.quit()</p>\n","0"),
("1157","pygame.cdrom.quit","<p>Uninitialize the cdrom module. After you call this any existing&nbsp;<code>CD</code>&nbsp;objects will no longer work</p>\n","<p>import pygame<br />\npygame.cdrom.init()<br />\n# Code<br />\npygame.cdrom.quit()</p>\n","0"),
("1158","pygame.cdrom.get_init","<p>Test if the cdrom module is initialized or not</p>\n","<p>import pygame<br />\npygame.cdrom.init()<br />\nprint(&quot;CDROM initialized: &quot;, pygame.cdrom.get_init()) #&nbsp;1</p>\n\n<p>pygame.cdrom.quit()</p>\n","0"),
("1159","pygame.cdrom.get_count","<p>Return the number of cd drives on the system</p>\n","<pre>\nimport pygame\npygame.cdrom.init()\nprint(&quot;CDROM initialized: &quot;, pygame.cdrom.get_init()) # 1\nprint(&quot;Number of CDROMs: &nbsp;&quot;, pygame.cdrom.get_count()) # 2\npygame.cdrom.quit()\n</pre>\n","0"),
("1161","pygame.cdrom.CD.init","<p>Initialize the cdrom drive for use. The drive must be initialized for most&nbsp;<code>CD</code>&nbsp;methods to work. Even if the rest of pygame has been initialized.</p>\n","<p>import pygame<br />\npygame.init()<br />\npygame.cdrom.init()<br />\n# Code<br />\npygame.cdrom.quit()</p>\n","0"),
("1162","pygame.cdrom.CD.quit","<p>Uninitialize the cdrom module. After you call this any existing&nbsp;<code>CD</code>&nbsp;objects will no longer work</p>\n","<p>import pygame<br />\npygame.init()<br />\npygame.cdrom.init()<br />\n# Code<br />\npygame.cdrom.quit()</p>\n","0"),
("1163","pygame.cdrom.CD.get_init","<p>Test if the cdrom module is initialized or not. This is different than the&nbsp;<code>CD.init()</code>&nbsp;since each drive must also be initialized individually</p>\n","<p>import pygame<br />\npygame.init()<br />\npygame.cdrom.init()<br />\nprint(&quot;CDROM initialized: &quot;, pygame.cdrom.get_init()) # 1<br />\npygame.cdrom.quit()</p>\n","0"),
("1164","pygame.cdrom.CD.play","<p>Playback audio from an audio cdrom in the drive</p>\n","","0"),
("1165","pygame.cdrom.CD.stop","<p>Stops playback of audio from the cdrom. This will also lose the current playback position. This method does nothing if the drive isn&rsquo;t already playing audio</p>\n","","0"),
("1166","pygame.cdrom.CD.pause","<p>Temporarily stop audio playback on the&nbsp;<code>CD</code>. The playback can be resumed at the same point with the&nbsp;<code>CD.resume()</code>&nbsp;method. If the&nbsp;<code>CD</code>&nbsp;is not playing this method does nothing</p>\n","","0"),
("1167","pygame.cdrom.CD.resume","<p>Unpause a paused&nbsp;<code>CD</code>. If the&nbsp;<code>CD</code>&nbsp;is not paused or already playing, this method does nothing</p>\n","","0"),
("1168","pygame.cdrom.CD.eject","<p>This will open the cdrom drive and eject the cdrom. If the drive is playing or paused it will be stopped</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\ncd.eject()<br />\npygame.cdrom.quit()</p>\n","0"),
("1169","pygame.cdrom.CD.get_id","<p>Returns the integer id that was used to create the&nbsp;<code>CD</code>&nbsp;instance. This method can work on an uninitialized&nbsp;<code>CD</code></p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_id()) # 0&nbsp;<br />\npygame.cdrom.quit()</p>\n","0"),
("1170","pygame.cdrom.CD.get_name","<p>Return the string name of the drive. This is the system name used to represent the drive. It is often the drive letter or device name. This method can work on an uninitialized&nbsp;<code>CD</code>.</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_name()) # D:<br />\npygame.cdrom.quit()</p>\n","0"),
("1171","pygame.cdrom.CD.get_busy","<p>Returns True if the drive busy playing back audio</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_busy()) # 0<br />\npygame.cdrom.quit()</p>\n","0"),
("1172","pygame.cdrom.CD.get_paused","<p>Returns True if the drive is currently paused</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_paused()) # 0<br />\npygame.cdrom.quit()</p>\n","0"),
("1173","pygame.cdrom.CD.get_current","<p>Returns both the current track and time of that track. This method works when the drive is either playing or paused.</p>\n\n<p>Note, track 0 is the first track on the&nbsp;<code>CD</code>. Track numbers start at zero</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_current()) # (0, 0.0)<br />\npygame.cdrom.quit()<br />\n&nbsp;</p>\n","0"),
("1174","pygame.cdrom.CD.get_empty","<p>Return False if there is a cdrom currently in the drive. If the drive is empty this will return True</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_empty()) # 0<br />\npygame.cdrom.quit()</p>\n","0"),
("1175","pygame.cdrom.CD.get_numtracks","<p>Return the number of tracks on the cdrom in the drive. This will return zero of the drive is empty or has no tracks.</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_numtracks()) # 1<br />\npygame.cdrom.quit()</p>\n","0"),
("1176","pygame.cdrom.CD.get_track_audio","<p>Determine if a track on a cdrom contains audio data. You can also call&nbsp;<code>CD.num_tracks()</code>&nbsp;and&nbsp;<code>CD.get_all()</code>&nbsp;to determine more information about the cdrom.</p>\n\n<p>Note, track 0 is the first track on the&nbsp;<code>CD</code>. Track numbers start at zero.</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_track_audio(0)) # 0<br />\npygame.cdrom.quit()</p>\n","0"),
("1177","pygame.cdrom.CD.get_all","<p>Return a list with information for every track on the cdrom. The information consists of a tuple with four values. The audio value is True if the track contains audio data. The start, end, and length values are floating point numbers in seconds. Start and end represent absolute times on the entire disc.</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_all()) # ((0, 2.0, 609.84, 607.84),)<br />\npygame.cdrom.quit()<br />\n&nbsp;</p>\n","0"),
("1178","pygame.cdrom.CD.get_track_start","<p>Return the absolute time in seconds where at start of the cdrom track.</p>\n\n<p>Note, track 0 is the first track on the&nbsp;<code>CD</code>. Track numbers start at zero</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_track_audio(0)) # 0<br />\npygame.cdrom.quit()</p>\n","0"),
("1179","pygame.cdrom.CD.get_track_length","<p>Return a floating point value in seconds of the length of the cdrom track.</p>\n\n<p>Note, track 0 is the first track on the&nbsp;<code>CD</code>. Track numbers start at zero</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\nprint(cd.get_track_length(0)) # 0.0<br />\npygame.cdrom.quit()</p>\n","0"),
("1180","pygame.cdrom.CD","<p>Choose&nbsp;cdrom device</p>\n","<p>import pygame<br />\npygame.init()<br />\ncd = pygame.cdrom.CD(0)<br />\ncd.init()<br />\n# Code<br />\npygame.cdrom.quit()</p>\n","0"),
("1225","sfxr","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Windows/Database/sfxr.gif\" style=\"height:500px; width:644px\" /></p>\n","","0"),
("1189","pygame.mixer.init","","","0"),
("1190","pygame.mixer.pre_init","","","0"),
("1191","pygame.mixer.quit","","","0"),
("1192","pygame.mixer.get_init","","","0"),
("1193","pygame.mixer.stop","","","0"),
("1194","pygame.mixer.pause","","","0"),
("1195","pygame.mixer.unpause","","","0"),
("1196","pygame.mixer.fadeout","","","0"),
("1197","pygame.mixer.set_num_channels","","","0"),
("1198","pygame.mixer.get_num_channels","","","0"),
("1199","pygame.mixer.set_reserved","","","0"),
("1200","pygame.mixer.find_channel","","","0"),
("1201","pygame.mixer.get_busy","","","0"),
("1202","pygame.mixer.Sound","<p>Create a new Sound object from a file or buffer object</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\npygame.mixer.Sound.play(crash_sound)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1203","pygame.mixer.Channel","","","0"),
("1204","pygame.mixer.Sound.play","<p>Begin playback of the Sound</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\npygame.mixer.Sound.play(crash_sound)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1205","pygame.mixer.Sound.stop","<p>This will stop the playback of this Sound on any active Channels</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\npygame.mixer.Sound.play(crash_sound)<br />\npygame.mixer.Sound.stop(crash_sound)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1206","pygame.mixer.Sound.fadeout","","","0"),
("1207","pygame.mixer.Sound.set_volume","<p>Set the volume (loudness) of a playing sound</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\ncrash_sound.set_volume(0.5)<br />\npygame.mixer.Sound.play(crash_sound) # 0.5</p>\n\n<p>print(pygame.mixer.Sound.get_volume(crash_sound))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1208","pygame.mixer.Sound.get_volume","<p>Return the volume of the channel for the current playing sound.</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)</p>\n\n<p>print(pygame.mixer.Sound.get_volume(crash_sound)) # 1.0</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1209","pygame.mixer.Sound.get_num_channels","<p>Returns the number of currently active playback channels</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)</p>\n\n<p>print(pygame.mixer.get_num_channels()) # 8</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1210","pygame.mixer.Sound.get_length","<p>Return the length of this Sound in seconds</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\nprint(pygame.mixer.Sound.get_length(crash_sound)) # 0.5866666436195374</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1211","pygame.mixer.Sound.get_raw","<p>Return a copy of the Sound object buffer as a bytes (for Python 3.x) or str (for Python 2.x) object.</p>\n","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>crash_sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\npygame.mixer.Sound.play(crash_sound)</p>\n\n<p>file = open(&quot;text.txt&quot;,&quot;w&quot;)<br />\nfile.write(str(pygame.mixer.Sound.get_raw(crash_sound)))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n\n<p><br />\n<strong>text.txt</strong></p>\n\n<p>b&#39;xcaBxcaBxc5Bxc5Bxc0Bxc0BxbbBxbbBxb6Bxb6Bxb1Bxb1BxacBxacBxa6Bxa6Bxa1Bxa1Bx9cBx9cBx97Bx97Bx92Bx92Bx8dBx8dBx88Bx88Bx83Bx83B~B~Bx86x1ax86x1axf4xd7xf4xd7xf7xd7xf7xd7xfaxd7xfaxd7xfdxd7xfdxd7x00xd8x00xd8x03xd8x03xd8x06xd8x06xd8	xd8	xd8xd8xd8x10xd8x10xd8x13xd8x13xd8x16xd8x16xd8x19xd8x19xd8x1cxd8x1cxd8x1fxd8x1fxd8&quot;xd8&quot;xd8x16x02x16x02?x1b?x1b=x1b=x1b;x1b;x1b8x1b8x1b6x1b6x1b4x1b4x1b2x1b2x1b0x1b0x1b.x1b.x1b,x1b,x1b*x1b*x1b(x1b(x1b&amp;x1b&amp;x1b$x1b$x1b&quot;x1b&quot;x1bx1fx1bx1fx1bx1dx1bx1dx1bxc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc2x00xc1x00xc1x00xc1x00xc1x00xc1x00xc1x00xc1x00xc1x00xc1x00xc1x00&amp;xb4&amp;xb4+xb4+xb41xb41xb47xb47xb4=xb4=xb4Cxb4Cxb4Ixb4Ixb4Nxb4Nxb4Txb4Txb4Zxb4Zxb4`xb4`xb4fxb4fxb4lxb4lxb4qxb4qxb4wxb4wxb4}xb4}xb4x83xb4x83xb4x89xb4x89xb4Pxb4Pxb4xeexb3xeexb3xf4xb3xf4xb3xf9xb3xf9xb3xffxb3xffxb3x05xb4x05xb4x0bxb4x0bxb4x11xb4x11xb4x17xb4x17xb4x1dxb4x1dxb4&quot;xb4&quot;xb4(xb4(xb4.xb4.xb44xb44xb4:xb4:xb4@xb4@xb4Fxb4Fxb4Kxb4Kxb4Qxb4Qxb4Wxb4Wxb4xaf9xaf9xab9xab9xa69xa69xa29xa29x9d9x9d9x999x999x949x949x909x909x8c9x8c9x879x879x839x839~9~9z9z9u9u9q9q9l9l9h9h9d9d9_9_9[9[9xc6Nxc6Nxc0Nxc0NxbaNxbaNxb4Nxb4NxaeNxaeNxa8Nxa8Nxa2Nxa2Nx9cNx9cNx96Nx96Nx90Nx90Nx89Nx89Nx83Nx83N}N}NwNwNqNqNkNkNeNeN_N_NYNYNSNSNMNMNxe4xcfxe4xcfxe8xcfxe8xcfxecxcfxecxcfxf0xcfxf0xcfxf3xcfxf3xcfxf7xcfxf7xcfxfbxcfxfbxcfxfexcfxfexcfx02xd0x02xd0x06xd0x06xd0\nxd0\nxd0xd0xd0x11xd0x11xd0x15xd0x15xd0x18xd0x18xd0x1cxd0x1cxd0 xd0 xd0$xd0$xd0&#39;xd0&#39;xd0+xd0+xd0/xd0/xd02xd02xd0xddxe8xddxe8xdfxe8xdfxe8xe1xe8xe1xe8xe3xe8xe3xe8xe5xe8xe5xe8xe6xe8xe6xe8xe8xe8xe8xe8xeaxe8xeaxe8xecxe8xecxe8xedxe8xedxe8xefxe8xefxe8xf1xe8xf1xe8xf3xe8xf3xe8xf5xe8xf5xe8xf6xe8xf6xe8xf8xe8xf8xe8xfaxe8xfaxe8xfcxe8xfcxe8xfexe8xfexe8xffxe8xffxe8x01xe9x01xe9x03xe9x03xe9x05xe9x05xe9p/p/m/m/i/i/e/e/b/b/^/^/Z/Z/V/V/S/S/O/O/K/K/H/H/D/D/@/@/=/=/9/9/5/5/2/2/././*/*/&#39;/&#39;/#/#/x1f/x1f/x1c/x1c/xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe6x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe5x00xe4x00xe4x00xe4x00xe4x00x1fx08x1fx08)x14)x14&#39;x14&#39;x14&amp;x14&amp;x14$x14$x14&quot;x14&quot;x14!x14!x14x1fx14x1fx14x1ex14x1ex14x1cx14x1cx14x1bx14x1bx14x19x14x19x14x17x14x17x14x16x14x16x14x14x14x14x14x13x14x13x14x11x14x11x14x10x14x10x14x0ex14x0ex14x0cx14x0cx14x0bx14x0bx14	x14	x14x08x14x08x14x06x14x06x14x05x14x05x14x03x14x03x14x02x14x02x14xf1x01xf1x01x1cxf7x1cxf7x1dxf7x1dxf7x1exf7x1exf7x1exf7x1exf7x1fxf7x1fxf7 xf7 xf7 xf7 xf7!xf7!xf7&quot;xf7&quot;xf7#xf7#xf7#xf7#xf7$xf7$xf7%xf7%xf7%xf7%xf7&amp;xf7&amp;xf7&#39;xf7&#39;xf7&#39;xf7&#39;xf7(xf7(xf7)xf7)xf7)xf7)xf7*xf7*xf7+xf7+xf7,xf7,xf7,xf7,xf7-xf7-xf7.xf7.xf7.xf7.xf7/xf7/xf7xc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc5xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc6xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc7xfexc8xfexc8xfexc8xfexc8xfexc8xfexc8xfe@xd1@xd1xf5xb5xf5xb5xfaxb5xfaxb5x00xb6x00xb6x06xb6x06xb6x0cxb6x0cxb6x11xb6x11xb6x17xb6x17xb6x1dxb6x1dxb6#xb6#xb6)xb6)xb6.xb6.xb64xb64xb6:xb6:xb6@xb6@xb6Fxb6Fxb6Kxb6Kxb6Qxb6Qxb6Wxb6Wxb6]xb6]xb6cxb6cxb6hxb6hxb6nxb6nxb6txb6txb6zxb6zxb6x7fxb6x7fxb6x85xb6x85xb6x8bxb6x8bxb6x91xb6x91xb6x96xb6x96xb6x9cxb6x9cxb6xa2xb6xa2xb6xa8xb6xa8xb6kxb9kxb9xd4xb9xd4xb9xdaxb9xdaxb9xdfxb9xdfxb9xe5xb9xe5xb9xeaxb9xeaxb9xf0xb9xf0xb9xf5xb9xf5xb9xfbxb9xfbxb9x00xbax00xbax06xbax06xbax0bxbax0bxbax11xbax11xbax16xbax16xbax1cxbax1cxba!xba!xba&#39;xba&#39;xba,xba,xba2xba2xba7xba7xba=xba=xbaBxbaBxbaHxbaHxbaMxbaMxbaSxbaSxbaXxbaXxba^xba^xbacxbacxbaixbaixbanxbanxbatxbatxbayxbayxbax7fxbax7fxbax84xbax84xbax8axbax8axbaxaexdcxaexdcx06Cx06Cx00Cx00CxfbBxfbBxf6Bxf6Bxf0Bxf0BxebBxebBxe6Bxe6Bxe1Bxe1BxdbBxdbBxd6Bxd6Bxd1Bxd1BxccBxccBxc6Bxc6Bxc1Bxc1BxbcBxbcBxb7Bxb7Bxb1Bxb1BxacBxacBxa7Bxa7Bxa2Bxa2Bx9cBx9cBx97Bx97Bx92Bx92Bx8dBx8dBx87Bx87Bx82Bx82B}B}BxBxBrBrBmBmBhBhBcBcB]B]BXBXBSBSBNBNBHBHBCBCB6xfe6xfe2xba2xba8xba8xba=xba=xbaCxbaCxbaHxbaHxbaNxbaNxbaSxbaSxbaYxbaYxba^xba^xbadxbadxbaixbaixbaoxbaoxbatxbatxbazxbazxbax7fxbax7fxbax85xbax85xbax8axbax8axbax90xbax90xbax95xbax95xbax9bxbax9bxbaxa0xbaxa0xbaxa6xbaxa6xbaxabxbaxabxbaxb1xbaxb1xbaxb6xbaxb6xbaxbcxbaxbcxbaxc1xbaxc1xbaxc7xbaxc7xbaxccxbaxccxbaxd2xbaxd2xbaxd7xbaxd7xbaxddxbaxddxbaxe2xbaxe2xbaxe8xbaxe8xbaxedxbaxedxbaxf3xbaxf3xbaxf8xbaxf8xbaxfdxbaxfdxbax03xbbx03xbbx08xbbx08xbbx0exbbx0exbbx13xbbx13xbbKxd5Kxd5xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf3x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf2x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf1x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x00xf0x006xf86xf8xf7xf6xf7xf6xf8xf6xf8xf6xf9xf6xf9xf6xf9xf6xf9xf6xfaxf6xfaxf6xfbxf6xfbxf6xfcxf6xfcxf6xfcxf6xfcxf6xfdxf6xfdxf6xfexf6xfexf6xfexf6xfexf6xffxf6xffxf6x00xf7x00xf7x01xf7x01xf7x01xf7x01xf7x02xf7x02xf7x03xf7x03xf7x03xf7x03xf7x04xf7x04xf7x05xf7x05xf7x06xf7x06xf7x06xf7x06xf7x07xf7x07xf7x08xf7x08xf7x08xf7x08xf7	xf7	xf7\nxf7\nxf7x0bxf7x0bxf7x0bxf7x0bxf7x0cxf7x0cxf7xf7xf7xf7xf7x0exf7x0exf7x0fxf7x0fxf7x10xf7x10xf7x10xf7x10xf7x11xf7x11xf7x12xf7x12xf7x12xf7x12xf7x13xf7x13xf7x14xf7x14xf7x15xf7x15xf7x15xf7x15xf7x16xf7x16xf7x17xf7x17xf7x17xf7x17xf7x18xf7x18xf7x19xf7x19xf7x1axf7x1axf7x1axf7x1axf7x1bxf7x1bxf7x1cxf7x1cxf7x1cxf7x1cxf7x1dxf7x1dxf7x1exf7x1exf7xeexd6xeexd67xcc7xcc&lt;xcc&lt;xcc@xcc@xccDxccDxccHxccHxccLxccLxccPxccPxccTxccTxccXxccXxcc]xcc]xccaxccaxccexccexccixccixccmxccmxccqxccqxccuxccuxccyxccyxcc~xcc~xccx82xccx82xccx86xccx86xccx8axccx8axccx8exccx8exccx92xccx92xccx96xccx96xccx9axccx9axccx9exccx9exccxa2xccxa2xccxa7xccxa7xccxabxccxabxccxa8xd4xa8xd4xacxd4xacxd4xafxd4xafxd4xb3xd4xb3xd4xb6xd4xb6xd4xbaxd4xbaxd4xbdxd4xbdxd4xc1xd4xc1xd4xc4xd4xc4xd4xc7xd4xc7xd4xcbxd4xcbxd4xcexd4xcexd4xd2xd4xd2xd4xd5xd4xd5xd4xd9xd4xd9xd4xdcxd4xdcxd4xe0xd4xe0xd4x04xc8x04xc8	xc8	xc8xc8xc8x11xc8x11xc8x16xc8x16xc8x1axc8x1axc8x1fxc8x1fxc8#xc8#xc8(xc8(xc8,xc8,xc81xc81xc85xc85xc8:xc8:xc8&gt;xc8&gt;xc8Cxc8Cxc8Gxc8Gxc8Lxc8Lxc8Pxc8Pxc8Uxc8Uxc8xcexe1xcexe1xd0xe1xd0xe1xd3xe1xd3xe1xd5xe1xd5xe1xd8xe1xd8xe1xdaxe1xdaxe1xdcxe1xdcxe1xdfxe1xdfxe1xe1xe1xe1xe1xe4xe1xe4xe1xe6xe1xe6xe1xe9xe1xe9xe1xebxe1xebxe1xedxe1xedxe1xf0xe1xf0xe1xf2xe1xf2xe1xf5xe1xf5xe1xf7xe1xf7xe1xf9xe1xf9xe1wxc7wxc7{xc7{xc7x80xc7x80xc7x84xc7x84xc7x89xc7x89xc7x8dxc7x8dxc7x92xc7x92xc7x97xc7x97xc7x9bxc7x9bxc7xa0xc7xa0xc7xa4xc7xa4xc7xa9xc7xa9xc7xadxc7xadxc7xb2xc7xb2xc7xb6xc7xb6xc7xbbxc7xbbxc7xbfxc7xbfxc7xc4xc7xc4xc7xc8xc7xc8xc7xcdxc7xcdxc7x12xe4x12xe4x06xf5x06xf5x07xf5x07xf5x08xf5x08xf5	xf5	xf5\nxf5\nxf5x0bxf5x0bxf5x0cxf5x0cxf5xf5xf5xf5xf5x0exf5x0exf5x0fxf5x0fxf5x10xf5x10xf5x11xf5x11xf5x12xf5x12xf5x13xf5x13xf5x14xf5x14xf5x14xf5x14xf5x15xf5x15xf5x16xf5x16xf5x17xf5x17xf5?)?)x84Hx84H~H~HxHxHrHrHlHlHgHgHaHaH[H[HUHUHOHOHIHIHDHDH&gt;H&gt;H8H8H2H2H,H,H&#39;H&#39;H!H!Hx1bHx1bHx15Hx15Hx0fHx0fHxe7&#39;xe7&#39;xc4x07xc4x07xc3x07xc3x07xc3x07xc3x07xc2x07xc2x07xc1x07xc1x07xc1x07xc1x07xc0x07xc0x07xbfx07xbfx07xbfx07xbfx07xbex07xbex07xbex07xbex07xbdx07xbdx07xbcx07xbcx07xbcx07xbcx07xbbx07xbbx07xbax07xbax07xbax07xbax07xb9x07xb9x07xb9x07xb9x07xb8x07xb8x07xb7x07xb7x07xb7x07xb7x07x1ex1eCCCC=C=C8C8C2C2C-C-C(C(C&quot;C&quot;Cx1dCx1dCx17Cx17Cx12Cx12Cx0cCx0cCx07Cx07Cx02Cx02CxfcBxfcBxf7Bxf7Bxf1Bxf1BxecBxecBxe7Bxe7Bxe1Bxe1BxdcBxdcBxd6Bxd6Bxd1Bxd1BxcbBxcbBxc6Bxc6Bx8ax17x8ax17x88x17x88x17x86x17x86x17x84x17x84x17x82x17x82x17x80x17x80x17x7fx17x7fx17}x17}x17{x17{x17yx17yx17wx17wx17ux17ux17sx17sx17qx17qx17ox17ox17mx17mx17lx17lx17jx17jx17hx17hx17fx17fx17dx17dx17bx17bx17`x17`x17^x17^x17\\x17\\x17xf8x16xf8x16xbbx16xbbx16xb9x16xb9x16xb8x16xb8x16xb6x16xb6x16xb4x16xb4x16xb2x16xb2x16xb0x16xb0x16xaex16xaex16xadx16xadx16xabx16xabx16xa9x16xa9x16xa7x16xa7x16xa5x16xa5x16xa3x16xa3x16xa2x16xa2x16xa0x16xa0x16x9ex16x9ex16x9cx16x9cx16x9ax16x9ax16x98x16x98x16x96x16x96x16x95x16x95x16x93x16x93x16x91x16x91x16x8fx16x8fx16x8dx16x8dx16x1cx1dx1cx1d\n(\n(x06(x06(x03(x03(x00(x00(xfd&#39;xfd&#39;xf9&#39;xf9&#39;xf6&#39;xf6&#39;xf3&#39;xf3&#39;xf0&#39;xf0&#39;xec&#39;xec&#39;xe9&#39;xe9&#39;xe6&#39;xe6&#39;xe3&#39;xe3&#39;xdf&#39;xdf&#39;xdc&#39;xdc&#39;xd9&#39;xd9&#39;xd6&#39;xd6&#39;xd2&#39;xd2&#39;xcf&#39;xcf&#39;xcc&#39;xcc&#39;xc9&#39;xc9&#39;xc5&#39;xc5&#39;xc2&#39;xc2&#39;xbf&#39;xbf&#39;xbc&#39;xbc&#39;xb8&#39;xb8&#39;xb5&#39;xb5&#39;xb2&#39;xb2&#39;|x12|x12)xef)xef*xef*xef,xef,xef-xef-xef/xef/xef0xef0xef1xef1xef3xef3xef4xef4xef5xef5xef7xef7xef8xef8xef:xef:xef;xef;xef&lt;xef&lt;xef&gt;xef&gt;xef?xef?xef@xef@xefBxefBxefCxefCxefDxefDxefFxefFxefGxefGxefIxefIxefJxefJxefKxefKxefMxefMxefNxefNxefOxefOxefQxefQxef)x07)x07xe0.xe0.xdc.xdc.xd9.xd9.xd5.xd5.xd1.xd1.xcd.xcd.xc9.xc9.xc5.xc5.xc2.xc2.xbe.xbe.xba.xba.xb6.xb6.xb2.xb2.xaf.xaf.xab.xab.xa7.xa7.xa3.xa3.x9f.x9f.x9b.x9b.x98.x98.x94.x94.x90.x90.x8c.x8c.x88.x88.x85.x85.x81.x81.}.}.y.y.u.u.q.q.n.n.j.j.f.f.xa5xf6xa5xf6xa6xf6xa6xf6xa6xf6xa6xf6xa7xf6xa7xf6xa8xf6xa8xf6xa9xf6xa9xf6xa9xf6xa9xf6xaaxf6xaaxf6xabxf6xabxf6xacxf6xacxf6xacxf6xacxf6xadxf6xadxf6xaexf6xaexf6xafxf6xafxf6xafxf6xafxf6xb0xf6xb0xf6xb1xf6xb1xf6xb2xf6xb2xf6xb2xf6xb2xf6xb3xf6xb3xf6xb4xf6xb4xf6xb5xf6xb5xf6xb6xf6xb6xf6xb6xf6xb6xf6xb7xf6xb7xf6xb8xf6xb8xf6xb9xf6xb9xf6xb9xf6xb9xf6xbaxf6xbaxf6xbbxf6xbbxf6xbcxf6xbcxf6xbcxf6xbcxf6xbdxf6xbdxf6xbexf6xbexf6xbfxf6xbfxf6xbfxf6xbfxf6IxfcIxfcx83x05x83x05x83x05x83x05x82x05x82x05x82x05x82x05x81x05x81x05x81x05x81x05x80x05x80x05x80x05x80x05x7fx05x7fx05x7fx05x7fx05~x05~x05~x05~x05~x05~x05}x05}x05}x05}x05|x05|x05|x05|x05{x05{x05{x05{x05zx05zx05zx05zx05zx05zx05yx05yx05yx05yx05xx05xx05xx05xx05wx05wx05wx05wx05vx05vx05vx05vx05ux05ux05ux05ux05ux05ux05tx05tx05tx05tx05sx05sx05sx05sx05rx05rx05rx05rx05\n\nM*M*I*I*F*F*B*B*?*?*;*;*8*8*4*4*1*1*-*-*****&amp;*&amp;*#*#*x1f*x1f*x1c*x1c*x18*x18*x15*x15*x11*x11*x0e*x0e*\n*\n*x07*x07*x03*x03*x00*x00*xfd)xfd)xf9)xf9)xf6)xf6)xf2)xf2)xef)xef)xeb)xeb)xe8)xe8)xe4)xe4)xe1)xe1)xdd)xdd)xda)xda)xd6)xd6)xd3)xd3)xcf)xcf)xcc)xcc)xc9)xc9)xc5)xc5)xc2)xc2)xbe)xbe)xbb)xbb)xb7)xb7)xc6&quot;xc6&quot;Gxf2Gxf2Hxf2Hxf2Ixf2Ixf2Jxf2Jxf2Lxf2Lxf2Mxf2Mxf2Nxf2Nxf2Oxf2Oxf2Pxf2Pxf2Qxf2Qxf2Rxf2Rxf2Txf2Txf2Uxf2Uxf2Vxf2Vxf2Wxf2Wxf2Xxf2Xxf2Yxf2Yxf2Zxf2Zxf2[xf2[xf2]xf2]xf2^xf2^xf2_xf2_xf2`xf2`xf2axf2axf2bxf2bxf2cxf2cxf2exf2exf2fxf2fxf2gxf2gxf2hxf2hxf2ixf2ixf2jxf2jxf2kxf2kxf2lxf2lxf2nxf2nxf2oxf2oxf2pxf2pxf2qxf2qxf2rxf2rxf2sxf2sxf2txf2txf2uxf2uxf2wxf2wxf2xxf2xxf2yxf2yxf2zxf2zxf2{xf2{xf2|xf2|xf2}xf2}xf2~xf2~xf2x7fxf2x7fxf2x0fxfcx0fxfcx9dx05x9dx05x9dx05x9dx05x9cx05x9cx05x9cx05x9cx05x9cx05x9cx05x9bx05x9bx05x9bx05x9bx05x9ax05x9ax05x9ax05x9ax05x99x05x99x05x99x05x99x05x98x05x98x05x98x05x98x05x97x05x97x05x97x05x97x05x96x05x96x05x96x05x96x05x96x05x96x05x95x05x95x05x95x05x95x05x94x05x94x05x94x05x94x05x93x05x93x05x93x05x93x05x92x05x92x05x92x05x92x05x91x05x91x05x91x05x91x05x90x05x90x05x90x05x90x05x8fx05x8fx05x8fx05x8fx05x8fx05x8fx05x8ex05x8ex05x8ex05x8ex05x8dx05x8dx05x8dx05x8dx05x8cx05x8cx05x8cx05x8cx05x8bx05x8bx05x8bx05x8bx05x8ax05x8ax05x8ax05x8ax05x89x05x89x05x89x05x89x05x89x05x89x05x88x05x88x05x88x05x88x05x87x05x87x05x87x05x87x05x86x05x86x05x86x05x86x05x85x05x85x05x85x05x85x05x84x05x84x05x84x05x84x05x83x05x83x05x83x05x83x05x83x05x83x05x82x05x82x05x12x0bx12x0bxa1x10xa1x10x9fx10x9fx10x9ex10x9ex10x9dx10x9dx10x9bx10x9bx10x9ax10x9ax10x98x10x98x10x97x10x97x10x96x10x96x10x94x10x94x10x93x10x93x10x92x10x92x10x90x10x90x10x8fx10x8fx10x8dx10x8dx10x8cx10x8cx10x8bx10x8bx10x89x10x89x10x88x10x88x10x86x10x86x10x85x10x85x10x84x10x84x10x82x10x82x10x81x10x81x10x80x10x80x10~x10~x10}x10}x10{x10{x10zx10zx10yx10yx10wx10wx10vx10vx10tx10tx10sx10sx10rx10rx10px10px10ox10ox10nx10nx10lx10lx10kx10kx10ix10ix10hx10hx10gx10gx10ex10ex10dx10dx10cx10cx10ax10ax10`x10`x10^x10^x10]x10]x10\\x10\\x10Zx10Zx10Yx10Yx10Xx10Xx10Vx10Vx10Ux10Ux10Tx10Tx10Rx10Rx10Qx10Qx10Ox10Ox10Nx10Nx10Mx10Mx10Kx10Kx10Jx10Jx10Ix10Ix10Gx10Gx10Fx10Fx10xdb!xdb!xd8!xd8!xd5!xd5!xd2!xd2!xcf!xcf!xcc!xcc!xca!xca!xc7!xc7!xc4!xc4!xc1!xc1!xbe!xbe!xbb!xbb!xb9!xb9!xb6!xb6!xb3!xb3!xb0!xb0!xad!xad!x05x01x05x01x05x01x05x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x04x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01x03x01CxfaCxfax07xcbx07xcbx0cxcbx0cxcbx10xcbx10xcbx15xcbx15xcbx19xcbx19xcbx1excbx1excb&quot;xcb&quot;xcb&amp;xcb&amp;xcb+xcb+xcb/xcb/xcb4xcb4xcb8xcb8xcb=xcb=xcbAxcbAxcbFxcbFxcbJxcbJxcbOxcbOxcbSxcbSxcbWxcbWxcb\\xcb\\xcb`xcb`xcbxd0xd1xd0xd1x86xdcx86xdcx89xdcx89xdcx8cxdcx8cxdcx8fxdcx8fxdcx92xdcx92xdcx95xdcx95xdcx98xdcx98xdcx9bxdcx9bxdcx9exdcx9exdcxa1xdcxa1xdcxa4xdcxa4xdcxa7xdcxa7xdcxaaxdcxaaxdcxacxdcxacxdcxafxdcxafxdcxb2xdcxb2xdcxb5xdcxb5xdcxb8xdcxb8xdcxbbxdcxbbxdcxbexdcxbexdcxc1xdcxc1xdcxc4xdcxc4xdcy	y	H$H$E$E$B$B$&gt;$&gt;$;$;$8$8$5$5$2$2$/$/$,$,$)$)$&amp;$&amp;$#$#$ $ $x1d$x1d$x1a$x1a$x17$x17$x14$x14$x11$x11$x0e$x0e$\n$\n$x07$x07$x04$x04$xf3)xf3)xd73xd73xd33xd33xce3xce3xca3xca3xc63xc63xc13xc13xbd3xbd3xb83xb83xb43xb43xb03xb03xab3xab3xa73xa73xa23xa23x9e3x9e3x9a3x9a3x953x953x913x913x8d3x8d3x883x883x843x843x803x803{3{3w3w3r3r3n3n3x07xcbx07xcbx0bxcbx0bxcbx10xcbx10xcbx14xcbx14xcbx19xcbx19xcbx1dxcbx1dxcb&quot;xcb&quot;xcb&amp;xcb&amp;xcb+xcb+xcb/xcb/xcb4xcb4xcb8xcb8xcb=xcb=xcbAxcbAxcbFxcbFxcbJxcbJxcbOxcbOxcbSxcbSxcbXxcbXxcb\\xcb\\xcbaxcbaxcbexcbexcbjxcbjxcbnxcbnxcbsxcbsxcbwxcbwxcb|xcb|xcbxe2xc9xe2xc9xabxc9xabxc9xb0xc9xb0xc9xb5xc9xb5xc9xb9xc9xb9xc9xbexc9xbexc9xc2xc9xc2xc9xc7xc9xc7xc9xccxc9xccxc9xd0xc9xd0xc9xd5xc9xd5xc9xdaxc9xdaxc9xdexc9xdexc9xe3xc9xe3xc9xe7xc9xe7xc9xecxc9xecxc9xf1xc9xf1xc9xf5xc9xf5xc9xfaxc9xfaxc9xffxc9xffxc9x03xcax03xcax08xcax08xcax0cxcax0cxcax11xcax11xcax16xcax16xcax1axcax1axcax1fxcax1fxca#xca#xca(xca(xcaEx14Ex14Cx14Cx14Bx14Bx14@x14@x14&gt;x14&gt;x14&lt;x14&lt;x14;x14;x149x149x147x147x145x145x144x144x142x142x140x140x14.x14.x14-x14-x14+x14+x14)x14)x14(x14(x14&amp;x14&amp;x14$x14$x14&quot;x14&quot;x14!x14!x14x1fx14x1fx14x1dx14x1dx14x1cx14x1cx14x1ax14x1ax14x18x14x18x14x16x14x16x14x15x14x15x14x13x14x13x14x11x14x11x14jxefjxef/xea/xea1xea1xea3xea3xea5xea5xea7xea7xea8xea8xea:xea:xea&lt;xea&lt;xea&gt;xea&gt;xea@xea@xeaBxeaBxeaDxeaDxeaExeaExeaGxeaGxeaIxeaIxeaKxeaKxeaMxeaMxeaOxeaOxeaQxeaQxeaSxeaSxeaTxeaTxeaVxeaVxeaXxeaXxeaZxeaZxea\\xea\\xea^xea^xea`xea`xeaaxeaaxeacxeacxeaexeaexeagxeagxeaixeaixeakxeakxeac2c2_2_2Z2Z2V2V2R2R2M2M2I2I2E2E2@2@2&lt;2&lt;282823232/2/2+2+2&amp;2&amp;2&quot;2&quot;2x1e2x1e2x192x192x152x152x112x112x0c2x0c2x082x082x042x042x002x002xfb1xfb1xf71xf71xf31xf31xee1xee1xea1xea1xe61xe61xe11xe11xdd1xdd1xd91xd91xd51xd51xd01xd01xcc1xcc11010h+h+d+d+a+a+]+]+Y+Y+U+U+R+R+N+N+J+J+G+G+C+C+?+?+;+;+8+8+4+4+0+0+,+,+)+)+%+%+!+!+x1d+x1d+x1a+x1a+x16+x16+x12+x12+x0f+x0f+x0b+x0b+x07+x07+x03+x03+x00+x00+xfc*xfc*xf8*xf8*xf5*xf5*xf1*xf1*xed*xed*xe9*xe9*xe6*xe6*xe2*xe2*xde*xde*xdb*xdb*xd7*xd7*S	S	x80xd1x80xd1x84xd1x84xd1x88xd1x88xd1x8cxd1x8cxd1x90xd1x90xd1x94xd1x94xd1x98xd1x98xd1x9cxd1x9cxd1xa0xd1xa0xd1xa4xd1xa4xd1xa8xd1xa8xd1xacxd1xacxd1xb0xd1xb0xd1xb5xd1xb5xd1xb9xd1xb9xd1xbdxd1xbdxd1xc1xd1xc1xd1xc5xd1xc5xd1xc9xd1xc9xd1xcdxd1xcdxd1xd1xd1xd1xd1xd5xd1xd5xd1xd9xd1xd9xd1xddxd1xddxd1xe1xd1xe1xd1xe5xd1xe5xd1xe9xd1xe9xd1xedxd1xedxd1xf1xd1xf1xd1xf5xd1xf5xd1xf9xd1xf9xd1xfdxd1xfdxd1x00xd2x00xd2x04xd2x04xd2x08xd2x08xd2x0cxd2x0cxd2x10xd2x10xd2x14xd2x14xd2x18xd2x18xd2x1cxd2x1cxd2 xd2 xd2$xd2$xd2(xd2(xd2,xd2,xd20xd20xd2x0fxfbx0fxfb#?#?x1d?x1d?x18?x18?x12?x12???x07?x07?x02?x02?xfd&gt;xfd&gt;xf7&gt;xf7&gt;xf2&gt;xf2&gt;xec&gt;xec&gt;xe7&gt;xe7&gt;xe1&gt;xe1&gt;xdc&gt;xdc&gt;xd6&gt;xd6&gt;xd1&gt;xd1&gt;xcb&gt;xcb&gt;xc6&gt;xc6&gt;xc0&gt;xc0&gt;xbb&gt;xbb&gt;xb6&gt;xb6&gt;xb0&gt;xb0&gt;xab&gt;xab&gt;xa5&gt;xa5&gt;xa0&gt;xa0&gt;x9a&gt;x9a&gt;x95&gt;x95&gt;x8f&gt;x8f&gt;x8a&gt;x8a&gt;x84&gt;x84&gt;x7f&gt;x7f&gt;z&gt;z&gt;t&gt;t&gt;o&gt;o&gt;i&gt;i&gt;d&gt;d&gt;^&gt;^&gt;Y&gt;Y&gt;S&gt;S&gt;N&gt;N&gt;I&gt;I&gt;C&gt;C&gt;&gt;&gt;&gt;&gt;8&gt;8&gt;3&gt;3&gt;-&gt;-&gt;(&gt;(&gt;#&gt;#&gt;x1d&gt;x1d&gt;x18&gt;x18&gt;x12&gt;x12&gt;&gt;&gt;xc18xc18xd4x13xd4x13xd3x13xd3x13xd1x13xd1x13xcfx13xcfx13xcdx13xcdx13xccx13xccx13xcax13xcax13xc8x13xc8x13xc7x13xc7x13xc5x13xc5x13xc3x13xc3x13xc1x13xc1x13xc0x13xc0x13xbex13xbex13xbcx13xbcx13xbax13xbax13xb9x13xb9x13xb7x13xb7x13xb5x13xb5x13xb4x13xb4x13xb2x13xb2x13xb0x13xb0x13xaex13xaex13xadx13xadx13xabx13xabx13xa9x13xa9x13xa7x13xa7x13xa6x13xa6x13xa4x13xa4x13xa2x13xa2x13xa1x13xa1x13x9fx13x9fx13x9dx13x9dx13x9bx13x9bx13x9ax13x9ax13x98x13x98x13x96x13x96x13x95x13x95x13x93x13x93x13x91x13x91x13x8fx13x8fx13x8ex13x8ex13x8cx13x8cx13x8ax13x8ax13x89x13x89x13x87x13x87x13x85x13x85x13x83x13x83x13x82x13x82x13x80x13x80x13~x13~x13}x13}x13{x13{x13yx13yx13xx13xx13vx13vx13tx13tx13rx13rx13qx13qx13ox13ox13mx13mx13lx13lx13jx13jx13hx13hx13x96xe5x96xe5Sxd6Sxd6Wxd6Wxd6[xd6[xd6^xd6^xd6bxd6bxd6fxd6fxd6ixd6ixd6mxd6mxd6qxd6qxd6txd6txd6xxd6xxd6|xd6|xd6x7fxd6x7fxd6x83xd6x83xd6x86xd6x86xd6x8axd6x8axd6x8exd6x8exd6x91xd6x91xd6x95xd6x95xd6x99xd6x99xd6x9cxd6x9cxd6xa0xd6xa0xd6xa4xd6xa4xd6xa7xd6xa7xd6xabxd6xabxd6xaexd6xaexd6xb2xd6xb2xd6xb6xd6xb6xd6xb9xd6xb9xd6xbdxd6xbdxd6xc1xd6xc1xd6xc4xd6xc4xd6xc8xd6xc8xd6xccxd6xccxd6xcfxd6xcfxd6xd3xd6xd3xd6xd6xd6xd6xd6xdaxd6xdaxd6xdexd6xdexd6xe1xd6xe1xd6xe5xd6xe5xd6xe9xd6xe9xd6xecxd6xecxd6xf0xd6xf0xd6xf3xd6xf3xd6xf7xd6xf7xd6xfbxd6xfbxd6xfexd6xfexd6x02xd7x02xd7x06xd7x06xd7	xd7	xd7xd7xd7x10xd7x10xd7x14xd7x14xd7x18xd7x18xd7x1bxd7x1bxd7x1fxd7x1fxd7#xd7#xd7&amp;xd7&amp;xd7*xd7*xd7-xd7-xd71xd71xd75xd75xd78xd78xd7&lt;xd7&lt;xd7?xd7?xd7Cxd7Cxd7Gxd7Gxd7Jxd7Jxd7Nxd7Nxd7Qxd7Qxd7Uxd7Uxd7Yxd7Yxd7\\xd7\\xd7`xd7`xd7cxd7cxd7gxd7gxd7kxd7kxd7nxd7nxd7rxd7rxd7uxd7uxd7yxd7yxd7Wxe0Wxe0x0cxf2x0cxf2xe6xfaxe6xfaxe7xfaxe7xfaxe7xfaxe7xfaxe8xfaxe8xfaxe8xfaxe8xfaxe9xfaxe9xfaxe9xfaxe9xfaxe9xfaxe9xfaxeaxfaxeaxfaxeaxfaxeaxfaxebxfaxebxfaxebxfaxebxfaxecxfaxecxfaxecxfaxecxfaxedxfaxedxfaxedxfaxedxfaxeexfaxeexfaxeexfaxeexfaxeexfaxeexfaxefxfaxefxfaxefxfaxefxfaxf0xfaxf0xfaxf0xfaxf0xfaxf1xfaxf1xfaxf1xfaxf1xfaxf2xfaxf2xfaxf2xfaxf2xfaxf2xfaxf2xfaxf3xfaxf3xfaxf3xfaxf3xfaxf4xfaxf4xfaxf4xfaxf4xfaxf5xfaxf5xfaxf5xfaxf5xfax94xeex94xeex96xeex96xeex97xeex97xeex99xeex99xeex9axeex9axeex9cxeex9cxeex9dxeex9dxeex9fxeex9fxeexa1xeexa1xeexa2xeexa2xeexa4xeexa4xeexa5xeexa5xeexa7xeexa7xeexa8xeexa8xeexaaxeexaaxeexabxeexabxeexadxeexadxeex92x00x92x00tx12tx12rx12rx12qx12qx12ox12ox12nx12nx12lx12lx12jx12jx12ix12ix12gx12gx12ex12ex12dx12dx12bx12bx12`x12`x12_x12_x12]x12]x12[x12[x12Zx12Zx12Xx12Xx12Wx12Wx12Ux12Ux12Sx12Sx12Rx12Rx12Px12Px12fx18fx18dx18dx18bx18bx18`x18`x18^x18^x18\\x18\\x18Yx18Yx18Wx18Wx18Ux18Ux18Sx18Sx18Qx18Qx18Ox18Ox18Lx18Lx18Jx18Jx18Hx18Hx18Fx18Fx18Dx18Dx18Bx18Bx18?x18?x18=x18=x18;x18;x189x189x187x187x185x185x182x182x18xd90xd90Z4Z4V4V4Q4Q4L4L4H4H4C4C4&gt;4&gt;4:4:454540404,4,4&#39;4&#39;4&quot;4&quot;4x1e4x1e4x194x194x144x144x104x104x0b4x0b4x064x064x024x024xfd3xfd3xf83xf83xf43xf43xef3xef3xea3xea3xe63xe63oxf2oxf2pxf2pxf2qxf2qxf2sxf2sxf2txf2txf2uxf2uxf2vxf2vxf2wxf2wxf2yxf2yxf2zxf2zxf2{xf2{xf2|xf2|xf2}xf2}xf2x7fxf2x7fxf2x80xf2x80xf2x81xf2x81xf2x82xf2x82xf2x84xf2x84xf2x85xf2x85xf2x86xf2x86xf2x87xf2x87xf2x88xf2x88xf2x8axf2x8axf2x8bxf2x8bxf2x8cxf2x8cxf2x8dxf2x8dxf2x8exf2x8exf2x90xf2x90xf2x02x16x02x16x10x1bx10x1bx1bx1bx0bx1bx0bx1bx08x1bx08x1bx06x1bx06x1bx04x1bx04x1bx01x1bx01x1bxffx1axffx1axfcx1axfcx1axfax1axfax1axf7x1axf7x1axf5x1axf5x1axf3x1axf3x1axf0x1axf0x1axeex1axeex1axebx1axebx1axe9x1axe9x1axe6x1axe6x1axe4x1axe4x1axe2x1axe2x1axdfx1axdfx1axddx1axddx1axdax1axdax1axd8x1axd8x1axd5x1axd5x1axd3x1axd3x1axd1x1axd1x1axcex1axcex1axccx1axccx1axa4x1exa4x1ex9b9x9b9x969x969x919x919x8c9x8c9x879x879x819x819|9|9w9w9r9r9m9m9g9g9b9b9]9]9X9X9S9S9N9N9H9H9C9C9&gt;9&gt;999994949.9.9)9)9$9$9x1f9x1f9x1a9x1a9x159x159x0f9x0f9\n9\n9x059x059x009x009xfb8xfb8xf68xf68xa1xd1xa1xd1xa5xd1xa5xd1xa9xd1xa9xd1xadxd1xadxd1xb1xd1xb1xd1xb6xd1xb6xd1xbaxd1xbaxd1xbexd1xbexd1xc2xd1xc2xd1xc6xd1xc6xd1xcbxd1xcbxd1xcfxd1xcfxd1xd3xd1xd3xd1xd7xd1xd7xd1xdbxd1xdbxd1xe0xd1xe0xd1xe4xd1xe4xd1xe8xd1xe8xd1xecxd1xecxd1xf0xd1xf0xd1xf4xd1xf4xd1xf9xd1xf9xd1xfdxd1xfdxd1x01xd2x01xd2x05xd2x05xd2	xd2	xd2x0exd2x0exd2x12xd2x12xd2x16xd2x16xd2x1axd2x1axd2x1exd2x1exd2&quot;xd2&quot;xd2&#39;xd2&#39;xd2+xd2+xd2/xd2/xd23xd23xd2lxf1lxf1xd3xfbxd3xfbxd4xfbxd4xfbxd4xfbxd4xfbxd5xfbxd5xfbxd5xfbxd5xfbxd5xfbxd5xfbxd6xfbxd6xfbxd6xfbxd6xfbxd6xfbxd6xfbxd7xfbxd7xfbxd7xfbxd7xfbxd8xfbxd8xfbxd8xfbxd8xfbxd8xfbxd8xfbxd9xfbxd9xfbxd9xfbxd9xfbxd9xfbxd9xfbxdaxfbxdaxfbxdaxfbxdaxfbxdbxfbxdbxfbxdbxfbxdbxfbxdbxfbxdbxfbxdcxfbxdcxfbxdcxfbxdcxfbxdcxfbxdcxfbxddxfbxddxfbxddxfbxddxfbxdexfbxdexfbxdexfbxdexfbxdexfbxdexfbxdfxfbxdfxfbxdfxfbxdfxfbxe0xfbxe0xfbxe0xfbxe0xfbxe0xfbxe0xfbxe1xfbxe1xfbxe1xfbxe1xfbxe1xfbxe1xfbxe2xfbxe2xfb@xf1@xf1x8axdfx8axdfx8dxdfx8dxdfx90xdfx90xdfx93xdfx93xdfx96xdfx96xdfx99xdfx99xdfx9cxdfx9cxdfx9fxdfx9fxdfxa2xdfxa2xdfxa5xdfxa5xdfxa8xdfxa8xdfxabxdfxabxdfxaexdfxaexdfxb1xdfxb1xdfxb3xdfxb3xdfxb6xdfxb6xdfxb9xdfxb9xdfxbcxdfxbcxdfxbfxdfxbfxdfxc2xdfxc2xdfxc5xdfxc5xdfxc8xdfxc8xdfxcbxdfxcbxdfxcexdfxcexdfxd1xdfxd1xdfxd4xdfxd4xdfxd7xdfxd7xdfxdaxdfxdaxdfxddxdfxddxdfxe0xdfxe0xdfxe3xdfxe3xdfxe6xdfxe6xdfxe9xdfxe9xdfxebxdfxebxdfxeexdfxeexdfxf1xdfxf1xdfxf4xdfxf4xdfxf7xdfxf7xdfxfaxdfxfaxdfxfdxdfxfdxdfx00xe0x00xe0x03xe0x03xe0x06xe0x06xe0	xe0	xe0x0cxe0x0cxe0KxddKxddcxdccxdcfxdcfxdcixdcixdclxdclxdcpxdcpxdcsxdcsxdcvxdcvxdcyxdcyxdc}xdc}xdcx80xdcx80xdcx83xdcx83xdcx86xdcx86xdcx8axdcx8axdcx8dxdcx8dxdcx90xdcx90xdcx93xdcx93xdcx97xdcx97xdcx9axdcx9axdcx9dxdcx9dxdcxa1xdcxa1xdcxa4xdcxa4xdcxa7xdcxa7xdcxaaxdcxaaxdcxaexdcxaexdcxb1xdcxb1xdcxb4xdcxb4xdcxb7xdcxb7xdcxbbxdcxbbxdcxbexdcxbexdcxc1xdcxc1xdcxc4xdcxc4xdcxc8xdcxc8xdcxcbxdcxcbxdcxcexdcxcexdcxd1xdcxd1xdcxd4xdcxd4xdcxd8xdcxd8xdcxdbxdcxdbxdcxdexdcxdexdcxe1xdcxe1xdcxe5xdcxe5xdcxe8xdcxe8xdcxebxdcxebxdcxeexdcxeexdcxf2xdcxf2xdcxf5xdcxf5xdcxf8xdcxf8xdcxfbxdcxfbxdcxffxdcxffxdcx02xddx02xddx05xddx05xddx08xddx08xddx94x0fx94x0fi i f f c c ` ` ] ] Z Z W W T T Q Q N N K K H H E E B B ? ? &lt; &lt; 9 9 6 6 3 3 0 0 - - * * &#39; &#39; $ $ ! ! x1e x1e x1b x1b x18 x18 x15 x15 x12 x12 x0f x0f x0c x0c 	 	 x06 x06 x03 x03 x00 x00 xfdx1fxfdx1fxfbx1fxfbx1fxf8x1fxf8x1fxf5x1fxf5x1fxf2x1fxf2x1fxefx1fxefx1fxecx1fxecx1fxe9x1fxe9x1fxe6x1fxe6x1fxe3x1fxe3x1fxe0x1fxe0x1fxddx1fxddx1fxdax1fxdax1fxd7x1fxd7x1fxd4x1fxd4x1fxd1x1fxd1x1fxcex1fxcex1fxcbx1fxcbx1fxc8x1fxc8x1fxc5x1fxc5x1fxc2x1fxc2x1fxbfx1fxbfx1fxbcx1fxbcx1fxb9x1fxb9x1fxb7x1fxb7x1fxb4x1fxb4x1fxb1x1fxb1x1fx1ax1dx1ax1dxa8x16xa8x16\\x15\\x15Zx15Zx15Xx15Xx15Vx15Vx15Tx15Tx15Rx15Rx15Px15Px15Nx15Nx15Lx15Lx15Jx15Jx15Hx15Hx15Fx15Fx15Dx15Dx15Bx15Bx15@x15@x15&gt;x15&gt;x15&lt;x15&lt;x15:x15:x158x158x156x156x154x154x152x152x150x150x15.x15.x15,x15,x15*x15*x15(x15(x15&amp;x15&amp;x15$x15$x15&quot;x15&quot;x15!x15!x15x1fx15x1fx15x1dx15x1dx15x1bx15x1bx15x19x15x19x15x17x15x17x15x15x15x15x15x13x15x13x15x11x15x11x15x0fx15x0fx15x15x15x0bx15x0bx15	x15	x15x07x15x07x15x05x15x05x15x03x15x03x15x01x15x01x15xffx14xffx14xfdx14xfdx14xfbx14xfbx14xf9x14xf9x14xf7x14xf7x14xf5x14xf5x14xf3x14xf3x14xf1x14xf1x14xefx14xefx14xedx14xedx14xebx14xebx14xeax14xeax14xe8x14xe8x14xe6x14xe6x14xe4x14xe4x14xe2x14xe2x14xe0x14xe0x14xdex14xdex14xdcx14xdcx14xdax14xdax14xd8x14xd8x14xd6x14xd6x14xd4x14xd4x14xd2x14xd2x14xd0x14xd0x14xcex14xcex14xccx14xccx14xcax14xcax14xc8x14xc8x14xc6x14xc6x14xc4x14xc4x14xc2x14xc2x14xc0x14xc0x14xbex14xbex14xbdx14xbdx14xbbx14xbbx14xb9x14xb9x14$x06$x06xffxe8xffxe8qxdaqxdatxdatxdaxxdaxxda{xda{xdax7fxdax7fxdax82xdax82xdax86xdax86xdax89xdax89xdax8dxdax8dxdax90xdax90xdax94xdax94xdax97xdax97xdax9bxdax9bxdax9exdax9exdaxa2xdaxa2xdaxa5xdaxa5xdaxa9xdaxa9xdaxacxdaxacxdaxb0xdaxb0xdaxb3xdaxb3xdaxb7xdaxb7xdaxbaxdaxbaxdaxbexdaxbexdaxc2xdaxc2xdaxc5xdaxc5xdaxc9xdaxc9xdaxccxdaxccxdaxd0xdaxd0xdaxd3xdaxd3xdaxd7xdaxd7xdaxdaxdaxdaxdaxdexdaxdexdaxe1xdaxe1xdaxe5xdaxe5xdaxe8xdaxe8xdaxecxdaxecxdaxefxdaxefxdaxf3xdaxf3xdaxf6xdaxf6xdaxfaxdaxfaxdaxfdxdaxfdxdax01xdbx01xdbx04xdbx04xdbx08xdbx08xdbx0bxdbx0bxdbx0exdbx0exdbx12xdbx12xdbx15xdbx15xdbx19xdbx19xdbx1cxdbx1cxdb xdb xdb#xdb#xdb&#39;xdb&#39;xdb*xdb*xdb.xdb.xdb1xdb1xdb5xdb5xdb8xdb8xdb&lt;xdb&lt;xdb?xdb?xdbCxdbCxdbFxdbFxdbJxdbJxdbMxdbMxdbQxdbQxdbTxdbTxdbXxdbXxdb[xdb[xdb_xdb_xdbbxdbbxdbfxdbfxdbixdbixdbmxdbmxdbpxdbpxdbsxdbsxdbwxdbwxdbzxdbzxdb~xdb~xdbx81xdbx81xdbx85xdbx85xdbx88xdbx88xdbx8cxdbx8cxdbx8fxdbx8fxdbx93xdbx93xdbx96xdbx96xdbx99xdbx99xdbx9dxdbx9dxdbxa0xdbxa0xdbxa4xdbxa4xdbxa7xdbxa7xdbxabxdbxabxdbxaexdbxaexdbxb2xdbxb2xdbxb5xdbxb5xdbxb9xdbxb9xdbxbcxdbxbcxdbxbfxdbxbfxdbxc3xdbxc3xdbxc6xdbxc6xdbxcaxdbxcaxdbxcdxdbxcdxdbxd1xdbxd1xdbcxf4cxf4dxf4dxf4exf4exf4fxf4fxf4gxf4gxf4hxf4hxf4jxf4jxf4kxf4kxf4lxf4lxf4mxf4mxf4nxf4nxf4oxf4oxf4pxf4pxf4qxf4qxf4rxf4rxf4sxf4sxf4uxf4uxf4Rx04Rx04x95x06x95x06x95x06x95x06x94x06x94x06x94x06x94x06x93x06x93x06x92x06x92x06x92x06x92x06x91x06x91x06x90x06x90x06x90x06x90x06x8fx06x8fx06x8fx06x8fx06x8ex06x8ex06x8dx06x8dx06x8dx06x8dx06x8cx06x8cx06x8bx06x8bx06x8bx06x8bx06x8ax06x8ax06x8ax06x8ax06x89x06x89x06x88x06x88x06x88x06x88x06x87x06x87x06x86x06x86x06x86x06x86x06xe0x05xe0x05xcdx04xcdx04xccx04xccx04xccx04xccx04xcbx04xcbx04xcbx04xcbx04xcax04xcax04xcax04xcax04xc9x04xc9x04xc9x04xc9x04xc8x04xc8x04xc8x04xc8x04xc7x04xc7x04xc7x04xc7x04xc7x04xc7x04xc6x04xc6x04xc6x04xc6x04xc5x04xc5x04xc5x04xc5x04xc4x04xc4x04xc4x04xc4x04xc3x04xc3x04xc3x04xc3x04xc2x04xc2x04xc2x04xc2x04xc2x04xc2x04xc1x04xc1x04xc1x04xc1x04xc0x04xc0x04xc0x04xc0x04wxcfwxcf|xcf|xcfx80xcfx80xcfx85xcfx85xcfx8axcfx8axcfx8excfx8excfx93xcfx93xcfx98xcfx98xcfx9cxcfx9cxcfxa1xcfxa1xcfxa5xcfxa5xcfxaaxcfxaaxcfxafxcfxafxcfxb3xcfxb3xcfxb8xcfxb8xcfxbdxcfxbdxcfxc1xcfxc1xcfxc6xcfxc6xcfxcbxcfxcbxcfxcfxcfxcfxcfxd4xcfxd4xcfxd9xcfxd9xcfxddxcfxddxcfxe2xcfxe2xcfxe6xcfxe6xcfxebxcfxebxcfxf0xcfxf0xcfxf4xcfxf4xcfxf9xcfxf9xcfxfexcfxfexcfx02xd0x02xd0x07xd0x07xd0Fxf3Fxf3Gxf3Gxf3Hxf3Hxf3Ixf3Ixf3Jxf3Jxf3Lxf3Lxf3Mxf3Mxf3Nxf3Nxf3Oxf3Oxf3Qxf3Qxf3Rxf3Rxf3Sxf3Sxf3Txf3Txf3Uxf3Uxf3Wxf3Wxf3Xxf3Xxf3Yxf3Yxf3Zxf3Zxf3\\xf3\\xf3]xf3]xf3^xf3^xf3_xf3_xf3`xf3`xf3bxf3bxf3cxf3cxf3dxf3dxf3exf3exf3gxf3gxf3hxf3hxf3ixf3ixf3jxf3jxf3kxf3kxf3mxf3mxf3nxf3nxf3x13xf4x13xf4xffxf5xffxf5x00xf6x00xf6x01xf6x01xf6x02xf6x02xf6x03xf6x03xf6x04xf6x04xf6x05xf6x05xf6x06xf6x06xf6x07xf6x07xf6x08xf6x08xf6	xf6	xf6\nxf6\nxf6x0bxf6x0bxf6x0bxf6x0bxf6x0cxf6x0cxf6xf6xf6x0exf6x0exf6x0fxf6x0fxf6x10xf6x10xf6x11xf6x11xf6x12xf6x12xf6x13xf6x13xf6x14xf6x14xf6x15xf6x15xf6x16xf6x16xf6x17xf6x17xf6x18xf6x18xf6x19xf6x19xf6x1axf6x1axf6x1bxf6x1bxf6x1cxf6x1cxf6x1dxf6x1dxf6x1exf6x1exf6x1fxf6x1fxf6 xf6 xf6!xf6!xf6&quot;xf6&quot;xf6#xf6#xf6%x03%x03xf2\nxf2\nxf1\nxf1\nxf0\nxf0\nxef\nxef\nxee\nxee\nxed\nxed\nxec\nxec\nxeb\nxeb\nxea\nxea\nxe9\nxe9\nxe8\nxe8\nxe7\nxe7\nxe6\nxe6\nxe4\nxe4\nxe3\nxe3\nxe2\nxe2\nxe1\nxe1\nxe0\nxe0\nxdf\nxdf\nxde\nxde\nxdd\nxdd\nxdc\nxdc\nxdb\nxdb\nxda\nxda\nxd9\nxd9\nxd8\nxd8\nxd7\nxd7\nxd6\nxd6\nxd5\nxd5\nxd4\nxd4\nxd2\nxd2\nxd1\nxd1\nxd0\nxd0\nxcf\nxcf\nxce\nxce\nxcd\nxcd\nxcc\nxcc\nxcb\nxcb\nxca\nxca\nxc9\nxc9\nxc8\nxc8\nxc7\nxc7\n x0e x0ex97%x97%x93%x93%x8f%x8f%x8c%x8c%x88%x88%x84%x84%x81%x81%}%}%y%y%v%v%r%r%n%n%k%k%g%g%c%c%`%`%\\%\\%X%X%U%U%Q%Q%M%M%J%J%F%F%B%B%?%?%;%;%7%7%4%4%0%0%,%,%)%)%%%%%&quot;%&quot;%x1e%x1e%x1a%x1a%x17%x17%x13%x13%x0f%x0f%x0c%x0c%x08%x08%x04%x04%x01%x01%xfd$xfd$xfa$xfa$xf6$xf6$xf2$xf2$xef$xef$xeb$xeb$xe7$xe7$xe4$xe4$WxefWxefXxefXxefZxefZxef[xef[xef]xef]xef_xef_xef`xef`xefbxefbxefdxefdxefexefexefgxefgxefixefixefjxefjxeflxeflxefmxefmxefoxefoxefqxefqxefrxefrxeftxeftxefvxefvxefwxefwxefx91xd7x91xd7x9excfx9excfxa3xcfxa3xcfxa8xcfxa8xcfxadxcfxadxcfxb1xcfxb1xcfxb6xcfxb6xcfxbbxcfxbbxcfxc0xcfxc0xcfxc5xcfxc5xcfxc9xcfxc9xcfxcexcfxcexcfxd3xcfxd3xcfxd8xcfxd8xcfxdcxcfxdcxcfxe1xcfxe1xcfxe6xcfxe6xcfxebxcfxebxcfxefxcfxefxcfxf4xcfxf4xcfxf9xcfxf9xcfxfexcfxfexcfxb2xb2xb02xb02xab2xab2xa62xa62xa12xa12x9c2x9c2x972x972x922x922x8d2x8d2x872x872x822x822}2}2x2x2s2s2n2n2i2i2d2d2_2_2Z2Z2U2U2P2P2K2K2F2F2\\x19\\x19vx00vx00vx00vx00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux00ux003xf83xf8pxdfpxdfsxdfsxdfwxdfwxdfzxdfzxdf}xdf}xdfx80xdfx80xdfx83xdfx83xdfx85xdfx85xdfx87xdfx87xdfx89xdfx89xdfx8bxdfx8bxdfx8dxdfx8dxdfx90xdfx90xdfx92xdfx92xdfx94xdfx94xdfx96xdfx96xdfx98xdfx98xdfx9axdfx9axdfx9cxdfx9cxdfx9fxdfx9fxdfxa1xdfxa1xdfxa3xdfxa3xdfxa5xdfxa5xdfxa7xdfxa7xdfxa9xdfxa9xdfxb9xe3xb9xe3xbbxe3xbbxe3xbdxe3xbdxe3xbexe3xbexe3xc0xe3xc0xe3xc2xe3xc2xe3xc4xe3xc4xe3xc6xe3xc6xe3xc8xe3xc8xe3xcaxe3xcaxe3xccxe3xccxe3xcdxe3xcdxe3xcfxe3xcfxe3xd1xe3xd1xe3xd3xe3xd3xe3xd5xe3xd5xe3xd7xe3xd7xe3xd9xe3xd9xe3xdbxe3xdbxe3xdcxe3xdcxe3xdexe3xdexe3xe0xe3xe0xe3xe2xe3xe2xe3xe4xe3xe4xe3xe6xe3xe6xe3xe8xe3xe8xe3x7fxe6x7fxe6@xee@xeeAxeeAxeeCxeeCxeeDxeeDxeeExeeExeeFxeeFxeeGxeeGxeeHxeeHxeeJxeeJxeeKxeeKxeeLxeeLxeeMxeeMxeeNxeeNxeeOxeeOxeeQxeeQxeeRxeeRxeeSxeeSxeeTxeeTxeeUxeeUxeeWxeeWxeeXxeeXxeeYxeeYxeeZxeeZxee[xee[xee\\xee\\xee^xee^xee_xee_xee`xee`xeedx03dx03dx03dx03dx03dx03dx03dx03cx03cx03cx03cx03cx03cx03cx03cx03cx03cx03bx03bx03bx03bx03bx03bx03bx03bx03ax03ax03ax03ax03ax03ax03ax03ax03ax03ax03`x03`x03`x03`x03`x03`x03`x03`x03_x03_x03_x03_x03_x03_x03_x03_x03_x03_x03^x03^x03^x03^x03?x05?x05hx12hx12gx12gx12fx12fx12ex12ex12cx12cx12bx12bx12ax12ax12`x12`x12_x12_x12]x12]x12\\x12\\x12[x12[x12Zx12Zx12Xx12Xx12Wx12Wx12Vx12Vx12Ux12Ux12Sx12Sx12Rx12Rx12Qx12Qx12Px12Px12Ox12Ox12Mx12Mx12Lx12Lx12Kx12Kx12Jx12Jx12Ix12Ix12Gx12Gx12Fx12Fx12Ex12Ex12Dx12Dx12xeex06xeex06xf3xe4xf3xe4xf5xe4xf5xe4xf7xe4xf7xe4xf8xe4xf8xe4xfaxe4xfaxe4xfcxe4xfcxe4xfexe4xfexe4x00xe5x00xe5x01xe5x01xe5x03xe5x03xe5x05xe5x05xe5x07xe5x07xe5	xe5	xe5\nxe5\nxe5x0cxe5x0cxe5x0exe5x0exe5x10xe5x10xe5x12xe5x12xe5x13xe5x13xe5x15xe5x15xe5x17xe5x17xe5x19xe5x19xe5x1bxe5x1bxe5x1cxe5x1cxe5x1exe5x1exe5 xe5 xe5&quot;xe5&quot;xe5$xe5$xe5%xe5%xe5&#39;xe5&#39;xe5)xe5)xe5+xe5+xe5-xe5-xe5.xe5.xe5`!`!]!]![![!Y!Y!W!W!T!T!R!R!P!P!N!N!K!K!I!I!G!G!E!E!C!C!@!@!&gt;!&gt;!&lt;!&lt;!:!:!7!7!5!5!3!3!1!1!/!/!,!,!*!*!(!(!&amp;!&amp;!$!$!!!!!x1f!x1f!x1d!x1d!x1b!x1b!x18!x18!x16!x16!x14!x14!x12!x12!x10!x10!xbc/xbc/xb9/xb9/xb6/xb6/xb2/xb2/xaf/xaf/xac/xac/xa9/xa9/xa6/xa6/xa3/xa3/x9f/x9f/x9c/x9c/x99/x99/x96/x96/x93/x93/x8f/x8f/x8c/x8c/x89/x89/x86/x86/x83/x83/x80/x80/|/|/y/y/v/v/s/s/p/p/m/m/i/i/f/f/c/c/`/`/]/]/Y/Y/V/V/S/S/P/P/M/M/x92x0fx92x0fx91x0fx91x0fx90x0fx90x0fx8fx0fx8fx0fx8ex0fx8ex0fx8dx0fx8dx0fx8cx0fx8cx0fx8bx0fx8bx0fx8ax0fx8ax0fx89x0fx89x0fx88x0fx88x0fx87x0fx87x0fx85x0fx85x0fx84x0fx84x0fx83x0fx83x0fx82x0fx82x0fx81x0fx81x0fx80x0fx80x0fx7fx0fx7fx0f~x0f~x0f}x0f}x0fx0bxfdx0bxfdPxdePxdeRxdeRxdeTxdeTxdeWxdeWxdeYxdeYxde[xde[xde]xde]xde`xde`xdebxdebxdedxdedxdefxdefxdeixdeixdekxdekxdemxdemxdeoxdeoxderxderxdetxdetxdevxdevxdexxdexxde{xde{xde}xde}xdex7fxdex7fxdex81xdex81xdex84xdex84xdex86xdex86xdexa1xfexa1xfe7x037x037x037x037x037x037x037x036x036x036x036x036x036x036x036x035x035x035x035x035x035x035x035x035x035x034x034x034x034x034x034x034x034x034x034x033x033x033x033x033x033x033x033x032x032x032x032x032x032x032x032x03x95x02x95x027x027x027x027x027x027x027x027x026x026x026x026x026x026x026x026x026x026x026x026x026x026x025x025x025x025x025x025x025x025x025x025x025x025x024x024x024x024x024x024x024x024x024x024x024x024x024x024x023x023x023x023x023x023x023x023x02x9fxf2x9fxf2xe3xe3x0fxe3x0fxe3x11xe3x11xe3x13xe3x13xe3x15xe3x15xe3x17xe3x17xe3x19xe3x19xe3x1bxe3x1bxe3x1cxe3x1cxe3x1exe3x1exe3 xe3 xe3&quot;xe3&quot;xe3$xe3$xe3&amp;xe3&amp;xe3(xe3(xe3*xe3*xe3,xe3,xe3.xe3.xe30xe30xe32xe32xe34xe34xe36xe36xe38xe38xe39xe39xe3;xe3;xe3=xe3=xe3?xe3?xe3Axe3Axe3Cxe3Cxe3Exe3Exe3Gxe3Gxe3xdcxd8xdcxd8xdfxd8xdfxd8xe2xd8xe2xd8xe4xd8xe4xd8xe7xd8xe7xd8xe9xd8xe9xd8xecxd8xecxd8xefxd8xefxd8xf1xd8xf1xd8xf4xd8xf4xd8xf7xd8xf7xd8xf9xd8xf9xd8xfcxd8xfcxd8xfexd8xfexd8x01xd9x01xd9x04xd9x04xd9x06xd9x06xd9	xd9	xd9x0cxd9x0cxd9x0exd9x0exd9x11xd9x11xd9x13xd9x13xd9x16xd9x16xd9x19xd9x19xd9x1bxd9x1bxd9x1exd9x1exd9 xd9 xd9#xd9#xd9&amp;xd9&amp;xd9(xd9(xd9+xd9+xd9.xd9.xd90xd90xd93xd93xd9BxdaBxdaxe6xdaxe6xdaxe8xdaxe8xdaxebxdaxebxdaxedxdaxedxdaxf0xdaxf0xdaxf2xdaxf2xdaxf5xdaxf5xdaxf7xdaxf7xdaxfaxdaxfaxdaxfcxdaxfcxdaxffxdaxffxdax01xdbx01xdbx04xdbx04xdbx06xdbx06xdb	xdb	xdbx0bxdbx0bxdbx0exdbx0exdbx10xdbx10xdbx13xdbx13xdbx15xdbx15xdbx18xdbx18xdbx1axdbx1axdbx1dxdbx1dxdbx1fxdbx1fxdb!xdb!xdb$xdb$xdb&amp;xdb&amp;xdb)xdb)xdb+xdb+xdb.xdb.xdb0xdb0xdb3xdb3xdb5xdb5xdb8xdb8xdb:xdb:xdb=xdb=xdb?xdb?xdbAxdeAxdex10xe0x10xe0x12xe0x12xe0x14xe0x14xe0x16xe0x16xe0x18xe0x18xe0x1bxe0x1bxe0x1dxe0x1dxe0x1fxe0x1fxe0!xe0!xe0#xe0#xe0%xe0%xe0&#39;xe0&#39;xe0*xe0*xe0,xe0,xe0.xe0.xe00xe00xe02xe02xe04xe04xe06xe06xe09xe09xe0;xe0;xe0=xe0=xe0?xe0?xe0Axe0Axe0Cxe0Cxe0Exe0Exe0Hxe0Hxe0Jxe0Jxe0Lxe0Lxe0Nxe0Nxe0Pxe0Pxe0Rxe0Rxe0Uxe0Uxe0Wxe0Wxe0Yxe0Yxe0[xe0[xe0]xe0]xe0_xe0_xe0axe0axe0cxe0cxe0fxe0fxe0gxddgxddixd4ixd4lxd4lxd4oxd4oxd4rxd4rxd4uxd4uxd4xxd4xxd4{xd4{xd4~xd4~xd4x81xd4x81xd4x84xd4x84xd4x87xd4x87xd4x89xd4x89xd4x8cxd4x8cxd4x8fxd4x8fxd4x92xd4x92xd4x95xd4x95xd4x98xd4x98xd4x9bxd4x9bxd4x9exd4x9exd4xa1xd4xa1xd4xa4xd4xa4xd4xa7xd4xa7xd4xaaxd4xaaxd4xadxd4xadxd4xb0xd4xb0xd4xb2xd4xb2xd4xb5xd4xb5xd4xb8xd4xb8xd4xbbxd4xbbxd4xbexd4xbexd4xc1xd4xc1xd4xc4xd4xc4xd4xc7xd4xc7xd4xcaxd4xcaxd4xcdxd4xcdxd4xd0xd4xd0xd4xd3xd4xd3xd4xd6xd4xd6xd4xd9xd4xd9xd4xdbxd4xdbxd4xdexd4xdexd4xe1xd4xe1xd4xe4xd4xe4xd4xe7xd4xe7xd4xeaxd4xeaxd4xedxd4xedxd4xf0xd4xf0xd4xf3xd4xf3xd4x8axf0x8axf0x7fx1ex7fx1e}x1e}x1e{x1e{x1eyx1eyx1ewx1ewx1eux1eux1esx1esx1epx1epx1enx1enx1elx1elx1ejx1ejx1ehx1ehx1efx1efx1edx1edx1ebx1ebx1e`x1e`x1e^x1e^x1e\\x1e\\x1eZx1eZx1eXx1eXx1eVx1eVx1eTx1eTx1eRx1eRx1ePx1ePx1eMx1eMx1eKx1eKx1eIx1eIx1eGx1eGx1eEx1eEx1eCx1eCx1eAx1eAx1e?x1e?x1e=x1e=x1e;x1e;x1e9x1e9x1e7x1e7x1e5x1e5x1e3x1e3x1e1x1e1x1e/x1e/x1e-x1e-x1e+x1e+x1e)x1e)x1e&amp;x1e&amp;x1e$x1e$x1e&quot;x1e&quot;x1e x1e x1ex1ex1ex1ex1ex1cx1ex1cx1ex1ax1ex1ax1ex18x1ex18x1ex16x1ex16x1ex14x1ex14x1ex12x1ex12x1ex10x1ex10x1ex0ex1ex0ex1ex0cx1ex0cx1exe8&quot;xe8&quot;xc4&#39;xc4&#39;xc1&#39;xc1&#39;xbe&#39;xbe&#39;xbc&#39;xbc&#39;xb9&#39;xb9&#39;xb6&#39;xb6&#39;xb4&#39;xb4&#39;xb1&#39;xb1&#39;xae&#39;xae&#39;xac&#39;xac&#39;xa9&#39;xa9&#39;xa6&#39;xa6&#39;xa4&#39;xa4&#39;xa1&#39;xa1&#39;x9e&#39;x9e&#39;x9b&#39;x9b&#39;x99&#39;x99&#39;x96&#39;x96&#39;x93&#39;x93&#39;x91&#39;x91&#39;x8e&#39;x8e&#39;x8b&#39;x8b&#39;x89&#39;x89&#39;x86&#39;x86&#39;x83&#39;x83&#39;x81&#39;x81&#39;~&#39;~&#39;{&#39;{&#39;y&#39;y&#39;v&#39;v&#39;s&#39;s&#39;q&#39;q&#39;n&#39;n&#39;k&#39;k&#39;h&#39;h&#39;f&#39;f&#39;c&#39;c&#39;`&#39;`&#39;^&#39;^&#39;[&#39;[&#39;X&#39;X&#39;V&#39;V&#39;S&#39;S&#39;P&#39;P&#39;N&#39;N&#39;K&#39;K&#39;H&#39;H&#39;F&#39;F&#39;C&#39;C&#39;@&#39;@&#39;&gt;&#39;&gt;&#39;;&#39;;&#39;8&#39;8&#39;6&#39;6&#39;3&#39;3&#39;0&#39;0&#39;.&#39;.&#39;+&#39;+&#39;(&#39;(&#39;&amp;&#39;&amp;&#39;#&#39;#&#39; &#39; &#39;x1e&#39;x1e&#39;x1b&#39;x1b&#39;x18&#39;x18&#39;x16&#39;x16&#39;x13&#39;x13&#39;x10&#39;x10&#39;x0e&#39;x0e&#39;x0b&#39;x0b&#39;x08&#39;x08&#39;x06&#39;x06&#39;xe7 xe7 %xf6%xf6%xf6%xf6&amp;xf6&amp;xf6&#39;xf6&#39;xf6&#39;xf6&#39;xf6(xf6(xf6)xf6)xf6)xf6)xf6*xf6*xf6+xf6+xf6+xf6+xf6,xf6,xf6-xf6-xf6-xf6-xf6.xf6.xf6/xf6/xf6/xf6/xf60xf60xf61xf61xf61xf61xf62xf62xf63xf63xf63xf63xf64xf64xf6u	u	4x0c4x0c3x0c3x0c2x0c2x0c1x0c1x0c1x0c1x0c0x0c0x0c/x0c/x0c.x0c.x0c-x0c-x0c,x0c,x0c,x0c,x0c+x0c+x0c*x0c*x0c)x0c)x0c(x0c(x0c&#39;x0c&#39;x0c&#39;x0c&#39;x0c&amp;x0c&amp;x0c%x0c%x0c$x0c$x0c#x0c#x0c&quot;x0c&quot;x0c&quot;x0c&quot;x0c!x0c!x0c x0c x0cx11x1ex11x1ex0fx1ex0fx1ex1ex1ex0bx1ex0bx1e	x1e	x1ex07x1ex07x1ex05x1ex05x1ex03x1ex03x1ex01x1ex01x1exffx1dxffx1dxfdx1dxfdx1dxfbx1dxfbx1dxf9x1dxf9x1dxf7x1dxf7x1dxf5x1dxf5x1dxf3x1dxf3x1dxf1x1dxf1x1dxefx1dxefx1dxedx1dxedx1dxebx1dxebx1dxe9x1dxe9x1dxe6x1dxe6x1dxe4x1dxe4x1dxe2x1dxe2x1dxe0x1dxe0x1dxdex1dxdex1dxdcx1dxdcx1d&amp;xf7&amp;xf7x9fxf1x9fxf1xa0xf1xa0xf1xa1xf1xa1xf1xa2xf1xa2xf1xa3xf1xa3xf1xa4xf1xa4xf1xa5xf1xa5xf1xa6xf1xa6xf1xa7xf1xa7xf1xa8xf1xa8xf1xa9xf1xa9xf1xaaxf1xaaxf1xabxf1xabxf1xacxf1xacxf1xadxf1xadxf1xaexf1xaexf1xafxf1xafxf1xb0xf1xb0xf1xb1xf1xb1xf1xb2xf1xb2xf1xb3xf1xb3xf1xb4xf1xb4xf1xb5xf1xb5xf1xb6xf1xb6xf1xb7xf1xb7xf1xb8xf1xb8xf1xb9xf1xb9xf1xbaxf1xbaxf1xc3x0exc3x0exc2x0exc2x0exc1x0exc1x0exc0x0exc0x0exbfx0exbfx0exbex0exbex0exbdx0exbdx0exbcx0exbcx0exbbx0exbbx0exbax0exbax0exb9x0exb9x0exb8x0exb8x0exb7x0exb7x0exb6x0exb6x0exb5x0exb5x0exb4x0exb4x0exb3x0exb3x0exb2x0exb2x0exb1x0exb1x0exb0x0exb0x0exafx0exafx0exaex0exaex0exadx0exadx0exacx0exacx0exabx0exabx0exaax0exaax0exa9x0exa9x0exa8x0exa8x0exa7x0exa7x0exa6x0exa6x0exfcx15xfcx15mx18mx18lx18lx18jx18jx18hx18hx18gx18gx18ex18ex18cx18cx18bx18bx18`x18`x18^x18^x18]x18]x18[x18[x18Yx18Yx18Xx18Xx18Vx18Vx18Tx18Tx18Sx18Sx18Qx18Qx18Ox18Ox18Nx18Nx18Lx18Lx18Jx18Jx18Ix18Ix18Gx18Gx18Ex18Ex18Dx18Dx18Bx18Bx18@x18@x18?x18?x18=x18=x18;x18;x18x97x15x97x15%x03%x03%x03%x03%x03%x03%x03%x03$x03$x03$x03$x03$x03$x03$x03$x03$x03$x03#x03#x03#x03#x03#x03#x03#x03#x03&quot;x03&quot;x03&quot;x03&quot;x03x13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex13xfex14xfex14xfex14xfex14xfex14xfex14xfeMxf6Mxf6Mxf6Mxf6Nxf6Nxf6Oxf6Oxf6Oxf6Oxf6Pxf6Pxf6Qxf6Qxf6Qxf6Qxf6Rxf6Rxf6Sxf6Sxf6Sxf6Sxf6Txf6Txf6Uxf6Uxf6Uxf6Uxf6Vxf6Vxf6Wxf6Wxf6Wxf6Wxf6Xxf6Xxf6Yxf6Yxf6Yxf6Yxf6Vx04Vx04xfex08xfex08xfex08xfex08xfdx08xfdx08xfcx08xfcx08xfcx08xfcx08xfbx08xfbx08xfbx08xfbx08xfax08xfax08xf9x08xf9x08xf9x08xf9x08xf8x08xf8x08xf7x08xf7x08xf7x08xf7x08xf6x08xf6x08xf6x08xf6x08xf5x08xf5x08xf4x08xf4x08xf4x08xf4x08xf3x08xf3x08xf3x08xf3x08x93xf6x93xf6xf7xd7xf7xd7xfaxd7xfaxd7xfcxd7xfcxd7xffxd7xffxd7x02xd8x02xd8x05xd8x05xd8x07xd8x07xd8\nxd8\nxd8xd8xd8x10xd8x10xd8x12xd8x12xd8x15xd8x15xd8x18xd8x18xd8x1bxd8x1bxd8x1dxd8x1dxd8 xd8 xd8#xd8#xd8&amp;xd8&amp;xd8(xd8(xd8+xd8+xd8.xd8.xd81xd81xd8x84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffx84xffxf7xd9xf7xd9xfaxd9xfaxd9xfdxd9xfdxd9xffxd9xffxd9x02xdax02xdax05xdax05xdax07xdax07xda\nxda\nxdax0cxdax0cxdax0fxdax0fxdax12xdax12xdax14xdax14xdax17xdax17xdax1axdax1axdax1cxdax1cxdax1fxdax1fxda!xda!xda$xda$xda&#39;xda&#39;xda)xda)xda,xda,xda.xda.xda1xda1xda4xda4xda6xda6xdaxd3xddxd3xddxd6xddxd6xddxd8xddxd8xddxdaxddxdaxddxddxddxddxddxdfxddxdfxddxe1xddxe1xddxe4xddxe4xddxe6xddxe6xddxe8xddxe8xddxebxddxebxddxedxddxedxddxefxddxefxddxf2xddxf2xddxf4xddxf4xddxf7xddxf7xddxf9xddxf9xddxfbxddxfbxddxfexddxfexddx00xdex00xdex02xdex02xdex05xdex05xdex07xdex07xde	xde	xdex0cxdex0cxdex0exdex0exdevxddvxddxxddxxdd{xdd{xdd}xdd}xddx7fxddx7fxddx82xddx82xddx84xddx84xddx87xddx87xddx89xddx89xddx8bxddx8bxddx8exddx8exddx90xddx90xddx93xddx93xddx95xddx95xddx97xddx97xddx9axddx9axddx9cxddx9cxddx9exddx9exddxa1xddxa1xddxa3xddxa3xddxa6xddxa6xddxa8xddxa8xddxaaxddxaaxddxadxddxadxddxafxddxafxddxb1xddxb1xddxb4xddxb4xddxf2xe8xf2xe8xa6\nxa6\nxa5\nxa5\nxa4\nxa4\nxa3\nxa3\nxa3\nxa3\nxa2\nxa2\nxa1\nxa1\nxa0\nxa0\nxa0\nxa0\nx9f\nx9f\nx9e\nx9e\nx9d\nx9d\nx9d\nx9d\nx9c\nx9c\nx9b\nx9b\nx9b\nx9b\nx9a\nx9a\nx99\nx99\nx98\nx98\nx98\nx98\nx97\nx97\nx96\nx96\nx95\nx95\nx95\nx95\nx94\nx94\nx93\nx93\nx92\nx92\nx92\nx92\nx91\nx91\nlx08lx08&quot;x07&quot;x07&quot;x07&quot;x07!x07!x07!x07!x07 x07 x07 x07 x07x1fx07x1fx07x1fx07x1fx07x1ex07x1ex07x1ex07x1ex07x1dx07x1dx07x1dx07x1dx07x1cx07x1cx07x1cx07x1cx07x1bx07x1bx07x1bx07x1bx07x1ax07x1ax07x1ax07x1ax07x19x07x19x07x19x07x19x07x18x07x18x07x18x07x18x07x17x07x17x07x17x07x17x07x17x07x17x07x16x07x16x07x16x07x16x07x15x07x15x07x15x07x15x07x14x07x14x07x14x07x14x07xaexf3xaexf3xe8xe8x0exe8x0exe8x10xe8x10xe8x12xe8x12xe8x13xe8x13xe8x15xe8x15xe8x17xe8x17xe8x18xe8x18xe8x1axe8x1axe8x1cxe8x1cxe8x1dxe8x1dxe8x1fxe8x1fxe8!xe8!xe8&quot;xe8&quot;xe8$xe8$xe8&amp;xe8&amp;xe8&#39;xe8&#39;xe8)xe8)xe8+xe8+xe8,xe8,xe8.xe8.xe80xe80xe81xe81xe83xe83xe85xe85xe86xe86xe88xe88xe8:xe8:xe8;xe8;xe8=xe8=xe8&gt;xe8&gt;xe8@xe8@xe8Bxe8Bxe8Cxe8Cxe8xf4xe3xf4xe3xf6xe3xf6xe3xf8xe3xf8xe3xfaxe3xfaxe3xfcxe3xfcxe3xfexe3xfexe3x00xe4x00xe4x02xe4x02xe4x04xe4x04xe4x06xe4x06xe4x08xe4x08xe4	xe4	xe4x0bxe4x0bxe4xe4xe4x0fxe4x0fxe4x11xe4x11xe4x13xe4x13xe4x15xe4x15xe4x17xe4x17xe4x19xe4x19xe4x1bxe4x1bxe4x1dxe4x1dxe4x1fxe4x1fxe4!xe4!xe4#xe4#xe4%xe4%xe4&#39;xe4&#39;xe4)xe4)xe4+xe4+xe4,xe4,xe4.xe4.xe40xe40xe42xe42xe44xe44xe46xe46xe48xe48xe4:xe4:xe4&lt;xe4&lt;xe4cx13cx13x1dx1ax1dx1ax1bx1ax1bx1ax1ax1ax1ax1ax18x1ax18x1ax16x1ax16x1ax14x1ax14x1ax12x1ax12x1ax11x1ax11x1ax0fx1ax0fx1ax1ax1ax0bx1ax0bx1a	x1a	x1ax08x1ax08x1ax06x1ax06x1ax04x1ax04x1ax02x1ax02x1ax00x1ax00x1axfex19xfex19xfdx19xfdx19xfbx19xfbx19xf9x19xf9x19xf7x19xf7x19xf5x19xf5x19xf4x19xf4x19xf2x19xf2x19xf0x19xf0x19xeex19xeex19xecx19xecx19xebx19xebx19xe9x19xe9x19xe7x19xe7x19xe5x19xe5x19xe3x19xe3x19xe1x19xe1x19xe0x19xe0x19xdex19xdex19xdcx19xdcx19xdax19xdax19xd8x19xd8x19xd7x19xd7x19xd5x19xd5x19xe4x1cxe4x1cx14&amp;x14&amp;x11&amp;x11&amp;x0f&amp;x0f&amp;x0c&amp;x0c&amp;	&amp;	&amp;x07&amp;x07&amp;x04&amp;x04&amp;x01&amp;x01&amp;xff%xff%xfc%xfc%xf9%xf9%xf7%xf7%xf4%xf4%xf1%xf1%xef%xef%xec%xec%xe9%xe9%xe7%xe7%xe4%xe4%xe1%xe1%xdf%xdf%xdc%xdc%xda%xda%xd7%xd7%xd4%xd4%xd2%xd2%xcf%xcf%xcc%xcc%xca%xca%xc7%xc7%xc4%xc4%xc2%xc2%xbf%xbf%xbd%xbd%xba%xba%xb7%xb7%xb5%xb5%xb2%xb2%xaf%xaf%xad%xad%xaa%xaa%xa7%xa7%xa5%xa5%xa2%xa2%xa0%xa0%x9d%x9d%x9a%x9a%xffx1exffx1exd5xf0xd5xf0xd6xf0xd6xf0xd7xf0xd7xf0xd8xf0xd8xf0xd9xf0xd9xf0xdaxf0xdaxf0xdbxf0xdbxf0xdcxf0xdcxf0xddxf0xddxf0xdexf0xdexf0xdfxf0xdfxf0xe0xf0xe0xf0xe1xf0xe1xf0xe2xf0xe2xf0xe4xf0xe4xf0xe5xf0xe5xf0xe6xf0xe6xf0xe7xf0xe7xf0xe8xf0xe8xf0xe9xf0xe9xf0xeaxf0xeaxf0xebxf0xebxf0xecxf0xecxf0xedxf0xedxf0xeexf0xeexf0xefxf0xefxf0xf0xf0xf0xf0xf1xf0xf1xf0xf2xf0xf2xf0xf3xf0xf3xf0xf4xf0xf4xf0xf5xf0xf5xf0xf7xf0xf7xf0xf8xf0xf8xf0xf9xf0xf9xf0xfaxf0xfaxf0xfbxf0xfbxf0xfcxf0xfcxf0xfdxf0xfdxf0xfexf0xfexf0xffxf0xffxf0x00xf1x00xf1x01xf1x01xf1x02xf1x02xf1x03xf1x03xf1x04xf1x04xf1x05xf1x05xf1x06xf1x06xf1x07xf1x07xf1x08xf1x08xf1	xf1	xf1\nxf1\nxf1x0cxf1x0cxf1xf1xf1x0exf1x0exf1x0fxf1x0fxf1x8execx8execxdbxe9xdbxe9xddxe9xddxe9xdexe9xdexe9xe0xe9xe0xe9xe1xe9xe1xe9xe3xe9xe3xe9xe4xe9xe4xe9xe6xe9xe6xe9xe7xe9xe7xe9xe9xe9xe9xe9xebxe9xebxe9xecxe9xecxe9xeexe9xeexe9xefxe9xefxe9xf1xe9xf1xe9xf2xe9xf2xe9xf4xe9xf4xe9xf5xe9xf5xe9xf7xe9xf7xe9xf8xe9xf8xe9xfaxe9xfaxe9xfcxe9xfcxe9xfdxe9xfdxe9xffxe9xffxe9x00xeax00xeax02xeax02xeax03xeax03xeax05xeax05xeax06xeax06xeax08xeax08xea	xea	xeax0bxeax0bxeax0cxeax0cxeax0exeax0exeax10xeax10xeax11xeax11xeax13xeax13xeax14xeax14xeax16xeax16xeax17xeax17xeax19xeax19xeax1axeax1axeax1cxeax1cxeax1dxeax1dxeax1fxeax1fxea!xea!xea&quot;xea&quot;xea$xea$xea%xea%xea&#39;xea&#39;xea(xea(xea*xea*xea+xea+xea-xea-xea.xea.xea0xea0xea1xea1xea3xea3xea4xea4xea6xea6xea8xea8xea9xea9xea;xea;xea&lt;xea&lt;xea&gt;xea&gt;xea?xea?xeaAxeaAxeaBxeaBxeaxaaxe5xaaxe5xe0xd7xe0xd7xe2xd7xe2xd7xe5xd7xe5xd7xe8xd7xe8xd7xebxd7xebxd7xeexd7xeexd7xf0xd7xf0xd7xf3xd7xf3xd7xf6xd7xf6xd7xf9xd7xf9xd7xfcxd7xfcxd7xffxd7xffxd7x01xd8x01xd8x04xd8x04xd8x07xd8x07xd8\nxd8\nxd8xd8xd8x0fxd8x0fxd8x12xd8x12xd8x15xd8x15xd8x18xd8x18xd8x1bxd8x1bxd8x1dxd8x1dxd8 xd8 xd8#xd8#xd8&amp;xd8&amp;xd8)xd8)xd8+xd8+xd8.xd8.xd81xd81xd84xd84xd87xd87xd89xd89xd8&lt;xd8&lt;xd8?xd8?xd8Bxd8Bxd8Exd8Exd8Gxd8Gxd8Jxd8Jxd8Mxd8Mxd8Pxd8Pxd8Sxd8Sxd8Uxd8Uxd8Xxd8Xxd8[xd8[xd8^xd8^xd8axd8axd8cxd8cxd8fxd8fxd8ixd8ixd8lxd8lxd8oxd8oxd8qxd8qxd8txd8txd8wxd8wxd8zxd8zxd8}xd8}xd8x7fxd8x7fxd8x82xd8x82xd8x85xd8x85xd8x88xd8x88xd8x8axd8x8axd8x8dxd8x8dxd8x90xd8x90xd8x93xd8x93xd8x96xd8x96xd8x98xd8x98xd8x9bxd8x9bxd8x9exd8x9exd8xa1xd8xa1xd8xa3xd8xa3xd8xa6xd8xa6xd8xa9xd8xa9xd8xacxd8xacxd8xafxd8xafxd8xb1xd8xb1xd8xb4xd8xb4xd8xb7xd8xb7xd8xbaxd8xbaxd8xbcxd8xbcxd8xbfxd8xbfxd8xc2xd8xc2xd8xc5xd8xc5xd8xc7xd8xc7xd8xcaxd8xcaxd8xa8x1dxa8x1dxa5x1dxa5x1dxa3x1dxa3x1dxa1x1dxa1x1dx9fx1dx9fx1dx9dx1dx9dx1dx9bx1dx9bx1dx99x1dx99x1dx97x1dx97x1dx95x1dx95x1dx93x1dx93x1dxe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe2xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe3xfexe4xfexe4xfexe4xfexe4xfexe4xfexe4xfexe4xfexe4xfeTxdfTxdfVxdfVxdfYxdfYxdf[xdf[xdf]xdf]xdf`xdf`xdfbxdfbxdfdxdfdxdfgxdfgxdfixdfixdfkxdfkxdfmxdfmxdfpxdfpxdfrxdfrxdftxdftxdfwxdfwxdfyxdfyxdf{xdf{xdf~xdf~xdfx80xdfx80xdfx82xdfx82xdfx84xdfx84xdfx87xdfx87xdfx89xdfx89xdfxcbx0bxcbx0bxcax0bxcax0bxcax0bxcax0bxc9x0bxc9x0bxc8x0bxc8x0bxc7x0bxc7x0bxc6x0bxc6x0bxc5x0bxc5x0bxc5x0bxc5x0bxc4x0bxc4x0bxc3x0bxc3x0bxc2x0bxc2x0bxc1x0bxc1x0bxc0x0bxc0x0bxc0x0bxc0x0bxbfx0bxbfx0bxbex0bxbex0bxbdx0bxbdx0bxbcx0bxbcx0bxbbx0bxbbx0bxbbx0bxbbx0bxbax0bxbax0bxb9x0bxb9x0bxb8x0bxb8x0bxb7x0bxb7x0b)x08)x08KxefKxefLxefLxefMxefMxefOxefOxefPxefPxefQxefQxefRxefRxefSxefSxefUxefUxefVxefVxefWxefWxefXxefXxefYxefYxefZxefZxef\\xef\\xef]xef]xef^xef^xef_xef_xef`xef`xefbxefbxefcxefcxefdxefdxefexefexeffxeffxefgxefgxefixefixefjxefjxefxd7x16xd7x16xd5x16xd5x16xd3x16xd3x16xd2x16xd2x16xd0x16xd0x16xcex16xcex16xcdx16xcdx16xcbx16xcbx16xcax16xcax16xc8x16xc8x16xc6x16xc6x16xc5x16xc5x16xc3x16xc3x16xc2x16xc2x16xc0x16xc0x16xbex16xbex16xbdx16xbdx16xbbx16xbbx16xb9x16xb9x16xb8x16xb8x16xb6x16xb6x16xb5x16xb5x16xb3x16xb3x16xb1x16xb1x16xb0x16xb0x16xaex16xaex16xadx16xadx16xabx16xabx16xa9x16xa9x16xa2x17xa2x176x186x185x185x183x183x181x181x18/x18/x18.x18.x18,x18,x18*x18*x18)x18)x18&#39;x18&#39;x18%x18%x18#x18#x18&quot;x18&quot;x18 x18 x18x1ex18x1ex18x1dx18x1dx18x1bx18x1bx18x19x18x19x18x17x18x17x18x16x18x16x18x14x18x14x18x12x18x12x18x11x18x11x18x0fx18x0fx18x18x18x0bx18x0bx18\nx18\nx18x08x18x08x18x06x18x06x18x05x18x05x18cx11cx11x08xe3x08xe3\nxe3\nxe3x0cxe3x0cxe3x0exe3x0exe3x10xe3x10xe3x12xe3x12xe3x14xe3x14xe3x16xe3x16xe3x19xe3x19xe3x1bxe3x1bxe3x1dxe3x1dxe3x1fxe3x1fxe3!xe3!xe3#xe3#xe3%xe3%xe3&#39;xe3&#39;xe3)xe3)xe3+xe3+xe3-xe3-xe3/xe3/xe31xe31xe33xe33xe35xe35xe37xe37xe39xe39xe3;xe3;xe3&gt;xe3&gt;xe3@xe3@xe3Bxe3Bxe3Dxe3Dxe3Fxe3Fxe3Hxe3Hxe3Jxe3Jxe3Lxe3Lxe3x97xfax97xfaxeaxfdxeaxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxebxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxecxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxedxfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxeexfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxefxfdxf0xfdxf0xfdxf0xfdxf0xfdx88xf9x88xf9xb4xdaxb4xdaxb7xdaxb7xdaxb9xdaxb9xdaxbcxdaxbcxdaxbfxdaxbfxdaxc1xdaxc1xdaxc4xdaxc4xdaxc7xdaxc7xdaxc9xdaxc9xdaxccxdaxccxdaxcfxdaxcfxdaxd1xdaxd1xdaxd4xdaxd4xdaxd7xdaxd7xdaxd9xdaxd9xdaxdcxdaxdcxdaxdfxdaxdfxdaxe1xdaxe1xdaxe4xdaxe4xdaxe7xdaxe7xdaxe9xdaxe9xdaxecxdaxecxdaxefxdaxefxdaxf1xdaxf1xdaxf4xdaxf4xdaxf6xdaxf6xdaxf9xdaxf9xdaxfcxdaxfcxdaxfexdaxfexdax01xdbx01xdbx04xdbx04xdbx06xdbx06xdb	xdb	xdbx0cxdbx0cxdbx0exdbx0exdbx11xdbx11xdbx14xdbx14xdbx16xdbx16xdbx19xdbx19xdbx1cxdbx1cxdbx1exdbx1exdb!xdb!xdbx10xe8x10xe8x11xe8x11xe8x13xe8x13xe8x15xe8x15xe8x17xe8x17xe8x18xe8x18xe8x1axe8x1axe8x1cxe8x1cxe8x1dxe8x1dxe8x1fxe8x1fxe8!xe8!xe8&quot;xe8&quot;xe8$xe8$xe8&amp;xe8&amp;xe8(xe8(xe8)xe8)xe8+xe8+xe8-xe8-xe8.xe8.xe80xe80xe82xe82xe84xe84xe85xe85xe87xe87xe89xe89xe8:xe8:xe8&lt;xe8&lt;xe8&gt;xe8&gt;xe8@xe8@xe8Axe8Axe8Cxe8Cxe8Exe8Exe8Fxe8Fxe8Hxe8Hxe8Jxe8Jxe8Kxe8Kxe8Mxe8Mxe8Oxe8Oxe8Qxe8Qxe8Rxe8Rxe8Txe8Txe8Vxe8Vxe8Wxe8Wxe8Yxe8Yxe8[xe8[xe8\\xe8\\xe8^xe8^xe8`xe8`xe8xc5xeaxc5xeax1dxebx1dxebx1fxebx1fxeb xeb xeb&quot;xeb&quot;xeb#xeb#xeb%xeb%xeb&amp;xeb&amp;xeb(xeb(xeb)xeb)xeb+xeb+xeb,xeb,xeb.xeb.xeb/xeb/xeb1xeb1xeb2xeb2xeb4xeb4xeb5xeb5xeb7xeb7xeb8xeb8xeb:xeb:xeb;xeb;xeb=xeb=xeb&gt;xeb&gt;xeb@xeb@xebAxebAxebCxebCxebDxebDxebFxebFxebGxebGxebIxebIxebJxebJxebLxebLxebMxebMxebOxebOxebPxebPxebRxebRxebSxebSxebUxebUxebVxebVxebWxebWxebYxebYxebZxebZxeb\\xeb\\xeb]xeb]xeb_xeb_xeb`xeb`xebbxebbxebcxebcxebexebexebfxebfxebhxebhxebixebixebkxebkxeblxeblxebnxebnxebx7fxeax7fxeaxaexe7xaexe7xb0xe7xb0xe7xb1xe7xb1xe7xb3xe7xb3xe7xb5xe7xb5xe7xb7xe7xb7xe7xb8xe7xb8xe7xbaxe7xbaxe7xbcxe7xbcxe7xbexe7xbexe7xbfxe7xbfxe7xc1xe7xc1xe7xc3xe7xc3xe7xc5xe7xc5xe7xc6xe7xc6xe7xc8xe7xc8xe7xcaxe7xcaxe7xccxe7xccxe7xcdxe7xcdxe7xcfxe7xcfxe7xd1xe7xd1xe7xd3xe7xd3xe7xd4xe7xd4xe7xd6xe7xd6xe7xd8xe7xd8xe7xdaxe7xdaxe7xdbxe7xdbxe7xddxe7xddxe7xdfxe7xdfxe7xe1xe7xe1xe7xe2xe7xe2xe7xe4xe7xe4xe7xe6xe7xe6xe7xe8xe7xe8xe7xe9xe7xe9xe7xebxe7xebxe7xedxe7xedxe7xeexe7xeexe7xf0xe7xf0xe7xf2xe7xf2xe7xf4xe7xf4xe7xf5xe7xf5xe7xf7xe7xf7xe7xf9xe7xf9xe7xfbxe7xfbxe7xfcxe7xfcxe7xfexe7xfexe7x00xe8x00xe8x02xe8x02xe8x03xe8x03xe8x05xe8x05xe8x07xe8x07xe8x08xe8x08xe8\nxe8\nxe8x0cxe8x0cxe8x0exe8x0exe8x0fxe8x0fxe8x11xe8x11xe8x13xe8x13xe8x15xe8x15xe8x16xe8x16xe8x18xe8x18xe8x1axe8x1axe8x1bxe8x1bxe8x1dxe8x1dxe8x1fxe8x1fxe8!xe8!xe8&quot;xe8&quot;xe8$xe8$xe8&amp;xe8&amp;xe8xc9xefxc9xefx83xfcx83xfcx83xfcx83xfcx83xfcx83xfcx84xfcx84xfcx84xfcx84xfcx84xfcx84xfcx84xfcx84xfcx85xfcx85xfcx85xfcx85xfcx85xfcx85xfcx85xfcx85xfcx86xfcx86xfcx86xfcx86xfcx86xfcx86xfcx86xfcx86xfcx87xfcx87xfcx87xfcx87xfcx87xfcx87xfcx87xfcx87xfcx88xfcx88xfcx88xfcx88xfcx88xfcx88xfcx88xfcx88xfcx89xfcx89xfcx89xfcx89xfcx89xfcx89xfcx89xfcx89xfcx8axfcx8axfcx8axfcx8axfcx8axfcx8axfcx8axfcx8axfcx8bxfcx8bxfcx8bxfcx8bxfcx8bxfcx8bxfcx8bxfcx8bxfcx8cxfcx8cxfcx8cxfcx8cxfcx8cxfcx8cxfcx8cxfcx8cxfcx8dxfcx8dxfcx8dxfcx8dxfcx8dxfcx8dxfcx8dxfcx8dxfcx8exfcx8exfcx8exfcx8exfcx8exfcx8exfcx8exfcx8exfcx8fxfcx8fxfcx8fxfcx8fxfcx8fxfcx8fxfcx8fxfcx8fxfcx90xfcx90xfcx90xfcx90xfcx90xfcx90xfcx90xfcx90xfcx91xfcx91xfcx91xfcx91xfcx91xfcx91xfcx91xfcx91xfcx92xfcx92xfcx92xfcx92xfcx92xfcx92xfcx92xfcx92xfcx93xfcx93xfcx93xfcx93xfcx93xfcx93xfcx93xfcx93xfcx94xfcx94xfcx94xfcx94xfcx94xfcx94xfcx94xfcx94xfcx95xfcx95xfcx95xfcx95xfcx95xfcx95xfcx95xfcx95xfcx95xfcx95xfcx96xfcx96xfcx96xfcx96xfcx96xfcx96xfcx96xfcx96xfcx97xfcx97xfcx97xfcx97xfcx97xfcx97xfcx97xfcx97xfcx98xfcx98xfcx98xfcx98xfcx98xfcx98xfcx98xfcx98xfcx99xfcx99xfcx99xfcx99xfcx99xfcx99xfcx99xfcx99xfcx9axfcx9axfcx9axfcx9axfcx9axfcx9axfcx9axfcx9axfcx9bxfcx9bxfcx9bxfcx9bxfcx9bxfcx9bxfcxf8xf9xf8xf9xffxf7xffxf7Vxf7Vxf7Wxf7Wxf7Xxf7Xxf7Xxf7Xxf7Yxf7Yxf7Zxf7Zxf7Zxf7Zxf7[xf7[xf7[xf7[xf7\\xf7\\xf7]xf7]xf7]xf7]xf7^xf7^xf7_xf7_xf7_xf7_xf7`xf7`xf7axf7axf7axf7axf7bxf7bxf7bxf7bxf7cxf7cxf7dxf7dxf7dxf7dxf7exf7exf7fxf7fxf7fxf7fxf7gxf7gxf7gxf7gxf7hxf7hxf7ixf7ixf7ixf7ixf7jxf7jxf7kxf7kxf7kxf7kxf7lxf7lxf7lxf7lxf7mxf7mxf7nxf7nxf7nxf7nxf7oxf7oxf7pxf7pxf7pxf7pxf7qxf7qxf7qxf7qxf7rxf7rxf7sxf7sxf7sxf7sxf7txf7txf7txf7txf7uxf7uxf7vxf7vxf7xaexe4xaexe4xb0xe4xb0xe4xb2xe4xb2xe4xb4xe4xb4xe4xb6xe4xb6xe4xb8xe4xb8xe4xbaxe4xbaxe4xbcxe4xbcxe4xbexe4xbexe4xfexeexfexeexb7xb7xb6xb6xb5xb5xb4xb4xb3xb3xb2xb2xb1xb1xb0xb0xafxafxaexaexadxadxacxacxabxabxaaxaaxa9xa9xa8xa8xa7xa7xa6xa6xa5xa5xa4xa4xa3xa3xa2xa2xa1xa1xa0xa0x9fx9fx9ex9exe2x07xe2x07x0fx07x0fx07x0fx07x0fx07x0ex07x0ex07x0ex07x0ex07x07x07x07x07x0cx07x0cx07x0cx07x0cx07x0bx07x0bx07x0bx07x0bx07\nx07\nx07\nx07\nx07	x07	x07	x07	x07x08x07x08x07x08x07x08x07x07x07x07x07x07x07x07x07x06x07x06x07x06x07x06x07x05x07x05x07x05x07x05x07x04x07x04x07x03x07x03x07x03x07x03x07x02x07x02x07x02x07x02x07x82x01x82x016xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe6xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe7xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe8xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe9xfe.xfd.xfdxe3xf5xe3xf5xe4xf5xe4xf5xe4xf5xe4xf5xe5xf5xe5xf5xe6xf5xe6xf5xe7xf5xe7xf5xe7xf5xe7xf5xe8xf5xe8xf5xe9xf5xe9xf5xeaxf5xeaxf5xeaxf5xeaxf5xebxf5xebxf5xecxf5xecxf5xecxf5xecxf5xedxf5xedxf5xeexf5xeexf5xefxf5xefxf5xefxf5xefxf5xf0xf5xf0xf5xf1xf5xf1xf5xf2xf5xf2xf5xf2xf5xf2xf5xf3xf5xf3xf5xf4xf5xf4xf5xf5xf5xf5xf5xf5xf5xf5xf5xf6xf5xf6xf5xf7xf5xf7xf5xf7xf5xf7xf5xf8xf5xf8xf5xf9xf5xf9xf5xfaxf5xfaxf5xeexfaxeexfax92x1dx92x1dx90x1dx90x1dx8ex1dx8ex1dx8bx1dx8bx1dx89x1dx89x1dx87x1dx87x1dx85x1dx85x1dx83x1dx83x1dx81x1dx81x1d~x1d~x1d|x1d|x1dzx1dzx1dxx1dxx1dvx1dvx1dtx1dtx1dqx1dqx1dox1dox1dmx1dmx1dkx1dkx1dix1dix1dgx1dgx1ddx1ddx1dbx1dbx1d`x1d`x1d^x1d^x1d\\x1d\\x1dZx1dZx1dXx1dXx1dUx1dUx1dSx1dSx1dQx1dQx1dOx1dOx1dMx1dMx1dKx1dKx1dHx1dHx1dFx1dFx1dux16ux16zx15zx15xx15xx15wx15wx15ux15ux15tx15tx15rx15rx15px15px15ox15ox15mx15mx15lx15lx15jx15jx15hx15hx15gx15gx15ex15ex15dx15dx15bx15bx15ax15ax15_x15_x15]x15]x15\\x15\\x15Zx15Zx15Yx15Yx15Wx15Wx15Vx15Vx15Tx15Tx15Sx15Sx15Qx15Qx15Ox15Ox15Nx15Nx15Lx15Lx15Kx15Kx15Ix15Ix15Hx15Hx15Fx15Fx15Dx15Dx15Cx15Cx15Ax15Ax15@x15@x15&gt;x15&gt;x15HHx05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00x05x00xb0x05xb0x05xb1x16xb1x16xafx16xafx16xadx16xadx16xacx16xacx16xaax16xaax16xa8x16xa8x16xa7x16xa7x16xa5x16xa5x16xa3x16xa3x16xa2x16xa2x16xa0x16xa0x16x9ex16x9ex16x9dx16x9dx16x9bx16x9bx16x99x16x99x16x98x16x98x16x96x16x96x16x94x16x94x16x93x16x93x16x91x16x91x16x8fx16x8fx16x8ex16x8ex16x8cx16x8cx16x8ax16x8ax16x89x16x89x16x87x16x87x16x85x16x85x16x84x16x84x16x82x16x82x16x80x16x80x16x7fx16x7fx16}x16}x16{x16{x16zx16zx16xx16xx16vx16vx16ux16ux16sx16sx16qx16qx16px16px16nx16nx16lx16lx16kx16kx16ix16ix16gx16gx16fx16fx16dx16dx16bx16bx16ax16ax16_x16_x16]x16]x16\\x16\\x16Zx16Zx16x18x18(x1d(x1d&amp;x1d&amp;x1d$x1d$x1d&quot;x1d&quot;x1d x1d x1dx1ex1dx1ex1dx1cx1dx1cx1dx19x1dx19x1dx17x1dx17x1dx15x1dx15x1dx13x1dx13x1dx11x1dx11x1dx0fx1dx0fx1dx0cx1dx0cx1d\nx1d\nx1dx08x1dx08x1dx06x1dx06x1dx04x1dx04x1dx02x1dx02x1dxffx1cxffx1cxfdx1cxfdx1cx9ex11x9ex11@x06@x06@x06@x06?x06?x06?x06?x06?x06?x06&gt;x06&gt;x06&gt;x06&gt;x06=x06=x06=x06=x06&lt;x06&lt;x06&lt;x06&lt;x06;x06;x06;x06;x06:x06:x06:x06:x069x069x069x069x069x069x068x068x068x068x067x067x067x067x06xe7xfexe7xfexdcxfdxdcxfdxdcxfdxdcxfdxdcxfdxdcxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxddxfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdexfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxdfxfdxe0xfdxe0xfdxa3xe5xa3xe5xa5xe5xa5xe5xa7xe5xa7xe5xa9xe5xa9xe5xabxe5xabxe5xadxe5xadxe5xafxe5xafxe5xb1xe5xb1xe5xb2xe5xb2xe5xb4xe5xb4xe5xb6xe5xb6xe5xb8xe5xb8xe5xbaxe5xbaxe5xbcxe5xbcxe5xbexe5xbexe5xc0xe5xc0xe5xc2xe5xc2xe5xc4xe5xc4xe5xc6xe5xc6xe5xc8xe5xc8xe5xcaxe5xcaxe5xccxe5xccxe5xcexe5xcexe5xd0xe5xd0xe5xd2xe5xd2xe5x1axefx1axefx1bxefx1bxefx1cxefx1cxefx1dxefx1dxefx1fxefx1fxef xef xef!xef!xef&quot;xef&quot;xef$xef$xef%xef%xef&amp;xef&amp;xef&#39;xef&#39;xef)xef)xef*xef*xef+xef+xef,xef,xef.xef.xef/xef/xef0xef0xef1xef1xef3xef3xef4xef4xef5xef5xef6xef6xef8xef8xef9xef9xefxc7x16xc7x16xf3#xf3#xf1#xf1#xee#xee#xeb#xeb#xe9#xe9#xe6#xe6#xe3#xe3#xe1#xe1#xde#xde#xdb#xdb#xd9#xd9#xd6#xd6#xd3#xd3#xd1#xd1#xce#xce#xcb#xcb#xc9#xc9#xc6#xc6#xc3#xc3#xc1#xc1#xbe#xbe#xbb#xbb#xb9#xb9#xb6#xb6#xb3#xb3#xb1#xb1#xae#xae#}x19}x19{x19{x19yx19yx19wx19wx19ux19ux19sx19sx19rx19rx19px19px19nx19nx19lx19lx19jx19jx19hx19hx19fx19fx19dx19dx19bx19bx19`x19`x19^x19^x19]x19]x19[x19[x19Yx19Yx19Wx19Wx19Ux19Ux19Sx19Sx19Qx19Qx19Ox19Ox19Mx19Mx19Lx19Lx19Jx19Jx19Hx19Hx19xe1x1bxe1x1bpx1dpx1dmx1dmx1dkx1dkx1dix1dix1dgx1dgx1dex1dex1dbx1dbx1d`x1d`x1d^x1d^x1d\\x1d\\x1dZx1dZx1dWx1dWx1dUx1dUx1dSx1dSx1dQx1dQx1dOx1dOx1dLx1dLx1dJx1dJx1dHx1dHx1dFx1dFx1dDx1dDx1dAx1dAx1d?x1d?x1d=x1d=x1d;x1d;x1d9x1d9x1d7x1d7x1d4x1d4x1d2x1d2x1d0x1d0x1dx99x19x99x19xdax0exdax0exd9x0exd9x0exd8x0exd8x0exd7x0exd7x0exd6x0exd6x0exd4x0exd4x0exd3x0exd3x0exd2x0exd2x0exd1x0exd1x0exd0x0exd0x0excfx0excfx0excex0excex0excdx0excdx0exccx0exccx0excax0excax0exc9x0exc9x0exc8x0exc8x0exc7x0exc7x0exc6x0exc6x0exc5x0exc5x0exc4x0exc4x0exc3x0exc3x0exc2x0exc2x0exc0x0exc0x0exbfx0exbfx0exbex0exbex0exbdx0exbdx0exbcx0exbcx0exbbx0exbbx0exbax0exbax0exb9x0exb9x0exb8x0exb8x0exb6x0exb6x0exe2x1cxe2x1cxe0x1cxe0x1cxdex1cxdex1cxdcx1cxdcx1cxdax1cxdax1cxd7x1cxd7x1cxd5x1cxd5x1cxd3x1cxd3x1cxd1x1cxd1x1cxcfx1cxcfx1cxcdx1cxcdx1cxcax1cxcax1cxc8x1cxc8x1cxc6x1cxc6x1cxc4x1cxc4x1cxc2x1cxc2x1cxc0x1cxc0x1cxbdx1cxbdx1cxbbx1cxbbx1cxb9x1cxb9x1cxb7x1cxb7x1cxb5x1cxb5x1cxb3x1cxb3x1cxb0x1cxb0x1cxaex1cxaex1cxacx1cxacx1cxaax1cxaax1cxa8x1cxa8x1cxa6x1cxa6x1cxa3x1cxa3x1cxa1x1cxa1x1cx9fx1cx9fx1cx9dx1cx9dx1cx9bx1cx9bx1cx99x1cx99x1cx97x1cx97x1cxbbxdexbbxdexbexdexbexdexc0xdexc0xdexc3xdexc3xdexc5xdexc5xdexc8xdexc8xdexcaxdexcaxdexcdxdexcdxdexcfxdexcfxdexd2xdexd2xdexd4xdexd4xdexd7xdexd7xdexd9xdexd9xdexdcxdexdcxdexdexdexdexdexe1xdexe1xdexe3xdexe3xdexe6xdexe6xdexe8xdexe8xdexebxdexebxdexedxdexedxdexf0xdexf0xdexf2xdexf2xdexf5xdexf5xdexf7xdexf7xdexfaxdexfaxdexfcxdexfcxdexffxdexffxdex01xdfx01xdfx04xdfx04xdfx06xdfx06xdfd&quot;d&quot;a&quot;a&quot;^&quot;^&quot;\\&quot;\\&quot;Y&quot;Y&quot;W&quot;W&quot;T&quot;T&quot;Q&quot;Q&quot;O&quot;O&quot;L&quot;L&quot;J&quot;J&quot;G&quot;G&quot;D&quot;D&quot;B&quot;B&quot;?&quot;?&quot;=&quot;=&quot;:&quot;:&quot;8&quot;8&quot;5&quot;5&quot;x90x11x90x11xd7xf5xd7xf5xd8xf5xd8xf5xd9xf5xd9xf5xd9xf5xd9xf5xdaxf5xdaxf5xdbxf5xdbxf5xdcxf5xdcxf5xddxf5xddxf5xddxf5xddxf5xdexf5xdexf5xdfxf5xdfxf5xe0xf5xe0xf5xe0xf5xe0xf5xe1xf5xe1xf5xe2xf5xe2xf5xe3xf5xe3xf5xe3xf5xe3xf5xe4xf5xe4xf5xe5xf5xe5xf5xe6xf5xe6xf5xe6xf5xe6xf5xe7xf5xe7xf5xe8xf5xe8xf5xe9xf5xe9xf5x88x14x88x14x87x14x87x14x85x14x85x14x83x14x83x14x82x14x82x14x80x14x80x14x7fx14x7fx14}x14}x14|x14|x14zx14zx14yx14yx14wx14wx14vx14vx14tx14tx14rx14rx14qx14qx14ox14ox14nx14nx14lx14lx14kx14kx14ix14ix14hx14hx14fx14fx14ex14ex14cx14cx14x85x11x85x11xeex08xeex08xedx08xedx08xecx08xecx08xecx08xecx08xebx08xebx08xeax08xeax08xeax08xeax08xe9x08xe9x08xe8x08xe8x08xe8x08xe8x08xe7x08xe7x08xe6x08xe6x08xe6x08xe6x08xe5x08xe5x08xe4x08xe4x08xe4x08xe4x08xe3x08xe3x08xe2x08xe2x08xe2x08xe2x08xe1x08xe1x08xe0x08xe0x08xe0x08xe0x08xdfx08xdfx08xdex08xdex08xdex08xdex08xddx08xddx08xdcx08xdcx08Xxe7Xxe7x90xe2x90xe2x93xe2x93xe2x95xe2x95xe2x97xe2x97xe2x99xe2x99xe2x9cxe2x9cxe2x9exe2x9exe2xa0xe2xa0xe2xa2xe2xa2xe2xa5xe2xa5xe2xa7xe2xa7xe2xa9xe2xa9xe2xabxe2xabxe2xadxe2xadxe2xb0xe2xb0xe2xb2xe2xb2xe2xb4xe2xb4xe2xb6xe2xb6xe2xb9xe2xb9xe2xbbxe2xbbxe2xbdxe2xbdxe2xbfxe2xbfxe2xc1xe2xc1xe2xc4xe2xc4xe2xc6xe2xc6xe2xc8xe2xc8xe2xcaxe2xcaxe2xcdxe2xcdxe2xfdxe0xfdxe0xf8xddxf8xddxfaxddxfaxddxfdxddxfdxddxffxddxffxddx02xdex02xdex04xdex04xdex07xdex07xde\nxde\nxdex0cxdex0cxdex0fxdex0fxdex11xdex11xdex14xdex14xdex17xdex17xdex19xdex19xdex1cxdex1cxdex1exdex1exde!xde!xde#xde#xde&amp;xde&amp;xde)xde)xde+xde+xde.xde.xde0xde0xde3xde3xde5xde5xde8xde8xde;xde;xde=xde=xde@xde@xdeBxdeBxdeExdeExde,xec,xecxcexf0xcexf0xcfxf0xcfxf0xd1xf0xd1xf0xd2xf0xd2xf0xd3xf0xd3xf0xd4xf0xd4xf0xd5xf0xd5xf0xd6xf0xd6xf0xd8xf0xd8xf0xd9xf0xd9xf0xdaxf0xdaxf0xdbxf0xdbxf0xdcxf0xdcxf0xddxf0xddxf0xdexf0xdexf0xe0xf0xe0xf0xe1xf0xe1xf0xe2xf0xe2xf0xe3xf0xe3xf0xe4xf0xe4xf0xe5xf0xe5xf0xe7xf0xe7xf0xe8xf0xe8xf0xe9xf0xe9xf0xeaxf0xeaxf0xebxf0xebxf0xecxf0xecxf0xedxf0xedxf0xefxf0xefxf0xf0xf0xf0xf0xf1xf0xf1xf0xf2xf0xf2xf0xf3xf0xf3xf0xf4xf0xf4xf0xa6xe4xa6xe4xa8xe4xa8xe4xaaxe4xaaxe4xacxe4xacxe4xaexe4xaexe4xb0xe4xb0xe4xb2xe4xb2xe4xb4xe4xb4xe4xb6xe4xb6xe4xb9xe4xb9xe4xbbxe4xbbxe4xbdxe4xbdxe4xbfxe4xbfxe4xc1xe4xc1xe4xc3xe4xc3xe4xc5xe4xc5xe4xc7xe4xc7xe4xc9xe4xc9xe4xcbxe4xcbxe4xcdxe4xcdxe4xcfxe4xcfxe4xd2xe4xd2xe4xd4xe4xd4xe4xd6xe4xd6xe4xd8xe4xd8xe4xdaxe4xdaxe4xdcxe4xdcxe4xdexe4xdexe4xe0xe4xe0xe4xe2xe4xe2xe4xe4xe4xe4xe4xe6xe4xe6xe4xe8xe4xe8xe4xeaxe4xeaxe4xedxe4xedxe4xefxe4xefxe4xf1xe4xf1xe4xf3xe4xf3xe4xb7x05xb7x05d\nd\nc\nc\nb\nb\nb\nb\na\na\n`\n`\n_\n_\n^\n^\n^\n^\n]\n]\n\\\n\\\n[\n[\nZ\nZ\nZ\nZ\nY\nY\nX\nX\nW\nW\nV\nV\nV\nV\nU\nU\nT\nT\nS\nS\nR\nR\nR\nR\nQ\nQ\nP\nP\nO\nO\nO\nO\nN\nN\nM\nM\nL\nL\nK\nK\nK\nK\nJ\nJ\nI\nI\nH\nH\nG\nG\nG\nG\nF\nF\nE\nE\nD\nD\nrx0brx0bxb5x13xb5x13xb4x13xb4x13xb2x13xb2x13xb1x13xb1x13xafx13xafx13xaex13xaex13xacx13xacx13xabx13xabx13xa9x13xa9x13xa8x13xa8x13xa6x13xa6x13xa5x13xa5x13xa3x13xa3x13xa2x13xa2x13xa0x13xa0x13x9fx13x9fx13x9dx13x9dx13x9cx13x9cx13x9ax13x9ax13x99x13x99x13x97x13x97x13x96x13x96x13x94x13x94x13x93x13x93x13x91x13x91x13x90x13x90x13x8ex13x8ex13x8dx13x8dx13x8bx13x8bx13x8ax13x8ax13x88x13x88x13x87x13x87x13x85x13x85x13x84x13x84x13x82x13x82x13x80x13x80x13x7fx13x7fx13}x13}x13|x13|x13zx13zx13yx13yx13xx13xx13vx13vx13ux13ux13sx13sx13rx13rx13px13px13ox13ox13mx13mx13x0bxe5x0bxe5mxdemxdepxdepxdesxdesxdeuxdeuxdexxdexxdezxdezxde}xde}xdex80xdex80xdex82xdex82xdex85xdex85xdex87xdex87xdex8axdex8axdex8cxdex8cxdex8fxdex8fxdex92xdex92xdex94xdex94xdex97xdex97xdex99xdex99xdex9cxdex9cxdex9exdex9exdexa1xdexa1xdexa4xdexa4xdexa6xdexa6xdexa9xdexa9xdexabxdexabxdexaexdexaexdexb0xdexb0xdexb3xdexb3xdexb6xdexb6xdexb8xdexb8xdexbbxdexbbxdexbdxdexbdxdexc0xdexc0xdexc2xdexc2xdexc5xdexc5xdexc8xdexc8xdexcaxdexcaxdexcdxdexcdxdexcfxdexcfxdexd2xdexd2xdexd4xdexd4xdexd7xdexd7xdexdaxdexdaxdexdcxdexdcxdexdfxdexdfxdexe1xdexe1xdexe4xdexe4xdexe6xdexe6xdexe9xdexe9xdexecxdexecxdexeexdexeexdexf1xdexf1xdexf3xdexf3xdexf6xdexf6xdexf8xdexf8xdexfbxdexfbxdexfdxdexfdxdex16xe2x16xe2-xe5-xe50xe50xe52xe52xe54xe54xe56xe56xe58xe58xe5:xe5:xe5&lt;xe5&lt;xe5&gt;xe5&gt;xe5@xe5@xe5Bxe5Bxe5Dxe5Dxe5Fxe5Fxe5Hxe5Hxe5Jxe5Jxe5Mxe5Mxe5Oxe5Oxe5Qxe5Qxe5Sxe5Sxe5Uxe5Uxe5Wxe5Wxe5Yxe5Yxe5[xe5[xe5]xe5]xe5_xe5_xe5axe5axe5cxe5cxe5exe5exe5gxe5gxe5ixe5ixe5kxe5kxe5nxe5nxe5pxe5pxe5rxe5rxe5txe5txe5vxe5vxe5xxe5xxe5zxe5zxe5|xe5|xe5~xe5~xe5x80xe5x80xe5x82xe5x82xe5x84xe5x84xe5x86xe5x86xe5x88xe5x88xe5x8axe5x8axe5x8cxe5x8cxe5x8exe5x8exe5x91xe5x91xe5x93xe5x93xe5x95xe5x95xe5x97xe5x97xe5x99xe5x99xe5x9bxe5x9bxe5x9dxe5x9dxe5x9fxe5x9fxe5xa1xe5xa1xe5xa3xe5xa3xe5xa5xe5xa5xe5xa7xe5xa7xe5xa9xe5xa9xe5xabxe5xabxe5xadxe5xadxe5xafxe5xafxe5xb1xe5xb1xe5xb3xe5xb3xe5xb5xe5xb5xe5xb7xe5xb7xe5xb9xe5xb9xe5xbbxe5xbbxe5xbexe5xbexe5xc0xe5xc0xe5xc2xe5xc2xe5x8exfbx8exfbWx11Wx11Vx11Vx11Tx11Tx11Sx11Sx11Rx11Rx11Px11Px11Ox11Ox11Nx11Nx11Lx11Lx11Kx11Kx11Jx11Jx11Hx11Hx11Gx11Gx11Fx11Fx11Dx11Dx11Cx11Cx11Bx11Bx11@x11@x11?x11?x11&gt;x11&gt;x11&lt;x11&lt;x11;x11;x11:x11:x118x118x117x117x116x116x114x114x113x113x112x112x110x110x11/x11/x11.x11.x11,x11,x11+x11+x11*x11*x11(x11(x11&#39;x11&#39;x11&amp;x11&amp;x11$x11$x11#x11#x11&quot;x11&quot;x11 x11 x11x1fx11x1fx11x1ex11x1ex11x1cx11x1cx11x1bx11x1bx11x1ax11x1ax11x18x11x18x11x17x11x17x11x16x11x16x11x14x11x14x11x13x11x13x11x12x11x12x11x10x11x10x11x0fx11x0fx11x0ex11x0ex11x0cx11x0cx11x0bx11x0bx11\nx11\nx11x08x11x08x11x07x11x07x11x06x11x06x11x04x11x04x11x03x11x03x11x02x11x02x11x00x11x00x11xffx10xffx10xfex10xfex10xfcx10xfcx10xfbx10xfbx10xfax10xfax10xf8x10xf8x10xf7x10xf7x10xf6x10xf6x10xf4x10xf4x10xf3x10xf3x10xf2x10xf2x10xf0x10xf0x10xefx10xefx10xeex10xeex10xecx10xecx10xebx10xebx10xeax10xeax10xe8x10xe8x10xe7x10xe7x10xe6x10xe6x10xe4x10xe4x10xe3x10xe3x10xe2x10xe2x10xe0x10xe0x10xdfx10xdfx10xdex10xdex10xdcx10xdcx10xdbx10xdbx10xdax10xdax10xd9x10xd9x10xd7x10xd7x10xd6x10xd6x10xd5x10xd5x10xd3x10xd3x10xd2x10xd2x10xd1x10xd1x10xcfx10xcfx10xcex10xcex10xcdx10xcdx10xcbx10xcbx10xcax10xcax10xc9x10xc9x10- - + + ( ( &amp; &amp; # # ! ! x1e x1e x1c x1c x19 x19 x17 x17 x14 x14 x12 x12 x0f x0f   \n \n x08 x08 x05 x05 x03 x03 x00 x00 xfex1fxfex1fxfbx1fxfbx1fxf9x1fxf9x1fxf6x1fxf6x1fxf4x1fxf4x1fxf1x1fxf1x1fxefx1fxefx1fxecx1fxecx1fxeax1fxeax1f8xe68xe6:xe6:xe6&lt;xe6&lt;xe6&gt;xe6&gt;xe6@xe6@xe6Bxe6Bxe6Dxe6Dxe6Fxe6Fxe6Hxe6Hxe6Jxe6Jxe6Lxe6Lxe6Nxe6Nxe6Pxe6Pxe6Rxe6Rxe6Txe6Txe6Vxe6Vxe6Xxe6Xxe6Zxe6Zxe6\\xe6\\xe6^xe6^xe6`xe6`xe6bxe6bxe6xa6!xa6!xa3!xa3!xa1!xa1!x9e!x9e!x9b!x9b!x99!x99!x96!x96!x93!x93!x91!x91!x8e!x8e!x8b!x8b!x89!x89!x86!x86!x84!x84!x81!x81!xad	xad	xfexe1xfexe1x00xe2x00xe2x03xe2x03xe2x05xe2x05xe2x07xe2x07xe2\nxe2\nxe2x0cxe2x0cxe2x0fxe2x0fxe2x11xe2x11xe2x13xe2x13xe2x16xe2x16xe2x18xe2x18xe2x1axe2x1axe2x1dxe2x1dxe2x1fxe2x1fxe2!xe2!xe2$xe2$xe2&quot;\n&quot;\nxd7x0fxd7x0fxd6x0fxd6x0fxd5x0fxd5x0fxd4x0fxd4x0fxd2x0fxd2x0fxd1x0fxd1x0fxd0x0fxd0x0fxcfx0fxcfx0fxcdx0fxcdx0fxccx0fxccx0fxcbx0fxcbx0fxcax0fxcax0fxc8x0fxc8x0fxc7x0fxc7x0fxc6x0fxc6x0fxc5x0fxc5x0fxc3x0fxc3x0fjx07jx07cxeecxeeexeeexeefxeefxeehxeehxeeixeeixeejxeejxeelxeelxeemxeemxeenxeenxeepxeepxeeqxeeqxeesxeesxeetxeetxeeuxeeuxeewxeewxeexxeexxeezxeezxee{xee{xeeOxebOxebxc8xe1xc8xe1xcaxe1xcaxe1xcdxe1xcdxe1xcfxe1xcfxe1xd2xe1xd2xe1xd4xe1xd4xe1xd6xe1xd6xe1xd9xe1xd9xe1xdbxe1xdbxe1xddxe1xddxe1xe0xe1xe0xe1xe2xe1xe2xe1xe5xe1xe5xe1xe7xe1xe7xe1xe9xe1xe9xe1xecxe1xecxe1xeexe1xeexe1xf0xe1xf0xe1xf3xe1xf3xe1xfaxe8xfaxe81xed1xed3xed3xed4xed4xed6xed6xed7xed7xed9xed9xed:xed:xed&lt;xed&lt;xed=xed=xed?xed?xed@xed@xedBxedBxedCxedCxedExedExedFxedFxedHxedHxedIxedIxedKxedKxedLxedLxedMxedMxedU U R R P P M M K K H H F F C C @ @ &gt; &gt; ; ; 9 9 6 6 4 4 1 1 / / , , ) ) &#39; &#39; $ $ &quot; &quot; xcax00xcax00wxe1wxe1zxe1zxe1|xe1|xe1x7fxe1x7fxe1x81xe1x81xe1x84xe1x84xe1x86xe1x86xe1x88xe1x88xe1x8bxe1x8bxe1x8dxe1x8dxe1x90xe1x90xe1x92xe1x92xe1x94xe1x94xe1x97xe1x97xe1x99xe1x99xe1x9cxe1x9cxe1x9exe1x9exe1xa1xe1xa1xe1xa3xe1xa3xe1xa5xe1xa5xe1xa8xe1xa8xe1xaaxe1xaaxe1x81xe6x81xe6x83xe6x83xe6x85xe6x85xe6x87xe6x87xe6x89xe6x89xe6x8bxe6x8bxe6x8dxe6x8dxe6x8fxe6x8fxe6x91xe6x91xe6x93xe6x93xe6x95xe6x95xe6x97xe6x97xe6x99xe6x99xe6x9bxe6x9bxe6x9dxe6x9dxe6x9fxe6x9fxe6xa1xe6xa1xe6xa3xe6xa3xe6xa6xe6xa6xe6xa8xe6xa8xe6xaaxe6xaaxe6xacxe6xacxe6xaexe6xaexe6xe3xf8xe3xf86x176x174x174x172x172x170x170x17/x17/x17-x17-x17+x17+x17)x17)x17&#39;x17&#39;x17%x17%x17#x17#x17&quot;x17&quot;x17 x17 x17x1ex17x1ex17x1cx17x1cx17x1ax17x1ax17x18x17x18x17x17x17x17x17x15x17x15x17x13x17x13x17x11x17x11x17x0fx17x0fx17x17x17x0bx17x0bx17x99x06x99x06xbbxfcxbbxfcxbbxfcxbbxfcxbcxfcxbcxfcxbcxfcxbcxfcxbcxfcxbcxfcxbcxfcxbcxfcxbdxfcxbdxfcxbdxfcxbdxfcxbdxfcxbdxfcxbexfcxbexfcxbexfcxbexfcxbexfcxbexfcxbexfcxbexfcxbfxfcxbfxfcxbfxfcxbfxfcxbfxfcxbfxfcxbfxfcxbfxfcxc0xfcxc0xfcxc0x","0"),
("1212","pygame.mixer.Channel.play","","","0"),
("1213","pygame.mixer.Channel.stop","","","0"),
("1214","pygame.mixer.Channel.pause","","","0"),
("1215","pygame.mixer.Channel.unpause","","","0"),
("1216","pygame.mixer.Channel.fadeout","","","0"),
("1217","pygame.mixer.Channel.set_volume","","","0"),
("1218","pygame.mixer.Channel.get_volume","","","0"),
("1219","pygame.mixer.Channel.get_busy","","","0"),
("1220","pygame.mixer.Channel.get_sound","","","0"),
("1221","pygame.mixer.Channel.queue","","","0"),
("1222","pygame.mixer.Channel.get_queue","","","0"),
("1223","pygame.mixer.Channel.set_endevent","","","0"),
("1224","pygame.mixer.Channel.get_endevent","","","0"),
("1226","Recruting materials ","","","0"),
("1227","pygame.mixer.music.load","","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1228","pygame.mixer.music.play","","<p>import pygame, os</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0");
INSERT INTO function VALUES
("1229","pygame.mixer.music.rewind","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>time.sleep(3)<br />\npygame.mixer.music.rewind()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1230","pygame.mixer.music.stop","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>time.sleep(3)<br />\npygame.mixer.music.stop()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","","0"),
("1231","pygame.mixer.music.pause","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>time.sleep(3)<br />\npygame.mixer.music.pause()<br />\ntime.sleep(3)<br />\npygame.mixer.music.unpause()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1232","pygame.mixer.music.unpause","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.</p>\n\n<p>time.sleep(3)<br />\npygame.mixer.music.pause()<br />\ntime.sleep(3)<br />\npygame.mixer.music.unpause()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1233","pygame.mixer.music.fadeout","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\npygame.mixer.music.fadeout(5000) # It makes miusic quieter at the end</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1234","pygame.mixer.music.set_volume","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\npygame.mixer.music.set_volume(0.5)<br />\nprint(pygame.mixer.music.get_volume()) # 0.5</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1235","pygame.mixer.music.get_volume","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\nprint(pygame.mixer.music.get_volume()) # 0.9921875</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1236","pygame.mixer.music.get_busy","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;Carny_s_Dance.mp3&quot;)<br />\npygame.mixer.music.play(-1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\nprint(pygame.mixer.music.get_busy()) # 1</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1237","pygame.mixer.music.set_pos","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;counting.mp3&quot;)<br />\npygame.mixer.music.play(1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\npygame.mixer.music.set_pos(30)&nbsp;</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1238","pygame.mixer.music.get_pos","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>miusic = pygame.mixer.music.load(&quot;counting.mp3&quot;)<br />\npygame.mixer.music.play(1) # The -1 signals PyGame to just play forever, but, if you put, say, a 5 in there, then the music would play once and 5 more times.<br />\ntime.sleep(3)<br />\nprint(pygame.mixer.music.get_pos()) # 3046</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1239","pygame.mixer.music.queue","","","0"),
("1240","pygame.mixer.music.set_endevent","","","0"),
("1241","pygame.mixer.music.get_endevent","","","0"),
("1242","pygame.Color.r","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.r) # 255</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1243","pygame.Color.g","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>color.g = 255<br />\nprint(color.g) # 255</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1244","pygame.Color.b","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.b) # 0</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1245","pygame.Color.a","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.a) # 255</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1246","pygame.Color.cmy","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.cmy) # (0.0, 1.0, 1.0)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1247","pygame.Color.hsva","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.hsva) # (0.0, 100.0, 100.0, 100.0)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","","0"),
("1248","pygame.Color.hsla","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.hsla) # (0.0, 100.0, 50.0, 100.0)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1249","pygame.Color.i1i2i3","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.i1i2i3) # (0.3333333333333333, 0.5, -0.25)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1250","pygame.Color.normalize","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.normalize) # &lt;built-in method normalize of pygame.Color object at 0x02B72D40&gt;</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1251","pygame.Color.correct_gamma","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(color.correct_gamma) # &lt;built-in method correct_gamma of pygame.Color object at 0x02F52D40&gt;</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1252","pygame.Color.set_length","","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\n# Color(name) -&gt; Color<br />\n# Color(r, g, b, a) -&gt; Color<br />\n# Color(rgbvalue) -&gt; Color</p>\n\n<p>print(len(color)) # 4<br />\ncolor.set_length(3)<br />\nprint(len(color)) # 3</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1253","pygame.draw.rect","<p>Draws a rectangular shape on the Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/rect.jpg\" style=\"height:633px; width:800px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.rect(gameDisplay, color, ((10,10),(20,20))) # (screen, color, (x,y,width,height), thickness)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1254","pygame.draw.polygon","<p>Draws a polygonal shape on the Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/polygon.jpg\" style=\"height:634px; width:802px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.polygon(gameDisplay, color, [[100, 100], [100, 400],[400, 300],[600, 600]])</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1255","pygame.draw.circle","<p>Draws a circular shape on the Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/circle.jpg\" style=\"height:635px; width:802px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.circle(gameDisplay, color, [100, 100], 50, 10)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1256","pygame.draw.ellipse","<p>Draws an elliptical shape on the Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/ellipse.jpg\" style=\"height:635px; width:798px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.ellipse(gameDisplay, color, ((100, 100),(200, 200)))&nbsp;</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1257","pygame.draw.arc","<p>Draws an elliptical arc on the Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/arc.jpg\" style=\"height:635px; width:798px\" /></p>\n","<p>import pygame, os, time, math</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.arc(gameDisplay, color, (100,100,250,200), math.pi/2, math.pi, 2)&nbsp;</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1258","pygame.draw.line","<p>Draw a straight line segment on a Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/line.jpg\" style=\"height:631px; width:798px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.line(gameDisplay, color, &nbsp;[10, 10], [90, 90])&nbsp;</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1259","pygame.draw.lines","<p>Draw a sequence of lines on a Surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/lines.jpg\" style=\"height:632px; width:794px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.lines(gameDisplay, color, True, ((10, 10), (10, 200), (200, 200)))</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1260","pygame.draw.aaline","<p>Draws an anti-aliased line on a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/aaline.jpg\" style=\"height:630px; width:795px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.aaline(gameDisplay, color, (639, 0), (0, 479))</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1261","pygame.draw.aalines","<p>Draws a sequence on a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.draw/aalines.jpg\" style=\"height:630px; width:797px\" /></p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.draw.aalines(gameDisplay, color, True, ((10, 10), (10, 200), (200, 200)))</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1262","Abby Fine Reader","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Windows/Database/Abby.jpg\" style=\"height:416px; width:800px\" /></p>\n","","0"),
("1263","Working Experiance","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Fake_documents/modszy_operator_maszyn_cnc_i_konwencjonalnych.jpg\" style=\"height:1024px; width:744px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Fake_documents/operator_wozka_widowego.jpg\" style=\"height:1024px; width:744px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Fake_documents/werhaus_worker.jpg\" style=\"height:1024px; width:745px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Fake_documents/general_operative.jpg\" style=\"height:1024px; width:761px\" /></p>\n","","0"),
("1264","pygame.display.init","<p>Initializes the pygame display module. The display module cannot do anything until it is initialized. <u><em>This is usually handled for you automatically when you call the higher level&nbsp;<code>pygame.init()</code>.</em></u></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1265","pygame.display.quit","<p>This will shut down the entire display module. This means any active displays will be closed. This will also be handled automatically when the program exits</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1266","pygame.display.get_init","<p>Returns True if the&nbsp;<a href=\"https://www.pygame.org/docs/ref/display.html#module-pygame.display\" title=\"\"><code>pygame.display</code></a>&nbsp;module is currently initialized</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()<br />\ncrashed = False<br />\nprint(pygame.display.get_init()) # 1<br />\nwhile not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1267","pygame.display.set_mode","<p>Initialize a window or screen for display</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()<br />\ncrashed = False<br />\nprint(pygame.display.get_init()) # 1<br />\nwhile not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1268","pygame.display.get_surface","","","0"),
("1269","pygame.display.flip","<p>This will update the contents of the entire display</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.flip()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1270","pygame.display.update","<p>This function is like an optimized version of&nbsp;<code>pygame.display.flip()</code>&nbsp;for software displays. It allows only a portion of the screen to updated, instead of the entire area. If no argument is passed it updates the entire Surface area like&nbsp;<code>pygame.display.flip()</code>.</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1271","pygame.display.get_driver","<p>Pygame chooses one of many available display backends when it is initialized. This returns the internal name used for the display backend</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>print(pygame.display.get_driver()) # windib</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1272","pygame.display.Info","<p>Creates a simple object containing several attributes to describe the current graphics environment</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>print(pygame.display.Info())</p>\n\n<p># &lt;VideoInfo(hw = 0, wm = 1,video_mem = 0<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;blit_hw = 0, blit_hw_CC = 0, blit_hw_A = 0,<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;blit_sw = 0, blit_sw_CC = 0, blit_sw_A = 0,<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bitsize &nbsp;= 32, bytesize = 4,<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;masks = &nbsp;(16711680, 65280, 255, 0),<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;shifts = (16, 8, 0, 0),<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;losses = &nbsp;(0, 0, 0, 8),<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;current_w = 800, current_h = 600<br />\n# &gt;</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1273","pygame.display.get_wm_info","<p>Creates a dictionary filled with string keys</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>print(pygame.display.get_wm_info())</p>\n\n<p># {&#39;window&#39;: 5244434, &#39;hglrc&#39;: 0}</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1274","pygame.display.list_modes","<p>Get list of available fullscreen modes</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>print(pygame.display.list_modes())</p>\n\n<p># [(1920, 1080), (1680, 1050), (1600, 900), (1440, 900), (1440, 576), (1440, 480), (1400, 1050), (1366, 768), (1360, 768), (1280, 1024), (1280, 960), (1280, 800), (1280, 768), (1280, 720), (1280, 600), (1152, 864), (1024, 768), (800, 600), (720, 576), (720, 480), (640, 480)]</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1275","pygame.display.mode_ok","","","0"),
("1276","pygame.display.gl_get_attribute","<p>Get the value for an OpenGL flag for the current display</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>print(pygame.display.gl_get_attribute(pygame.GL_ALPHA_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_DEPTH_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_STENCIL_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_ACCUM_RED_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_ACCUM_GREEN_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_ACCUM_BLUE_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_ACCUM_ALPHA_SIZE)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_MULTISAMPLEBUFFERS)) # 0<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_MULTISAMPLESAMPLES)) # 1<br />\nprint(pygame.display.gl_get_attribute(pygame.GL_STEREO)) # 0</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1277","pygame.display.gl_set_attribute","","","0"),
("1278","pygame.display.get_active","<p>Returns True when the display is active on the display</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; print(pygame.display.get_active()) # 0 or 1<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1279","pygame.display.iconify","<p>Request the window for the display surface be iconified or hidden. Not all systems and displays support an iconified display</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\nprint(pygame.display.iconify()) # it will minimalize window and return 1 if sucesfull<br />\npygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1280","pygame.display.toggle_fullscreen","<p>Switch between fullscreen and windowed displays</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\nprint(pygame.display.toggle_fullscreen()) # it will minimalize window and return 1 if sucesfull<br />\npygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1281","pygame.display.set_gamma","","","0"),
("1282","pygame.display.set_gamma_ramp","","","0"),
("1283","pygame.display.set_icon","<p>Change the system image for the display window</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.display/set_icon.jpg\" style=\"height:634px; width:796px\" /></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>icon = pygame.image.load(&quot;image_capture.png&quot;)<br />\npygame.display.set_icon(icon)</p>\n\n<p>print(pygame.display.get_caption()) # (&#39;A bit Racey&#39;, &#39;A bit Racey&#39;)</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1284","pygame.display.set_caption","<p>Set the current window caption</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>icon = pygame.image.load(&quot;image_capture.png&quot;)<br />\npygame.display.set_icon(icon)</p>\n\n<p>print(pygame.display.get_caption()) # (&#39;A bit Racey&#39;, &#39;A bit Racey&#39;)</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1285","pygame.display.get_caption","<p>Get the current window caption</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>icon = pygame.image.load(&quot;image_capture.png&quot;)<br />\npygame.display.set_icon(icon)</p>\n\n<p>print(pygame.display.get_caption()) # (&#39;A bit Racey&#39;, &#39;A bit Racey&#39;)</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()<br />\ncrashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1286","pygame.display.set_palette","","","0"),
("1287","pygame.BufferProxy.parent","","","0"),
("1288","pygame.BufferProxy.length","","","0"),
("1289","pygame.BufferProxy.raw","","","0"),
("1290","pygame.BufferProxy.write","","","0"),
("1291","pygame.cursors.compile","","","0"),
("1292","pygame.cursors.load_xbm","<p>This loads cursors for a simple subset of&nbsp;<code>XBM</code>&nbsp;files.&nbsp;<code>XBM</code>&nbsp;files are traditionally used to store cursors on UNIX systems, they are an ASCII format used to represent simple images.</p>\n\n<p>Sometimes the black and white color values will be split into two separate&nbsp;<code>XBM</code>&nbsp;files. You can pass a second maskfile argument to load the two images into a single cursor</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1293","pygame.event.pump","","","0"),
("1294","pygame.event.get","<p>Get events from the queue</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.event/event.get.jpg\" style=\"height:800px; width:800px\" /></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(event)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1295","pygame.event.poll","<p>To get only one event each time use pygame.event.poll(). In game it is often used because it will return NOEVENT if there is non.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.event/pygame.event.poll.jpg\" style=\"height:884px; width:1071px\" /></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; print(pygame.event.poll())<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1296","pygame.event.wait","<p>This routine will wait for evens if queue is empty</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.event/event.wait.jpg\" style=\"height:852px; width:1069px\" /></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; print(pygame.event.wait())<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1297","pygame.event.peek","<p>Returns true if there are any events of the given type waiting on the queue</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; if pygame.event.peek(pygame.QUIT):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1298","pygame.event.clear","","","0"),
("1299","pygame.event.event_name","<p>This will return a the simple name for an event type. The string is in the WordCap style</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>print(pygame.event.event_name(pygame.QUIT)) # Quit</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1300","pygame.event.set_blocked","<p>Control which events are allowed on the queue</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>pygame.event.set_blocked(pygame.QUIT)</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1301","pygame.event.set_allowed","","","0"),
("1302","pygame.event.get_blocked","<p>Test if a type of event is blocked from the queue</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>pygame.event.set_blocked(pygame.QUIT)<br />\nprint(pygame.event.get_blocked(pygame.QUIT)) # 1<br />\nwhile not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1303","pygame.event.set_grab","<p>When your program runs in a windowed environment, it will share the mouse and keyboard devices with other applications that have focus. If your program sets the event grab to True, it will lock all input into your program.</p>\n\n<p>It is best to not always grab the input, since it prevents the user from doing other things on their system.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.event/set_grab.jpg\" style=\"height:401px; width:800px\" /></p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>pygame.event.set_grab(1)</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1304","pygame.event.get_grab","<p>Returns true when the input events are grabbed for this application. Use&nbsp;<code>pygame.event.set_grab()</code>&nbsp;to control this state</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>pygame.event.set_grab(1)<br />\nprint(pygame.event.get_grab()) # 1<br />\nwhile not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1305","pygame.event.post","","","0"),
("1306","pygame.event.Event","","","0"),
("1307","pygame.event.EventType","<p>Read only. Predefined event identifiers are&nbsp;<cite>QUIT</cite>&nbsp;and&nbsp;<cite>MOUSEMOTION</cite>, for example</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>a, b, c, d = pygame.cursors.load_xbm(&quot;standardcursor.xbm&quot;,&quot;standardcursor_mask.xbm&quot;)<br />\npygame.mouse.set_cursor(a, b, c, d)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>pygame.event.set_grab(1)<br />\nprint(pygame.event.get_grab()) # 1<br />\nwhile not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1308","pygame.font.init","<p>This method is called automatically by&nbsp;<code>pygame.init()</code>. It initializes the font module. The module must be initialized before any other functions will work.</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.font.init()<br />\nprint(pygame.font.get_init()) # 1</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.font.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1309","pygame.font.quit","<p>Manually uninitialize SDL_ttf&rsquo;s font system. This is called automatically by&nbsp;<code>pygame.quit()</code>.</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.font.init()<br />\nprint(pygame.font.get_init()) # 1</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.font.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1310","pygame.font.get_init","<p>Test if the font module is initialized or not</p>\n","<pre>\nimport pygame, os, time\npygame.display.init()\ngameDisplay = pygame.display.set_mode((800,600))\npygame.display.set_caption(&#39;A bit Racey&#39;)\nclock = pygame.time.Clock()\n\n# Make sure that file directory is &bdquo;current working directory&rdquo;\ndir_path = os.path.dirname(os.path.realpath(__file__))\nos.chdir(dir_path)\n\npygame.init()\n\npygame.font.init()\nprint(pygame.font.get_init()) # 1\n\n\ncrashed = False\n\nwhile not crashed:\n&nbsp; &nbsp; for event in pygame.event.get():\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True\n\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()\n&nbsp; &nbsp; clock.tick(60)\n\npygame.display.quit()\npygame.font.quit()\npygame.quit()\nquit()\n</pre>\n","0"),
("1311","pygame.font.get_default_font","<p>Return the filename of the system font</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.font.init()<br />\nprint(pygame.font.get_default_font()) # freesansbold.ttf</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.font.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1312","pygame.font.get_fonts","<p>Returns a list of all the fonts available on the system</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.font.init()</p>\n\n<p>for x in pygame.font.get_fonts():<br />\n&nbsp; &nbsp; print(&quot;# &quot; + x)</p>\n\n<p># arial<br />\n# arialblack<br />\n# calibri<br />\n# cambriacambriamath<br />\n# cambria<br />\n# candara<br />\n# comicsansms<br />\n# consolas<br />\n# constantia<br />\n# corbel<br />\n# couriernew<br />\n# ebrima<br />\n# franklingothicmedium<br />\n# gabriola<br />\n# gadugi<br />\n# georgia<br />\n# impact<br />\n# javanesetext<br />\n# leelawadeeui<br />\n# leelawadeeuisemilight<br />\n# lucidaconsole<br />\n# lucidasans<br />\n# malgungothic<br />\n# malgungothicsemilight<br />\n# microsofthimalaya<br />\n# microsoftjhengheimicrosoftjhengheiui<br />\n# microsoftjhengheimicrosoftjhengheiuibold<br />\n# microsoftjhengheimicrosoftjhengheiuilight<br />\n# microsoftnewtailue<br />\n# microsoftphagspa<br />\n# microsoftsansserif<br />\n# microsofttaile<br />\n# microsoftyaheimicrosoftyaheiui<br />\n# microsoftyaheimicrosoftyaheiuibold<br />\n# microsoftyaheimicrosoftyaheiuilight<br />\n# microsoftyibaiti<br />\n# mingliuextbpmingliuextbmingliuhkscsextb<br />\n# mongolianbaiti<br />\n# msgothicmsuigothicmspgothic<br />\n# mvboli<br />\n# myanmartext<br />\n# nirmalaui<br />\n# nirmalauisemilight<br />\n# palatinolinotype<br />\n# segoemdl2assets<br />\n# segoeprint<br />\n# segoescript<br />\n# segoeui<br />\n# segoeuiblack<br />\n# segoeuiemoji<br />\n# segoeuihistoric<br />\n# segoeuisemibold<br />\n# segoeuisemilight<br />\n# segoeuisymbol<br />\n# simsunnsimsun<br />\n# simsunextb<br />\n# sitkasmallsitkatextsitkasubheadingsitkaheadingsitkadisplaysitkabanner<br />\n# sitkasmallsitkatextboldsitkasubheadingboldsitkaheadingboldsitkadisplayboldsitkabannerbold<br />\n# sitkasmallsitkatextbolditalicsitkasubheadingbolditalicsitkaheadingbolditalicsitkadisplaybolditalicsitkabannerbolditalic<br />\n# sitkasmallsitkatextitalicsitkasubheadingitalicsitkaheadingitalicsitkadisplayitalicsitkabanneritalic<br />\n# sylfaen<br />\n# symbol<br />\n# tahoma<br />\n# timesnewroman<br />\n# trebuchetms<br />\n# verdana<br />\n# webdings<br />\n# wingdings<br />\n# yugothicyugothicuisemiboldyugothicuibold<br />\n# yugothicyugothicuilight<br />\n# yugothicmediumyugothicuiregular<br />\n# yugothicregularyugothicuisemilight<br />\n# arialms<br />\n# century<br />\n# wingdings2<br />\n# wingdings3<br />\n# baskervilleoldface<br />\n# bell<br />\n# berlinsansfb<br />\n# bernardcondensed<br />\n# bodonipostercompressed<br />\n# britannic<br />\n# broadway<br />\n# brushscript<br />\n# californianfb<br />\n# centaur<br />\n# centurygothic<br />\n# chiller<br />\n# colonna<br />\n# cooperblack<br />\n# footlight<br />\n# freestylescript<br />\n# harrington<br />\n# hightowertext<br />\n# jokerman<br />\n# juiceitc<br />\n# kristenitc<br />\n# kunstlerscript<br />\n# lucidabright<br />\n# lucidacalligraphy<br />\n# lucidafaxregular<br />\n# lucidahandwriting<br />\n# magneto<br />\n# maturascriptcapitals<br />\n# mistral<br />\n# modernno20<br />\n# monotypecorsiva<br />\n# niagaraengraved<br />\n# niagarasolid<br />\n# oldenglishtext<br />\n# onyx<br />\n# parchment<br />\n# playbill<br />\n# poorrichard<br />\n# ravie<br />\n# informalroman<br />\n# showcardgothic<br />\n# snapitc<br />\n# stencil<br />\n# tempussansitc<br />\n# vinerhanditc<br />\n# vladimirscript<br />\n# widelatin<br />\n# twcen<br />\n# twcencondensed<br />\n# script<br />\n# rockwellextra<br />\n# rockwellcondensed<br />\n# rockwell<br />\n# rage<br />\n# pristina<br />\n# perpetuatitling<br />\n# perpetua<br />\n# papyrus<br />\n# palacescript<br />\n# ocraextended<br />\n# maiandragd<br />\n# lucidasanstypewriterregular<br />\n# lucidasansregular<br />\n# imprintshadow<br />\n# haettenschweiler<br />\n# goudystout<br />\n# goudyoldstyle<br />\n# gloucesterextracondensed<br />\n# gillsansultracondensed<br />\n# gillsansultra<br />\n# gillsanscondensed<br />\n# gillsans<br />\n# gillsansextcondensed<br />\n# gigi<br />\n# garamond<br />\n# frenchscript<br />\n# franklingothicmediumcond<br />\n# franklingothicheavy<br />\n# franklingothicdemicond<br />\n# franklingothicdemi<br />\n# franklingothicbook<br />\n# forte<br />\n# felixtitling<br />\n# erasmediumitc<br />\n# erasitc<br />\n# erasdemiitc<br />\n# engravers<br />\n# elephant<br />\n# edwardianscriptitc<br />\n# curlz<br />\n# copperplategothic<br />\n# centuryschoolbook<br />\n# castellar<br />\n# calisto<br />\n# bradleyhanditc<br />\n# bookmanoldstyle<br />\n# bookantiqua<br />\n# bodonicondensed<br />\n# bodoniblack<br />\n# bodoni<br />\n# blackadderitc<br />\n# arialrounded<br />\n# agencyfb<br />\n# berlinsansfbdemi<br />\n# lucidafax<br />\n# twcencondensedextra<br />\n# lucidasanstypewriter<br />\n# lucidasanstypewriteroblique<br />\n# lucidasansroman<br />\n# acaslonproboldopentype<br />\n# acaslonprobolditalicopentype<br />\n# acaslonproitalicopentype<br />\n# acaslonproregularopentype<br />\n# acaslonprosemiboldopentype<br />\n# acaslonprosemibolditalicopentype<br />\n# adobefangsongstdregularopentype<br />\n# adobefanheitistdboldopentype<br />\n# adobegothicstdboldopentype<br />\n# adobeheitistdregularopentype<br />\n# adobekaitistdregularopentype<br />\n# adobenaskhmediumopentype<br />\n# agaramondproboldopentype<br />\n# agaramondprobolditalicopentype<br />\n# agaramondproitalicopentype<br />\n# agaramondproregularopentype<br />\n# birchstdopentype<br />\n# blackoakstdopentype<br />\n# brushscriptstdopentype<br />\n# chaparralproboldopentype<br />\n# chaparralprobolditopentype<br />\n# chaparralproitalicopentype<br />\n# chaparralprolightitopentype<br />\n# chaparralproregularopentype<br />\n# charlemagnestdboldopentype<br />\n# cooperblackstditalicopentype<br />\n# cooperblackstdopentype<br />\n# giddyupstdopentype<br />\n# hobostdopentype<br />\n# kozgoproboldopentype<br />\n# kozgoproextralightopentype<br />\n# kozgoproheavyopentype<br />\n# kozgoprolightopentype<br />\n# kozgopromediumopentype<br />\n# kozgoproregularopentype<br />\n# kozminproboldopentype<br />\n# kozminproextralightopentype<br />\n# kozminproheavyopentype<br />\n# kozminprolightopentype<br />\n# kozminpromediumopentype<br />\n# kozminproregularopentype<br />\n# lithosproblackopentype<br />\n# lithosproregularopentype<br />\n# mesquitestdopentype<br />\n# minionproboldcnopentype<br />\n# minionproboldcnitopentype<br />\n# minionpromediumopentype<br />\n# minionpromediumitopentype<br />\n# minionprosemiboldopentype<br />\n# minionprosemibolditopentype<br />\n# myriadarabicopentype<br />\n# nuevastdboldopentype<br />\n# nuevastdboldcondopentype<br />\n# nuevastdboldconditalicopentype<br />\n# nuevastdcondopentype<br />\n# nuevastdconditalicopentype<br />\n# nuevastditalicopentype<br />\n# ocrastdopentype<br />\n# oratorstdslantedopentype<br />\n# oratorstdopentype<br />\n# poplarstdopentype<br />\n# prestigeelitestdbdopentype<br />\n# rosewoodstdregularopentype<br />\n# stencilstdopentype<br />\n# tektonproboldopentype<br />\n# tektonproboldcondopentype<br />\n# tektonproboldextopentype<br />\n# tektonproboldoblopentype<br />\n# trajanproboldopentype<br />\n# trajanproregularopentype<br />\n# adobearabicboldopentype<br />\n# adobearabicbolditalicopentype<br />\n# adobearabicitalicopentype<br />\n# adobearabicregularopentype<br />\n# adobedevanagariboldopentype<br />\n# adobedevanagaribolditalicopentype<br />\n# adobedevanagariitalicopentype<br />\n# adobedevanagariregularopentype<br />\n# adobehebrewboldopentype<br />\n# adobehebrewbolditalicopentype<br />\n# adobehebrewitalicopentype<br />\n# adobehebrewregularopentype<br />\n# adobemingstdlightopentype<br />\n# adobemyungjostdmediumopentype<br />\n# adobesongstdlightopentype<br />\n# kozgopr6nboldopentype<br />\n# kozgopr6nextralightopentype<br />\n# kozgopr6nheavyopentype<br />\n# kozgopr6nlightopentype<br />\n# kozgopr6nmediumopentype<br />\n# kozgopr6nregularopentype<br />\n# kozminpr6nboldopentype<br />\n# kozminpr6nextralightopentype<br />\n# kozminpr6nheavyopentype<br />\n# kozminpr6nlightopentype<br />\n# kozminpr6nmediumopentype<br />\n# kozminpr6nregularopentype<br />\n# lettergothicstdboldopentype<br />\n# lettergothicstdboldslantedopentype<br />\n# lettergothicstdslantedopentype<br />\n# lettergothicstdopentype<br />\n# minionproboldopentype<br />\n# minionprobolditopentype<br />\n# minionproitopentype<br />\n# minionproregularopentype<br />\n# myriadhebrewopentype<br />\n# myriadproboldopentype<br />\n# myriadproboldcondopentype<br />\n# myriadproboldconditopentype<br />\n# myriadprobolditopentype<br />\n# myriadprocondopentype<br />\n# myriadproconditopentype<br />\n# myriadproitopentype<br />\n# myriadproregularopentype<br />\n# myriadprosemiboldopentype<br />\n# myriadprosemibolditopentype<br />\n# extra<br />\n# msoutlook<br />\n# algerian<br />\n# bauhaus93<br />\n# harlowsolid<br />\n# vivaldi<br />\n# bookshelfsymbol7<br />\n# msreferencesansserif<br />\n# msreferencespecialty<br />\n# teamviewer12</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.font.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1313","pygame.font.match_font","<p>Returns the full path to a font file on the system</p>\n","<p>import pygame, os, time<br />\npygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.font.init()</p>\n\n<p>print(pygame.font.match_font(&#39;bitstreamverasans&#39;)) # C:WINDOWSFontsARIALN.TTF</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.font.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1314","pygame.font.SysFont","<p>Return a new Font object that is loaded from the system fonts</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.SysFont(&quot;comicsansms&quot;, 72)</p>\n\n<p>text = font.render(&quot;Hello, World&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1315","pygame.font.Font","<p>Load a new font from a given filename or a python file object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.font/font.Font.jpg\" style=\"height:511px; width:632px\" /></p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1316","pygame.font.Font.render","<p>This creates a new Surface with the specified text rendered on it. pygame provides no way to directly draw text on an existing Surface: instead you must use&nbsp;<code>Font.render()</code>&nbsp;to create an image (Surface) of the text, then blit this image onto another Surface</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1317","pygame.font.Font.size","<p>Determine the amount of space needed to render text</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))<br />\nprint(font.size(&quot;Star, Wars&quot;)) # (230, 43)<br />\nwhile not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1318","pygame.font.Font.set_underline","<p>When enabled, all rendered fonts will include an underline</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.font/set_underline.jpg\" style=\"height:510px; width:636px\" /></p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_underline(1)<br />\ntext = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1319","pygame.font.Font.get_underline","<p>Return True when the font underline is enabled</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_underline(1)</p>\n\n<p>print(font.get_underline()) # 1</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1320","pygame.font.Font.set_bold","<p>Enables the bold rendering of text. This is a fake stretching of the font that doesn&rsquo;t look good on many font types</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.font/set_bold.jpg\" style=\"height:509px; width:633px\" /></p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_bold(1)</p>\n\n<p>print(font.get_bold()) # 1</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1321","pygame.font.Font.get_bold","<p>Check if text will be rendered bold</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_bold(1)</p>\n\n<p>print(font.get_bold()) # 1</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1322","pygame.font.Font.set_italic","<p>Enable fake rendering of italic text</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_italic(1)</p>\n\n<p>print(font.get_italic()) # 1</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1323","pygame.font.Font.metrics","","","0"),
("1324","pygame.font.Font.get_italic","<p>Check if the text will be rendered italic</p>\n","<p>import pygame</p>\n\n<p>pygame.init()<br />\nscreen = pygame.display.set_mode((640, 480))<br />\nclock = pygame.time.Clock()<br />\ndone = False</p>\n\n<p>font = pygame.font.Font(&#39;Star_Waves.ttf&#39;, 30)<br />\nfont.set_italic(1)</p>\n\n<p>print(pygame.font.Font.metrics(font(&quot;aa&quot;))) # 1</p>\n\n<p>text = font.render(&quot;Star, Wars&quot;, True, (0, 128, 0))</p>\n\n<p>while not done:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; done = True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; screen.fill((255, 255, 255))<br />\n&nbsp; &nbsp; screen.blit(text,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; (320 - text.get_width() / 2, 240 - text.get_height() / 2))<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n","0"),
("1325","pygame.font.Font.get_linesize","","","0"),
("1326","pygame.font.Font.get_height","","","0"),
("1327","pygame.font.Font.get_ascent","","","0"),
("1328","pygame.font.Font.get_descent","","","0");
INSERT INTO function VALUES
("1329","pygame.freetype.get_error","","","0"),
("1330","pygame.freetype.get_version","<p>Returns the version of the FreeType library in use by this module</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.get_version()) # (2, 4, 12)</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1331","pygame.freetype.init","<p>This function initializes the underlying FreeType library and must be called before trying to use any of the functionality of the&nbsp;<code>freetype</code>&nbsp;module</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.get_version()) # (2, 4, 12)</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1332","pygame.freetype.quit","<p>This function closes the&nbsp;<code>freetype</code>&nbsp;module</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.get_version()) # (2, 4, 12)</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1333","pygame.freetype.was_init","<p>Returns whether the the FreeType library is initialized</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.was_init()) # True</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1334","pygame.freetype.get_cache_size","<p>Return the glyph case size</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.get_cache_size()) # 64</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1335","pygame.freetype.get_default_resolution","<p>Returns the default pixel size, in dots per inch, for the module. The default is 72 DPI</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\nprint(pygame.freetype.get_default_resolution()) # 72</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1336","pygame.freetype.set_default_resolution","<p>Set the default pixel size, in dots per inch, for the module</p>\n","<p>import pygame<br />\nimport pygame.freetype<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.freetype.init()<br />\npygame.freetype.set_default_resolution(60)<br />\nprint(pygame.freetype.get_default_resolution()) # 60</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.display.quit()<br />\npygame.freetype.quit()<br />\npygame.quit()<br />\nquit()</p>\n","0"),
("1337","pygame.freetype.SysFont","","","0"),
("1338","pygame.freetype.get_default_font","","","0"),
("1339","pygame.freetype.Font","","","0"),
("1340","pygame.freetype.Font.name","","","0"),
("1341","pygame.freetype.Font.path","","","0"),
("1342","pygame.freetype.Font.size","","","0"),
("1343","pygame.freetype.Font.get_rect","","","0"),
("1344","pygame.freetype.Font.get_metrics","","","0"),
("1345","pygame.freetype.Font.height","","","0"),
("1346","pygame.freetype.Font.ascender","","","0"),
("1347","pygame.freetype.Font.descender","","","0"),
("1348","pygame.freetype.Font.get_sized_ascender","","","0"),
("1349","pygame.freetype.Font.get_sized_descender","","","0"),
("1350","pygame.freetype.Font.get_sized_height","","","0"),
("1351","pygame.freetype.Font.get_sized_glyph_height","","","0"),
("1352","pygame.freetype.Font.get_sizes","","","0"),
("1353","pygame.freetype.Font.render","","","0"),
("1354","pygame.freetype.Font.render_to","","","0"),
("1355","pygame.freetype.Font.render_raw","","","0"),
("1356","pygame.freetype.Font.render_raw_to","","","0"),
("1357","pygame.freetype.Font.style","","","0"),
("1358","pygame.freetype.Font.underline","","","0"),
("1359","pygame.freetype.Font.strong","","","0"),
("1360","pygame.freetype.Font.oblique","","","0"),
("1361","pygame.freetype.Font.wide","","","0"),
("1362","pygame.freetype.Font.strength","","","0"),
("1363","pygame.freetype.Font.underline_adjustment","","","0"),
("1364","pygame.freetype.Font.fixed_width","","","0"),
("1365","pygame.freetype.Font.fixed_sizes","","","0"),
("1366","pygame.freetype.Font.scalable","","","0"),
("1367","pygame.freetype.Font.use_bitmap_strikes","","","0"),
("1368","pygame.freetype.Font.antialiased","","","0"),
("1369","pygame.freetype.Font.kerning","","","0"),
("1370","pygame.freetype.Font.vertical","","","0"),
("1371","pygame.freetype.Font.rotation","","","0"),
("1372","pygame.freetype.Font.fgcolor","","","0"),
("1373","pygame.freetype.Font.origin","","","0"),
("1374","pygame.freetype.Font.pad","","","0"),
("1375","pygame.freetype.Font.ucs4","","","0"),
("1376","pygame.freetype.Font.resolution","","","0"),
("1377","pygame.gfxdraw.pixel","<p>Draws a single pixel onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.pixel.jpg\" style=\"height:632px; width:794px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>for y in range(600):<br />\n&nbsp; &nbsp; for x in range(800):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.gfxdraw.pixel(gameDisplay, x, y, color)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1378","pygame.gfxdraw.hline","<p>Draws a straight horizontal line on a Surface from x1 to x2 for the given y coordinate</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.hline.jpg\" style=\"height:630px; width:794px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x1 = 100<br />\nx2 = 700<br />\ny = 30</p>\n\n<p>pygame.gfxdraw.hline(gameDisplay, x1,x2,y,color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1379","pygame.gfxdraw.vline","<p>Draws a straight vertical line on a Surface from y1 to y2 on the given x coordinate</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.vline.jpg\" style=\"height:633px; width:795px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 100<br />\ny1 = 100<br />\ny2 = 500</p>\n\n<p>pygame.gfxdraw.vline(gameDisplay, x,y1,y2,color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1380","pygame.gfxdraw.rectangle","<p>Draws the rectangle edges onto the surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.rectangle.jpg\" style=\"height:631px; width:796px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>rect = ((10,10),(100,100))</p>\n\n<p>pygame.gfxdraw.rectangle(gameDisplay, rect, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1381","pygame.gfxdraw.box","<p>Draws a box (a rect) onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.box.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>rect = ((10,10),(100,100))</p>\n\n<p>pygame.gfxdraw.box(gameDisplay, rect, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1382","pygame.gfxdraw.line","<p>Draws a straight line on a Surface.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.line.jpg\" style=\"height:628px; width:792px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x1 = 100<br />\nx2 = 700<br />\ny1 = 100<br />\ny2 = 500</p>\n\n<p>pygame.gfxdraw.line(gameDisplay, x1, y1, x2, y2, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1383","pygame.gfxdraw.circle","<p>Draws the edges of a circular shape on the Surface. The pos argument is the center of the circle, and radius is the size. The circle is not filled with color</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.circle.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nr = 100</p>\n\n<p>pygame.gfxdraw.circle(gameDisplay, x, y, r, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1384","pygame.gfxdraw.arc","<p>Draws an arc onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.arc.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport math<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nr = 100<br />\nstart = 0<br />\nend = 90</p>\n\n<p>pygame.gfxdraw.arc(gameDisplay, x, y, r, start, end, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1385","pygame.gfxdraw.aacircle","<p>Draws the edges of an anti aliased circle onto a surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nr = 100</p>\n\n<p>pygame.gfxdraw.aacircle(gameDisplay, x, y, r, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1386","pygame.gfxdraw.filled_circle","<p>Draws a filled circle onto a surface. So the inside of the circle will be filled with the given color</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.filled_circle.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nr = 100</p>\n\n<p>pygame.gfxdraw.filled_circle(gameDisplay, x, y, r, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1387","pygame.gfxdraw.ellipse","<p>Draws the edges of an ellipse onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.ellipse.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nrx = 100<br />\nry = 50</p>\n\n<p>pygame.gfxdraw.filled_ellipse(gameDisplay, x, y, rx, ry, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1388","pygame.gfxdraw.aaellipse","<p>Draws anti aliased edges of an ellipse onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.aaellipse.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nrx = 100<br />\nry = 50</p>\n\n<p>pygame.gfxdraw.aaellipse(gameDisplay, x, y, rx, ry, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1389","pygame.gfxdraw.filled_ellipse","<p>Draws a filled ellipse onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.filled_ellipse.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nrx = 100<br />\nry = 50</p>\n\n<p>pygame.gfxdraw.filled_ellipse(gameDisplay, x, y, rx, ry, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1390","pygame.gfxdraw.pie","<p>Draws a pie onto the surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.pie.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x = 400<br />\ny = 300<br />\nr = 50<br />\nstart = 0<br />\nend = 90</p>\n\n<p>pygame.gfxdraw.pie(gameDisplay, x, y, r, start, end, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1391","pygame.gfxdraw.trigon","<p>Draws the edges of a trigon onto a surface. A trigon is a triangle</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.trigon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x1 = 10<br />\ny1 = 10</p>\n\n<p>x2 = 100<br />\ny2 = 30</p>\n\n<p>x3 = 140<br />\ny3 = 80</p>\n\n<p><br />\npygame.gfxdraw.trigon(gameDisplay, x1, y1, x2, y2, x3, y3, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1392","pygame.gfxdraw.aatrigon","<p>Draws the anti aliased edges of a trigon onto a surface. A trigon is a triangle</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.aatrigon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x1 = 10<br />\ny1 = 10</p>\n\n<p>x2 = 100<br />\ny2 = 30</p>\n\n<p>x3 = 140<br />\ny3 = 80</p>\n\n<p><br />\npygame.gfxdraw.aatrigon(gameDisplay, x1, y1, x2, y2, x3, y3, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1393","pygame.gfxdraw.filled_trigon","<p>Draws a filled trigon onto a surface. So the inside of the trigon will be filled with the given color</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.filled_trigon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>x1 = 10<br />\ny1 = 10</p>\n\n<p>x2 = 100<br />\ny2 = 30</p>\n\n<p>x3 = 140<br />\ny3 = 80</p>\n\n<p><br />\npygame.gfxdraw.filled_trigon(gameDisplay, x1, y1, x2, y2, x3, y3, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1394","pygame.gfxdraw.polygon","<p>Draws the edges of a polygon onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.polygon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>points = [[100, 100], [100, 400],[400, 300],[600, 600]]</p>\n\n<p><br />\npygame.gfxdraw.polygon(gameDisplay, points, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1395","pygame.gfxdraw.aapolygon","<p>Draws the anti aliased edges of a polygon onto a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.aapolygon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>points = [[100, 100], [100, 400],[400, 300],[600, 600]]</p>\n\n<p><br />\npygame.gfxdraw.aapolygon(gameDisplay, points, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1396","pygame.gfxdraw.filled_polygon","<p>Draws a filled polygon onto a surface. So the inside of the polygon will be filled with the given color</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.gfxdraw/gfxdraw.filled_polygon.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time<br />\nimport pygame.gfxdraw</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = (255, 0, 0)</p>\n\n<p>points = [[100, 100], [100, 400],[400, 300],[600, 600]]</p>\n\n<p><br />\npygame.gfxdraw.filled_polygon(gameDisplay, points, color)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1397","pygame.gfxdraw.textured_polygon","","","0"),
("1398","pygame.gfxdraw.bezier","","","0"),
("1399","pygame.image.load","<p>Load new image from a file</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.image/Ward_S3_3.jpg\" style=\"height:900px; width:600px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.image/image.load.jpg\" style=\"height:626px; width:793px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1400","pygame.image.save","<p>This will save your Surface as either a&nbsp;<code>BMP</code>,&nbsp;<code>TGA</code>,&nbsp;<code>PNG</code>, or&nbsp;<code>JPEG</code>&nbsp;image. If the filename extension is unrecognized it will default to&nbsp;<code>TGA</code>. Both&nbsp;<code>TGA</code>, and&nbsp;<code>BMP</code>&nbsp;file formats create uncompressed files</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.image/test.jpg\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>pygame.image.save(gameDisplay, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1401","pygame.image.get_extended","<p>If pygame is built with extended image formats this function will return True</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(pygame.image.get_extended()) # 1</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1402","pygame.image.tostring","<p>Creates a string that can be transferred with the &lsquo;fromstring&rsquo; method in other Python imaging packages. Some Python image packages prefer their images in bottom-to-top format (PyOpenGL for example). If you pass True for the flipped argument, the string buffer will be vertically flipped.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>a = pygame.image.tostring(gameDisplay, &quot;RGB&quot;)</p>\n\n<p>file = open(&quot;test.txt&quot;,&quot;w&quot;)<br />\nfile.write(str(a))</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\ngameDisplay.fill(color)</p>\n\n<p>savedSurface = pygame.image.fromstring(a,(800,600),&quot;RGB&quot;)<br />\ngameDisplay.blit(savedSurface,(0,0))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1403","pygame.image.fromstring","<p>Create new Surface from a string buffer</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>a = pygame.image.tostring(gameDisplay, &quot;RGB&quot;)</p>\n\n<p>file = open(&quot;test.txt&quot;,&quot;w&quot;)<br />\nfile.write(str(a))</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)<br />\ngameDisplay.fill(color)</p>\n\n<p>savedSurface = pygame.image.fromstring(a,(800,600),&quot;RGB&quot;)<br />\ngameDisplay.blit(savedSurface,(0,0))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1404","pygame.image.frombuffer","<p>Create a new Surface that shares data inside a string buffer</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))</p>\n\n<p>a = pygame.image.tostring(gameDisplay, &quot;RGB&quot;)</p>\n\n<p>file = open(&quot;test.txt&quot;,&quot;w&quot;)<br />\nfile.write(str(a))<br />\nfile.close()</p>\n\n<p>savedSurface = pygame.image.frombuffer(a,(800,600),&quot;RGB&quot;)<br />\ngameDisplay.blit(savedSurface,(0,0))</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1405","pygame.joystick.init","","","0"),
("1406","pygame.joystick.quit","","","0"),
("1407","pygame.joystick.get_init","","","0"),
("1408","pygame.joystick.get_count","","","0"),
("1409","pygame.joystick.Joystick","","","0"),
("1410","pygame.joystick.Joystick.init","","","0"),
("1411","pygame.joystick.Joystick.quit","","","0"),
("1412","pygame.joystick.Joystick.get_init","","","0"),
("1413","pygame.joystick.Joystick.get_id","","","0"),
("1414","pygame.joystick.Joystick.get_name","","","0"),
("1415","pygame.joystick.Joystick.get_numaxes","","","0"),
("1416","pygame.joystick.Joystick.get_axis","","","0"),
("1417","pygame.joystick.Joystick.get_numballs","","","0"),
("1418","pygame.joystick.Joystick.get_ball","","","0"),
("1419","pygame.joystick.Joystick.get_numbuttons","","","0"),
("1420","pygame.joystick.Joystick.get_button","","","0"),
("1421","pygame.joystick.Joystick.get_numhats","","","0"),
("1422","pygame.joystick.Joystick.get_hat","","","0"),
("1423","pygame.mouse.get_pressed","<p>Get the state of the mouse buttons</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(pygame.mouse.get_pressed()) # example result (1, 0, 0) or (0, 0, 0)&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1424","pygame.mouse.get_pos","<p>Get the mouse cursor position</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(pygame.mouse.get_pos()) # (691, 530)&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1425","pygame.mouse.get_rel","<p>Get the amount of mouse movement</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(pygame.mouse.get_rel()) # example result (12, 10)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1426","pygame.mouse.set_pos","<p>Set the mouse cursor position</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.mouse.set_pos(100,100)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1427","pygame.mouse.set_visible","<p>Hide or show the mouse cursor</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>pygame.mouse.set_visible(0)</p>\n\n<p>gameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1428","pygame.mouse.get_focused","<p>Check if the display is receiving mouse input</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p><br />\ngameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(pygame.mouse.get_focused()) # 1<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0");
INSERT INTO function VALUES
("1429","pygame.mouse.set_cursor","","","0"),
("1430","pygame.mouse.get_cursor","<p>Get the image for the system mouse cursor</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = pygame.color.Color(&quot;red&quot;)</p>\n\n<p>print(pygame.mouse.get_cursor()) # ((16, 16), (0, 0), (0, 0, 64, 0, 96, 0, 112, 0, 120, 0, 124, 0, 126, 0, 127, 0, 127, 128, 124, 0, 108, 0, 70, 0, 6, 0, 3, 0, 3, 0, 0, 0), (192, 0, 224, 0, 240, 0, 248, 0, 252, 0, 254, 0, 255, 0, 255, 128, 255, 192, 255, 224, 254, 0, 239, 0, 207, 0, 135, 128, 7, 128, 3, 0)) &nbsp; &nbsp; &nbsp; &nbsp;<br />\ngameDisplay.fill(color)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1431","pygame.Overlay.display","","","0"),
("1432","pygame.Overlay.set_location","","","0"),
("1433","pygame.Overlay.get_hardware","","","0"),
("1434","pygame.init","<p>Initialize all imported pygame modules</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1435","pygame.quit","<p>Uninitialize all pygame modules</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1436","pygame.error","","","0"),
("1437","pygame.get_error","","","0"),
("1438","pygame.set_error","","","0"),
("1439","pygame.get_sdl_version","<p>Get the version number of SDL</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>print(pygame.get_sdl_version()) # (1, 2, 15)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1440","pygame.get_sdl_byteorder","<p>Returns the byte order of the&nbsp;<code>SDL</code>&nbsp;library. It returns&nbsp;<code>LIL_ENDIAN</code>&nbsp;for little endian byte order and&nbsp;<code>BIG_ENDIAN</code>&nbsp;for big endian byte order</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>print(pygame.get_sdl_byteorder()) # 1234</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1441","pygame.register_quit","<p>When&nbsp;<a href=\"https://www.pygame.org/docs/ref/pygame.html#pygame.quit\" title=\"\"><code>pygame.quit()&nbsp;</code>uninitialize all pygame modules</a>&nbsp;is called, all registered quit functions are called. Pygame modules do this automatically when they are initializing. This function is not be needed for regular pygame users</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>def example():<br />\n&nbsp; &nbsp; print(&quot;end&quot;)</p>\n\n<p>pygame.register_quit(example)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit() # end<br />\nquit()</p>\n","0"),
("1442","pygame.encode_string","","","0"),
("1443","pygame.encode_file_path","","","0"),
("1444","pygame.version.ver","<p>This is the version represented as a string. It can contain a micro release number as well,&nbsp;<code>e.g.</code>, &lsquo;1.5.2&rsquo;</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>print(pygame.version.ver) # 1.9.3</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit() # end<br />\nquit()</p>\n","0"),
("1445","pygame.version.vernum","<p>Tupled integers of the version</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>print(pygame.version.vernum) # (1, 9, 3)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit() # end<br />\nquit()</p>\n","0"),
("1446","pygame.version.rev","<p>Repository revision of the build</p>\n","<p>import pygame, os, time</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>print(pygame.version.rev) # 189518fe7a66</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit() # end<br />\nquit()</p>\n","0"),
("1447","pygame.PixelArray.surface","","","0"),
("1448","pygame.PixelArray.itemsize","","","0"),
("1449","pygame.PixelArray.ndim","","","0"),
("1450","pygame.PixelArray.shape","","","0"),
("1451","pygame.PixelArray.strides","","","0"),
("1452","pygame.PixelArray.make_surface","","","0"),
("1453","pygame.PixelArray.replace","","","0"),
("1454","pygame.PixelArray.extract","","","0"),
("1455","pygame.PixelArray.compare","","","0"),
("1456","pygame.PixelArray.transpose","","","0"),
("1457","pygame.Rect.copy","","","0"),
("1458","pygame.Rect.move","","","0"),
("1459","pygame.Rect.move_ip","","","0"),
("1460","pygame.Rect.inflate","","","0"),
("1461","pygame.Rect.inflate_ip","","","0"),
("1462","pygame.Rect.clamp","","","0"),
("1463","pygame.Rect.clamp_ip","","","0"),
("1464","pygame.Rect.clip","","","0"),
("1465","pygame.Rect.union","","","0"),
("1466","pygame.Rect.union_ip","","","0"),
("1467","pygame.Rect.unionall","","","0"),
("1468","pygame.Rect.unionall_ip","","","0"),
("1469","pygame.Rect.fit","","","0"),
("1470","pygame.Rect.normalize","","","0"),
("1471","pygame.Rect.contains","","","0"),
("1472","pygame.Rect.collidepoint","","","0"),
("1473","pygame.Rect.colliderect","","","0"),
("1474","pygame.Rect.collidelist","","","0"),
("1475","pygame.Rect.collidelistall","","","0"),
("1476","pygame.Rect.collidedict","","","0"),
("1477","pygame.Rect.collidedictall","","","0"),
("1478","pygame.scrap.init","<p>Tries to initialize the scrap module and raises an exception, if it fails. Note that this module requires a set display surface, so you have to make sure, you acquired one earlier using&nbsp;<code>pygame.display.set_mode()</code>.</p>\n","<p>#!/usr/bin/env python<br />\n&quot;&quot;&quot;<br />\nDemonstrates the clipboard capabilities of pygame.<br />\n&quot;&quot;&quot;<br />\nimport os<br />\nimport pygame<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap<br />\nfrom pygame.compat import as_bytes<br />\nBytesIO = pygame.compat.get_BytesIO()</p>\n\n<p>def usage ():<br />\n&nbsp; &nbsp; print (&quot;Press the &#39;g&#39; key to get all of the current clipboard data&quot;)<br />\n&nbsp; &nbsp; print (&quot;Press the &#39;p&#39; key to put a string into the clipboard&quot;)<br />\n&nbsp; &nbsp; print (&quot;Press the &#39;a&#39; key to get a list of the currently available types&quot;)<br />\n&nbsp; &nbsp; print (&quot;Press the &#39;i&#39; key to put an image into the clipboard&quot;)</p>\n\n<p>main_dir = os.path.split(os.path.abspath(__file__))[0]</p>\n\n<p>pygame.init ()<br />\nscreen = pygame.display.set_mode ((200, 200))<br />\nc = pygame.time.Clock ()<br />\ngoing = True</p>\n\n<p># Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode (SCRAP_CLIPBOARD)</p>\n\n<p>usage ()</p>\n\n<p>while going:<br />\n&nbsp; &nbsp; for e in pygame.event.get ():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if e.type == QUIT or (e.type == KEYDOWN and e.key == K_ESCAPE):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; going = False</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; elif e.type == KEYDOWN and e.key == K_g:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # This means to look for data.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Getting the different clipboard data..&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for t in scrap.get_types ():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; r = scrap.get (t)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if r and len (r) &gt; 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Type %s : (large %i byte buffer)&quot; % (t, len(r)))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif r is None:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Type %s : None&quot; % (t,))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Type %s : &#39;%s&#39;&quot; % (t, r.decode(&#39;ascii&#39;, &#39;ignore&#39;)))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &quot;image&quot; in t:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; namehint = t.split(&quot;/&quot;)[1]<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if namehint in [&#39;bmp&#39;, &#39;png&#39;, &#39;jpg&#39;]:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f = BytesIO(r)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loaded_surf = pygame.image.load(f, &quot;.&quot; + namehint)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; screen.blit(loaded_surf, (0,0))</p>\n\n<p><br />\n&nbsp; &nbsp; &nbsp; &nbsp; elif e.type == KEYDOWN and e.key == K_p:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Place some text into the selection.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Placing clipboard text.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scrap.put (SCRAP_TEXT,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;as_bytes(&quot;Hello. This is a &nbsp;from scrap.&quot;))</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; elif e.type == KEYDOWN and e.key == K_a:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Get all available types.<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Getting the available types from the clipboard.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; types = scrap.get_types ()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (types)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if len (types) &gt; 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Contains %s: %s&quot; %<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(types[0], scrap.contains (types[0])))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Contains _INVALID_: &quot;, scrap.contains (&quot;_INVALID_&quot;))</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; elif e.type == KEYDOWN and e.key == K_i:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print (&quot;Putting image into the clipboard.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scrap.set_mode (SCRAP_CLIPBOARD)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fp = open (&#39;Ward_S3_3.jpg&#39;, &#39;rb&#39;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; buf = fp.read ()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; scrap.put (&quot;image/jpg&quot;, buf)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fp.close ()</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; elif e.type in (KEYDOWN, MOUSEBUTTONDOWN):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; usage ()<br />\n&nbsp; &nbsp; pygame.display.flip()<br />\n&nbsp; &nbsp; c.tick(40)</p>\n","0"),
("1479","pygame.scrap.get","<p>Gets the data for the specified type from the clipboard</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p>text = pygame.scrap.get(SCRAP_TEXT)<br />\nprint(text) # b&#39;pygame.scrapx00&#39;<br />\n# pathern b&#39; text x00</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1480","pygame.scrap.get_types","<p>Gets a list of the available clipboard types</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)<br />\nprint(pygame.scrap.get_types())<br />\n# Examples:<br />\n# [&#39;HTML Format&#39;, &#39;text/plain;charset=utf-8&#39;]<br />\n# [&#39;text/plain;charset=utf-8&#39;]<br />\n# [&#39;DataObject&#39;, &#39;Embed Source&#39;, &#39;Native&#39;, &#39;OwnerLink&#39;, &#39;Object Descriptor&#39;, &#39;image/bmp&#39;]<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1481","pygame.scrap.put","<p>Places data for a specific clipboard type into the clipboard</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p>fp = open (&quot;Ward_S3_3.bmp&quot;, &quot;rb&quot;)<br />\npygame.scrap.put (SCRAP_BMP, fp.read ())<br />\nfp.close ()</p>\n\n<p>&#39;&#39;&#39;<br />\nSCRAP_TEXT text/plain &nbsp; &nbsp;for plain text<br />\nSCRAP_PBM &nbsp;image/pbm &nbsp; &nbsp; for PBM encoded image data<br />\nSCRAP_PPM &nbsp;image/ppm &nbsp; &nbsp; for PPM encoded image data<br />\nSCRAP_BMP &nbsp;image/bmp &nbsp; &nbsp; for BMP encoded image data<br />\n&#39;&#39;&#39;</p>\n\n<p>pygame.scrap.put(SCRAP_TEXT, b&quot;A text to copy&quot;)</p>\n\n<p>print(pygame.scrap.get_types()) # [&#39;image/bmp&#39;, &#39;text/plain&#39;]</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1482","pygame.scrap.contains","<p>Checks, whether a certain type is available in the clipboard</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p>fp = open (&quot;Ward_S3_3.bmp&quot;, &quot;rb&quot;)<br />\npygame.scrap.put (SCRAP_BMP, fp.read ())<br />\nfp.close ()</p>\n\n<p>&#39;&#39;&#39;<br />\nSCRAP_TEXT text/plain &nbsp; &nbsp;for plain text<br />\nSCRAP_PBM &nbsp;image/pbm &nbsp; &nbsp; for PBM encoded image data<br />\nSCRAP_PPM &nbsp;image/ppm &nbsp; &nbsp; for PPM encoded image data<br />\nSCRAP_BMP &nbsp;image/bmp &nbsp; &nbsp; for BMP encoded image data<br />\n&#39;&#39;&#39;</p>\n\n<p>pygame.scrap.put(SCRAP_TEXT, b&quot;A text to copy&quot;)</p>\n\n<p>print(pygame.scrap.contains(SCRAP_TEXT)) # False</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1483","pygame.scrap.lost","<p>Checks whether the clipboard is currently owned by the application</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p>fp = open (&quot;Ward_S3_3.bmp&quot;, &quot;rb&quot;)<br />\npygame.scrap.put (SCRAP_BMP, fp.read ())<br />\nfp.close ()</p>\n\n<p>&#39;&#39;&#39;<br />\nSCRAP_TEXT text/plain &nbsp; &nbsp;for plain text<br />\nSCRAP_PBM &nbsp;image/pbm &nbsp; &nbsp; for PBM encoded image data<br />\nSCRAP_PPM &nbsp;image/ppm &nbsp; &nbsp; for PPM encoded image data<br />\nSCRAP_BMP &nbsp;image/bmp &nbsp; &nbsp; for BMP encoded image data<br />\n&#39;&#39;&#39;</p>\n\n<p>pygame.scrap.put(SCRAP_TEXT, b&quot;A text to copy&quot;)</p>\n\n<p>if pygame.scrap.lost ():<br />\n&nbsp; &nbsp;print(&quot;No content from me anymore. The clipboard is used by someone else.&quot;)</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1484","pygame.scrap.set_mode","<p>Sets the clipboard access mode</p>\n","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p><br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1485","pygame.sndarray.array","","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *<br />\nimport pygame.scrap as scrap</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()<br />\n# Initialize the scrap module and use the clipboard mode.<br />\nscrap.init ()<br />\nscrap.set_mode(SCRAP_CLIPBOARD)</p>\n\n<p>sound = pygame.mixer.Sound(&quot;explosion.wav&quot;)<br />\narray = pygame.sndarray.array(sound)</p>\n\n<p>file = open(&quot;text.txt&quot;, &quot;w&quot;)<br />\nfile.write(str(array))<br />\nfile.close()</p>\n\n<p>&#39;&#39;&#39;<br />\n[[17098 17098]<br />\n&nbsp;[17093 17093]<br />\n&nbsp;[17088 17088]<br />\n&nbsp;...,&nbsp;<br />\n&nbsp;[ &nbsp; &nbsp;3 &nbsp; &nbsp; 3]<br />\n&nbsp;[ &nbsp; &nbsp;2 &nbsp; &nbsp; 2]<br />\n&nbsp;[ &nbsp; &nbsp;1 &nbsp; &nbsp; 1]]<br />\n&#39;&#39;&#39;</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("1486","pygame.sndarray.samples","","","0"),
("1487","pygame.sndarray.make_sound","","","0"),
("1488","pygame.sndarray.use_arraytype","","","0"),
("1489","pygame.sndarray.get_arraytype","","","0"),
("1490","pygame.sndarray.get_arraytypes","","","0"),
("1491","pygame.sprite.Sprite","<p>Simple base class for visible game objects</p>\n","","0"),
("1492","pygame.sprite.DirtySprite","","","0"),
("1493","pygame.sprite.Group","","","0"),
("1494","pygame.sprite.RenderPlain","","","0"),
("1495","pygame.sprite.RenderClear","","","0"),
("1496","pygame.sprite.RenderUpdates","","","0"),
("1497","pygame.sprite.OrderedUpdates","","","0"),
("1498","pygame.sprite.LayeredUpdates","","","0"),
("1499","pygame.sprite.LayeredDirty","","","0"),
("1500","pygame.sprite.GroupSingle","","","0"),
("1501","pygame.sprite.spritecollide","","","0"),
("1502","pygame.sprite.collide_rect","","","0"),
("1503","pygame.sprite.collide_rect_ratio","","","0"),
("1504","pygame.sprite.collide_circle","","","0"),
("1505","pygame.sprite.collide_circle_ratio","","","0"),
("1506","pygame.sprite.collide_mask","","","0"),
("1507","pygame.sprite.groupcollide","","","0"),
("1508","pygame.sprite.spritecollideany","","","0"),
("1509","pygame.sprite.Sprite.update","","","0"),
("1510","pygame.sprite.Sprite.add","","","0"),
("1511","pygame.sprite.Sprite.remove","","","0"),
("1512","pygame.sprite.Sprite.kill","","","0"),
("1513","pygame.sprite.Sprite.alive","","","0"),
("1514","pygame.sprite.Sprite.groups","","","0"),
("1515","pygame.sprite.Group.sprites","","","0"),
("1516","pygame.sprite.Group.copy","","","0"),
("1517","pygame.sprite.Group.add","","","0"),
("1518","pygame.sprite.Group.remove","","","0"),
("1519","pygame.sprite.Group.has","","","0"),
("1520","pygame.sprite.Group.update","","","0"),
("1521","pygame.sprite.Group.draw","","","0"),
("1522","pygame.sprite.Group.clear","","","0"),
("1523","pygame.sprite.Group.empty","","","0"),
("1524","pygame.sprite.RenderUpdates.draw","","","0"),
("1525","pygame.sprite.LayeredUpdates.add","","","0"),
("1526","pygame.sprite.LayeredUpdates.sprites","","","0"),
("1527","pygame.sprite.LayeredUpdates.draw","","","0"),
("1528","pygame.sprite.LayeredUpdates.get_sprites_at","","","0");
INSERT INTO function VALUES
("1529","pygame.sprite.LayeredUpdates.get_sprite","","","0"),
("1530","pygame.sprite.LayeredUpdates.remove_sprites_of_layer","","","0"),
("1531","pygame.sprite.LayeredUpdates.layers","","","0"),
("1532","pygame.sprite.LayeredUpdates.change_layer","","","0"),
("1533","pygame.sprite.LayeredUpdates.get_layer_of_sprite","","","0"),
("1534","pygame.sprite.LayeredUpdates.get_top_layer","","","0"),
("1535","pygame.sprite.LayeredUpdates.get_bottom_layer","","","0"),
("1536","pygame.sprite.LayeredUpdates.move_to_front","","","0"),
("1537","pygame.sprite.LayeredUpdates.move_to_back","","","0"),
("1538","pygame.sprite.LayeredUpdates.get_top_sprite","","","0"),
("1539","pygame.sprite.LayeredUpdates.get_sprites_from_layer","","","0"),
("1540","pygame.sprite.LayeredUpdates.switch_layer","","","0"),
("1541","pygame.sprite.LayeredDirty.draw","","","0"),
("1542","pygame.sprite.LayeredDirty.clear","","","0"),
("1543","pygame.sprite.LayeredDirty.repaint_rect","","","0"),
("1544","pygame.sprite.LayeredDirty.set_clip","","","0"),
("1545","pygame.sprite.LayeredDirty.get_clip","","","0"),
("1546","pygame.sprite.LayeredDirty.change_layer","","","0"),
("1547","pygame.sprite.LayeredDirty.set_timing_treshold","","","0"),
("1548","pygame.Surface.blit","<p>Draws a source Surface onto this Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\n# Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1549","pygame.Surface.convert","<p>Change the pixel format of an image (Program run faster)</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\n# Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1550","pygame.Surface.convert_alpha","<p>Creates a new copy of the surface with the desired pixel format (I don&#39;t see difrence, it work like convert)</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\n# Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1551","pygame.Surface.copy","<p>Create a new copy of a Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>start2 = start.copy()</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start2, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1552","pygame.Surface.fill","<p>Fill the Surface with a solid color</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p># Display Image</p>\n\n<p>red = (255,0,0)<br />\ngameDisplay.fill(red)<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1553","pygame.Surface.scroll","<p>Shift the surface image in place</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.surface/scroll.jpg\" style=\"height:475px; width:600px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p>gallery_w = 60<br />\ngallery_h = 76</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))<br />\nstart.scroll(30,30)</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1554","pygame.Surface.set_colorkey","","","0"),
("1555","pygame.Surface.get_colorkey","<p>Get the current transparent colorkey</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_colorkey()) # None</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1556","pygame.Surface.set_alpha","","","0"),
("1557","pygame.Surface.get_alpha","","","0"),
("1558","pygame.Surface.lock","","","0"),
("1559","pygame.Surface.unlock","","","0"),
("1560","pygame.Surface.mustlock","","","0"),
("1561","pygame.Surface.get_locked","<p>Returns True when the Surface is locked</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_locked()) # False</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1562","pygame.Surface.get_locks","<p>Returns the currently existing locks for the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_locks()) # ()</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1563","pygame.Surface.get_at","<p>Get the color value at a single pixel</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_at((0,0))) # (35, 36, 41, 255) it mean RGBA</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1564","pygame.Surface.set_at","<p>Set the color value for a single pixel</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>start.set_at((0,0),(255, 0, 0, 255))<br />\nprint(start.get_at((0,0))) # (255, 0, 0, 255) it mean RGBA</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1565","pygame.Surface.get_at_mapped","<p>Get the mapped color value at a single pixel</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_at_mapped((0,0))) # -14474199</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1566","pygame.Surface.get_palette","","","0"),
("1567","pygame.Surface.get_palette_at","","","0"),
("1568","pygame.Surface.set_palette","","","0"),
("1569","pygame.Surface.set_palette_at","","","0"),
("1570","pygame.Surface.map_rgb","","","0"),
("1571","pygame.Surface.unmap_rgb","","","0"),
("1572","pygame.Surface.set_clip","","","0"),
("1573","pygame.Surface.get_clip","<p>Get the current clipping area of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_clip()) # &lt;rect(0, 0, 200, 300)&gt;</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1574","pygame.Surface.subsurface","","","0"),
("1575","pygame.Surface.get_parent","","","0"),
("1576","pygame.Surface.get_abs_parent","","","0"),
("1577","pygame.Surface.get_offset","","","0"),
("1578","pygame.Surface.get_abs_offset","","","0"),
("1579","pygame.Surface.get_size","<p>Get the dimensions of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_size()) # (200, 300)</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1580","pygame.Surface.get_width","<p>Get the width of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_width()) # 200</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1581","pygame.Surface.get_height","<p>Get the height of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_height()) # 300</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1582","pygame.Surface.get_rect","<p>Get the rectangular area of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_rect()) #&nbsp;&lt;rect(0, 0, 200, 300)&gt;</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1583","pygame.Surface.get_bitsize","<p>Returns the number of bits used to represent each pixel</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_bitsize()) # 32</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1584","pygame.Surface.get_bytesize","<p>Return the number of bytes used per pixel</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_bytesize()) # 4</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1585","pygame.Surface.get_flags","<p>Get the additional flags used for the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_flags()) # 65536</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1586","pygame.Surface.get_pitch","<p>Get the number of bytes used per Surface row</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_pitch()) # 800</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1587","pygame.Surface.get_masks","<p>Returns the bitmasks used to isolate each color in a mapped integer</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_masks()) # (16711680, 65280, 255, 4278190080)</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1588","pygame.Surface.set_masks","","","0"),
("1589","pygame.Surface.get_shifts","","","0"),
("1590","pygame.Surface.set_shifts","","","0"),
("1591","pygame.Surface.get_losses","","","0"),
("1592","pygame.Surface.get_bounding_rect","<p>Find the smallest rect containing data</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_bounding_rect()) # &lt;rect(0, 0, 200, 300)&gt;</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1593","pygame.Surface.get_view","<p>Return a buffer view of the Surface&rsquo;s pixels</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_view()) # &lt;BufferProxy(240000)&gt;</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1594","pygame.Surface.get_buffer","<p>Return a buffer object for the pixels of the Surface</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;).convert_alpha()<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p>print(start.get_buffer()) # &lt;BufferProxy(240000)&gt;</p>\n\n<p># Display Image<br />\ngameDisplay.blit(start, (start_x,start_y))<br />\npygame.display.update()</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1595","pygame.Surface._pixels_address","","","0"),
("1596","pygame.surfarray.array2d","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>array2d = pygame.surfarray.array2d(gameDisplay)<br />\nprint(array2d)<br />\n&#39;&#39;&#39;<br />\n[[0 0 0 ..., 0 0 0]<br />\n&nbsp;[0 0 0 ..., 0 0 0]<br />\n&nbsp;[0 0 0 ..., 0 0 0]<br />\n&nbsp;...,&nbsp;<br />\n&nbsp;[0 0 0 ..., 0 0 0]<br />\n&nbsp;[0 0 0 ..., 0 0 0]<br />\n&nbsp;[0 0 0 ..., 0 0 0]]<br />\n&#39;&#39;&#39;<br />\npygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","","0"),
("1597","pygame.surfarray.pixels2d","","","0"),
("1598","pygame.surfarray.array3d","","","0"),
("1599","pygame.surfarray.pixels3d","","<p>import pygame<br />\nimport os<br />\nfrom pygame.locals import *</p>\n\n<p>gameDisplay = pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p>color = [255, 255, 255]</p>\n\n<p>surf3d = pygame.surfarray.pixels3d(gameDisplay)</p>\n\n<p>surf3d[100][100] = color</p>\n\n<p>pygame.display.update()</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1600","pygame.surfarray.array_alpha","","","0"),
("1601","pygame.surfarray.pixels_alpha","","","0"),
("1602","pygame.surfarray.pixels_red","","","0"),
("1603","pygame.surfarray.pixels_green","","","0"),
("1604","pygame.surfarray.pixels_blue","","","0"),
("1605","pygame.surfarray.array_colorkey","","","0"),
("1606","pygame.surfarray.make_surface","","","0"),
("1607","pygame.surfarray.blit_array","","","0"),
("1608","pygame.surfarray.map_array","","","0"),
("1609","pygame.surfarray.use_arraytype","","","0"),
("1610","pygame.surfarray.get_arraytype","","","0"),
("1611","pygame.surfarray.get_arraytypes","","","0"),
("1612","pygame.tests.run","<p>Pygame unit test suite package</p>\n","<p>import pygame<br />\nfrom pygame import tests</p>\n\n<p>pygame.tests.run()</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n\n<p>&#39;&#39;&#39;<br />\nskipping pygame.tests.cdrom_test (tag &#39;interactive&#39;)<br />\nskipping pygame.tests.font_test (tag &#39;subprocess_ignore&#39;)<br />\nskipping pygame.tests.midi_test (tag &#39;interactive&#39;)<br />\nloading pygame.tests.base_test<br />\nloading pygame.tests.blit_test<br />\nloading pygame.tests.bufferproxy_test<br />\nloading pygame.tests.camera_test<br />\nloading pygame.tests.color_test<br />\nloading pygame.tests.compat_test<br />\nloading pygame.tests.cursors_test<br />\nloading pygame.tests.display_test<br />\nloading pygame.tests.draw_test<br />\nloading pygame.tests.event_test<br />\nloading pygame.tests.fastevent_test<br />\nloading pygame.tests.freetype_test<br />\nloading pygame.tests.ftfont_test<br />\nloading pygame.tests.gfxdraw_test<br />\nloading pygame.tests.image__save_gl_surface_test<br />\nloading pygame.tests.image_test<br />\nloading pygame.tests.imageext_test<br />\nloading pygame.tests.joystick_test<br />\nloading pygame.tests.key_test<br />\nloading pygame.tests.mask_test<br />\nloading pygame.tests.math_test<br />\nloading pygame.tests.mixer_music_test<br />\nloading pygame.tests.mixer_test<br />\nloading pygame.tests.mouse_test<br />\nloading pygame.tests.overlay_test<br />\nloading pygame.tests.pixelarray_test<br />\nloading pygame.tests.pixelcopy_test<br />\nloading pygame.tests.rect_test<br />\nloading pygame.tests.rwobject_test<br />\nloading pygame.tests.scrap_test<br />\nloading pygame.tests.sndarray_test<br />\nloading pygame.tests.sprite_test<br />\nloading pygame.tests.surface_test<br />\nloading pygame.tests.surfarray_test<br />\nloading pygame.tests.surflock_test<br />\nloading pygame.tests.sysfont_test<br />\nloading pygame.tests.threads_test<br />\nloading pygame.tests.time_test<br />\nloading pygame.tests.transform_test<br />\nbr />\n----------------------------------------------------------------------<br />\nRan 677 tests in 100.038s</p>\n\n<p>OK<br />\n&#39;&#39;&#39;</p>\n","0"),
("1613","pygame.time.get_ticks","<p>Return the number of milliseconds since&nbsp;<code>pygame.init()</code>&nbsp;was called. Before pygame is initialized this will always be 0.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; print(pygame.time.get_ticks())<br />\n&nbsp; &nbsp; &#39;&#39;&#39;<br />\n1409<br />\n1427<br />\n1443<br />\n1460<br />\n1476<br />\n1493<br />\n1510<br />\n1527<br />\n1543<br />\n1560<br />\n1576<br />\n1593<br />\n1610<br />\n1626<br />\n1642<br />\n1659<br />\n1676<br />\n1693<br />\n1709<br />\n1726<br />\n1742<br />\n1758<br />\n1775<br />\n1791<br />\n1808<br />\n1824<br />\n1840<br />\n1856<br />\n1872<br />\n1889<br />\n1905<br />\n1922<br />\n1938<br />\n1954<br />\n1971<br />\n1988<br />\n2005<br />\n2022<br />\n2038<br />\n2055<br />\n2071<br />\n2088<br />\n2105<br />\n2121<br />\n2137<br />\n2153<br />\n2169<br />\n2186<br />\n2203<br />\n2219<br />\n2236<br />\n2253<br />\n2269<br />\n2286<br />\n2303<br />\n&nbsp; &nbsp; &#39;&#39;&#39;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1614","pygame.time.wait","<p>Will pause for a given number of milliseconds. This function sleeps the process to share the processor with other programs. A program that waits for even a few milliseconds will consume very little processor time. It is slightly less accurate than the&nbsp;<code>pygame.time.delay()</code>&nbsp;function.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; if i == 200:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.time.wait(5000)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1615","pygame.time.delay","<p>Will pause for a given number of milliseconds. This function will use the processor (rather than sleeping) in order to make the delay more accurate than&nbsp;<code>pygame.time.wait()</code>.</p>\n\n<p>This returns the actual number of milliseconds used.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; if i == 200:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; pygame.time.delay(5000)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1616","pygame.time.set_timer","<p>Set an event type to appear on the event queue every given number of milliseconds</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ndef event1(i):<br />\n&nbsp; &nbsp; print(&quot;event&quot;)<br />\n&nbsp; &nbsp;&nbsp;<br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>pygame.time.set_timer(1,100)</p>\n\n<p>gameDisplay.fill(white)</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; event1(i)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1617","pygame.time.Clock","<p>Create an object to help track time</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1618","pygame.time.Clock.tick","<p>This can be used to help limit the runtime speed of a game. By calling&nbsp;<code>Clock.tick(40)</code>&nbsp;once per frame, the program will never run at more than 40 frames per second.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1619","pygame.time.Clock.tick_busy_loop","<p>This can be used to help limit the runtime speed of a game. By calling&nbsp;<code>Clock.tick_busy_loop(40)</code>&nbsp;once per frame, the program will never run at more than 40 frames per second.</p>\n\n<p>Note that this function uses&nbsp;<a href=\"https://www.pygame.org/docs/ref/time.html#pygame.time.delay\" title=\"\"><code>pygame.time.delay()</code>pause the program for an amount of time</a>, which uses lots of CPU in a busy loop to make sure that timing is more accurate.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick_busy_loop(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1620","pygame.time.Clock.get_time","<p>The number of milliseconds that passed between the previous two calls to&nbsp;<code>Clock.tick()</code>.</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; print(clock.get_time())</p>\n\n<p>&#39;&#39;&#39;<br />\n0<br />\n29<br />\n16<br />\n17<br />\n17<br />\n17<br />\n17<br />\n17<br />\n16<br />\n16<br />\n17<br />\n16<br />\n16<br />\n17<br />\n17<br />\n16<br />\n17<br />\n16<br />\n17<br />\n17<br />\n17<br />\n17<br />\n16<br />\n17<br />\n16<br />\n17<br />\n16<br />\n16<br />\n16<br />\n16<br />\n17<br />\n16<br />\n17<br />\n16<br />\n17<br />\n&#39;&#39;&#39;</p>\n\n<p>&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()<br />\n&nbsp;</p>\n","0"),
("1621","pygame.time.Clock.get_rawtime","<p>Similar to&nbsp;<code>Clock.get_time()</code>, but does not include any time used while&nbsp;<code>Clock.tick()</code>&nbsp;was delaying to limit the framerate</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; print(clock.get_rawtime())<br />\n&#39;&#39;&#39;<br />\n0<br />\n44<br />\n12<br />\n12<br />\n14<br />\n11<br />\n10<br />\n10<br />\n10<br />\n10<br />\n10<br />\n10<br />\n10<br />\n10<br />\n10<br />\n11<br />\n10<br />\n11<br />\n10<br />\n10<br />\n12<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1622","pygame.time.Clock.get_fps","<p>Compute your game&rsquo;s framerate (in frames per second). It is computed by averaging the last ten calls to&nbsp;<code>Clock.tick()</code></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)</p>\n\n<p>white = (255,255,255)</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h))</p>\n\n<p><br />\ncrashed = False</p>\n\n<p>i = 0</p>\n\n<p>clock = pygame.time.Clock()</p>\n\n<p>while not crashed:</p>\n\n<p>&nbsp; &nbsp; print(clock.get_fps())<br />\n&#39;&#39;&#39;<br />\n0.0<br />\n0.0<br />\n0.0<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n59.17159652709961<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n51.28205490112305<br />\n60.240966796875<br />\n60.240966796875<br />\n60.240966796875<br />\n60.240966796875<br />\n60.240966796875<br />\n60.240966796875<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; if i == 500:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i = 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; gameDisplay.fill(white)<br />\n&nbsp; &nbsp; gameDisplay.blit(start, (start_x+i,start_y))<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; clock.tick(60)<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1623","pygame.transform.flip","","","0"),
("1624","pygame.transform.scale","<p>Resize to new resolution</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale(start, (start_w, start_h)) # or&nbsp;(start, 0.1) # 0.1 its scale<br />\npygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1625","pygame.transform.rotate","<p>Rotate an image</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.rotate(start, 90)<br />\npygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1626","pygame.transform.rotozoom","<p>This is a combined scale and rotation transform</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.rotozoom(start, 90, 0.1)<br />\npygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1627","pygame.transform.scale2x","<p>This will return a new image that is double the size of the original. It uses the AdvanceMAME Scale2X algorithm which does a &lsquo;jaggie-less&rsquo; scale of bitmap graphics</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.scale2x(start)<br />\npygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1628","pygame.transform.smoothscale","<p>Scale a surface to an arbitrary size smoothly</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)<br />\nstart = pygame.transform.smoothscale(start, (200,300))<br />\npygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0");
INSERT INTO function VALUES
("1629","pygame.transform.get_smoothscale_backend","<p>Return smoothscale filter version in use: &lsquo;GENERIC&rsquo;, &lsquo;MMX&rsquo;, or &lsquo;SSE&rsquo;</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p>print(pygame.transform.get_smoothscale_backend()) # SSE</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1630","pygame.transform.set_smoothscale_backend","<p>Set smoothscale filter version to one of: &lsquo;GENERIC&rsquo;, &lsquo;MMX&rsquo;, or &lsquo;SSE&rsquo;</p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p>print(pygame.transform.get_smoothscale_backend()) # SSE<br />\npygame.transform.set_smoothscale_backend(&#39;GENERIC&#39;)<br />\nprint(pygame.transform.get_smoothscale_backend()) # GENERIC</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1631","pygame.transform.chop","<p>Gets a copy of an image with an interior area removed</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.transform/save.jpg\" style=\"height:750px; width:600px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)</p>\n\n<p>start = pygame.transform.chop(start,(0,100,0,500))</p>\n\n<p>pygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1632","pygame.transform.laplacian","<p>Find edges in a surface</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/pygame/pygame.transform/save2.jpg\" style=\"height:900px; width:600px\" /></p>\n","<p>import pygame<br />\nimport os<br />\nimport time</p>\n\n<p>pygame.display.init()<br />\ngameDisplay &nbsp;= pygame.display.set_mode((800,600))<br />\npygame.display.set_caption(&#39;A bit Racey&#39;)<br />\nclock = pygame.time.Clock()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>pygame.init()</p>\n\n<p># Image size<br />\nstart_w = 200<br />\nstart_h = 300</p>\n\n<p># Image Positions<br />\nstart_x = 100<br />\nstart_y = 100</p>\n\n<p># Load Image<br />\nstart = pygame.image.load(&#39;Ward_S3_3.jpg&#39;)</p>\n\n<p>start = pygame.transform.laplacian(start)</p>\n\n<p>pygame.image.save(start, &quot;save.jpg&quot;)</p>\n\n<p>crashed = False</p>\n\n<p>while not crashed:<br />\n&nbsp; &nbsp; for event in pygame.event.get():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if event.type == pygame.QUIT:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; crashed = True</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; pygame.display.update()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; clock.tick(60)</p>\n\n<p>pygame.quit()<br />\nquit()</p>\n","0"),
("1633","pygame.transform.average_surfaces","","","0"),
("1634","pygame.transform.average_color","","","0"),
("1635","pygame.transform.threshold","","","0"),
("1636","Font Manager","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Notes/Software/Web/Font_menager.jpg\" style=\"height:378px; width:800px\" /></p>\n","","0"),
("3355","keyboard.KEY_DOWN","","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.KEY_DOWN # &#39;down&#39;</p>\n","0"),
("3356","keyboard.KEY_UP","","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.KEY_UP # &#39;up&#39;</p>\n","0"),
("3357","keyboard.KeyboardEvent","","","0"),
("3358","keyboard.all_modifiers","","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.all_modifiers # (&#39;alt&#39;, &#39;alt gr&#39;, &#39;ctrl&#39;, &#39;shift&#39;, &#39;win&#39;)</p>\n","0"),
("3359","keyboard.queue","","","0"),
("3360","keyboard.recording","","","0"),
("3361","keyboard.is_str","<p>Check if is str</p>\n","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.is_str(&#39;x&#39;) # True<br />\nkeyboard.is_str(&#39;1&#39;) # True</p>\n","0"),
("3362","keyboard.is_number","<p>Check if is number</p>\n","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.is_number(&#39;1&#39;) # False<br />\nkeyboard.is_number(1) # True</p>\n","0"),
("3363","keyboard.matches","","","0"),
("3364","keyboard.is_pressed","<p>Returns True if the key is pressed</p>\n","<pre>\n<code>import keyboard\nkeyboard.is_pressed(&#39;space&#39;) # True</code></pre>\n","0"),
("3365","keyboard.canonicalize","<p>Splits a user provided hotkey into a list of steps, each one made of a list of scan codes or names. Used to normalize input at the API boundary. When a combo is given (e.g. &#39;ctrl + a, b&#39;) spaces are ignored</p>\n","<pre>\n<code>import keyboard\nkeyboard.canonicalize(57) # [[57]]\nkeyboard.canonicalize([[57]]) # [[57]]\nkeyboard.canonicalize(&#39;space&#39;) # [[&#39;space&#39;]]\nkeyboard.canonicalize(&#39;ctrl+space&#39;) # [[&#39;ctrl&#39;, &#39;space&#39;]]\nkeyboard.canonicalize(&#39;ctrl+space, space&#39;) # [[&#39;ctrl&#39;, &#39;space&#39;], [&#39;space&#39;]]</code></pre>\n","0"),
("3366","keyboard.call_later","","","0"),
("3367","keyboard.clear_all_hotkeys","<p>Removes all hotkey handlers. Note some functions such as &#39;wait&#39; and &#39;record&#39; internally use hotkeys and will be affected by this call.</p>\n","<p>import keyboard, time</p>\n\n<p>def function1():<br />\n&nbsp; &nbsp; print(1)<br />\n&nbsp; &nbsp;&nbsp;<br />\nkeyboard.add_hotkey(&#39;shift+b&#39;, lambda: function1())<br />\n# keyboard.add_hotkey(&#39;shift,b&#39;, lambda: function1())</p>\n\n<p>time.sleep(10)<br />\nkeyboard.clear_all_hotkeys()<br />\n&nbsp;</p>\n","0"),
("3368","keyboard.add_hotkey","<p>Invokes a callback every time a key combination is pressed. The hotkey must be in the format &quot;ctrl+shift+a, s&quot;. This would trigger when the user holds ctrl, shift and &quot;a&quot; at once, releases, and then presses &quot;s&quot;.&nbsp;</p>\n","<p>import keyboard</p>\n\n<p>def function1():<br />\n&nbsp; &nbsp; print(1)<br />\n&nbsp; &nbsp;&nbsp;<br />\nkeyboard.add_hotkey(&#39;shift+b&#39;, lambda: function1())<br />\n# keyboard.add_hotkey(&#39;shift,b&#39;, lambda: function1())</p>\n","0"),
("3369","keyboard.hook","","","0"),
("3370","keyboard.unhook","","","0"),
("3371","keyboard.unhook_all","","","0"),
("3372","keyboard.hook_key","","","0"),
("3373","keyboard.on_press","","","0"),
("3374","keyboard.on_release","","","0"),
("3375","keyboard.remove_hotkey","","","0"),
("3376","keyboard.add_word_listener","","","0"),
("3377","keyboard.remove_word_listener","","","0"),
("3378","keyboard.add_abbreviation","","","0"),
("3379","keyboard.stash_state","","","0"),
("3380","keyboard.restore_state","","","0"),
("3381","keyboard.write","","","0"),
("3382","keyboard.to_scan_code","","","0"),
("3383","keyboard.send","","","0"),
("3384","keyboard.press","","","0"),
("3385","keyboard.release","","","0"),
("3386","keyboard.press_and_release","","","0"),
("3387","keyboard.wait","<p>Blocks the program execution until the given key combination is pressed or, if given no parameters, blocks forever</p>\n","<p>import keyboard</p>\n\n<p>keyboard.wait(&#39;esc&#39;) # Blocks until you press esc. &nbsp; &nbsp;<br />\n# keyboard.wait() # Block forever.</p>\n","0"),
("3388","keyboard.read_key","","","0"),
("3389","keyboard.record","<p>Records all keyboard events from all keyboards until the user presses the given key combination. Then returns the list of events recorded</p>\n","<p>import keyboard, time<br />\n&nbsp; &nbsp;&nbsp;<br />\nrecorded = keyboard.record(until=&#39;esc&#39;)</p>\n\n<p>print(recorded)</p>\n\n<p>&#39;&#39;&#39;<br />\n[KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(backspace down), KeyboardEvent(backspace up), KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(esc down)]<br />\n&#39;&#39;&#39;</p>\n","0"),
("3390","keyboard.play","<p>Plays a sequence of recorded events, maintaining the relative time intervals. If speed_factor is &lt;= 0 then the actions are replayed as fast as the OS allows</p>\n","<p>import keyboard<br />\n&nbsp; &nbsp;&nbsp;<br />\nrecorded = keyboard.record(until=&#39;esc&#39;)</p>\n\n<p>print(recorded)</p>\n\n<p>&#39;&#39;&#39;<br />\n[KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(backspace down), KeyboardEvent(backspace up), KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(d down), KeyboardEvent(d up), KeyboardEvent(esc down)]<br />\n&#39;&#39;&#39;</p>\n\n<p>keyboard.play(recorded, speed_factor=1.0)</p>\n","0"),
("3391","keyboard.get_typed_strings","","","0"),
("3392","keyboard.start_recording","","","0"),
("3393","keyboard.stop_recording","","","0"),
("3394","keyboard.get_shortcut_name","<p>Returns a string representation of shortcut from the given key names, or the currently pressed keys if not given. This function</p>\n","<p>import&nbsp;keyboard</p>\n\n<p>keyboard.get_shortcut_name([&#39;+&#39;, &#39;left ctrl&#39;, &#39;shift&#39;]) # &#39;ctrl+shift+plus&#39;</p>\n","0"),
("3395","keyboard.read_shortcut","","","0"),
("3396","keyboard.remove_all_hotkeys (alias)","","","0"),
("3397","keyboard.register_hotkey (alias)","","","0"),
("3398","keyboard.register_word_listener (alias)","","","0"),
("3399","keyboard.remove_abbreviation (alias)","","","0"),
("3400","keyboard.register_abbreviation (alias)","","","0"),
("3401","keyboard.replay (alias)","","","0"),
("3402","keyboard.read_hotkey (alias)","","","0"),
("1637","Personal documents","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Personal_Documents/Dowod_osobisty.jpg\" style=\"height:297px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Other/Documents/Other/Personal_Documents/prawo_jazdy.jpg\" style=\"height:271px; width:800px\" /></p>\n","","0"),
("1638","pygame.locals","<p>from pygame import locals</p>\n","","0"),
("1639","ipaddress.ip_address(address)","<p>Return an&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address\" title=\"ipaddress.IPv4Address\"><code>IPv4Address</code></a>&nbsp;or&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Address\" title=\"ipaddress.IPv6Address\"><code>IPv6Address</code></a>&nbsp;object depending on the IP address passed as argument</p>\n","<p>import ipaddress<br />\nipaddress.ip_address(&#39;192.168.0.1&#39;) # IPv4Address(&#39;192.168.0.1&#39;)<br />\nipaddress.ip_address(&#39;192.168.1.35&#39;) # IPv4Address(&#39;192.168.1.35&#39;)<br />\nipaddress.ip_address(&#39;2001:0db8:0000:0000:0000:0000:1428:57ab&#39;) # IPv6Address(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>&nbsp;</p>\n\n<p>Adres zazwyczaj zapisuje siÄ™ jako osiem 16-bitowych blok&oacute;w zapisanych w systemie szesnastkowym oddzielonych dwukropkiem. Dozwolone jest pomijanie poczÄ…tkowych zer w bloku, a takÅ¼e pominiÄ™cie jednego ciÄ…gu blok&oacute;w skÅ‚adajÄ…cych siÄ™ wyÅ‚Ä…cznie z zer. PominiÄ™te bloki zer oznacza siÄ™ podw&oacute;jnym separatorem blok&oacute;w (<em>dwukropek</em>). Dopuszczalny jest tylko jeden podw&oacute;jny dwukropek &quot;::&quot; w adresie<sup><a href=\"https://pl.wikipedia.org/wiki/IPv6#cite_note-CITEREFRFC_4291-2\">[2]</a></sup>. PoniÅ¼sze adresy sÄ… r&oacute;wnoznaczne:</p>\n\n<ul>\n	<li>2001:0db8:0000:0000:0000:0000:1428:57ab</li>\n	<li>2001:0db8:0:0:0:0:1428:57ab</li>\n	<li>2001:0db8:0:0::1428:57ab</li>\n	<li>2001:0db8::1428:57ab</li>\n	<li>2001:db8::1428:57ab</li>\n</ul>\n","0"),
("1640","ipaddress.ip_network(address, strict=True)","<p>Return an&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network\" title=\"ipaddress.IPv4Network\"><code>IPv4Network</code></a>&nbsp;or&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network\" title=\"ipaddress.IPv6Network\"><code>IPv6Network</code></a>&nbsp;object depending on the IP address passed as argument</p>\n","<p>import ipaddress</p>\n\n<p>ipaddress.ip_network(&#39;192.168.0.0/28&#39;) # IPv4Network(&#39;192.168.0.0/28&#39;)</p>\n\n<p>ipaddress.ip_network(&#39;192.168.0.0&#39;) # IPv4Network(&#39;192.168.0.0/32&#39;)<br />\nipaddress.ip_network(&#39;192.168.0.1&#39;) # IPv4Network(&#39;192.168.0.1/32&#39;)<br />\nipaddress.ip_address(&#39;2001:0db8:0000:0000:0000:0000:1428:57ab&#39;) # IPv6Address(&#39;2001:db8::1428:57ab&#39;)<br />\nipaddress.ip_network(&#39;2001:0db8:0000:0000:0000:0000:1428:57ab&#39;) # IPv6Network(&#39;2001:db8::1428:57ab/128&#39;)</p>\n\n<p>str(ipaddress.ip_network(&#39;2001:0db8:0000:0000:0000:0000:1428:57ab&#39;)) # &#39;2001:db8::1428:57ab/128&#39;</p>\n","0"),
("1641","ipaddress.ip_interface(address)","<p>Return an&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Interface\" title=\"ipaddress.IPv4Interface\"><code>IPv4Interface</code></a>&nbsp;or&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Interface\" title=\"ipaddress.IPv6Interface\"><code>IPv6Interface</code></a>&nbsp;object depending on the IP address passed as argument</p>\n","<p>import ipaddress</p>\n\n<p>ipaddress.ip_interface(&#39;2001:0db8:0000:0000:0000:0000:1428:57ab&#39;) # IPv6Interface(&#39;2001:db8::1428:57ab/128&#39;)<br />\nipaddress.ip_interface(&#39;192.168.0.0&#39;) # IPv4Interface(&#39;192.168.0.0/32&#39;)</p>\n","0"),
("1642","class ipaddress.IPv4Address(address)","<p>Construct an IPv4 address</p>\n\n<p>The following constitutes a valid IPv4 address:</p>\n\n<ol>\n	<li>A string in decimal-dot notation, consisting of four decimal integers in the inclusive range 0&ndash;255, separated by dots (e.g.&nbsp;<code>192.168.0.1</code>). Each integer represents an octet (byte) in the address. Leading zeroes are tolerated only for values less than 8 (as there is no ambiguity between the decimal and octal interpretations of such strings).</li>\n	<li>An integer that fits into 32 bits.</li>\n	<li>An integer packed into a&nbsp;<a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"bytes\"><code>bytes</code></a>&nbsp;object of length 4 (most significant octet first).</li>\n</ol>\n","<pre>\nimport ipaddress\nipaddress.IPv4Address(&#39;192.168.0.1&#39;) # IPv4Address(&#39;192.168.0.1&#39;)</pre>\n\n<p>ip =&nbsp;ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n","0"),
("1643","version","<p>The appropriate version number:&nbsp;<code>4</code>&nbsp;for IPv4,&nbsp;<code>6</code>&nbsp;for IPv6</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.version # 4</p>\n","0"),
("1644","max_prefixlen","<p>The total number of bits in the address representation for this version:&nbsp;<code>32</code>&nbsp;for IPv4,&nbsp;<code>128</code>&nbsp;for IPv6</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.max_prefixlen # 32</p>\n","0"),
("1645","compressed","<p>Convert&nbsp;IPv4Address to string</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.compressed # &#39;192.168.0.1&#39;</p>\n","0"),
("1646","exploded","<p>The string representation in dotted decimal notation</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.exploded # &#39;192.168.0.1&#39;</p>\n","0"),
("1647","packed","<p>The binary representation of this address</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.packed # b&#39;xc0xa8x00x01&#39;</p>\n","0"),
("1648","reverse_pointer","<p>The name of the reverse DNS PTR record for the IP address</p>\n\n<p>While the main purpose of the Domain Name System is to point domains to IP addresses, a PTR record works in the opposite way - it associates an IP with a domain name. Because of its purpose, a PTR record is sometimes called Reverse DNS Record. The purpose of a PTR record is mostly administrative - it shows an IP is in fact used with a particular domain.</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.reverse_pointer # &#39;1.0.168.192.in-addr.arpa&#39;</p>\n","0"),
("1649","is_multicast","<p><code>True</code>&nbsp;if the address is reserved for multicast use</p>\n\n<p>In&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_networking\" title=\"Computer networking\">computer networking</a>,&nbsp;<strong>multicast</strong>&nbsp;is group communication&nbsp;where&nbsp;<a href=\"https://en.wikipedia.org/wiki/Information\" title=\"Information\">information</a>&nbsp;is addressed to a group of destination computers simultaneously</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_multicast # False</p>\n","0"),
("1650","is_private","<p><code>True</code>&nbsp;if the address is allocated for private networks</p>\n\n<p>10.0.0.0 &ndash; 10.255.255.255</p>\n\n<p>172.16.0.0 &ndash; 172.31.255.255</p>\n\n<p>192.168.0.0 &ndash; 192.168.255.255</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_private # True</p>\n","0"),
("1651","is_global","<p><code>True</code>&nbsp;if the address is allocated for public networks</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_global # False</p>\n","0"),
("1652","is_unspecified","<p><code>True</code>&nbsp;if the address is unspecified</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_unspecified # False</p>\n","0"),
("1653","is_reserved","<p><code>True</code>&nbsp;if the address is otherwise IETF reserved</p>\n\n<table>\n	<tbody>\n		<tr>\n			<th>Address block (<a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\" title=\"Classless Inter-Domain Routing\">CIDR</a>)</th>\n			<th>Range</th>\n			<th>Number of addresses</th>\n			<th>Scope</th>\n			<th>Purpose</th>\n		</tr>\n		<tr>\n			<td>0.0.0.0/8</td>\n			<td>0.0.0.0 &ndash;<br />\n			0.255.255.255</td>\n			<td>16,777,216</td>\n			<td>Software</td>\n			<td>Used for broadcast messages to the current (&quot;this&quot;)<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-1\">[1]</a></sup></td>\n		</tr>\n		<tr>\n			<td>10.0.0.0/8</td>\n			<td>10.0.0.0 &ndash;<br />\n			10.255.255.255</td>\n			<td>16,777,216</td>\n			<td>Private network</td>\n			<td>Used for local communications within a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Private_network\" title=\"Private network\">private network</a><sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc1918-2\">[2]</a></sup></td>\n		</tr>\n		<tr>\n			<td>100.64.0.0/10</td>\n			<td>100.64.0.0 &ndash;<br />\n			100.127.255.255</td>\n			<td>4,194,304</td>\n			<td>Private network</td>\n			<td>Used for communications between a service provider and its subscribers when using a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Carrier-grade_NAT\" title=\"Carrier-grade NAT\">carrier-grade NAT</a><sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-3\">[3]</a></sup></td>\n		</tr>\n		<tr>\n			<td>127.0.0.0/8</td>\n			<td>127.0.0.0 &ndash;<br />\n			127.255.255.255</td>\n			<td>16,777,216</td>\n			<td>Host</td>\n			<td>Used for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Loopback_address\" title=\"Loopback address\">loopback addresses</a>&nbsp;to the local host<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-4\">[4]</a></sup></td>\n		</tr>\n		<tr>\n			<td>169.254.0.0/16</td>\n			<td>169.254.0.0 &ndash;<br />\n			169.254.255.255</td>\n			<td>65,536</td>\n			<td>Subnet</td>\n			<td>Used for&nbsp;<a href=\"https://en.wikipedia.org/wiki/Link-local_address\" title=\"Link-local address\">link-local addresses</a>&nbsp;between two hosts on a single link when no IP address is otherwise specified, such as would have normally been retrieved from a&nbsp;<a href=\"https://en.wikipedia.org/wiki/DHCP\" title=\"DHCP\">DHCP</a>&nbsp;server<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-5\">[5]</a></sup></td>\n		</tr>\n		<tr>\n			<td>172.16.0.0/12</td>\n			<td>172.16.0.0 &ndash;<br />\n			172.31.255.255</td>\n			<td>1,048,576</td>\n			<td>Private network</td>\n			<td>Used for local communications within a private network<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc1918-2\">[2]</a></sup></td>\n		</tr>\n		<tr>\n			<td>192.0.0.0/24</td>\n			<td>192.0.0.0 &ndash;<br />\n			192.0.0.255</td>\n			<td>256</td>\n			<td>Private network</td>\n			<td>Used for the IANA IPv4 Special Purpose Address Registry<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc5736-6\">[6]</a></sup></td>\n		</tr>\n		<tr>\n			<td>192.0.2.0/24</td>\n			<td>192.0.2.0 &ndash;<br />\n			192.0.2.255</td>\n			<td>256</td>\n			<td>Documentation</td>\n			<td>Assigned as &quot;TEST-NET-1&quot; for use in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Documentation\" title=\"Documentation\">documentation</a>&nbsp;and examples. It should not be used publicly.<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc5737-7\">[7]</a></sup></td>\n		</tr>\n		<tr>\n			<td>192.88.99.0/24</td>\n			<td>192.88.99.0 &ndash;<br />\n			192.88.99.255</td>\n			<td>256</td>\n			<td>Internet</td>\n			<td>Used by&nbsp;<a href=\"https://en.wikipedia.org/wiki/6to4\" title=\"6to4\">6to4</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Anycast\" title=\"Anycast\">anycast</a>&nbsp;relays (deprecated)<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-8\">[8]</a></sup></td>\n		</tr>\n		<tr>\n			<td>192.168.0.0/16</td>\n			<td>192.168.0.0 &ndash;<br />\n			192.168.255.255</td>\n			<td>65,536</td>\n			<td>Private network</td>\n			<td>Used for local communications within a private network<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc1918-2\">[2]</a></sup></td>\n		</tr>\n		<tr>\n			<td>198.18.0.0/15</td>\n			<td>198.18.0.0 &ndash;<br />\n			198.19.255.255</td>\n			<td>131,072</td>\n			<td>Private network</td>\n			<td>Used for testing of inter-network communications between two separate subnets<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-9\">[9]</a></sup></td>\n		</tr>\n		<tr>\n			<td>198.51.100.0/24</td>\n			<td>198.51.100.0 &ndash;<br />\n			198.51.100.255</td>\n			<td>256</td>\n			<td>Documentation</td>\n			<td>Assigned as &quot;TEST-NET-2&quot; for use in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Documentation\" title=\"Documentation\">documentation</a>&nbsp;and examples. It should not be used publicly.<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc5737-7\">[7]</a></sup></td>\n		</tr>\n		<tr>\n			<td>203.0.113.0/24</td>\n			<td>203.0.113.0 &ndash;<br />\n			203.0.113.255</td>\n			<td>256</td>\n			<td>Documentation</td>\n			<td>Assigned as &quot;TEST-NET-3&quot; for use in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Documentation\" title=\"Documentation\">documentation</a>&nbsp;and examples. It should not be used publicly.<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc5737-7\">[7]</a></sup></td>\n		</tr>\n		<tr>\n			<td>224.0.0.0/4</td>\n			<td>224.0.0.0 &ndash;<br />\n			239.255.255.255</td>\n			<td>268,435,456</td>\n			<td>Internet</td>\n			<td>Reserved for multicast<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc1112-10\">[10]</a></sup></td>\n		</tr>\n		<tr>\n			<td>240.0.0.0/4</td>\n			<td>240.0.0.0 &ndash;<br />\n			255.255.255.254</td>\n			<td>268,435,456</td>\n			<td>Internet</td>\n			<td>Reserved for future use<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc6890-11\">[11]</a></sup></td>\n		</tr>\n		<tr>\n			<td>255.255.255.255/32</td>\n			<td>255.255.255.255</td>\n			<td>1</td>\n			<td>Subnet</td>\n			<td>Reserved for the &quot;limited broadcast&quot; destination address<sup><a href=\"https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc6890-11\">[11]</a></sup></td>\n		</tr>\n	</tbody>\n</table>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_reserved # False</p>\n","0"),
("1654","is_loopback","<p><code>True</code>&nbsp;if this is a loopback address</p>\n\n<p>Loopback address is a special IP number (127.0.0.1) that is designated for the software loopback interface of a machine. The loopback interface has no hardware associated with it, and it is not physically connected to a network.</p>\n\n<p>The loopback interface allows IT professionals to test IP software without worrying about broken or corrupted drivers or hardware.</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_loopback # False</p>\n","0"),
("1655","is_link_local","<p><code>True</code>&nbsp;if the address is reserved for link-local usage</p>\n\n<p>In a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_network\" title=\"Computer network\">computer network</a>, a&nbsp;<strong>link-local address</strong>&nbsp;is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Network_address\" title=\"Network address\">network address</a>&nbsp;that is valid only for communications within the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Network_segment\" title=\"Network segment\">network segment</a>&nbsp;(<a href=\"https://en.wikipedia.org/wiki/Link_(telecommunications)\" title=\"Link (telecommunications)\">link</a>) or the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Broadcast_domain\" title=\"Broadcast domain\">broadcast domain</a>&nbsp;that the host is connected to.</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Address(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_link_local # False</p>\n","0"),
("1656","class ipaddress.IPv6Address(address)","<p>Construct an IPv6 address</p>\n\n<p>The following constitutes a valid IPv6 address:</p>\n\n<ol>\n	<li>A string consisting of eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons. This describes an&nbsp;<em>exploded</em>&nbsp;(longhand) notation. The string can also be&nbsp;<em>compressed</em>&nbsp;(shorthand notation) by various means. See&nbsp;<a href=\"https://tools.ietf.org/html/rfc4291.html\"><strong>RFC 4291</strong></a>&nbsp;for details. For example,&nbsp;<code>&quot;0000:0000:0000:0000:0000:0abc:0007:0def&quot;</code>&nbsp;can be compressed to&nbsp;<code>&quot;::abc:7:def&quot;</code>.</li>\n	<li>An integer that fits into 128 bits.</li>\n	<li>An integer packed into a&nbsp;<a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"bytes\"><code>bytes</code></a>&nbsp;object of length 16, big-endian.</li>\n</ol>\n","<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n","0"),
("1657","compressed","<p>The short form of the address representation, with leading zeroes in groups omitted and the longest sequence of groups consisting entirely of zeroes collapsed to a single empty group.</p>\n\n<p>This is also the value returned by&nbsp;<code>str(addr)</code>&nbsp;for IPv6 addresses.</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.compressed # &#39;2001:db8::1000&#39;</p>\n","0"),
("1658","exploded","<p>The long form of the address representation, with all leading zeroes and groups consisting entirely of zeroes included</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.exploded # &#39;2001:0db8:0000:0000:0000:0000:0000:1000&#39;</p>\n","0"),
("1659","packed","<p>The binary representation of this address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.packed # b&#39; x01 xb8x00x00x00x00x00x00x00x00x00x00x10x00&#39;</p>\n","0"),
("1660","reverse_pointer","<p>The name of the reverse DNS PTR record for the IP address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.reverse_pointer # &#39;0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa&#39;</p>\n","0"),
("1661","version","<p>The appropriate version number:&nbsp;<code>4</code>&nbsp;for IPv4,&nbsp;<code>6</code>&nbsp;for IPv6.</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.version # 6</p>\n","0"),
("1662","max_prefixlen","<p>The total number of bits in the address representation for this version:&nbsp;<code>32</code>&nbsp;for IPv4,&nbsp;<code>128</code>&nbsp;for IPv6</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.max_prefixlen # 128</p>\n","0"),
("1663","is_multicast","<p><code>True</code>&nbsp;if the address is reserved for multicast use</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_multicast # False</p>\n","0"),
("1664","is_private","<p><code>True</code>&nbsp;if the address is allocated for private networks</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_private # True</p>\n","0"),
("1665","is_global","<p><code>True</code>&nbsp;if the address is allocated for public networks</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_global # False</p>\n","0"),
("1666","is_unspecified","<p><code>True</code>&nbsp;if the address is unspecified</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_unspecified # False</p>\n","0"),
("1667","is_reserved","<p><code>True</code>&nbsp;if the address is otherwise IETF reserved</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_reserved # False</p>\n","0"),
("1668","is_loopback","<p><code>True</code>&nbsp;if this is a loopback address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_loopback # False</p>\n","0"),
("1669","is_link_local","<p>These attributes are true for the network as a whole if they are true for both the network address and the broadcast address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_link_local # False</p>\n","0"),
("1670","is_site_local","<p><code>True</code>&nbsp;if the address is reserved for site-local usage</p>\n\n<p>Site-local addresses are equivalent to private IP addresses in IPv4</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)</p>\n\n<p>ip.is_site_local # False</p>\n","0"),
("1671","ipv4_mapped","","","0"),
("1672","sixtofour","","","0"),
("1673","teredo","","","0"),
("1674","class ipaddress.IPv4Network(address, strict=True)","<p>Construct an IPv4 network definition.&nbsp;<em>address</em>&nbsp;can be one of the following:</p>\n\n<ol>\n	<li>\n	<p>A string consisting of an IP address and an optional mask, separated by a slash (<code>/</code>). The IP address is the network address, and the mask can be either a single number, which means it&rsquo;s a&nbsp;<em>prefix</em>, or a string representation of an IPv4 address. If it&rsquo;s the latter, the mask is interpreted as a&nbsp;<em>net mask</em>&nbsp;if it starts with a non-zero field, or as a&nbsp;<em>host mask</em>&nbsp;if it starts with a zero field. If no mask is provided, it&rsquo;s considered to be&nbsp;<code>/32</code>.</p>\n\n	<p>For example, the following&nbsp;<em>address</em>&nbsp;specifications are equivalent:&nbsp;<code>192.168.1.0/24</code>,&nbsp;<code>192.168.1.0/255.255.255.0</code>&nbsp;and&nbsp;<code>192.168.1.0/0.0.0.255</code>.</p>\n	</li>\n	<li>\n	<p>An integer that fits into 32 bits. This is equivalent to a single-address network, with the network address being&nbsp;<em>address</em>&nbsp;and the mask being&nbsp;<code>/32</code>.</p>\n	</li>\n	<li>\n	<p>An integer packed into a&nbsp;<a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"bytes\"><code>bytes</code></a>&nbsp;object of length 4, big-endian. The interpretation is similar to an integer&nbsp;<em>address</em>.</p>\n	</li>\n	<li>\n	<p>A two-tuple of an address description and a netmask, where the address description is either a string, a 32-bits integer, a 4-bytes packed integer, or an existing IPv4Address object; and the netmask is either an integer representing the prefix length (e.g.&nbsp;<code>24</code>) or a string representing the prefix mask (e.g.&nbsp;<code>255.255.255.0</code>).</p>\n	</li>\n</ol>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)<br />\nip # IPv4Network(&#39;192.168.0.1/32&#39;)</p>\n","0"),
("1675","version","<p>The appropriate version number:&nbsp;<code>4</code>&nbsp;for IPv4,&nbsp;<code>6</code>&nbsp;for IPv6</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.version # 4</p>\n","0"),
("1676","max_prefixlen","<p>The total number of bits in the address representation for this version:&nbsp;<code>32</code>&nbsp;for IPv4,&nbsp;<code>128</code>&nbsp;for IPv6.</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.max_prefixlen # 32</p>\n","0"),
("1677","is_multicast","<p><code>True</code>&nbsp;if the address is reserved for multicast use</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_multicast # False</p>\n","0"),
("1678","is_private","<p><code>True</code>&nbsp;if the address is allocated for private networks</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_private # True</p>\n","0"),
("1679","is_unspecified","<p><code>True</code>&nbsp;if the address is unspecified</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_unspecified # False</p>\n","0"),
("1680","is_reserved","<p><code>True</code>&nbsp;if the address is otherwise IETF reserved</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_reserved # False</p>\n","0");
INSERT INTO function VALUES
("1681","is_loopback","<p><code>True</code>&nbsp;if this is a loopback address</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_loopback # False</p>\n","0"),
("1682","is_link_local","<p><code>True</code>&nbsp;if the address is reserved for link-local usage</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.is_link_local # False</p>\n","0"),
("1683","network_address","<p>The network address for the network</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.network_address # IPv4Address(&#39;192.168.0.1&#39;)</p>\n","0"),
("1684","broadcast_address","<p>The broadcast address for the network. Packets sent to the broadcast address should be received by every host on the network</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.broadcast_address # IPv4Address(&#39;192.168.0.1&#39;)</p>\n","0"),
("1685","hostmask","<p>The host mask, as a string</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.hostmask # IPv4Address(&#39;0.0.0.0&#39;)</p>\n","0"),
("1686","with_prefixlen","<p>Ip addres and total number of bits</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.with_prefixlen # &#39;192.168.0.1/32&#39;</p>\n","0"),
("1687","compressed","<p>The string representation in dotted decimal notation</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.compressed # &#39;192.168.0.1/32&#39;</p>\n","0"),
("1688","exploded","<p>The string representation in dotted decimal notation</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.exploded # &#39;192.168.0.1/32&#39;</p>\n","0"),
("1689","with_netmask","<p>Ip adress and&nbsp;netmask</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.with_netmask # &#39;192.168.0.1/255.255.255.255&#39;</p>\n","0"),
("1690","with_hostmask","<p>Ip adress and&nbsp;hostmask</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.with_hostmask # &#39;192.168.0.1/0.0.0.0&#39;</p>\n","0"),
("1691","num_addresses","<p>The total number of addresses in the network</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.num_addresses # 1</p>\n","0"),
("1692","prefixlen","<p>Length of the network prefix, in bits</p>\n","<p>import ipaddress<br />\nip = ipaddress.IPv4Network(&#39;192.168.0.1&#39;)</p>\n\n<p>ip.prefixlen # 32</p>\n","0"),
("1693","hosts()","<p>Returns an iterator over the usable hosts in the network. The usable hosts are all the IP addresses that belong to the network, except the network address itself and the network broadcast address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.0.2.0/29&#39;)</p>\n\n<p>list(ip.hosts()) # [IPv4Address(&#39;192.0.2.1&#39;), IPv4Address(&#39;192.0.2.2&#39;), IPv4Address(&#39;192.0.2.3&#39;), IPv4Address(&#39;192.0.2.4&#39;), IPv4Address(&#39;192.0.2.5&#39;), IPv4Address(&#39;192.0.2.6&#39;)]</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.0.2.0&#39;)<br />\nlist(ip.hosts()) # []</p>\n","0"),
("1694","overlaps(other)","","","0"),
("1695","address_exclude(network)","<p>Computes the network definitions resulting from removing the given&nbsp;<em>network</em>&nbsp;from this one</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.0.2.0/28&#39;)<br />\nip2 = ipaddress.IPv4Network(&#39;192.0.2.1/32&#39;)<br />\nlist(ip.address_exclude(ip2)) # [IPv4Network(&#39;192.0.2.8/29&#39;), IPv4Network(&#39;192.0.2.4/30&#39;), IPv4Network(&#39;192.0.2.2/31&#39;), IPv4Network(&#39;192.0.2.0/32&#39;)]</p>\n","0"),
("1696","subnets(prefixlen_diff=1, new_prefix=None)","<p>The subnets that join to make the current network definition, depending on the argument values</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.0.2.0/28&#39;)</p>\n\n<p>list(ip.subnets())<br />\n[IPv4Network(&#39;192.0.2.0/29&#39;), IPv4Network(&#39;192.0.2.8/29&#39;)]</p>\n","0"),
("1697","supernet(prefixlen_diff=1, new_prefix=None)","<p>The supernet containing this network definition, depending on the argument values.&nbsp;<em>prefixlen_diff</em>&nbsp;is the amount our prefix length should be decreased by</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv4Network(&#39;192.0.2.0/28&#39;)</p>\n\n<p>list(ip.supernet())<br />\n[IPv4Address(&#39;192.0.2.0&#39;), IPv4Address(&#39;192.0.2.1&#39;), IPv4Address(&#39;192.0.2.2&#39;), IPv4Address(&#39;192.0.2.3&#39;), IPv4Address(&#39;192.0.2.4&#39;), IPv4Address(&#39;192.0.2.5&#39;), IPv4Address(&#39;192.0.2.6&#39;), IPv4Address(&#39;192.0.2.7&#39;), IPv4Address(&#39;192.0.2.8&#39;), IPv4Address(&#39;192.0.2.9&#39;), IPv4Address(&#39;192.0.2.10&#39;), IPv4Address(&#39;192.0.2.11&#39;), IPv4Address(&#39;192.0.2.12&#39;), IPv4Address(&#39;192.0.2.13&#39;), IPv4Address(&#39;192.0.2.14&#39;), IPv4Address(&#39;192.0.2.15&#39;), IPv4Address(&#39;192.0.2.16&#39;), IPv4Address(&#39;192.0.2.17&#39;), IPv4Address(&#39;192.0.2.18&#39;), IPv4Address(&#39;192.0.2.19&#39;), IPv4Address(&#39;192.0.2.20&#39;), IPv4Address(&#39;192.0.2.21&#39;), IPv4Address(&#39;192.0.2.22&#39;), IPv4Address(&#39;192.0.2.23&#39;), IPv4Address(&#39;192.0.2.24&#39;), IPv4Address(&#39;192.0.2.25&#39;), IPv4Address(&#39;192.0.2.26&#39;), IPv4Address(&#39;192.0.2.27&#39;), IPv4Address(&#39;192.0.2.28&#39;), IPv4Address(&#39;192.0.2.29&#39;), IPv4Address(&#39;192.0.2.30&#39;), IPv4Address(&#39;192.0.2.31&#39;)]</p>\n","0"),
("1698","compare_networks(other)","<p>Compare this network to&nbsp;<em>other</em>. In this comparison only the network addresses are considered; host bits aren&rsquo;t. Returns either&nbsp;<code>-1</code>,&nbsp;<code>0</code>&nbsp;or&nbsp;<code>1</code>.</p>\n","<p>import ipaddress</p>\n\n<p>ipaddress.ip_network(&#39;192.0.2.1/32&#39;).compare_networks(ipaddress.ip_network(&#39;192.0.2.2/32&#39;)) # -1</p>\n\n<p>ipaddress.ip_network(&#39;192.0.2.1/32&#39;).compare_networks(ipaddress.ip_network(&#39;192.0.2.0/32&#39;)) # 1</p>\n\n<p>ipaddress.ip_network(&#39;192.0.2.1/32&#39;).compare_networks(ipaddress.ip_network(&#39;192.0.2.1/32&#39;)) # 0</p>\n","0"),
("1699","class ipaddress.IPv6Network(address, strict=True)","<p>Construct an IPv6 network definition.&nbsp;<em>address</em>&nbsp;can be one of the following:</p>\n\n<ol>\n	<li>\n	<p>A string consisting of an IP address and an optional mask, separated by a slash (<code>/</code>). The IP address is the network address, and the mask can be either a single number, which means it&rsquo;s a&nbsp;<em>prefix</em>, or a string representation of an IPv6 address. If it&rsquo;s the latter, the mask is interpreted as a&nbsp;<em>net mask</em>. If no mask is provided, it&rsquo;s considered to be&nbsp;<code>/128</code>.</p>\n\n	<p>For example, the following&nbsp;<em>address</em>&nbsp;specifications are equivalent:&nbsp;<code>2001:db00::0/24</code>&nbsp;and&nbsp;<code>2001:db00::0/ffff:ff00::</code>.</p>\n	</li>\n	<li>\n	<p>An integer that fits into 128 bits. This is equivalent to a single-address network, with the network address being&nbsp;<em>address</em>&nbsp;and the mask being&nbsp;<code>/128</code>.</p>\n	</li>\n	<li>\n	<p>An integer packed into a&nbsp;<a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"bytes\"><code>bytes</code></a>&nbsp;object of length 16, big-endian. The interpretation is similar to an integer&nbsp;<em>address</em>.</p>\n	</li>\n	<li>\n	<p>A two-tuple of an address description and a netmask, where the address description is either a string, a 128-bits integer, a 16-bytes packed integer, or an existing IPv6Address object; and the netmask is an integer representing the prefix length.</p>\n	</li>\n</ol>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n","0"),
("1700","version","<p>The appropriate version number:&nbsp;<code>4</code>&nbsp;for IPv4,&nbsp;<code>6</code>&nbsp;for IPv6</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)<br />\nip.version # 6</p>\n","0"),
("1701","max_prefixlen","<p>The total number of bits in the address representation for this version:&nbsp;<code>32</code>&nbsp;for IPv4,&nbsp;<code>128</code>&nbsp;for IPv6.</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.max_prefixlen # 128</p>\n","0"),
("1702","is_multicast","<p><code>True</code>&nbsp;if the address is reserved for multicast use</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_multicast # False</p>\n","0"),
("1703","is_private","<p><code>True</code>&nbsp;if the address is allocated for private networks</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_private # True</p>\n","0"),
("1704","is_unspecified","<p><code>True</code>&nbsp;if the address is unspecified</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_unspecified # False</p>\n","0"),
("1705","is_reserved","<p><code>True</code>&nbsp;if the address is otherwise IETF reserved</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_reserved # False</p>\n","0"),
("1706","is_loopback","<p><code>True</code>&nbsp;if this is a loopback address</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_loopback # False</p>\n","0"),
("1707","is_link_local","<p><code>True</code>&nbsp;if the address is reserved for link-local usage</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.is_link_local # False</p>\n","0"),
("1708","network_address","<p>The network address for the network</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.network_address # IPv6Address(&#39;2001:db8::1428:57ab&#39;)</p>\n","0"),
("1709","broadcast_address","<p>The broadcast address for the network. Packets sent to the broadcast address should be received by every host on the network</p>\n","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Network(&#39;2001:db8::1428:57ab&#39;)</p>\n\n<p>ip.broadcast_address # IPv6Address(&#39;2001:db8::1428:57ab&#39;)</p>\n","0"),
("1710","hostmask","","","0"),
("1711","with_prefixlen","","","0"),
("1712","compressed","","","0"),
("1713","exploded","","","0"),
("1714","with_netmask","","","0"),
("1715","with_hostmask","","","0"),
("1716","num_addresses","","","0"),
("1717","prefixlen","","","0"),
("1718","hosts()","","","0"),
("1719","overlaps(other)","","","0"),
("1720","address_exclude(network)","","","0"),
("1721","subnets(prefixlen_diff=1, new_prefix=None)","","","0"),
("1722","supernet(prefixlen_diff=1, new_prefix=None)","","","0"),
("1723","compare_networks(other)","","","0"),
("1724","is_site_local","","","0"),
("1725","class ipaddress.IPv4Interface(address)","<p>Construct an IPv4 interface. The meaning of&nbsp;<em>address</em>&nbsp;is as in the constructor of&nbsp;<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network\" title=\"ipaddress.IPv4Network\"><code>IPv4Network</code></a>, except that arbitrary host addresses are always accepted</p>\n","<p>import ipaddress</p>\n\n<p>interface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n","0"),
("1726","ip","<p>The address (<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address\" title=\"ipaddress.IPv4Address\"><code>IPv4Address</code></a>) without network information</p>\n","<p>import ipaddress<br />\ninterface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n\n<p>interface.ip # IPv4Address(&#39;192.0.2.5&#39;)</p>\n","0"),
("1727","network","<p>The network (<a href=\"https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network\" title=\"ipaddress.IPv4Network\"><code>IPv4Network</code></a>) this interface belongs to</p>\n","<p>import ipaddress<br />\ninterface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n\n<p>interface.network # IPv4Network(&#39;192.0.2.0/24&#39;)</p>\n","0"),
("1728","with_prefixlen","<p>A string representation of the interface with the mask in prefix notation.</p>\n","<p>import ipaddress<br />\ninterface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n\n<p>interface.with_prefixlen # &#39;192.0.2.5/24&#39;</p>\n","0"),
("1729","with_netmask","<p>A string representation of the interface with the network as a net mask.</p>\n","<p>import ipaddress<br />\ninterface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n\n<p>interface.with_netmask # &#39;192.0.2.5/255.255.255.0&#39;</p>\n","0"),
("1730","with_hostmask","<p>A string representation of the interface with the network as a host mask</p>\n","<p>import ipaddress<br />\ninterface = ipaddress.IPv4Interface(&#39;192.0.2.5/24&#39;)</p>\n\n<p>interface.with_hostmask # &#39;192.0.2.5/0.0.0.255&#39;</p>\n","0"),
("1731","class ipaddress.IPv6Interface(address)","","","0"),
("1732","ip","","","0"),
("1733","network","","","0"),
("1734","with_prefixlen","","","0"),
("1735","with_netmask","","","0"),
("1736","with_hostmask","","","0"),
("1737","ipaddress.v4_int_to_packed(address)","","<pre>\nimport ipaddress\nipaddress.ip_address(3221225985) # IPv4Address(&#39;192.0.2.1&#39;)\nipaddress.v4_int_to_packed(3221225985) # b&#39;xc0x00x02x01&#39;</pre>\n","0"),
("1738","ipaddress.v6_int_to_packed(address)","","<p>import ipaddress</p>\n\n<p>ip = ipaddress.IPv6Address(&#39;2001:db8::1000&#39;)<br />\nint(ip) # 42540766411282592856903984951653830656<br />\nipaddress.v6_int_to_packed(int(ip)) # b&#39; x01 xb8x00x00x00x00x00x00x00x00x00x00x10x00&#39;</p>\n","0"),
("1739","ipaddress.summarize_address_range(first, last)","","","0"),
("1740","ipaddress.collapse_addresses(addresses)","","","0"),
("1741","ipaddress.get_mixed_type_key(obj)","","","0"),
("1742","exception ipaddress.AddressValueError(ValueError)","","","0"),
("1743","exception ipaddress.NetmaskValueError(ValueError)","","","0"),
("1744","sys.abiflags","<p>Works only on&nbsp;POSIX systems</p>\n","","0"),
("1745","sys.argv","<p>The list of command line arguments passed to a Python script.&nbsp;<code>argv[0]</code>&nbsp;is the script name (it is operating system dependent whether this is a full pathname or not).</p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/sys/sys.argv.jpg\" style=\"height:341px; width:637px\" /></p>\n\n<p><strong>sys.py</strong></p>\n\n<p>import sys</p>\n\n<p>print(sys.argv)<br />\n&nbsp;</p>\n","0"),
("1746","sys.base_exec_prefix","<p>Show python directory</p>\n","<p>import sys</p>\n\n<p>sys.base_exec_prefix # &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;</p>\n","0"),
("1747","sys.base_prefix","<p>Show python directory</p>\n","<p>import sys</p>\n\n<p>sys.base_prefix # &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;</p>\n","0"),
("1748","sys.byteorder","<p>An indicator of the native byte order. This will have the value&nbsp;<code>&#39;big&#39;</code>&nbsp;on big-endian (most-significant byte first) platforms, and&nbsp;<code>&#39;little&#39;</code>&nbsp;on little-endian (least-significant byte first) platforms</p>\n\n<p>W sytuacjach, kiedy&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Liczby_ca%C5%82kowite\" title=\"Liczby caÅ‚kowite\">liczby caÅ‚kowite</a>&nbsp;lub jakiekolwiek inne dane zapisywane sÄ… przy uÅ¼yciu wielu (przynajmniej dw&oacute;ch)&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Bajt\" title=\"Bajt\">bajt&oacute;w</a>, nie istnieje jeden unikatowy spos&oacute;b uporzÄ…dkowania tych bajt&oacute;w w pamiÄ™ci lub w czasie transmisji przez dowolne medium i musi byÄ‡ uÅ¼yta jedna z wielu konwencji ustalajÄ…ca&nbsp;<strong>kolejnoÅ›Ä‡ bajt&oacute;w</strong>&nbsp;(<a href=\"https://pl.wikipedia.org/wiki/J%C4%99zyk_angielski\" title=\"JÄ™zyk angielski\">ang.</a>&nbsp;<em>byte order</em>&nbsp;lub&nbsp;<em>endianness</em>). Jest to analogiczne do zapisu pozycyjnego liczb lub kierunku&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Pismo\" title=\"Pismo\">pisma</a>&nbsp;w r&oacute;Å¼nych jÄ™zykach &ndash; ze strony lewej na prawÄ… albo z prawej na lewÄ….</p>\n\n<h2>Big endian[<a href=\"https://pl.wikipedia.org/w/index.php?title=Kolejno%C5%9B%C4%87_bajt%C3%B3w&amp;action=edit&amp;section=1\" title=\"Edytuj sekcjÄ™: Big endian\">edytuj</a>]</h2>\n\n<p><strong>Big endian</strong>&nbsp;(spotykane takÅ¼e&nbsp;<em>grubokoÅ„cowoÅ›Ä‡</em>) to forma zapisu danych, w kt&oacute;rej&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Najbardziej_znacz%C4%85cy_bit\" title=\"Najbardziej znaczÄ…cy bit\">najbardziej znaczÄ…cy bajt</a>&nbsp;(zwany teÅ¼ g&oacute;rnym bajtem, z&nbsp;<a href=\"https://pl.wikipedia.org/wiki/J%C4%99zyk_angielski\" title=\"JÄ™zyk angielski\">ang.</a>&nbsp;<em>high-order byte</em>) umieszczony jest jako pierwszy. Procesory, kt&oacute;re uÅ¼ywajÄ… formy&nbsp;<em>big endian</em>, to miÄ™dzy innymi&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Itanium_2\" title=\"Itanium 2\">HP Intel Itanium</a>,&nbsp;<a href=\"https://pl.wikipedia.org/wiki/SPARC\" title=\"SPARC\">SPARC</a>,&nbsp;<a href=\"https://pl.wikipedia.org/wiki/M68000\" title=\"M68000\">Motorola 68000</a>,&nbsp;<a href=\"https://pl.wikipedia.org/wiki/PowerPC_970\" title=\"PowerPC 970\">PowerPC 970</a>,&nbsp;<a href=\"https://pl.wikipedia.org/wiki/IBM_System/360\" title=\"IBM System/360\">IBM System/360</a>, Siemens&nbsp;<a href=\"https://pl.wikipedia.org/w/index.php?title=SIMATIC_S7&amp;action=edit&amp;redlink=1\" title=\"SIMATIC S7 (strona nie istnieje)\">SIMATIC S7</a>.</p>\n\n<p>Jest ona analogiczna do uÅ¼ywanego na co dzieÅ„ przez ludzi sposobu zapisu liczb.</p>\n\n<p>Procesor zapisujÄ…cy 32-bitowe wartoÅ›ci w pamiÄ™ci, przykÅ‚adowo 0x4A3B2C1D pod adresem 100, umieszcza dane, zajmujÄ…c adresy od 100 do 103 w nastÄ™pujÄ…cej kolejnoÅ›ci:</p>\n\n<table border=\"1\" cellpadding=\"4\">\n	<tbody>\n		<tr>\n			<td>&nbsp;</td>\n			<td><tt>100</tt></td>\n			<td><tt>101</tt></td>\n			<td><tt>102</tt></td>\n			<td><tt>103</tt></td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td><tt>...</tt></td>\n			<td><tt>4A</tt></td>\n			<td><tt>3B</tt></td>\n			<td><tt>2C</tt></td>\n			<td><tt>1D</tt></td>\n			<td><tt>...</tt></td>\n		</tr>\n	</tbody>\n</table>\n\n<h2>Little endian</h2>\n\n<p><strong>Little endian</strong>&nbsp;(spotykane takÅ¼e&nbsp;<em>cienkokoÅ„cowoÅ›Ä‡</em>) to forma zapisu danych, w kt&oacute;rej najmniej znaczÄ…cy bajt (zwany teÅ¼ dolnym bajtem, z&nbsp;<a href=\"https://pl.wikipedia.org/wiki/J%C4%99zyk_angielski\" title=\"JÄ™zyk angielski\">ang.</a>&nbsp;<em>low-order byte</em>) umieszczony jest jako pierwszy. Procesory, kt&oacute;re uÅ¼ywajÄ… formy&nbsp;<em>little endian</em>, to miÄ™dzy innymi wszystkie z rodziny&nbsp;<a href=\"https://pl.wikipedia.org/wiki/X86\" title=\"X86\">x86</a>, DEC&nbsp;<a href=\"https://pl.wikipedia.org/wiki/VAX\" title=\"VAX\">VAX</a>.</p>\n\n<p>Jest ona odwrotna do uÅ¼ywanego na co dzieÅ„ sposobu zapisu liczb.</p>\n\n<p>Procesor zapisujÄ…cy 32-bitowe wartoÅ›ci w pamiÄ™ci, przykÅ‚adowo 0x4A3B2C1D pod adresem 100, umieszcza dane zajmujÄ…c adresy od 100 do 103 w nastÄ™pujÄ…cej kolejnoÅ›ci:</p>\n\n<table border=\"1\" cellpadding=\"4\">\n	<tbody>\n		<tr>\n			<td>&nbsp;</td>\n			<td><tt>100</tt></td>\n			<td><tt>101</tt></td>\n			<td><tt>102</tt></td>\n			<td><tt>103</tt></td>\n			<td>&nbsp;</td>\n		</tr>\n		<tr>\n			<td><tt>...</tt></td>\n			<td><tt>1D</tt></td>\n			<td><tt>2C</tt></td>\n			<td><tt>3B</tt></td>\n			<td><tt>4A</tt></td>\n			<td><tt>...</tt></td>\n		</tr>\n	</tbody>\n</table>\n\n<h2>Procesory z moÅ¼liwoÅ›ciÄ… zmiany kolejnoÅ›ci bajt&oacute;w</h2>\n\n<p>Pr&oacute;cz procesor&oacute;w, kt&oacute;re majÄ… na staÅ‚e zaimplementowanÄ… kolejnoÅ›Ä‡ bajt&oacute;w, istniejÄ… r&oacute;wnieÅ¼ takie, w kt&oacute;rych moÅ¼na przeÅ‚Ä…czyÄ‡ tryb kolejnoÅ›ci. NaleÅ¼Ä… do nich:</p>\n\n<ul>\n	<li><a href=\"https://pl.wikipedia.org/wiki/DEC_Alpha\" title=\"DEC Alpha\">Alpha</a></li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/Architektura_ARM\" title=\"Architektura ARM\">ARM</a>&nbsp;od wersji 3 wzwyÅ¼</li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/IA-64\" title=\"IA-64\">IA-64</a></li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/Architektura_MIPS\" title=\"Architektura MIPS\">MIPS</a></li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/PA-RISC\" title=\"PA-RISC\">PA-RISC</a></li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/PowerPC\" title=\"PowerPC\">PowerPC</a>&nbsp;(do serii&nbsp;<a href=\"https://pl.wikipedia.org/wiki/PowerPC_G4\" title=\"PowerPC G4\">PowerPC G4</a>)</li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/SPARC\" title=\"SPARC\">SPARC</a>&nbsp;V9</li>\n	<li><a href=\"https://pl.wikipedia.org/wiki/SuperH\" title=\"SuperH\">SuperH SH-4</a>.</li>\n</ul>\n","<p>import sys</p>\n\n<p>sys.byteorder # &#39;little&#39;</p>\n","0"),
("1749","sys.builtin_module_names","<p>A tuple of strings giving the names of all modules that are compiled into this Python interprete</p>\n","<p>import sys</p>\n\n<p>sys.builtin_module_names</p>\n\n<p>(&#39;_ast&#39;, &#39;_bisect&#39;, &#39;_blake2&#39;, &#39;_codecs&#39;, &#39;_codecs_cn&#39;, &#39;_codecs_hk&#39;, &#39;_codecs_iso2022&#39;, &#39;_codecs_jp&#39;, &#39;_codecs_kr&#39;, &#39;_codecs_tw&#39;, &#39;_collections&#39;, &#39;_csv&#39;, &#39;_datetime&#39;, &#39;_functools&#39;, &#39;_heapq&#39;, &#39;_imp&#39;, &#39;_io&#39;, &#39;_json&#39;, &#39;_locale&#39;, &#39;_lsprof&#39;, &#39;_md5&#39;, &#39;_multibytecodec&#39;, &#39;_opcode&#39;, &#39;_operator&#39;, &#39;_pickle&#39;, &#39;_random&#39;, &#39;_sha1&#39;, &#39;_sha256&#39;, &#39;_sha3&#39;, &#39;_sha512&#39;, &#39;_signal&#39;, &#39;_sre&#39;, &#39;_stat&#39;, &#39;_string&#39;, &#39;_struct&#39;, &#39;_symtable&#39;, &#39;_thread&#39;, &#39;_tracemalloc&#39;, &#39;_warnings&#39;, &#39;_weakref&#39;, &#39;_winapi&#39;, &#39;array&#39;, &#39;atexit&#39;, &#39;audioop&#39;, &#39;binascii&#39;, &#39;builtins&#39;, &#39;cmath&#39;, &#39;errno&#39;, &#39;faulthandler&#39;, &#39;gc&#39;, &#39;itertools&#39;, &#39;marshal&#39;, &#39;math&#39;, &#39;mmap&#39;, &#39;msvcrt&#39;, &#39;nt&#39;, &#39;parser&#39;, &#39;sys&#39;, &#39;time&#39;, &#39;winreg&#39;, &#39;xxsubtype&#39;, &#39;zipimport&#39;, &#39;zlib&#39;)</p>\n","0"),
("1750","sys.call_tracing(func, args)","","<p>import sys</p>\n\n<p>sys.call_tracing(int, (&#39;2&#39;,)) # 2<br />\nsys.call_tracing(str, (&#39;2&#39;,)) # &#39;2&#39;</p>\n","0"),
("1751","sys.copyright","<p>A string containing the copyright pertaining to the Python interpreter.</p>\n","<p>import sys</p>\n\n<p>sys.copyright<br />\n&#39;Copyright (c) 2001-2016 Python Software Foundation. All Rights Reserved. Copyright (c) 2000 BeOpen.com. All Rights Reserved. Copyright (c) 1995-2001 Corporation for National Research Initiatives. All Rights Reserved. Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All Rights Reserved.&#39;</p>\n","0"),
("1752","sys._clear_type_cache()","<p>Clear the internal type cache. The type cache is used to speed up attribute and method lookups</p>\n","<p>import sys</p>\n\n<p>sys._clear_type_cache()</p>\n","0"),
("1753","sys._current_frames()","<p>Return a dictionary mapping each thread&rsquo;s identifier</p>\n","<p>import sys</p>\n\n<p>sys._current_frames() # {11204: }</p>\n","0"),
("1754","sys._debugmallocstats()","<p>Print low-level information to stderr about the state of CPython&rsquo;s memory allocator</p>\n","<p>import sys</p>\n\n<p>sys._debugmallocstats()<br />\n#Small block threshold = 512, in 64 size classes.<br />\n#<br />\n#class &nbsp; size &nbsp; num pools &nbsp; blocks in use &nbsp;avail blocks<br />\n#----- &nbsp; ---- &nbsp; --------- &nbsp; ------------- &nbsp;------------<br />\n# &nbsp; &nbsp;0 &nbsp; &nbsp; &nbsp;8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 169 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 339<br />\n# &nbsp; &nbsp;1 &nbsp; &nbsp; 16 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 291 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 217<br />\n# &nbsp; &nbsp;2 &nbsp; &nbsp; 24 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 733 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 112<br />\n# &nbsp; &nbsp;3 &nbsp; &nbsp; 32 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;23 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2853 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;68<br />\n# &nbsp; &nbsp;4 &nbsp; &nbsp; 40 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;49 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4856 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;93<br />\n# &nbsp; &nbsp;5 &nbsp; &nbsp; 48 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;37 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3025 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;83<br />\n# &nbsp; &nbsp;6 &nbsp; &nbsp; 56 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 513 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;63<br />\n# &nbsp; &nbsp;7 &nbsp; &nbsp; 64 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 236 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;16<br />\n# &nbsp; &nbsp;8 &nbsp; &nbsp; 72 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;15 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 785 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;55<br />\n# &nbsp; &nbsp;9 &nbsp; &nbsp; 80 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 129 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;21<br />\n# &nbsp; 10 &nbsp; &nbsp; 88 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;21 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 962 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4<br />\n# &nbsp; 11 &nbsp; &nbsp; 96 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;82 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2<br />\n# &nbsp; 12 &nbsp; &nbsp;104 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;58 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;20<br />\n# &nbsp; 13 &nbsp; &nbsp;112 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;33 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 14 &nbsp; &nbsp;120 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 284 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;13<br />\n# &nbsp; 15 &nbsp; &nbsp;128 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;36 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;26<br />\n# &nbsp; 16 &nbsp; &nbsp;136 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;31 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;27<br />\n# &nbsp; 17 &nbsp; &nbsp;144 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;25 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 18 &nbsp; &nbsp;152 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;16 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10<br />\n# &nbsp; 19 &nbsp; &nbsp;160 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 119 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 20 &nbsp; &nbsp;168 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;19 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 21 &nbsp; &nbsp;176 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;17 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 22 &nbsp; &nbsp;184 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;19 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 23 &nbsp; &nbsp;192 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12<br />\n# &nbsp; 24 &nbsp; &nbsp;200 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;16 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4<br />\n# &nbsp; 25 &nbsp; &nbsp;208 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;14 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 26 &nbsp; &nbsp;216 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 27 &nbsp; &nbsp;224 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8<br />\n# &nbsp; 28 &nbsp; &nbsp;232 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12<br />\n# &nbsp; 29 &nbsp; &nbsp;240 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4<br />\n# &nbsp; 30 &nbsp; &nbsp;248 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9<br />\n# &nbsp; 31 &nbsp; &nbsp;256 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 32 &nbsp; &nbsp;264 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7<br />\n# &nbsp; 33 &nbsp; &nbsp;272 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 34 &nbsp; &nbsp;280 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8<br />\n# &nbsp; 35 &nbsp; &nbsp;288 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;11<br />\n# &nbsp; 36 &nbsp; &nbsp;296 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10<br />\n# &nbsp; 37 &nbsp; &nbsp;304 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;89 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2<br />\n# &nbsp; 38 &nbsp; &nbsp;312 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10<br />\n# &nbsp; 39 &nbsp; &nbsp;320 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;11<br />\n# &nbsp; 40 &nbsp; &nbsp;328 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;12 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0<br />\n# &nbsp; 41 &nbsp; &nbsp;336 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 42 &nbsp; &nbsp;344 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 43 &nbsp; &nbsp;352 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;35 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9<br />\n# &nbsp; 44 &nbsp; &nbsp;360 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;39 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 45 &nbsp; &nbsp;368 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;23 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10<br />\n# &nbsp; 46 &nbsp; &nbsp;376 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;24 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6<br />\n# &nbsp; 47 &nbsp; &nbsp;384 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;13 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7<br />\n# &nbsp; 48 &nbsp; &nbsp;392 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;23 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7<br />\n# &nbsp; 49 &nbsp; &nbsp;400 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1<br />\n# &nbsp; 50 &nbsp; &nbsp;408 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 51 &nbsp; &nbsp;416 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;15 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 52 &nbsp; &nbsp;424 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2<br />\n# &nbsp; 53 &nbsp; &nbsp;432 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 54 &nbsp; &nbsp;440 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 55 &nbsp; &nbsp;448 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 56 &nbsp; &nbsp;456 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4<br />\n# &nbsp; 57 &nbsp; &nbsp;464 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 58 &nbsp; &nbsp;472 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;11 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;85 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3<br />\n# &nbsp; 59 &nbsp; &nbsp;480 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7<br />\n# &nbsp; 60 &nbsp; &nbsp;488 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4<br />\n# &nbsp; 61 &nbsp; &nbsp;496 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5<br />\n# &nbsp; 62 &nbsp; &nbsp;504 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5</p>\n\n<p># arenas allocated total &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;7<br />\n# arenas reclaimed &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2<br />\n# arenas highwater mark &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5<br />\n# arenas allocated current &nbsp; &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5<br />\n#5 arenas * 262144 bytes/arena &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1,310,720</p>\n\n<p># bytes in allocated blocks &nbsp; &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;938,912<br />\n# bytes in available blocks &nbsp; &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;123,896<br />\n#54 unused pools * 4096 bytes &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;221,184<br />\n# bytes lost to pool headers &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;8,512<br />\n# bytes lost to quantization &nbsp; &nbsp; &nbsp; = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 18,216<br />\n# bytes lost to arena alignment &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0<br />\n#Total &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1,310,720</p>\n\n<p># &nbsp; &nbsp; &nbsp; 2 free PyCFunctionObjects * 24 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 48<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;7 free PyDictObjects * 32 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;224<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3 free PyFloatObjects * 16 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 48<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 free PyFrameObjects * 320 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;640<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5 free PyListObjects * 20 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100<br />\n# &nbsp; &nbsp; &nbsp; &nbsp; 10 free PyMethodObjects * 20 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;200<br />\n# &nbsp; 5 free 1-sized PyTupleObjects * 16 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 80<br />\n# &nbsp; 3 free 2-sized PyTupleObjects * 20 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60<br />\n# &nbsp; 3 free 3-sized PyTupleObjects * 24 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 72<br />\n# &nbsp; 1 free 4-sized PyTupleObjects * 28 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 28<br />\n# &nbsp; 4 free 5-sized PyTupleObjects * 32 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;128<br />\n# &nbsp;10 free 6-sized PyTupleObjects * 36 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;360<br />\n# &nbsp; 1 free 7-sized PyTupleObjects * 40 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 40<br />\n# &nbsp;10 free 8-sized PyTupleObjects * 44 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;440<br />\n# &nbsp; 2 free 9-sized PyTupleObjects * 48 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 96<br />\n# &nbsp;1 free 10-sized PyTupleObjects * 52 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 52<br />\n# &nbsp;3 free 11-sized PyTupleObjects * 56 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;168<br />\n# &nbsp;1 free 12-sized PyTupleObjects * 60 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60<br />\n# &nbsp;3 free 13-sized PyTupleObjects * 64 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;192<br />\n# &nbsp;0 free 14-sized PyTupleObjects * 68 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0<br />\n# &nbsp;4 free 15-sized PyTupleObjects * 72 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;288<br />\n# &nbsp;0 free 16-sized PyTupleObjects * 76 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0<br />\n# &nbsp;3 free 17-sized PyTupleObjects * 80 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;240<br />\n# &nbsp;0 free 18-sized PyTupleObjects * 84 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0<br />\n# &nbsp;3 free 19-sized PyTupleObjects * 88 bytes each = &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;264</p>\n","0"),
("1755","sys.dllhandle","<p>Integer specifying the handle of the Python DLL. Availability: Windows.</p>\n","<p>import sys</p>\n\n<p>sys.dllhandle # 498270208</p>\n","0"),
("1756","sys.displayhook(value)","","","0"),
("1757","sys.dont_write_bytecode","<p>If this is true, Python won&rsquo;t try to write&nbsp;<code>.pyc</code>&nbsp;files on the import of source modules.</p>\n\n<p>Python automatically compiles your script to compiled code, so called byte code, before running it.</p>\n\n<p>When a module is imported for the first time, or when the source is more recent than the current compiled file, a .pyc file containing the compiled code will usually be created in the same directory as the .py file. When you run the program next time, Python uses this file to skip the compilation step.</p>\n\n<p>One reason that a .pyc file may not be created is permissions problems with the directory. This can happen, for example, if you develop as one user but run as another, such as if you are testing with a web server. Creation of a .pyc file is automatic if you&rsquo;re importing a module and Python has the ability (permissions, free space, etc.) to write the compiled module back to the directory.</p>\n\n<p>Running a script is not considered an import and no .pyc will be created. For example, if you have a script file abc.py that imports another module xyz.py, when you run abc, xyz.pyc will be created since xyz is imported, but no abc.pyc file will be created since abc.py isn&rsquo;t being imported.</p>\n","<p>import sys</p>\n\n<p>sys.dont_write_bytecode # False</p>\n","0"),
("1758","sys.excepthook(type, value, traceback)","","","0"),
("1759","sys.__displayhook__","","","0"),
("1760","sys.__excepthook__","","","0"),
("1761","sys.exc_info()","<p>This function returns a tuple of three values that give information about the exception that is currently being handled</p>\n","<p>import sys</p>\n\n<p>sys.exc_info() # (None, None, None)</p>\n","0"),
("1762","sys.exec_prefix","<p>A string giving the site-specific directory prefix where the platform-dependent Python files are installed</p>\n","<p>import sys</p>\n\n<p>sys.exec_prefix # &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;</p>\n","0"),
("1763","sys.executable","<p>A string giving the absolute path of the executable binary for the Python interpreter, on systems where this makes sens</p>\n","<p>import sys</p>\n\n<p>sys.executable # &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32python.exe&#39;</p>\n","0"),
("1764","sys.exit([arg])","<p>Exit from Python</p>\n","<p>import sys</p>\n\n<p>sys.exit()</p>\n","0"),
("1765","sys.flags","<p>Show python options</p>\n","<p>import sys</p>\n\n<p>sys.flags # sys.flags(debug=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=0, no_user_site=0, no_site=0, ignore_environment=0, verbose=0, bytes_warning=0, quiet=0, hash_randomization=1, isolated=0)</p>\n","0"),
("1766","sys.float_info","<p>A&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-struct-sequence\">struct sequence</a>&nbsp;holding information about the float type. It contains low level information about the precision and internal representation</p>\n\n<table border=\"1\">\n	<thead>\n		<tr>\n			<th>attribute</th>\n			<th>float.h macro</th>\n			<th>explanation</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td><code>epsilon</code></td>\n			<td>DBL_EPSILON</td>\n			<td>difference between 1 and the least value greater than 1 that is representable as a float</td>\n		</tr>\n		<tr>\n			<td><code>dig</code></td>\n			<td>DBL_DIG</td>\n			<td>maximum number of decimal digits that can be faithfully represented in a float; see below</td>\n		</tr>\n		<tr>\n			<td><code>mant_dig</code></td>\n			<td>DBL_MANT_DIG</td>\n			<td>float precision: the number of base-<code>radix</code>&nbsp;digits in the significand of a float</td>\n		</tr>\n		<tr>\n			<td><a href=\"https://docs.python.org/3/library/functions.html#max\" title=\"max\"><code>max</code></a></td>\n			<td>DBL_MAX</td>\n			<td>maximum representable finite float</td>\n		</tr>\n		<tr>\n			<td><code>max_exp</code></td>\n			<td>DBL_MAX_EXP</td>\n			<td>maximum integer e such that&nbsp;<code>radix**(e-1)</code>&nbsp;is a representable finite float</td>\n		</tr>\n		<tr>\n			<td><code>max_10_exp</code></td>\n			<td>DBL_MAX_10_EXP</td>\n			<td>maximum integer e such that&nbsp;<code>10**e</code>&nbsp;is in the range of representable finite floats</td>\n		</tr>\n		<tr>\n			<td><a href=\"https://docs.python.org/3/library/functions.html#min\" title=\"min\"><code>min</code></a></td>\n			<td>DBL_MIN</td>\n			<td>minimum positive normalized float</td>\n		</tr>\n		<tr>\n			<td><code>min_exp</code></td>\n			<td>DBL_MIN_EXP</td>\n			<td>minimum integer e such that&nbsp;<code>radix**(e-1)</code>&nbsp;is a normalized float</td>\n		</tr>\n		<tr>\n			<td><code>min_10_exp</code></td>\n			<td>DBL_MIN_10_EXP</td>\n			<td>minimum integer e such that&nbsp;<code>10**e</code>&nbsp;is a normalized float</td>\n		</tr>\n		<tr>\n			<td><code>radix</code></td>\n			<td>FLT_RADIX</td>\n			<td>radix of exponent representation</td>\n		</tr>\n		<tr>\n			<td><code>rounds</code></td>\n			<td>FLT_ROUNDS</td>\n			<td>integer constant representing the rounding mode used for arithmetic operations. This reflects the value of the system FLT_ROUNDS macro at interpreter startup time. See section 5.2.4.2.2 of the C99 standard for an explanation of the possible values and their meanings.</td>\n		</tr>\n	</tbody>\n</table>\n","<p>import sys</p>\n\n<p>sys.float_info<br />\n# sys.float_info(max=1.7976931348623157e+308, max_exp=1024, max_10_exp=308, min=2.2250738585072014e-308, min_exp=-1021, min_10_exp=-307, dig=15, mant_dig=53, epsilon=2.220446049250313e-16, radix=2, rounds=1)</p>\n","0"),
("1767","sys.float_repr_style","<p>A string indicating how the&nbsp;<a href=\"https://docs.python.org/3/library/functions.html#repr\" title=\"repr\"><code>repr()</code></a>&nbsp;function behaves for floats. If the string has value&nbsp;<code>&#39;short&#39;</code>&nbsp;then for a finite float&nbsp;<code>x</code>,&nbsp;<code>repr(x)</code>&nbsp;aims to produce a short string with the property that&nbsp;<code>float(repr(x))&nbsp;==x</code>. This is the usual behaviour in Python 3.1 and later. Otherwise,&nbsp;<code>float_repr_style</code>&nbsp;has value&nbsp;<code>&#39;legacy&#39;</code>&nbsp;and&nbsp;<code>repr(x)</code>&nbsp;behaves in the same way as it did in versions of Python prior to 3.1.</p>\n","<p>import sys</p>\n\n<p>sys.float_repr_style # &#39;short&#39;</p>\n","0"),
("1768","sys.getallocatedblocks()","<p>Return the number of memory blocks currently allocated by the interpreter, regardless of their size</p>\n","<p>import sys</p>\n\n<p>sys.getallocatedblocks() # 16680</p>\n","0"),
("1769","sys.getcheckinterval()","<p>Return the interpreter&rsquo;s &ldquo;check interval&rdquo;</p>\n\n<p>Check interval is integer value determines how often the interpreter checks for periodic things such as thread switches and signal handlers. The default is&nbsp;<code>100</code>, meaning the check is performed every 100 Python virtual instructions. Setting it to a larger value may increase performance for programs using threads. Setting it to a value&nbsp;<code>&lt;=</code>&nbsp;0 checks every virtual instruction, maximizing responsiveness as well as overhead.</p>\n","<p>import sys</p>\n\n<p>sys.getcheckinterval() # 100</p>\n","0"),
("1770","sys.getdefaultencoding()","<p>Return the name of the current default string encoding used by the Unicode implementation</p>\n","<p>import sys</p>\n\n<p>sys.getdefaultencoding() # &#39;utf-8&#39;</p>\n","0"),
("1771","sys.getdlopenflags()","<p>Availability: Unix</p>\n","","0"),
("1772","sys.getfilesystemencoding()","<p>Return the name of the encoding used to convert between Unicode filenames and bytes filenames</p>\n\n<ul>\n	<li>On Mac OS X, the encoding is&nbsp;<code>&#39;utf-8&#39;</code>.</li>\n	<li>On Unix, the encoding is the locale encoding.</li>\n	<li>On Windows, the encoding may be&nbsp;<code>&#39;utf-8&#39;</code>&nbsp;or&nbsp;<code>&#39;mbcs&#39;</code>, depending on user configuration.</li>\n</ul>\n","<p>import sys</p>\n\n<p>sys.getfilesystemencoding() # &#39;utf-8&#39;</p>\n","0"),
("1773","sys.getfilesystemencodeerrors()","<p>Return the name of the error mode used to convert between Unicode filenames and bytes filenames</p>\n","<p>import sys</p>\n\n<p>sys.getfilesystemencodeerrors() # &#39;surrogatepass&#39;</p>\n","0"),
("1774","sys.getrefcount(object)","","","0"),
("1775","sys.getrecursionlimit()","<p>Return the current value of the recursion limit</p>\n\n<p>It&#39;s to avoid a stack overflow. The Python interpreter limits the depths of recursion to help you avoid infinite recursions, resulting in stack overflows</p>\n","<p>import sys</p>\n\n<p>sys.getrecursionlimit() # 1000</p>\n","0"),
("1776","sys.getsizeof(object[, default])","","","0"),
("1777","sys.getswitchinterval()","","","0"),
("1778","sys._getframe([depth])","","","0"),
("1779","sys.getprofile()","","","0"),
("1780","sys.gettrace()","","","0");
INSERT INTO function VALUES
("1781","sys.getwindowsversion()","<p>Return a named tuple describing the Windows version currently running</p>\n","<p>import sys</p>\n\n<p>sys.getwindowsversion() # sys.getwindowsversion(major=10, minor=0, build=15063, platform=2, service_pack=&#39;&#39;)</p>\n","0"),
("1782","sys.get_asyncgen_hooks()","","","0"),
("1783","sys.get_coroutine_wrapper()","","","0"),
("1784","sys.hash_info","<p>A&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-struct-sequence\">struct sequence</a>&nbsp;giving parameters of the numeric hash implementation</p>\n","<p>import sys</p>\n\n<p>sys.hash_info # sys.hash_info(width=32, modulus=2147483647, inf=314159, nan=0, imag=1000003, algorithm=&#39;siphash24&#39;, hash_bits=64, seed_bits=128, cutoff=0)</p>\n","0"),
("1785","sys.hexversion","<p>The hex version number encoded as a single integer</p>\n","<p>import sys</p>\n\n<p>sys.hexversion # 50725104</p>\n","0"),
("1786","sys.implementation","<p>An object containing information about the implementation of the currently running Python interpreter</p>\n","<p>import sys</p>\n\n<p>sys.implementation # namespace(cache_tag=&#39;cpython-36&#39;, hexversion=50725104, name=&#39;cpython&#39;, version=sys.version_info(major=3, minor=6, micro=0, releaselevel=&#39;final&#39;, serial=0))</p>\n","0"),
("1787","sys.int_info","<table border=\"1\">\n	<thead>\n		<tr>\n			<th>Attribute</th>\n			<th>Explanation</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td><code>bits_per_digit</code></td>\n			<td>number of bits held in each digit. Python integers are stored internally in base&nbsp;<code>2**int_info.bits_per_digit</code></td>\n		</tr>\n		<tr>\n			<td><code>sizeof_digit</code></td>\n			<td>size in bytes of the C type used to represent a digit</td>\n		</tr>\n	</tbody>\n</table>\n","<p>import sys</p>\n\n<p>sys.int_info # sys.int_info(bits_per_digit=15, sizeof_digit=2)</p>\n","0"),
("1788","sys.__interactivehook__","","","0"),
("1789","sys.intern(string)","<p>Enter&nbsp;<em>string</em>&nbsp;in the table of &ldquo;interned&rdquo; strings and return the interned string</p>\n","<pre>\n<code>import sys\na = sys.intern(&#39;why do pangolins dream of quiche&#39;)\na # &#39;why do pangolins dream of quiche&#39;</code></pre>\n","0"),
("1790","sys.is_finalizing()","<p>Return&nbsp;<a href=\"https://docs.python.org/3/library/constants.html#True\" title=\"True\"><code>True</code></a>&nbsp;if the Python interpreter is&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-interpreter-shutdown\">shutting down</a>,&nbsp;<a href=\"https://docs.python.org/3/library/constants.html#False\" title=\"False\"><code>False</code></a>&nbsp;otherwise</p>\n","<p>import sys</p>\n\n<p>sys.is_finalizing() # False</p>\n","0"),
("1791","sys.last_type","<p>Show error or last error type</p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/sys/sys.last_type.jpg\" style=\"height:193px; width:556px\" /></p>\n","0"),
("1792","sys.last_value","<p>Show last error value</p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/sys/sys.last_type.jpg\" /></p>\n","0"),
("1793","sys.last_traceback","","","0"),
("1794","sys.maxsize","<p>An integer giving the maximum value a variable of type&nbsp;<code>Py_ssize_t</code>&nbsp;can take. It&rsquo;s usually&nbsp;<code>2**31&nbsp;-&nbsp;1</code>&nbsp;on a 32-bit platform and&nbsp;<code>2**63&nbsp;-&nbsp;1</code>&nbsp;on a 64-bit platform</p>\n","<p>import sys</p>\n\n<p>sys.maxsize # 2147483647</p>\n","0"),
("1795","sys.maxunicode","<p>An integer giving the value of the largest Unicode code point, i.e.&nbsp;<code>1114111</code>&nbsp;(<code>0x10FFFF</code>&nbsp;in hexadecimal).</p>\n","<p>import sys</p>\n\n<p>sys.maxunicode # 1114111</p>\n","0"),
("1796","sys.meta_path","<p>A list of&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-meta-path-finder\">meta path finder</a>&nbsp;objects</p>\n","<p>import sys</p>\n\n<p>sys.meta_path # [, , , ]</p>\n","0"),
("1831","os.name","<p>The name of the operating system dependent module imported. The following names have currently been registered:&nbsp;<code>&#39;posix&#39;</code>,&nbsp;<code>&#39;nt&#39;</code>,&nbsp;<code>&#39;java&#39;</code>.</p>\n","<p>import os<br />\nos.name # &#39;nt&#39;</p>\n","0"),
("1830","exception os.error","","","0"),
("1799","sys.modules","<p>This is a dictionary that maps module names to modules which have already been loaded</p>\n","<p>import sys</p>\n\n<p>sys.modules</p>\n\n<p>&#39;&#39;&#39;<br />\nbuiltins<br />\nsys<br />\n_frozen_importlib<br />\n_imp<br />\n_warnings<br />\n_thread<br />\n_weakref<br />\n_frozen_importlib_external<br />\n_io<br />\nmarshal<br />\nnt<br />\nwinreg<br />\nzipimport<br />\nencodings<br />\ncodecs<br />\n_codecs<br />\nencodings.aliases<br />\nencodings.utf_8<br />\n_signal<br />\n__main__<br />\nencodings.latin_1<br />\nio<br />\nabc<br />\n_weakrefset<br />\nsite<br />\nos<br />\nerrno<br />\nstat<br />\n_stat<br />\nntpath<br />\ngenericpath<br />\nos.path<br />\n_collections_abc<br />\n_sitebuiltins<br />\nsysconfig<br />\n_bootlocale<br />\n_locale<br />\nencodings.cp1252<br />\natexit</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("1800","sys.path","<p>A list of strings that specifies the search path for modules</p>\n","<p>import sys</p>\n\n<p>for i in sys.path:<br />\n&nbsp; &nbsp;print(i)</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>C:SimpleCV1.3filesopencvuildpython2.7<br />\nC:OpenCV2.3opencvuildpython2.7<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32python36.zip<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32DLLs<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32lib<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packages<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packageswin32<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packageswin32lib<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesPythonwin</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("1801","sys.path_hooks","","","0"),
("1802","sys.path_importer_cache","<p>A dictionary acting as a cache for&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-finder\">finder</a>&nbsp;objects</p>\n","<p>import sys</p>\n\n<p>for i in sys.path_importer_cache:<br />\n&nbsp; &nbsp; print(i)</p>\n\n<p>&#39;&#39;&#39;<br />\nC:/SimpleCV1.3/files/opencv/build/python/2.7/<br />\nC:/OpenCV2.3/opencv/build/python/2.7/<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32python36.zip<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32DLLs<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32lib<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libencodings<br />\nC:SimpleCV1.3filesopencvuildpython2.7<br />\nC:OpenCV2.3opencvuildpython2.7<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packages<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packageswin32<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packageswin32lib<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesPythonwin<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesautoit<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libcollections<br />\nC:UsersUserAppDataLocalProgramsPythonPython36-32libctypes</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("1803","sys.platform","<p>This string contains a platform identifier</p>\n\n<p>For other systems, the values are:</p>\n\n<table border=\"1\">\n	<thead>\n		<tr>\n			<th>System</th>\n			<th><code>platform</code>&nbsp;value</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td>Linux</td>\n			<td><code>&#39;linux&#39;</code></td>\n		</tr>\n		<tr>\n			<td>Windows</td>\n			<td><code>&#39;win32&#39;</code></td>\n		</tr>\n		<tr>\n			<td>Windows/Cygwin</td>\n			<td><code>&#39;cygwin&#39;</code></td>\n		</tr>\n		<tr>\n			<td>Mac OS X</td>\n			<td><code>&#39;darwin&#39;</code></td>\n		</tr>\n	</tbody>\n</table>\n","<p>import sys</p>\n\n<p>sys.platform # &#39;win32&#39;</p>\n","0"),
("1804","sys.prefix","<p>A string giving the site-specific directory prefix where the platform independent Python files are installed; by default, this is the string&nbsp;<code>&#39;/usr/local&#39;</code>.</p>\n","<p>import sys</p>\n\n<p>sys.prefix # &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;</p>\n","0"),
("1805","sys.ps1","<p>Prints this value &#39;&gt;&gt;&gt; &#39;</p>\n","<p>import sys</p>\n\n<p>sys.ps1 # &#39;&gt;&gt;&gt; &#39;</p>\n","0"),
("1806","sys.ps2","<p>Prints this value&nbsp;&#39;... &#39;</p>\n","<p>import sys</p>\n\n<p>sys.ps2 # &#39;... &#39;</p>\n","0"),
("1807","sys.setcheckinterval(interval)","<p>Set the interpreter&rsquo;s &ldquo;check interval&rdquo;.</p>\n","<p>import sys</p>\n\n<p>sys.getcheckinterval() # 100<br />\nsys.setcheckinterval(150)<br />\nsys.getcheckinterval() # 150</p>\n","0"),
("1808","sys.setdlopenflags(n)","","","0"),
("1809","sys.setprofile(profilefunc)","","","0"),
("1810","sys.setrecursionlimit(limit)","","","0"),
("1811","sys.setswitchinterval(interval)","","","0"),
("1812","sys.settrace(tracefunc)","","","0"),
("1813","sys.set_asyncgen_hooks(firstiter, finalizer)","","","0"),
("1814","sys.set_coroutine_wrapper(wrapper)","","","0"),
("1815","sys._enablelegacywindowsfsencoding()","","","0"),
("1816","sys.stdin","","","0"),
("1817","sys.stdout","","","0"),
("1818","sys.stderr","","","0"),
("1819","sys.__stdin__","","","0"),
("1820","sys.__stdout__","","","0"),
("1821","sys.__stderr__","","","0"),
("1822","sys.thread_info","<p>A&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-struct-sequence\">struct sequence</a>&nbsp;holding information about the thread implementation.</p>\n\n<table border=\"1\">\n	<thead>\n		<tr>\n			<th>Attribute</th>\n			<th>Explanation</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td><code>name</code></td>\n			<td>\n			<p>Name of the thread implementation:</p>\n\n			<blockquote>\n			<ul>\n				<li><code>&#39;nt&#39;</code>: Windows threads</li>\n				<li><code>&#39;pthread&#39;</code>: POSIX threads</li>\n				<li><code>&#39;solaris&#39;</code>: Solaris threads</li>\n			</ul>\n			</blockquote>\n			</td>\n		</tr>\n		<tr>\n			<td><code>lock</code></td>\n			<td>\n			<p>Name of the lock implementation:</p>\n\n			<blockquote>\n			<ul>\n				<li><code>&#39;semaphore&#39;</code>: a lock uses a semaphore</li>\n				<li><code>&#39;mutex+cond&#39;</code>: a lock uses a mutex and a condition variable</li>\n				<li><code>None</code>&nbsp;if this information is unknown</li>\n			</ul>\n			</blockquote>\n			</td>\n		</tr>\n		<tr>\n			<td><a href=\"https://docs.python.org/3/library/sys.html#sys.version\" title=\"sys.version\"><code>version</code></a></td>\n			<td>Name and version of the thread library. It is a string, or&nbsp;<code>None</code>&nbsp;if these informations are unknown.</td>\n		</tr>\n	</tbody>\n</table>\n","<p>import sys</p>\n\n<p>sys.thread_info # sys.thread_info(name=&#39;nt&#39;, lock=None, version=None)</p>\n","0"),
("1823","sys.tracebacklimit","","","0"),
("1824","sys.version","<p>A string containing the version number of the Python interpreter plus additional information on the build number and compiler used</p>\n","<p>import sys</p>\n\n<p>sys.version # &#39;3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 07:18:10) [MSC v.1900 32 bit (Intel)]&#39;</p>\n","0"),
("1825","sys.api_version","<p>The C API version for this interpreter. Programmers may find this useful when debugging version conflicts between Python and extension modules</p>\n","<p>import sys</p>\n\n<p>sys.api_version # 1013</p>\n","0"),
("1826","sys.version_info","<p>A tuple containing the five components of the version number:&nbsp;<em>major</em>,&nbsp;<em>minor</em>,&nbsp;<em>micro</em>,&nbsp;<em>releaselevel</em>, and&nbsp;<em>serial</em>.</p>\n","<p>import sys</p>\n\n<p>sys.version_info # sys.version_info(major=3, minor=6, micro=0, releaselevel=&#39;final&#39;, serial=0)</p>\n","0"),
("1827","sys.warnoptions","","","0"),
("1828","sys.winver","<p>The version number used to form registry keys on Windows platforms</p>\n","<p>import sys</p>\n\n<p>sys.winver # &#39;3.6-32&#39;</p>\n","0"),
("1829","sys._xoptions","","","0"),
("1832","os.ctermid()","","","0"),
("1833","os.environ","<p>A&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-mapping\">mapping</a>&nbsp;object representing the string environment. For example,&nbsp;<code>environ[&#39;HOME&#39;]</code>&nbsp;is the pathname of your home directory (on some platforms), and is equivalent to&nbsp;<code>getenv(&quot;HOME&quot;)</code>&nbsp;in C.</p>\n","<p>import os</p>\n\n<p>for i in os.environ:</p>\n\n<p>&nbsp;print(i + &quot; : &quot; + os.environ[i])<br />\n&#39;&#39;&#39;<br />\nALLUSERSPROFILE : C:ProgramData<br />\nAPPDATA : C:UsersUserAppDataRoaming<br />\nCOMMONPROGRAMFILES : C:Program FilesCommon Files<br />\nCOMPUTERNAME : USER-PC<br />\nCOMSPEC : C:WINDOWSsystem32cmd.exe<br />\nFPS_BROWSER_APP_PROFILE_STRING : Internet Explorer<br />\nFPS_BROWSER_USER_PROFILE_STRING : Default<br />\nFP_NO_HOST_CHECK : NO<br />\nGPU_MAX_ALLOC_PERCENT : 100<br />\nHOMEDRIVE : C:<br />\nHOMEPATH : UsersUser<br />\nLOCALAPPDATA : C:UsersUserAppDataLocal<br />\nLOGONSERVER : USER-PC<br />\nNUMBER_OF_PROCESSORS : 2<br />\nONEDRIVE : C:UsersUserOneDrive<br />\nOS : Windows_NT<br />\nPATH : C:Program FilesImageMagick-7.0.5-Q16;C:UsersUserAppDataLocalProgramsPythonPython35-32Libsite-packagesPyQt5;C:ProgramDataOracleJavajavapath;C:WINDOWSsystem32;C:WINDOWS;C:WINDOWSSystem32Wbem;C:WINDOWSSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;C:Program FilesSmart ProjectsIsoBuster;C:Program FilesSkypePhone;C:Program FilesQuickTimeQTSystem;C:UsersUserAppDataLocalProgramsPythonPython36-32Scripts;C:UsersUserAppDataLocalProgramsPythonPython36-32;C:UsersUserAppDataLocalMicrosoftWindowsApps;C:adb;%SystemRoot%system32;%SystemRoot%;%SystemRoot%System32Wbem;%SYSTEMROOT%System32WindowsPowerShellv1.0;C:UsersUserAppDataLocalProgramsPythonPython36-32Scripts;C:UsersUserAppDataLocalProgramsPythonPython36-32;C:UsersUserAppDataLocalMicrosoftWindowsApps;;C:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagespypiwin32_system32<br />\nPATHEXT : .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC<br />\nPROCESSOR_ARCHITECTURE : x86<br />\nPROCESSOR_IDENTIFIER : x86 Family 6 Model 37 Stepping 5, GenuineIntel<br />\nPROCESSOR_LEVEL : 6<br />\nPROCESSOR_REVISION : 2505<br />\nPROGRAMDATA : C:ProgramData<br />\nPROGRAMFILES : C:Program Files<br />\nPSMODULEPATH : C:WINDOWSsystem32WindowsPowerShellv1.0Modules;C:Program FilesAutoIt3AutoItX<br />\nPUBLIC : C:UsersPublic<br />\nPYTHONPATH : C:/SimpleCV1.3/files/opencv/build/python/2.7/;C:/OpenCV2.3/opencv/build/python/2.7/;<br />\nSAN_DIR : C:Program FilesSiSoftwareSiSoftware Sandra Lite 2016.SP1<br />\nSESSIONNAME : Console<br />\nSYSTEMDRIVE : C:<br />\nSYSTEMROOT : C:WINDOWS<br />\nTEMP : C:UsersUserAppDataLocalTemp<br />\nTMP : C:UsersUserAppDataLocalTemp<br />\nUSERDOMAIN : User-PC<br />\nUSERDOMAIN_ROAMINGPROFILE : User-PC<br />\nUSERNAME : User<br />\nUSERPROFILE : C:UsersUser<br />\nVS100COMNTOOLS : C:Program FilesMicrosoft Visual Studio 10.0Common7Tools<br />\nWINDIR : C:WINDOWS</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("1834","os.environb","","","0"),
("1835","os.chdir(path)","<p>A String expression that identifies which directory or folder becomes the new default directory or folder</p>\n\n<p>Works the same as cmd or&nbsp;chdir in&nbsp;cmd.exe</p>\n","<p>import os<br />\npath = r&quot;C:UsersUserDownloads\\__Nowy&quot;<br />\nos.chdir(path)</p>\n","0"),
("1836","os.fchdir(fd)","","","0"),
("1837","os.getcwd()","<p>Get current working directory</p>\n","<p>import os</p>\n\n<p>os.getcwd() # &#39;C:UsersUserDownloads\\__Nowy&#39;</p>\n","0"),
("1838","os.fsencode(filename)","<p>Encode&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-path-like-object\">path-like</a>&nbsp;<em>filename</em>&nbsp;to the filesystem encoding with&nbsp;<code>&#39;surrogateescape&#39;</code>&nbsp;</p>\n","<p>import os</p>\n\n<p>os.fsencode(&#39;tekst.txt&#39;) # b&#39;tekst.txt&#39;</p>\n","0"),
("1839","os.fsdecode(filename)","<p>Decode the&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-path-like-object\">path-like</a>&nbsp;<em>filename</em>&nbsp;from the filesystem encoding with&nbsp;<code>&#39;surrogateescape&#39;</code></p>\n","<p>import os</p>\n\n<p>os.fsdecode(&#39;tekst.txt&#39;) # &#39;tekst.txt&#39;</p>\n","0"),
("1840","os.fspath(path)","","<p>os.fspath(path) # &#39;C:UsersUserDownloads\\__Nowy&#39;</p>\n","0"),
("1841","class os.PathLike","","","0"),
("1842","abstractmethod __fspath__()","","","0"),
("1843","os.getenv(key, default=None)","<p>Return the value of the environment variable&nbsp;<em>key</em>&nbsp;if it exists</p>\n","<p>import os</p>\n\n<p>os.getenv(&#39;HOMEDRIVE&#39;) # &#39;C:&#39;</p>\n","0"),
("1844","os.getenvb(key, default=None)","","","0"),
("1845","os.get_exec_path(env=None)","<p>Returns the list of directories that will be searched for a named executable, similar to a shell, when launching a process.&nbsp;<em>env</em>, when specified, should be an environment variable dictionary to lookup the PATH in</p>\n","<p>import os</p>\n\n<p>os.get_exec_path()<br />\n[&#39;C:Program FilesImageMagick-7.0.5-Q16&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython35-32Libsite-packagesPyQt5&#39;, &#39;C:ProgramDataOracleJavajavapath&#39;, &#39;C:WINDOWSsystem32&#39;, &#39;C:WINDOWS&#39;, &#39;C:WINDOWSSystem32Wbem&#39;, &#39;C:WINDOWSSystem32WindowsPowerShellv1.0&#39;, &#39;c:Program FilesMicrosoft SQL Server100ToolsBinn&#39;, &#39;c:Program FilesMicrosoft SQL Server100DTSBinn&#39;, &#39;C:Program FilesSmart ProjectsIsoBuster&#39;, &#39;C:Program FilesSkypePhone&#39;, &#39;C:Program FilesQuickTimeQTSystem&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32Scripts&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;, &#39;C:UsersUserAppDataLocalMicrosoftWindowsApps&#39;, &#39;C:adb&#39;, &#39;%SystemRoot%system32&#39;, &#39;%SystemRoot%&#39;, &#39;%SystemRoot%System32Wbem&#39;, &#39;%SYSTEMROOT%System32WindowsPowerShellv1.0&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32Scripts&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32&#39;, &#39;C:UsersUserAppDataLocalMicrosoftWindowsApps&#39;, &#39;&#39;, &#39;C:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagespypiwin32_system32&#39;]</p>\n","0"),
("1846","os.getegid()","","","0"),
("1847","os.geteuid()","","","0"),
("1848","os.getgid()","","","0"),
("1849","os.getgrouplist(user, group)","","","0"),
("1850","os.getgroups()","","","0"),
("1851","os.getlogin()","<p>Return the name of the user logged in on the controlling terminal of the process. For most purposes, it is more useful to use the environment variables&nbsp;<code>LOGNAME</code>&nbsp;or&nbsp;<code>USERNAME</code>&nbsp;to find out who the user is</p>\n","<p>import os</p>\n\n<p>os.getlogin() # &#39;User&#39;</p>\n","0"),
("1852","os.getpgid(pid)","","","0"),
("1853","os.getpgrp()","","","0"),
("1854","os.getpid()","<p>Return the current process id</p>\n","<p>import os</p>\n\n<p>os.getpid() # 8240</p>\n","0"),
("1855","os.getppid()","<p>Return the parent&rsquo;s process id</p>\n","<p>import os</p>\n\n<p>os.getppid() # 5028</p>\n","0"),
("1856","os.getpriority(which, who)","","","0"),
("1857","os.PRIO_PROCESS","","","0"),
("1858","os.PRIO_PGRP","","","0"),
("1859","os.PRIO_USER","","","0"),
("1860","os.getresuid()","","","0"),
("1861","os.getresgid()","","","0"),
("1862","os.getuid()","","","0"),
("1863","os.initgroups(username, gid)","","","0"),
("1864","os.putenv(key, value)","","","0"),
("1865","os.setegid(egid)","","","0"),
("1866","os.seteuid(euid)","","","0"),
("1867","os.setgid(gid)","","","0"),
("1868","os.setgroups(groups)","","","0"),
("1869","os.setpgrp()","","","0"),
("1870","os.setpgid(pid, pgrp)","","","0"),
("1871","os.setpriority(which, who, priority)","","","0"),
("1872","os.setregid(rgid, egid)","","","0"),
("1873","os.setresgid(rgid, egid, sgid)","","","0"),
("1874","os.setresuid(ruid, euid, suid)","","","0"),
("1875","os.setreuid(ruid, euid)","","","0"),
("1876","os.getsid(pid)","","","0"),
("1877","os.setsid()","","","0"),
("1878","os.setuid(uid)","","","0"),
("1879","os.strerror(code)","","","0"),
("1880","os.supports_bytes_environ","<p><code>True</code>&nbsp;if the native OS type of the environment is bytes (eg.&nbsp;<code>False</code>&nbsp;on Windows).</p>\n","<p>import os</p>\n\n<p>os.supports_bytes_environ # False</p>\n","0"),
("1881","os.umask(mask)","","","0"),
("1882","os.uname()","","","0");
INSERT INTO function VALUES
("1883","os.unsetenv(key)","","","0"),
("1884","os.fdopen(fd, *args, **kwargs)","","","0"),
("1885","os.close(fd)","","","0"),
("1886","os.closerange(fd_low, fd_high)","","","0"),
("1887","os.device_encoding(fd)","","","0"),
("1888","os.dup(fd)","","","0"),
("1889","os.dup2(fd, fd2, inheritable=True)","","","0"),
("1890","os.fchmod(fd, mode)","","","0"),
("1891","os.fchown(fd, uid, gid)","","","0"),
("1892","os.fdatasync(fd)","","","0"),
("1893","os.fpathconf(fd, name)","","","0"),
("1894","os.fstat(fd)","","","0"),
("1895","os.fstatvfs(fd)","","","0"),
("1896","os.fsync(fd)","","","0"),
("1897","os.ftruncate(fd, length)","","","0"),
("1898","os.get_blocking(fd)","","","0"),
("1899","os.isatty(fd)","","","0"),
("1900","os.lockf(fd, cmd, len)","","","0"),
("1901","os.F_LOCK","","","0"),
("1902","os.F_TLOCK","","","0"),
("1903","os.F_ULOCK","","","0"),
("1904","os.F_TEST","","","0"),
("1905","os.lseek(fd, pos, how)","","","0"),
("1906","os.SEEK_SET","","","0"),
("1907","os.SEEK_CUR","","","0"),
("1908","os.SEEK_END","","","0"),
("1909","os.open(path, flags, mode=0o777, *, dir_fd=None)","","","0"),
("1910","os.O_RDONLY","<p>Open for reading only</p>\n","<p>import os</p>\n\n<p>os.O_RDONLY # 0</p>\n","0"),
("1911","os.O_WRONLY","<p>Open for writing only</p>\n","<p>import os</p>\n\n<p>os.O_WRONLY # 1</p>\n","0"),
("1912","os.O_RDWR","<p>Open for reading and writing</p>\n","<p>import os</p>\n\n<p>os.O_RDWR # 2</p>\n","0"),
("1913","os.O_APPEND","<p>Append on each write</p>\n","<p>import os</p>\n\n<p>os.O_APPEND # 8</p>\n","0"),
("1914","os.O_CREAT","<p>Create file if it does not exist</p>\n","<p>import os</p>\n\n<p>os.O_CREAT # 256</p>\n","0"),
("1915","os.O_EXCL","<p>Error if create and file exists</p>\n","<p>import os</p>\n\n<p>os.O_EXCL # 1024</p>\n","0"),
("1916","os.O_TRUNC","<p>Truncate size to 0</p>\n","<p>import os</p>\n\n<p>os.O_TRUNC # 512</p>\n","0"),
("1917","os.O_DSYNC","","","0"),
("1918","os.O_RSYNC","","","0"),
("1919","os.O_SYNC","","","0"),
("1920","os.O_NDELAY","","","0"),
("1921","os.O_NONBLOCK","","","0"),
("1922","os.O_NOCTTY","","","0"),
("1923","os.O_CLOEXEC","","","0"),
("1924","os.O_BINARY","","<p>os.O_BINARY # 32768</p>\n","0"),
("1925","os.O_NOINHERIT","","<p>os.O_NOINHERIT # 128</p>\n","0"),
("1926","os.O_SHORT_LIVED","","<p>os.O_SHORT_LIVED # 4096</p>\n","0"),
("1927","os.O_TEMPORARY","","<p>os.O_TEMPORARY # 64</p>\n","0"),
("1928","os.O_RANDOM","","<p>os.O_RANDOM # 16</p>\n","0"),
("1929","os.O_SEQUENTIAL","","<p>os.O_SEQUENTIAL # 32</p>\n","0"),
("1930","os.O_TEXT","","<p>os.O_TEXT # 16384</p>\n","0"),
("1931","os.O_ASYNC","","","0"),
("1932","os.O_DIRECT","","","0"),
("1933","os.O_DIRECTORY","","","0"),
("1934","os.O_NOFOLLOW","","","0"),
("1935","os.O_NOATIME","","","0"),
("1936","os.O_PATH","","","0"),
("1937","os.O_TMPFILE","","","0"),
("1938","os.O_SHLOCK","","","0"),
("1939","os.O_EXLOCK","","","0"),
("1940","os.openpty()","","","0"),
("1941","os.pipe()","","","0"),
("1942","os.pipe2(flags)","","","0"),
("1943","os.posix_fallocate(fd, offset, len)","","","0"),
("1944","os.posix_fadvise(fd, offset, len, advice)","","","0"),
("1945","os.POSIX_FADV_NORMAL","","","0"),
("1946","os.POSIX_FADV_SEQUENTIAL","","","0"),
("1947","os.POSIX_FADV_RANDOM","","","0"),
("1948","os.POSIX_FADV_NOREUSE","","","0"),
("1949","os.POSIX_FADV_WILLNEED","","","0"),
("1950","os.POSIX_FADV_DONTNEED","","","0"),
("1951","os.pread(fd, buffersize, offset)","","","0"),
("1952","os.pwrite(fd, str, offset)","","","0"),
("1953","os.read(fd, n)","","","0"),
("1954","os.sendfile(out, in, offset, count)","","","0"),
("1955","os.sendfile(out, in, offset, count, [headers, ][trailers, ]flags=0)","","","0"),
("1956","os.set_blocking(fd, blocking)","","","0"),
("1957","os.SF_NODISKIO","","","0"),
("1958","os.SF_MNOWAIT","","","0"),
("1959","os.SF_SYNC","","","0"),
("1960","os.readv(fd, buffers)","","","0"),
("1961","os.tcgetpgrp(fd)","","","0"),
("1962","os.tcsetpgrp(fd, pg)","","","0"),
("1963","os.ttyname(fd)","","","0"),
("1964","os.write(fd, str)","","","0"),
("1965","os.writev(fd, buffers)","","","0"),
("1966","os.get_terminal_size(fd=STDOUT_FILENO)","<p>Return the size of the terminal window as&nbsp;<code>(columns,&nbsp;lines)</code></p>\n","<p>import os</p>\n\n<p>os.get_terminal_size() # os.terminal_size(columns=120, lines=30)</p>\n","0"),
("1967","class os.terminal_size","","","0"),
("1968","columns","","","0"),
("1969","lines","","","0"),
("1970","os.get_inheritable(fd)","","","0"),
("1971","os.set_inheritable(fd, inheritable)","","","0"),
("1972","os.get_handle_inheritable(handle)","","","0"),
("1973","os.set_handle_inheritable(handle, inheritable)","","","0"),
("1974","os.access(path, mode, *, dir_fd=None, effective_ids=False, follow_symlinks=True)","<p>Use the real uid/gid to test for access to&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>os.access(path, os.R_OK) # True</p>\n","0"),
("1975","os.F_OK","<p>Value to pass as the mode parameter of access() to test the existence of path</p>\n","<p>import os</p>\n\n<p>os.F_OK # 0</p>\n","0"),
("1976","os.R_OK","<p>Value to include in the mode parameter of access() to test the readability of path</p>\n","<p>import os</p>\n\n<p>os.R_OK # 4</p>\n","0"),
("1977","os.W_OK","<p>Value to include in the mode parameter of access() to test the writability of path</p>\n","<p>import os</p>\n\n<p>os.W_OK # 2</p>\n","0"),
("1978","os.X_OK","<p>Value to include in the mode parameter of access() to determine if path can be executed</p>\n","<p>import os</p>\n\n<p>os.X_OK # 1</p>\n","0"),
("1979","os.chdir(path)","","","0"),
("1980","os.chflags(path, flags, *, follow_symlinks=True)","","","0"),
("1981","os.chmod(path, mode, *, dir_fd=None, follow_symlinks=True)","","","0"),
("1982","os.chown(path, uid, gid, *, dir_fd=None, follow_symlinks=True)","","","0");
INSERT INTO function VALUES
("1983","os.chroot(path)","","","0"),
("1984","os.fchdir(fd)","","","0"),
("1985","os.getcwd()","","","0"),
("1986","os.getcwdb()","","","0"),
("1987","os.lchflags(path, flags)","","","0"),
("1988","os.lchmod(path, mode)","","","0"),
("1989","os.lchown(path, uid, gid)","","","0"),
("1990","os.link(src, dst, *, src_dir_fd=None, dst_dir_fd=None, follow_symlinks=True)","<p>Create a hard link pointing to&nbsp;<em>src</em>&nbsp;named&nbsp;<em>dst</em></p>\n","<p>import os</p>\n\n<p>os.link(&quot;tekst.txt&quot;,&quot;tekst2.txt&quot;)</p>\n","0"),
("1991","os.listdir(path=â€™.â€™)","<p>Return a list containing the names of the entries in the directory given by&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowy&quot;</p>\n\n<p>os.listdir(path) # [&#39;a.jpg&#39;, &#39;new&#39;]</p>\n","0"),
("1992","os.lstat(path, *, dir_fd=None)","","","0"),
("1993","os.mkdir(path, mode=0o777, *, dir_fd=None)","<p>Create a directory named&nbsp;<em>path</em>&nbsp;with optional numeric mode&nbsp;<em>mode</em></p>\n","<p>import os</p>\n\n<p>os.mkdir(&quot;New Folder&quot;)</p>\n","0"),
("1994","os.makedirs(name, mode=0o777, exist_ok=False)","<p>Create folder and then another folder inside previous created folder.</p>\n","<p>import os</p>\n\n<p>os.makedirs(&#39;a/b&#39;)</p>\n","0"),
("1995","os.mkfifo(path, mode=0o666, *, dir_fd=None)","","","0"),
("1996","os.mknod(path, mode=0o600, device=0, *, dir_fd=None)","","","0"),
("1997","os.major(device)","","","0"),
("1998","os.minor(device)","","","0"),
("1999","os.makedev(major, minor)","","","0"),
("2000","os.pathconf(path, name)","","","0"),
("2001","os.pathconf_names","","","0"),
("2002","os.readlink(path, *, dir_fd=None)","","","0"),
("2003","os.remove(path, *, dir_fd=None)","<p>Remove file not directory</p>\n","<p>import os</p>\n\n<p>os.remove(&quot;b.jpg&quot;)</p>\n","0"),
("2004","os.removedirs(name)","<p>Remove directories recursively</p>\n","<p>import os</p>\n\n<p>os.removedirs(&#39;a/b&#39;)</p>\n","0"),
("2005","os.rename(src, dst, *, src_dir_fd=None, dst_dir_fd=None)","<p>Rename the file or directory&nbsp;<em>src</em>&nbsp;to&nbsp;<em>dst</em>. If&nbsp;<em>dst</em>&nbsp;is a directory,&nbsp;<a href=\"https://docs.python.org/3/library/exceptions.html#OSError\" title=\"OSError\"><code>OSError</code></a>&nbsp;will be raised</p>\n","<p>import os</p>\n\n<p>os.rename(&quot;a.jpg&quot;,&quot;b.jpg&quot;) # File</p>\n\n<p>os.rename(&quot;a&quot;,&quot;b&quot;) # Directory</p>\n","0"),
("2006","os.renames(old, new)","<p>The method&nbsp;<strong>renames()</strong>&nbsp;is recursive directory or file renaming function. It does the same functioning as&nbsp;<a href=\"https://www.tutorialspoint.com/python3/os_rename.htm\">os.rename()</a>, but it also moves a file to a directory, or a whole tree of directories, that do not exist.</p>\n","<p>import os</p>\n\n<p>os.renames(&quot;a.jpg&quot;,&quot;newdir/b.jpg&quot;)</p>\n","0"),
("2007","os.replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None)","<p>Rename the file or directory&nbsp;<em>src</em>&nbsp;to&nbsp;<em>dst</em>. If&nbsp;<em>dst</em>&nbsp;is a directory,&nbsp;<a href=\"https://docs.python.org/3/library/exceptions.html#OSError\" title=\"OSError\"><code>OSError</code></a>&nbsp;will be raised. If&nbsp;<em>dst</em>&nbsp;exists and is a file, it will be replaced silently if the user has permission. The operation may fail if&nbsp;<em>src</em>&nbsp;and&nbsp;<em>dst</em>&nbsp;are on different filesystems</p>\n","<p>import os</p>\n\n<p>os.replace(&quot;a.jpg&quot;,&quot;b.jpg&quot;)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.replace.jpg\" style=\"height:709px; width:643px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.replace2.jpg\" style=\"height:712px; width:645px\" /></p>\n","0"),
("2008","os.rmdir(path, *, dir_fd=None)","<p>Remove (delete) the directory&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>os.rmdir(&quot;new&quot;)</p>\n","0"),
("2009","os.scandir(path=â€™.â€™)","<p>Return ol files in directory (Folders inside directory wont be shown)</p>\n","<p>import os</p>\n\n<p>with os.scandir(path) as it:<br />\n&nbsp;for entry in it:<br />\n&nbsp; &nbsp;if not entry.name.startswith(&#39;.&#39;) and entry.is_file():<br />\n&nbsp; &nbsp; print(entry.name) # b.jpg</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.replace2.jpg\" style=\"height:712px; width:645px\" /></p>\n","0"),
("2010","scandir.close()","","","0"),
("2011","class os.DirEntry","","","0"),
("2012","name","","","0"),
("2013","path","","","0"),
("2014","inode()","","","0"),
("2015","is_dir(*, follow_symlinks=True)","","","0"),
("2016","is_file(*, follow_symlinks=True)","","","0"),
("2017","is_symlink()","","","0"),
("2018","stat(*, follow_symlinks=True)","","","0"),
("2019","os.stat(path, *, dir_fd=None, follow_symlinks=True)","<p>Get the status of a file or a file descriptor</p>\n","<p>import os</p>\n\n<p>os.stat(path) # os.stat_result(st_mode=33206, st_ino=5066549580803563, st_dev=3449520464, st_nlink=1, st_uid=0, st_gid=0, st_size=24, st_atime=1503315482, st_mtime=1503325877, st_ctime=1503315482)</p>\n","0"),
("2020","class os.stat_result","","","0"),
("2021","st_mode","","","0"),
("2022","st_ino","","","0"),
("2023","st_dev","","","0"),
("2024","st_nlink","","","0"),
("2025","st_uid","","","0"),
("2026","st_gid","","","0"),
("2027","st_size","","","0"),
("2028","st_atime","","","0"),
("2029","st_mtime","","","0"),
("2030","st_ctime","","","0"),
("2031","st_atime_ns","","","0"),
("2032","st_mtime_ns","","","0"),
("2033","st_ctime_ns","","","0"),
("2034","st_blocks","","","0"),
("2035","st_blksize","","","0"),
("2036","st_rdev","","","0"),
("2037","st_flags","","","0"),
("2038","st_gen","","","0"),
("2039","st_birthtime","","","0"),
("2040","st_rsize","","","0"),
("2041","st_creator","","","0"),
("2042","st_type","","","0"),
("2043","st_file_attributes","","","0"),
("2044","os.stat_float_times([newvalue])","","","0"),
("2045","os.statvfs(path)","","","0"),
("2046","os.supports_dir_fd","","","0"),
("2047","os.supports_effective_ids","","","0"),
("2048","os.supports_fd","","","0"),
("2049","os.supports_follow_symlinks","","","0"),
("2050","os.symlink(src, dst, target_is_directory=False, *, dir_fd=None)","<p>Create a symbolic link pointing to&nbsp;<em>src</em>&nbsp;named&nbsp;<em>dst</em></p>\n","<p>import os</p>\n\n<p>os.symlink(&quot;b.jpg&quot;,&quot;b.lnk&quot;)</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>C:&gt;fsutil hardlink create C:UsersUserDownloads\\__Nowypython_example ew ekst.txt C:UsersUserDownloads\\__Nowypython_example ekst.txt<br />\nHardlink created for C:UsersUserDownloads\\__Nowypython_example ew ekst.txt &lt;&lt;===&gt;&gt; C:UsersUserDownloads\\__Nowypython_example ekst.txt</p>\n\n<p>Zmaina wartoÅ›ci w jednym pliku wpÅ‚ywa na inny.&nbsp;Ponadto waÅ¼nÄ… cechÄ… dowiÄ…zaÅ„ twardych jest ich ograniczenie do tej samej partycji, na kt&oacute;rej znajduje siÄ™ obiekt Åºr&oacute;dÅ‚owy</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/hard_link.jpg\" /></p>\n\n<p>C:&gt;mklink Link tekst.txt<br />\nsymbolic link created for Link &lt;&lt;===&gt;&gt; tekst.txt</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/soft_link.jpg\" /></p>\n","0"),
("2051","os.sync()","","","0"),
("2052","os.truncate(path, length)","","","0"),
("2053","os.unlink(path, *, dir_fd=None)","","","0"),
("2054","os.utime(path, times=None, *, [ns, ]dir_fd=None, follow_symlinks=True)","","","0"),
("2055","os.walk(top, topdown=True, onerror=None, followlinks=False)","<p>Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory&nbsp;<em>top</em>&nbsp;(including&nbsp;<em>top</em>&nbsp;itself), it yields a 3-tuple&nbsp;<code>(dirpath,dirnames,&nbsp;filenames)</code>.</p>\n","<p>import os<br />\nfor root, dirs, files in os.walk(&quot;.&quot;):<br />\n&nbsp; &nbsp; print(&#39;root: &#39; + str(root) + &quot; dirs: &quot; + &nbsp;str(dirs) + &quot; files: &quot; , str(files))</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>root: . dirs: [&#39;new&#39;] files: &nbsp;[&#39;a.txt&#39;, &#39;example.py&#39;]<br />\nroot: .\new dirs: [] files: &nbsp;[&#39;test.txt&#39;]</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.walk.jpg\" style=\"height:443px; width:800px\" /></p>\n","0"),
("2056","os.fwalk(top=â€™.â€™, topdown=True, onerror=None, *, follow_symlinks=False, dir_fd=None)","","","0"),
("2057","os.getxattr(path, attribute, *, follow_symlinks=True)","","","0"),
("2058","os.listxattr(path=None, *, follow_symlinks=True)","","","0"),
("2059","os.removexattr(path, attribute, *, follow_symlinks=True)","","","0"),
("2060","os.setxattr(path, attribute, value, flags=0, *, follow_symlinks=True)","","","0"),
("2061","os.XATTR_SIZE_MAX","","","0"),
("2062","os.XATTR_CREATE","","","0"),
("2063","os.XATTR_REPLACE","","","0"),
("2064","os.abort()","<p>On Windows, the process immediately returns an exit code of&nbsp;<code>3</code></p>\n","<p>import os</p>\n\n<p>os.abort()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.abort.jpg\" style=\"height:461px; width:800px\" /></p>\n","0"),
("2065","os.execl(path, arg0, arg1, â€¦)","","","0"),
("2066","os.execle(path, arg0, arg1, â€¦, env)","","","0"),
("2067","os.execlp(file, arg0, arg1, â€¦)","","","0"),
("2068","os.execlpe(file, arg0, arg1, â€¦, env)","","","0"),
("2069","os.execv(path, args)","","","0"),
("2070","os.execve(path, args, env)","","","0"),
("2071","os.execvp(file, args)","","","0"),
("2072","os.execvpe(file, args, env)","","","0"),
("2073","os._exit(n)","","","0"),
("2074","os.EX_OK","","","0"),
("2075","os.EX_USAGE","","","0"),
("2076","os.EX_DATAERR","","","0"),
("2077","os.EX_NOINPUT","","","0"),
("2078","os.EX_NOUSER","","","0"),
("2079","os.EX_NOHOST","","","0"),
("2080","os.EX_UNAVAILABLE","","","0"),
("2081","os.EX_SOFTWARE","","","0"),
("2082","os.EX_OSERR","","","0");
INSERT INTO function VALUES
("2083","os.EX_OSFILE","","","0"),
("2084","os.EX_CANTCREAT","","","0"),
("2085","os.EX_IOERR","","","0"),
("2086","os.EX_TEMPFAIL","","","0"),
("2087","os.EX_PROTOCOL","","","0"),
("2088","os.EX_NOPERM","","","0"),
("2089","os.EX_CONFIG","","","0"),
("2090","os.EX_NOTFOUND","","","0"),
("2091","os.fork()","","","0"),
("2092","os.forkpty()","","","0"),
("2093","os.kill(pid, sig)","<p>Send signal&nbsp;<em>sig</em>&nbsp;to the process&nbsp;<em>pid</em></p>\n","<p>import os, signal</p>\n\n<p>os.kill(5864, signal.SIGTERM)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.kill.jpg\" style=\"height:738px; width:837px\" /></p>\n","0"),
("2094","os.killpg(pgid, sig)","","","0"),
("2095","os.nice(increment)","","","0"),
("2096","os.plock(op)","","","0"),
("2097","os.popen(cmd, mode=â€™râ€™, buffering=-1)","<p>Open a pipe to or from command&nbsp;<em>cmd (Work as cmd and it dont show comadline cmd.exe)</em></p>\n","<p>import os, sys</p>\n\n<p># using command mkdir<br />\na = &#39;explorer C:\\Users\\User\\Desktop\\_Python&#39;</p>\n\n<p>b = os.popen(a)<br />\n&nbsp;</p>\n","0"),
("2098","os.spawnl(mode, path, â€¦)","","","0"),
("2099","os.spawnle(mode, path, â€¦, env)","","","0"),
("2100","os.spawnlp(mode, file, â€¦)","","","0"),
("2101","os.spawnlpe(mode, file, â€¦, env)","","","0"),
("2102","os.spawnv(mode, path, args)","","","0"),
("2103","os.spawnve(mode, path, args, env)","","","0"),
("2104","os.spawnvp(mode, file, args)","","","0"),
("2105","os.spawnvpe(mode, file, args, env)","","","0"),
("2106","os.P_NOWAIT","","","0"),
("2107","os.P_NOWAITO","","","0"),
("2108","os.P_WAIT","","","0"),
("2109","os.P_DETACH","","","0"),
("2110","os.P_OVERLAY","","","0"),
("2111","os.startfile(path[, operation])","<p>Start a file with its associated application</p>\n","<p>import os</p>\n\n<p>os.startfile(&#39;C:UsersUserDownloads\\__NowyWard_S3_3.jpg&#39;)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.startfile.jpg\" style=\"height:439px; width:800px\" /></p>\n\n<p>Drukowanie</p>\n\n<p>os.startfile(r&quot;C:UsersUserDownloads\\__Nowy\\_USAplik.txt&quot;, &quot;print&quot;)</p>\n","0"),
("2112","os.system(command)","<p>Wykonuje komendÄ™ cmd dziaÅ‚a tak samo jak os.popen() z tÄ… r&oacute;Å¼nicÄ… Å¼e wyÅ›wietla na chwilÄ™ konsolÄ™ cmd</p>\n","<p>import os, sys</p>\n\n<p># using command mkdir<br />\na = &#39;explorer C:\\Users\\User\\Desktop\\_Python&#39;</p>\n\n<p>os.popen(a)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os/os.system.jpg\" style=\"height:465px; width:800px\" /></p>\n","0"),
("2113","os.times()","<p>Returns the current global process times</p>\n\n<ul>\n	<li>\n	<p><strong>User</strong>&nbsp;is the amount of CPU time spent in user-mode code (outside the kernel)&nbsp;<em>within</em>&nbsp;the process. This is only actual CPU time used in executing the process. Other processes and time the process spends blocked do not count towards this figure.</p>\n	</li>\n	<li>\n	<p><strong>Sys</strong>&nbsp;is the amount of CPU time spent in the kernel within the process. This means executing CPU time spent in system calls&nbsp;<em>within the kernel,</em>&nbsp;as opposed to library code, which is still running in user-space. Like &#39;user&#39;, this is only CPU time used by the process. See below for a brief description of kernel mode (also known as &#39;supervisor&#39; mode) and the system call mechanism.</p>\n	</li>\n</ul>\n","<p>import os</p>\n\n<p>os.times() # nt.times_result(user=0.203125, system=0.171875, children_user=0.0, children_system=0.0, elapsed=0.0)</p>\n","0"),
("2114","os.wait()","","","0"),
("2115","os.waitid(idtype, id, options)","","","0"),
("2116","os.P_PID","","","0"),
("2117","os.P_PGID","","","0"),
("2118","os.P_ALL","","","0"),
("2119","os.WEXITED","","","0"),
("2120","os.WSTOPPED","","","0"),
("2121","os.WNOWAIT","","","0"),
("2122","os.CLD_EXITED","","","0"),
("2123","os.CLD_DUMPED","","","0"),
("2124","os.CLD_TRAPPED","","","0"),
("2125","os.CLD_CONTINUED","","","0"),
("2126","os.waitpid(pid, options)","","","0"),
("2127","os.wait3(options)","","","0"),
("2128","os.wait4(pid, options)","","","0"),
("2129","os.WNOHANG","","","0"),
("2130","os.WCONTINUED","","","0"),
("2131","os.WUNTRACED","","","0"),
("2132","os.WCOREDUMP(status)","","","0"),
("2133","os.WIFCONTINUED(status)","","","0"),
("2134","os.WIFSTOPPED(status)","","","0"),
("2135","os.WIFSIGNALED(status)","","","0"),
("2136","os.WIFEXITED(status)","","","0"),
("2137","os.WEXITSTATUS(status)","","","0"),
("2138","os.WSTOPSIG(status)","","","0"),
("2139","os.WTERMSIG(status)","","","0"),
("2140","os.SCHED_OTHER","","","0"),
("2141","os.SCHED_BATCH","","","0"),
("2142","os.SCHED_IDLE","","","0"),
("2143","os.SCHED_SPORADIC","","","0"),
("2144","os.SCHED_FIFO","","","0"),
("2145","os.SCHED_RR","","","0"),
("2146","os.SCHED_RESET_ON_FORK","","","0"),
("2147","class os.sched_param(sched_priority)","","","0"),
("2148","sched_priority","","","0"),
("2149","os.sched_get_priority_min(policy)","","","0"),
("2150","tempfile.TemporaryFile(mode=â€™w+bâ€™, buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None)","<p>Return a&nbsp;<a href=\"https://docs.python.org/3/glossary.html#term-file-like-object\">file-like object</a>&nbsp;that can be used as a temporary storage area. The file is created securely</p>\n","<p>import tempfile<br />\nfp = tempfile.TemporaryFile()</p>\n\n<p>fp.write(b&#39;Hello world!&#39;)</p>\n\n<p>fp.read() # b&#39;&#39;</p>\n\n<pre>\nfp.seek(0) # Musi byÄ‡ aby moÅ¼na byÅ‚o odczytaÄ‡ dane</pre>\n\n<p>fp.read() # b&#39;Hello world!&#39;</p>\n\n<pre>\nfp.close()\n</pre>\n","0"),
("2151","tempfile.NamedTemporaryFile(mode=â€™w+bâ€™, buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None, delete=True)","","","0"),
("2152","tempfile.SpooledTemporaryFile(max_size=0, mode=â€™w+bâ€™, buffering=None, encoding=None, newline=None, suffix=None, prefix=None, dir=None)","","","0"),
("2153","tempfile.TemporaryDirectory(suffix=None, prefix=None, dir=None)","","","0"),
("2154","tempfile.mkstemp(suffix=None, prefix=None, dir=None, text=False)","","","0"),
("2155","tempfile.mkdtemp(suffix=None, prefix=None, dir=None)","","","0"),
("2156","tempfile.gettempdir()","<p>Return the name of the directory used for temporary files</p>\n","<p>import tempfile</p>\n\n<p>tempfile.gettempdir() # &#39;C:UsersUserAppDataLocalTemp&#39;</p>\n","0"),
("2157","tempfile.gettempdirb()","<p>Same as&nbsp;<a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir\" title=\"tempfile.gettempdir\"><code>gettempdir()</code></a>&nbsp;but the return value is in bytes</p>\n","<p>import tempfile</p>\n\n<p>tempfile.gettempdirb() # b&#39;C:UsersUserAppDataLocalTemp&#39;</p>\n","0"),
("2158","tempfile.gettempprefix()","<p>Return the filename prefix used to create temporary files. This does not contain the directory component</p>\n","<p>import tempfile</p>\n\n<p>tempfile.gettempprefix() # &#39;tmp&#39;</p>\n","0"),
("2159","tempfile.gettempprefixb()","<p>Same as&nbsp;<a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.gettempprefix\" title=\"tempfile.gettempprefix\"><code>gettempprefix()</code></a>&nbsp;but the return value is in bytes</p>\n","<p>import tempfile</p>\n\n<p>tempfile.gettempprefixb() # b&#39;tmp&#39;</p>\n","0"),
("2160","tempfile.tempdir","<p>When set to a value other than&nbsp;<code>None</code>, this variable defines the default value for the&nbsp;<em>dir</em>&nbsp;argument to the functions defined in this module</p>\n","<p>import tempfile</p>\n\n<p>tempfile.tempdir # &#39;C:UsersUserAppDataLocalTemp&#39;</p>\n","0"),
("2161","tempfile.mktemp(suffix=â€, prefix=â€™tmpâ€™, dir=None)","","","0"),
("2162","codeop.compile_command(source, filename=â€<input>â€, symbol=â€singleâ€)","<p><a href=\"https://docs.python.org/3/library/codeop.html#codeop.compile_command\"><code>codeop.compile_command</code></a>&nbsp;attempt to compile the code. This is the same logic that the&nbsp;<a href=\"https://docs.python.org/3/library/code.html\"><code>code</code></a>&nbsp;module&nbsp;<a href=\"https://github.com/python/cpython/blob/master/Lib/code.py\">does</a>&nbsp;to determine whether to ask for another line or immediately fail with a syntax error.</p>\n","<p>import codeop</p>\n\n<p>def is_valid_code(line):<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; codeop.compile_command(line)<br />\n&nbsp; &nbsp; except SyntaxError:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(False)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return False<br />\n&nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(True)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return True</p>\n\n<p><br />\nis_valid_code(&#39;for i in range(10):&#39;) # True<br />\nis_valid_code(&#39;&#39;) # True<br />\nis_valid_code(&#39;x = 1&#39;) # True<br />\nis_valid_code(&#39;for j in range(10 in range(10(&#39;) # True<br />\nis_valid_code(&#39;x = ++-+ 1+-&#39;) # False</p>\n","0"),
("2163","class codeop.Compile","","","0"),
("2164","class codeop.CommandCompiler","","","0"),
("2165","class cmd.Cmd(completekey=â€™tabâ€™, stdin=None, stdout=None)","<p><code>cmd.Cmd</code>: you subclass it and customize the subclass to be your command prompt. The methods of this subclass that begin with&nbsp;<code>do_</code>&nbsp;are now your prompt commands.</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_hello(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Says hello. If you provide a name, it will greet you with it.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if len(args) == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = &#39;stranger&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = args<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Hello, %s&quot; % name)</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p><br />\nif __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/cmd/cmd.Cmd.jpg\" style=\"height:888px; width:830px\" /></p>\n","0"),
("2166","Cmd.cmdloop(intro=None)","<p>Repeatedly issue a prompt, accept input, parse an initial prefix off the received input, and dispatch to action methods, passing them the remainder of the line as argument</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_hello(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Says hello. If you provide a name, it will greet you with it.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; if len(args) == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = &#39;stranger&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; name = args<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Hello, %s&quot; % name)</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p><br />\nif __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2167","Cmd.onecmd(str)","","","0"),
("2168","Cmd.emptyline()","","","0"),
("2169","Cmd.default(line)","","","0"),
("2170","Cmd.completedefault(text, line, begidx, endidx)","","","0"),
("2171","Cmd.precmd(line)","","","0"),
("2172","Cmd.postcmd(stop, line)","","","0"),
("2173","Cmd.preloop()","","","0"),
("2174","Cmd.postloop()","","","0"),
("2175","Cmd.prompt","<p>The prompt issued to solicit input</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.prompt) # (Cmd)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n\n<p><br />\n&nbsp;</p>\n","0"),
("2176","Cmd.identchars","<p>The string of characters accepted for the command prefix</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.identchars) # abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2177","Cmd.lastcmd","<p>The last nonempty command prefix seen</p>\n","","0"),
("2178","Cmd.cmdqueue","","","0"),
("2179","Cmd.intro","<p>A string to issue as an intro or banner. May be overridden by giving the&nbsp;<a href=\"https://docs.python.org/3/library/cmd.html#cmd.Cmd.cmdloop\" title=\"cmd.Cmd.cmdloop\"><code>cmdloop()</code></a>&nbsp;method an argument</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.intro) # None<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2180","Cmd.doc_header","<p>The header to issue if the help output has a section for documented commands</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.doc_header) # Documented commands (type help &lt;topic&gt;):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2181","Cmd.misc_header","<p>The header to issue if the help output has a section for miscellaneous help topics (that is, there are&nbsp;<code>help_*()</code>&nbsp;methods without corresponding&nbsp;<code>do_*()</code>&nbsp;methods).</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.misc_header) # Miscellaneous help topics:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2182","Cmd.undoc_header","<p>The header to issue if the help output has a section for undocumented commands (that is, there are&nbsp;<code>do_*()</code>&nbsp;methods without corresponding&nbsp;<code>help_*()</code>&nbsp;methods).</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.undoc_header) # Undocumented commands:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0");
INSERT INTO function VALUES
("2183","Cmd.ruler","<p>The character used to draw separator lines under the help-message headers. If empty, no ruler line is drawn. It defaults to&nbsp;<code>&#39;=&#39;</code>.</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.ruler) # =<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2184","Cmd.use_rawinput","<p>A flag, defaulting to true. If true,&nbsp;<a href=\"https://docs.python.org/3/library/cmd.html#cmd.Cmd.cmdloop\" title=\"cmd.Cmd.cmdloop\"><code>cmdloop()</code></a>&nbsp;uses&nbsp;<a href=\"https://docs.python.org/3/library/functions.html#input\" title=\"input\"><code>input()</code></a>&nbsp;to display a prompt and read the next command; if false,&nbsp;<code>sys.stdout.write()</code>&nbsp;and&nbsp;<code>sys.stdin.readline()</code>&nbsp;are used.</p>\n","<p>from cmd import Cmd</p>\n\n<p>class MyPrompt(Cmd):</p>\n\n<p>&nbsp; &nbsp; def do_quit(self, args):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;&quot;&quot;Quits the program.&quot;&quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;Quitting.&quot;)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(Cmd.use_rawinput) # 1<br />\n&nbsp; &nbsp; &nbsp; &nbsp; raise SystemExit</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; prompt = MyPrompt()<br />\n&nbsp; &nbsp; prompt.prompt = &#39;&gt; &#39;<br />\n&nbsp; &nbsp; prompt.cmdloop(&#39;Starting prompt...&#39;)</p>\n","0"),
("2185","os.cpu_count()","<p>Return the number of CPUs in the system</p>\n","<p>import os</p>\n\n<p>os.cpu_count() # 2</p>\n","0"),
("2186","os.curdir","<p>The constant string used by the operating system to refer to the current directory. This is&nbsp;<code>&#39;.&#39;</code>&nbsp;for Windows and POSIX</p>\n","<p>import os</p>\n\n<p>os.curdir # &#39;.&#39;</p>\n","0"),
("2187","os.pardir","<p>The constant string used by the operating system to refer to the parent directory. This is&nbsp;<code>&#39;..&#39;</code>&nbsp;for Windows and POSIX</p>\n","<p>import os</p>\n\n<p>os.pardir # &#39;..&#39;</p>\n","0"),
("2188","os.sep","<p>The character used by the operating system to separate pathname components. This is&nbsp;<code>&#39;/&#39;</code>&nbsp;for POSIX and&nbsp;<code>&#39;\\&#39;</code>&nbsp;for Windows</p>\n","<p>import os</p>\n\n<p>os.sep # &#39;&#39;</p>\n","0"),
("2189","os.altsep","<p>An alternative character used by the operating system to separate pathname components, or&nbsp;<code>None</code>&nbsp;if only one separator character exists. This is set to&nbsp;<code>&#39;/&#39;</code>&nbsp;on Windows systems where&nbsp;<code>sep</code>&nbsp;is a backslash</p>\n","<p>import os</p>\n\n<p>os.altsep # &#39;/&#39;</p>\n","0"),
("2190","os.extsep","<p>The character which separates the base filename from the extension; for example, the&nbsp;<code>&#39;.&#39;</code>&nbsp;in&nbsp;<code>os.py</code></p>\n","<p>import os</p>\n\n<p>os.extsep # &#39;.&#39;</p>\n","0"),
("2191","os.pathsep","<p>The character conventionally used by the operating system to separate search path components (as in&nbsp;<code>PATH</code>), such as&nbsp;<code>&#39;:&#39;</code>&nbsp;for POSIX or&nbsp;<code>&#39;;&#39;</code>&nbsp;for Windows</p>\n","<p>import os</p>\n\n<p>os.pathsep # &#39;;&#39;</p>\n","0"),
("2192","os.defpath","<p>The default search path used by&nbsp;<a href=\"https://docs.python.org/3/library/os.html#os.execl\" title=\"os.execl\"><code>exec*p*</code></a>&nbsp;and&nbsp;<a href=\"https://docs.python.org/3/library/os.html#os.spawnl\" title=\"os.spawnl\"><code>spawn*p*</code></a>&nbsp;if the environment doesn&rsquo;t have a&nbsp;<code>&#39;PATH&#39;</code>&nbsp;key</p>\n","<p>import os</p>\n\n<p>os.defpath # &#39;.;C:in&#39;</p>\n","0"),
("2193","os.linesep","<p>The string used to separate (or, rather, terminate) lines on the current platform</p>\n","<p>import os</p>\n\n<p>os.linesep # &#39; &#39;</p>\n","0"),
("2194","os.devnull","<p>The file path of the null device. For example:&nbsp;<code>&#39;/dev/null&#39;</code>&nbsp;for POSIX,&nbsp;<code>&#39;nul&#39;</code>&nbsp;for Windows</p>\n","<p>import os</p>\n\n<p>os.devnull # &#39;nul&#39;</p>\n","0"),
("2195","reading","<h3>Parsing XML</h3>\n","<p>import os<br />\nimport xml.etree.ElementTree as ET</p>\n\n<p>dir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p>tree = ET.parse(&#39;tekst.xml&#39;)<br />\nroot = tree.getroot()</p>\n\n<p>print(root.tag) # &#39;data&#39;<br />\nprint(root.attrib) # {}<br />\nprint()<br />\ni = 0</p>\n\n<p>for child in root:<br />\n&nbsp; &nbsp; print(child.attrib[&#39;name&#39;])<br />\n&nbsp; &nbsp; for y in range(len(child)):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(root[i][y].tag,root[i][y].text)<br />\n&nbsp; &nbsp; i = i + 1<br />\n&nbsp; &nbsp; print()</p>\n\n<p>&#39;&#39;&#39;<br />\ndata<br />\n{}</p>\n\n<p>Liechtenstein<br />\nrank 1<br />\nyear 2008<br />\ngdppc 141100<br />\nneighbor None<br />\nneighbor None</p>\n\n<p>Singapore<br />\nrank 4<br />\nyear 2011<br />\ngdppc 59900<br />\nneighbor None</p>\n\n<p>Panama<br />\nrank 68<br />\nyear 2011<br />\ngdppc 13600<br />\nneighbor None<br />\nneighbor None<br />\n&#39;&#39;&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/xml/xml-reading.jpg\" style=\"height:411px; width:484px\" /></p>\n","0"),
("2196","os.path.abspath(path)","<p>Return a normalized absolutized version of the pathname&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;</p>\n\n<p>os.chdir(path)<br />\nos.path.abspath(path) # &#39;C:UsersUserDownloads\\__Nowypython_example&#39;</p>\n\n<p>os.path.abspath(&#39;tekst.txt&#39;) #&nbsp;&#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;</p>\n","0"),
("2197","os.path.basename(path)","<p>Return the base name of pathname&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;</p>\n\n<p>os.path.basename(path) # &#39;python_example&#39;</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;<br />\nos.path.basename(path) # &#39;tekst.txt&#39;</p>\n\n<p>path = &quot;C:UsersUserDownloads\\__Nowypython_example&quot;<br />\nos.path.basename(path) # &#39;&#39;</p>\n","0"),
("2198","os.path.commonpath(paths)","<p>Return the longest common sub-path of each pathname in the sequence&nbsp;<em>paths</em></p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;<br />\nos.path.basename(path) # &#39;tekst.txt&#39;</p>\n\n<p>path = &quot;C:UsersUserDownloads\\__Nowypython_example&quot;<br />\nos.path.basename(path) # &#39;&#39;</p>\n","0"),
("2199","os.path.commonprefix(list)","<p>Zwraca czÄ™Å›Ä‡ wsp&oacute;lnÄ… dw&oacute;ch Å›cieÅ¼ek</p>\n","<p>import os</p>\n\n<p>path = &quot;C:UsersUserDownloads\\__Nowypython_example&quot;<br />\npath2 = &quot;C:UsersUser\\_PythonPygame&quot;</p>\n\n<p>os.path.commonprefix([path,path2]) # &#39;C:UsersUser&#39;</p>\n\n<p>path2 = &quot;C:UsersUserD_PythonPygame&quot;<br />\nos.path.commonprefix([path,path2]) # &#39;C:UsersUserD&#39;</p>\n","0"),
("2200","os.path.dirname(path)","<p>Usuwa \\ na koÅ„cu Å›cieÅ¼ki</p>\n","<p>import os</p>\n\n<p>os.path.dirname(&#39;CUsers&#39;) # &#39;CUsers&#39;</p>\n","0"),
("2201","os.path.exists(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;refers to an existing path</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;</p>\n\n<p>os.path.exists(path) # True</p>\n","0"),
("2202","os.path.lexists(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;refers to an existing path</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;</p>\n\n<p>os.path.lexists(path) # True</p>\n","0"),
("2203","os.path.expanduser(path)","","","0"),
("2204","os.path.expandvars(path)","<p>Return the argument with environment variables expanded</p>\n","<p>import os</p>\n\n<p>os.path.expandvars(&#39;$OS&#39;) # &#39;Windows_NT&#39;<br />\nos.path.expandvars(&#39;$PROCESSOR_IDENTIFIER&#39;) # &#39;x86 Family 6 Model 37 Stepping 5, GenuineIntel&#39;</p>\n","0"),
("2205","os.path.getatime(path)","<p>Return the time of last access of&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>import datetime</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>os.path.getatime(path) # 1503848532.0793262<br />\ndatetime.datetime.fromtimestamp(os.path.getatime(path)) # datetime.datetime(2017, 8, 27, 17, 42, 12, 79326)</p>\n","0"),
("2206","os.path.getmtime(path)","<p>Return the time of last modification of&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>import datetime</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>datetime.datetime.fromtimestamp(os.path.getmtime(path)) # datetime.datetime(2017, 8, 27, 17, 42, 12, 80327)</p>\n","0"),
("2207","os.path.getctime(path)","<p>Return the system&rsquo;s ctime which, on some systems (like Unix) is the time of the last metadata change, and, on others (like Windows), is the creation time for&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>import datetime</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>datetime.datetime.fromtimestamp(os.path.getctime(path)) # datetime.datetime(2017, 8, 27, 17, 42, 12, 79326)</p>\n","0"),
("2208","os.path.getsize(path)","<p>Return the size, in bytes, of&nbsp;<em>path</em></p>\n","<p>import os</p>\n\n<p>import datetime</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>os.path.getsize(path) # 0</p>\n","0"),
("2209","os.path.isabs(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;is an absolute pathname</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>path2 = &quot;C:UsersUserD_PythonPygame&quot;</p>\n\n<p>os.path.isabs(path) # True<br />\nos.path.isabs(path2) # True<br />\nos.path.isabs(&#39;tekst.txt&#39;) # False</p>\n","0"),
("2210","os.path.isfile(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;is an existing regular file</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>path2 = &quot;C:UsersUserD_PythonPygame&quot;</p>\n\n<p>os.path.isfile(path) # True<br />\nos.path.isfile(path2) # False</p>\n","0"),
("2211","os.path.isdir(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;is an existing directory</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>path2 = &quot;C:UsersUserD_PythonPygame\\&quot;</p>\n\n<p>path3 = r&quot;C:UsersUser\\_PythonPygame&quot;</p>\n\n<p>os.path.isdir(path) # False</p>\n\n<p>os.path.isdir(path2) # False</p>\n\n<p>os.path.isdir(path3) # True</p>\n","0"),
("2212","os.path.islink(path)","<p>Return&nbsp;<code>True</code>&nbsp;if&nbsp;<em>path</em>&nbsp;refers to a directory entry that is a symbolic link</p>\n","<p>import os</p>\n\n<p>path = r&quot;C:UsersUserDownloads\\__Nowypython_example ekst.txt&quot;</p>\n\n<p>os.path.islink(path) # False</p>\n","0"),
("2213","os.path.ismount(path)","<p>Zwraca True gdy wartoÅ›Ä‡ to &nbsp;litera okreÅ›lajÄ…ca dysk oraz dwukropek i dwa slashe \\</p>\n","<p>import os</p>\n\n<p>os.path.ismount(&#39;C&#39;) # False<br />\nos.path.ismount(&#39;C:&#39;) # True<br />\nos.path.ismount(&#39;D:&#39;) # True<br />\nos.path.ismount(&#39;G:&#39;) # True<br />\nos.path.ismount(&#39;J:&#39;) # True<br />\nos.path.ismount(&#39;I:&#39;) # True<br />\nos.path.ismount(&#39;S:&#39;) # True<br />\nos.path.ismount(&#39;C&#39;) # False</p>\n","0"),
("2214","os.path.join(path, *paths)","<p>Join one or more path components intelligently</p>\n","<p>import os</p>\n\n<p>path2 = &quot;C:UsersUserD_PythonPygame&quot;</p>\n\n<p>os.path.join(path2,&#39;new&#39;) # &#39;C:UsersUserD_PythonPygame ew&#39;</p>\n","0"),
("2215","os.path.normcase(path)","<p>Normalize the case of a pathname</p>\n","<p>import os</p>\n\n<p>path = &#39;C:/Users/User/Downloads/__Nowy/Python_example/tekst.txt&#39;<br />\nos.path.normcase(path) # &#39;c:usersuserdownloads\\__nowypython_example ekst.txt&#39;</p>\n","0"),
("2216","os.path.normpath(path)","<p>Normalize a pathname by collapsing redundant separators and up-level references so that&nbsp;<code>A//B</code>,&nbsp;<code>A/B/</code>,&nbsp;<code>A/./B</code>&nbsp;and&nbsp;<code>A/foo/../B</code>&nbsp;all become&nbsp;<code>A/B</code>.</p>\n","<p>import os</p>\n\n<p>path = &#39;C:UsersUserDownloads\\__NowyPython_example..aaa&#39;<br />\nos.path.normpath(path) # &#39;C:UsersUserDownloads\\__Nowyaaa&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/os.path/os.path.normpath.jpg\" style=\"height:59px; width:332px\" /></p>\n","0"),
("2217","os.path.realpath(path)","<p>Return the canonical path of the specified filename</p>\n","<p>import os</p>\n\n<p>path = &#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;</p>\n\n<p>path2 =&nbsp;&#39;C:UsersUserD_PythonPygame&#39;<br />\n&nbsp;os.path.realpath(path) # &#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;<br />\nos.path.realpath(path2) # &#39;C:UsersUserD_PythonPygame&#39;</p>\n","0"),
("2218","os.path.relpath(path, start=os.curdir)","<p>Zwraca nazwÄ™ pliku w Å›ceiÅ¼ce</p>\n","<p>import os</p>\n\n<p>path = &#39;C:UsersUserDownloads\\__Nowypython_example ekst.txt&#39;</p>\n\n<p>path2 =&nbsp;&#39;C:UsersUserD_PythonPygame&#39;</p>\n\n<p>os.path.relpath(path) # &#39;tekst.txt&#39;<br />\nos.path.relpath(path2) # &#39;......D_PythonPygame&#39;</p>\n","0"),
("2219","os.path.samefile(path1, path2)","","<p>import os</p>\n\n<p>path =&nbsp;&#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;</p>\n\n<p>path3 =&nbsp;&#39;C:UsersUser\\_PythonPygame&#39;</p>\n\n<p>os.path.samefile(path, path) # True<br />\nos.path.samefile(path2, path2)</p>\n\n<p>&#39;&#39;&#39;<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&quot;, line 1, in<br />\n&nbsp; File &quot;C:UsersUserAppDataLocalProgramsPythonPython36-32libgenericpath.py&quot;, line 96, in samefile<br />\n&nbsp; &nbsp; s1 = os.stat(f1)<br />\nFileNotFoundError: [WinError 3] System nie moÅ¼e odnaleÅºÄ‡ okreÅ›lonej Å›cieÅ¼ki: &#39;C:UsersUserD_PythonPygame&#39;</p>\n\n<p>&#39;&#39;&#39;<br />\nos.path.samefile(path3, path3) # True</p>\n","0"),
("2220","os.path.sameopenfile(fp1, fp2)","<p>Return&nbsp;<code>True</code>&nbsp;if the file descriptors&nbsp;<em>fp1</em>&nbsp;and&nbsp;<em>fp2</em>&nbsp;refer to the same file</p>\n","","0"),
("2221","os.path.samestat(stat1, stat2)","","","0"),
("2222","os.path.split(path)","<p>Split the pathname&nbsp;<em>path</em>&nbsp;into a pair,&nbsp;<code>(head,&nbsp;tail)</code>&nbsp;where&nbsp;<em>tail</em>&nbsp;is the last pathname component and&nbsp;<em>head</em>&nbsp;is everything leading up to that</p>\n","<p>import os</p>\n\n<p>path = &#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;</p>\n\n<p>os.path.split(path) # (&#39;C:UsersUserDownloads\\__Nowypython_example&#39;, &#39;tekst.txt&#39;) #&nbsp;(&#39;C:UsersUserDownloads\\__Nowypython_example&#39;, &#39;tekst.txt&#39;)</p>\n","0"),
("2223","os.path.splitdrive(path)","<p>Split the pathname&nbsp;<em>path</em>&nbsp;into a pair&nbsp;<code>(drive,&nbsp;tail)</code>&nbsp;where&nbsp;<em>drive</em>&nbsp;is either a mount point or the empty string</p>\n","<p>import os</p>\n\n<p>path =&nbsp;&#39;C:UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;</p>\n\n<p>os.path.splitdrive(path) # (&#39;C:&#39;, &#39;UsersUserDownloads\\__Nowypython_example	ekst.txt&#39;)</p>\n","0"),
("2224","os.path.splitext(path)","<p>Split the pathname&nbsp;<em>path</em>&nbsp;into a pair&nbsp;<code>(root,&nbsp;ext)</code>&nbsp;such that&nbsp;<code>root&nbsp;+&nbsp;ext&nbsp;==&nbsp;path</code></p>\n","<p>import os</p>\n\n<p>path =&nbsp;&#39;C:UsersUserDownloads\\__Nowypython_example ekst.txt&#39;</p>\n\n<p>os.path.splitext(path) # (&#39;C:UsersUserDownloads\\__Nowypython_example ekst&#39;, &#39;.txt&#39;)</p>\n\n<p>&nbsp;</p>\n\n<p>&#39;file.txt.zip&#39;.split() # [&#39;file.txt.zip&#39;]</p>\n\n<p>os.path.splitext(&#39;file.txt.zip&#39;) # (&#39;file.txt&#39;, &#39;.zip&#39;)</p>\n","0"),
("2225","os.path.splitunc(path)","","","0"),
("2226","os.path.supports_unicode_filenames","<p><code>True</code>&nbsp;if arbitrary Unicode strings can be used as file names (within limitations imposed by the file system).</p>\n","<p>import os</p>\n\n<p>os.path.supports_unicode_filenames # True</p>\n","0"),
("2227","urllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)","<p>Open the URL&nbsp;<em>url</em>, which can be either a string or a&nbsp;<a href=\"https://docs.python.org/3/library/urllib.request.html#urllib.request.Request\" title=\"urllib.request.Request\"><code>Request</code></a>&nbsp;object</p>\n","<p>import urllib.request as r</p>\n\n<p>content = r.urlopen(&#39;http://tigerhawkt3.com/contact.html&#39;)<br />\ntype(content) # &lt;class &#39;http.client.HTTPResponse&#39;&gt;</p>\n\n<p>&nbsp;</p>\n","0"),
("2228","urllib.request.install_opener(opener)","","","0"),
("2229","urllib.request.build_opener([handler, â€¦])","","","0"),
("2230","urllib.request.pathname2url(path)","<p>Convert the pathname&nbsp;<em>path</em>&nbsp;from the local syntax for a path to the form used in the path component of a URL. This does not produce a complete URL. The return value will already be quoted using the&nbsp;<a href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote\" title=\"urllib.parse.quote\"><code>quote()</code></a>&nbsp;function</p>\n","<p>import urllib.request as r</p>\n\n<p>content = r.urlopen(&#39;http://tigerhawkt3.com/contact.html&#39;)<br />\ntype(content) # &lt;class &#39;http.client.HTTPResponse&#39;&gt;</p>\n\n<p>r.pathname2url(r&#39;C:UsersUsermy file.txt&#39;) # &#39;///C:/Users/User/my%20file.txt&#39;<br />\nr.pathname2url(&#39;my file.txt&#39;) # &#39;my%20file.txt&#39;</p>\n","0"),
("2231","urllib.request.url2pathname(path)","","","0"),
("2232","urllib.request.getproxies()","","","0"),
("2233","class urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)","","","0"),
("2234","class urllib.request.OpenerDirector","","","0"),
("2235","class urllib.request.BaseHandler","","","0"),
("2236","class urllib.request.HTTPDefaultErrorHandler","","","0"),
("2237","class urllib.request.HTTPRedirectHandler","","","0"),
("2238","class urllib.request.HTTPCookieProcessor(cookiejar=None)","","","0"),
("2239","class urllib.request.ProxyHandler(proxies=None)","","","0"),
("2240","class urllib.request.HTTPPasswordMgr","","","0"),
("2241","class urllib.request.HTTPPasswordMgrWithDefaultRealm","","","0"),
("2242","class urllib.request.HTTPPasswordMgrWithPriorAuth","","","0"),
("2243","class urllib.request.AbstractBasicAuthHandler(password_mgr=None)","","","0"),
("2244","class urllib.request.HTTPBasicAuthHandler(password_mgr=None)","","","0"),
("2245","class urllib.request.ProxyBasicAuthHandler(password_mgr=None)","","","0"),
("2246","class urllib.request.AbstractDigestAuthHandler(password_mgr=None)","","","0"),
("2247","class urllib.request.HTTPDigestAuthHandler(password_mgr=None)","","","0"),
("2248","class urllib.request.ProxyDigestAuthHandler(password_mgr=None)","","","0"),
("2249","class urllib.request.HTTPHandler","","","0"),
("2250","class urllib.request.HTTPSHandler(debuglevel=0, context=None, check_hostname=None)","","","0"),
("2251","class urllib.request.FileHandler","","","0"),
("2252","class urllib.request.DataHandler","","","0"),
("2253","class urllib.request.FTPHandler","","","0"),
("2254","class urllib.request.CacheFTPHandler","","","0"),
("2255","class urllib.request.UnknownHandler","","","0"),
("2256","class urllib.request.HTTPErrorProcessor","","","0"),
("2257","Request.full_url","","","0"),
("2258","Request.type","","","0"),
("2259","Request.host","","","0"),
("2260","Request.origin_req_host","","","0"),
("2261","Request.selector","","","0"),
("2262","Request.data","","","0"),
("2263","Request.unverifiable","","","0"),
("2264","Request.method","","","0"),
("2265","Request.get_method()","","","0"),
("2266","Request.add_header(key, val)","","","0"),
("2267","Request.add_unredirected_header(key, header)","","","0"),
("2268","Request.has_header(header)","","","0"),
("2269","Request.remove_header(header)","","","0"),
("2270","Request.get_full_url()","","","0"),
("2271","Request.set_proxy(host, type)","","","0"),
("2272","Request.get_header(header_name, default=None)","","","0"),
("2273","Request.header_items()","","","0"),
("2274","OpenerDirector.add_handler(handler)","","","0"),
("2275","OpenerDirector.open(url, data=None[, timeout])","","","0"),
("2276","OpenerDirector.error(proto, *args)","","","0"),
("2277","BaseHandler.add_parent(director)","","","0"),
("2278","BaseHandler.close()","","","0"),
("2279","BaseHandler.parent","","","0"),
("2280","BaseHandler.default_open(req)","","","0"),
("2281","BaseHandler.protocol_open(req)","","","0"),
("2282","BaseHandler.unknown_open(req)","","","0");
INSERT INTO function VALUES
("2283","BaseHandler.http_error_default(req, fp, code, msg, hdrs)","","","0"),
("2284","BaseHandler.http_error_nnn(req, fp, code, msg, hdrs)","","","0"),
("2285","BaseHandler.protocol_request(req)","","","0"),
("2286","BaseHandler.protocol_response(req, response)","","","0"),
("2287","HTTPRedirectHandler.redirect_request(req, fp, code, msg, hdrs, newurl)","","","0"),
("2288","HTTPRedirectHandler.http_error_301(req, fp, code, msg, hdrs)","","","0"),
("2289","HTTPRedirectHandler.http_error_302(req, fp, code, msg, hdrs)","","","0"),
("2290","HTTPRedirectHandler.http_error_303(req, fp, code, msg, hdrs)","","","0"),
("2291","HTTPRedirectHandler.http_error_307(req, fp, code, msg, hdrs)","","","0"),
("2292","HTTPCookieProcessor.cookiejar","","","0"),
("2293","ProxyHandler.protocol_open(request)","","","0"),
("2294","HTTPPasswordMgr.add_password(realm, uri, user, passwd)","","","0"),
("2295","HTTPPasswordMgr.find_user_password(realm, authuri)","","","0"),
("2296","HTTPPasswordMgrWithPriorAuth.add_password(realm, uri, user, passwd, is_authenticated=False)","","","0"),
("2297","HTTPPasswordMgr.find_user_password(realm, authuri)","","","0"),
("2298","HTTPPasswordMgrWithPriorAuth.update_authenticated(self, uri, is_authenticated=False)","","","0"),
("2299","HTTPPasswordMgrWithPriorAuth.is_authenticated(self, authuri)","","","0"),
("2300","AbstractBasicAuthHandler.http_error_auth_reqed(authreq, host, req, headers)","","","0"),
("2301","HTTPBasicAuthHandler.http_error_401(req, fp, code, msg, hdrs)","","","0"),
("2302","ProxyBasicAuthHandler.http_error_407(req, fp, code, msg, hdrs)","","","0"),
("2303","AbstractDigestAuthHandler.http_error_auth_reqed(authreq, host, req, headers)","","","0"),
("2304","HTTPDigestAuthHandler.http_error_401(req, fp, code, msg, hdrs)","","","0"),
("2305","ProxyDigestAuthHandler.http_error_407(req, fp, code, msg, hdrs)","","","0"),
("2306","HTTPHandler.http_open(req)","","","0"),
("2307","HTTPSHandler.https_open(req)","","","0"),
("2308","FileHandler.file_open(req)","","","0"),
("2309","DataHandler.data_open(req)","","","0"),
("2310","FTPHandler.ftp_open(req)","","","0"),
("2311","CacheFTPHandler.setTimeout(t)","","","0"),
("2312","CacheFTPHandler.setMaxConns(m)","","","0"),
("2313","UnknownHandler.unknown_open()","","","0"),
("2314","HTTPErrorProcessor.http_response()","","","0"),
("2315","HTTPErrorProcessor.https_response()","","","0"),
("2316","urllib.request.urlretrieve(url, filename=None, reporthook=None, data=None)","<p>Copy a network object denoted by a URL to a local file. If the URL points to a local file, the object will not be copied unless filename is supplied</p>\n","<p>import urllib.request as r</p>\n\n<p>r.urlretrieve(&quot;http://www.gunnerkrigg.com//comics/00000001.jpg&quot;, &quot;00000001.jpg&quot;) # (&#39;00000001.jpg&#39;, &lt;http.client.HTTPMessage object at 0x02AC2F30&gt;)<br />\nr.urlretrieve(&quot;http://sv22.onlinevideoconverter.com/download?file=b1g6f5c2b1a0f5h7&quot;, &quot;example.mp3&quot;) # (&#39;example.mp3&#39;, &lt;http.client.HTTPMessage object at 0x02AD2070&gt;)</p>\n","0"),
("2317","urllib.request.urlcleanup()","<p>Cleans up temporary files that may have been left behind by previous calls to&nbsp;<a href=\"https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve\" title=\"urllib.request.urlretrieve\"><code>urlretrieve()</code></a>.</p>\n","<p>import urllib.request as r</p>\n\n<p>r.urlretrieve(&quot;http://www.gunnerkrigg.com//comics/00000001.jpg&quot;, &quot;00000001.jpg&quot;)</p>\n\n<p>r.urlcleanup()</p>\n","0"),
("2318","class urllib.request.URLopener(proxies=None, **x509)","","","0"),
("2319","open(fullurl, data=None)","","","0"),
("2320","open_unknown(fullurl, data=None)","","","0"),
("2321","retrieve(url, filename=None, reporthook=None, data=None)","","","0"),
("2322","version","","","0"),
("2323","class urllib.request.FancyURLopener(â€¦)","","","0"),
("2324","prompt_user_passwd(host, realm)","","","0"),
("2325","exception urllib.error.URLError","","","0"),
("2326","reason","","","0"),
("2327","exception urllib.error.HTTPError","","","0"),
("2328","code","","","0"),
("2329","reason","","","0"),
("2330","headers","","","0"),
("2331","exception urllib.error.ContentTooShortError(msg, content)","","","0"),
("2332","urllib.parse.urlparse(urlstring, scheme=â€, allow_fragments=True)","","","0"),
("2333","urllib.parse.parse_qs(qs, keep_blank_values=False, strict_parsing=False, encoding=â€™utf-8â€™, errors=â€™replaceâ€™)","","","0"),
("2334","urllib.parse.parse_qsl(qs, keep_blank_values=False, strict_parsing=False, encoding=â€™utf-8â€™, errors=â€™replaceâ€™)","","","0"),
("2335","urllib.parse.urlunparse(parts)","","","0"),
("2336","urllib.parse.urlsplit(urlstring, scheme=â€, allow_fragments=True)","","","0"),
("2337","urllib.parse.urlunsplit(parts)","","","0"),
("2338","urllib.parse.urljoin(base, url, allow_fragments=True)","","","0"),
("2339","urllib.parse.urldefrag(url)","","","0"),
("2340","urllib.parse.SplitResult.geturl()","","","0"),
("2341","class urllib.parse.DefragResult(url, fragment)","","","0"),
("2342","class urllib.parse.ParseResult(scheme, netloc, path, params, query, fragment)","","","0"),
("2343","class urllib.parse.SplitResult(scheme, netloc, path, query, fragment)","","","0"),
("2344","class urllib.parse.DefragResultBytes(url, fragment)","","","0"),
("2345","class urllib.parse.ParseResultBytes(scheme, netloc, path, params, query, fragment)","","","0"),
("2346","class urllib.parse.SplitResultBytes(scheme, netloc, path, query, fragment)","","","0"),
("2347","urllib.parse.quote(string, safe=â€™/â€™, encoding=None, errors=None)","","","0"),
("2348","urllib.parse.quote_plus(string, safe=â€, encoding=None, errors=None)","","","0"),
("2349","urllib.parse.quote_from_bytes(bytes, safe=â€™/â€™)","","","0"),
("2350","urllib.parse.unquote(string, encoding=â€™utf-8â€™, errors=â€™replaceâ€™)","","","0"),
("2351","urllib.parse.unquote_plus(string, encoding=â€™utf-8â€™, errors=â€™replaceâ€™)","","","0"),
("2352","urllib.parse.unquote_to_bytes(string)","","","0"),
("2353","urllib.parse.urlencode(query, doseq=False, safe=â€, encoding=None, errors=None, quote_via=quote_plus)","","","0"),
("2354","RFC 3986 - Uniform Resource Identifiers","","","0"),
("2355","RFC 2732 - Format for Literal IPv6 Addresses in URLâ€™s.","","","0"),
("2356","RFC 2396 - Uniform Resource Identifiers (URI): Generic Syntax","","","0"),
("2357","RFC 2368 - The mailto URL scheme.","","","0"),
("2358","RFC 1808 - Relative Uniform Resource Locators","","","0"),
("2359","RFC 1738 - Uniform Resource Locators (URL)","","","0"),
("2360","class urllib.robotparser.RobotFileParser(url=â€)","","","0"),
("2361","set_url(url)","","","0"),
("2362","read()","","","0"),
("2363","parse(lines)","","","0"),
("2364","can_fetch(useragent, url)","","","0"),
("2365","mtime()","","","0"),
("2366","modified()","","","0"),
("2367","crawl_delay(useragent)","","","0"),
("2368","request_rate(useragent)","","","0"),
("2369","Module socketserver","<p>import socket<br />\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # AF_INET - Gniazdo IPv4 | SOCK_STREAM - TPC<br />\nprint(socket) # &lt;module &#39;socket&#39; from &#39;C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\socket.py&#39;&gt;<br />\nprint(s) # &lt;socket.socket fd=400, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0&gt;</p>\n\n<p>server = &#39;pythonprogamming.net&#39;<br />\nport = 80<br />\nserver_ip = socket.gethostbyname(server)</p>\n\n<p>server_ip = socket.gethostbyname(server)<br />\nserver_ip # &#39;207.244.67.138&#39;</p>\n\n<p>request = &quot;GET / HTTP/1.1\nHost: &quot;+server+&quot;\n\n&quot;<br />\ns.connect((server,port))</p>\n\n<p>s.send(request.encode())</p>\n\n<p>result = s.recv(4096)<br />\nprint(result) # b&#39;HTTP/1.1 505 HTTP Version Not Supported\nconnection: close\nserver: nginx\ndate: Sun, 03 Sep 2017 08:33:36 GMT\ncontent-length: 0\n\n&#39;</p>\n\n<p><br />\nimport socket, time<br />\ntime.clock()</p>\n\n<p>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # AF_INET - Gniazdo IPv4 | SOCK_STREAM - TPC</p>\n\n<p>server = &#39;pythonprogamming.net&#39;</p>\n\n<p>def pscan(port):<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; s.connect((server,port))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return True<br />\n&nbsp; &nbsp; except:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; return False</p>\n\n<p>for x in range(1,26):<br />\n&nbsp; &nbsp; if pscan(x):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Port&#39;,x,&#39;is open!!! | &#39;, time.clock())<br />\n&nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;Port&#39;,x,&#39;is closed | &#39;, time.clock())<br />\n&#39;&#39;&#39;<br />\nPort 1 is closed | &nbsp;21.01294341075324<br />\nPort 2 is closed | &nbsp;42.12324547670987<br />\nPort 3 is closed | &nbsp;63.14199153086103<br />\nPort 4 is closed | &nbsp;84.21045707686385<br />\nPort 5 is closed | &nbsp;105.27516694469395<br />\nPort 6 is closed | &nbsp;126.33893750802002<br />\nPort 7 is closed | &nbsp;147.40773925317592<br />\nPort 8 is closed | &nbsp;168.4390909790838<br />\nPort 9 is closed | &nbsp;189.45807108943924<br />\nPort 10 is closed | &nbsp;210.5180377261645<br />\nPort 11 is closed | &nbsp;231.57987989221095<br />\nPort 12 is closed | &nbsp;252.65733555755165<br />\nPort 13 is closed | &nbsp;273.729501347363<br />\nPort 14 is closed | &nbsp;294.75295367637625<br />\nPort 15 is closed | &nbsp;315.7811297318106<br />\nPort 16 is closed | &nbsp;336.8541244706788<br />\nPort 17 is closed | &nbsp;357.87034980110354<br />\nPort 18 is closed | &nbsp;378.88737174387273<br />\nPort 19 is closed | &nbsp;399.90495521621966<br />\nPort 20 is closed | &nbsp;420.92439419992303<br />\nPort 21 is closed | &nbsp;441.9431135634544<br />\nPort 22 is open!!! | &nbsp;442.1379248043116<br />\nPort 23 is closed | &nbsp;442.1691143333761<br />\nPort 24 is closed | &nbsp;442.1863805979725<br />\nPort 25 is closed | &nbsp;442.2033850891826<br />\n&#39;&#39;&#39;</p>\n\n<p># SERVER<br />\nfrom socket import *<br />\nimport time<br />\ns = socket(AF_INET, SOCK_STREAM) # AF_INET - Gniazdo IPv4 | SOCK_STREAM - TPC<br />\ns.bind((&#39;&#39;, 8888)) #dowiazanie do portu 8888<br />\ns.listen(5) # Enable a server to accept connections. If backlog is specified, it must be at least 0 (if it is lower, it is set to 0); it specifies the number of unaccepted connections that the system will allow before refusing new connections. If not specified, a default reasonable value is chosen.</p>\n\n<p>while 1:<br />\n&nbsp;&nbsp; &nbsp;client,addr = s.accept() # odebranie polaczenia<br />\n&nbsp;&nbsp; &nbsp;print &#39;Polaczenie z &#39;, addr<br />\n&nbsp;&nbsp; &nbsp;client.send(time.ctime(time.time())) # wyslanie danych do klienta<br />\n&nbsp;&nbsp; &nbsp;client.close()</p>\n\n<p><br />\n# KLIENT<br />\nfrom socket import *<br />\ns = socket(AF_INET, SOCK_STREAM) #utworzenie gniazda<br />\ns.connect((&#39;localhost&#39;, 8888)) # nawiazanie polaczenia<br />\ntm = s.recv(1024) #odbior danych (max 1024 bajt&oacute;w)<br />\ns.close()<br />\nprint &#39;Czas serwera: &#39;, tm<br />\n&nbsp;</p>\n","","0"),
("2370","Module ssl","","","0"),
("2371","exception socket.error","","","0"),
("2372","exception socket.herror","","","0"),
("2373","exception socket.gaierror","","","0"),
("2374","exception socket.timeout","","","0"),
("2375","socket.AF_UNIX","","","0"),
("2376","socket.AF_INET","","","0"),
("2377","socket.AF_INET6","","","0"),
("2378","socket.SOCK_STREAM","","","0"),
("2379","socket.SOCK_DGRAM","","","0"),
("2380","socket.SOCK_RAW","","","0"),
("2381","socket.SOCK_RDM","","","0"),
("2382","socket.SOCK_SEQPACKET","","","0");
INSERT INTO function VALUES
("2383","socket.SOCK_CLOEXEC","","","0"),
("2384","socket.SOCK_NONBLOCK","","","0"),
("2385","SO_*","","","0"),
("2386","socket.SOMAXCONN","","","0"),
("2387","MSG_*","","","0"),
("2388","SOL_*","","","0"),
("2389","SCM_*","","","0"),
("2390","IPPROTO_*","","","0"),
("2391","IPPORT_*","","","0"),
("2392","INADDR_*","","","0"),
("2393","IP_*","","","0"),
("2394","IPV6_*","","","0"),
("2395","EAI_*","","","0"),
("2396","AI_*","","","0"),
("2397","NI_*","","","0"),
("2398","TCP_*","","","0"),
("2399","socket.AF_CAN","","","0"),
("2400","socket.PF_CAN","","","0"),
("2401","SOL_CAN_*","","","0"),
("2402","CAN_*","","","0"),
("2403","socket.CAN_BCM","","","0"),
("2404","CAN_BCM_*","","","0"),
("2405","socket.CAN_RAW_FD_FRAMES","","","0"),
("2406","socket.AF_RDS","","","0"),
("2407","socket.PF_RDS","","","0"),
("2408","socket.SOL_RDS","","","0"),
("2409","RDS_*","","","0"),
("2410","socket.SIO_RCVALL","","","0"),
("2411","socket.SIO_KEEPALIVE_VALS","","","0"),
("2412","socket.SIO_LOOPBACK_FAST_PATH","","","0"),
("2413","RCVALL_*","","","0"),
("2414","TIPC_*","","","0"),
("2415","socket.AF_ALG","","","0"),
("2416","socket.SOL_ALG","","","0"),
("2417","ALG_*","","","0"),
("2418","socket.AF_LINK","","","0"),
("2419","socket.has_ipv6","","","0"),
("2420","socket.BDADDR_ANY","","","0"),
("2421","socket.BDADDR_LOCAL","","","0"),
("2422","socket.HCI_FILTER","","","0"),
("2423","socket.HCI_TIME_STAMP","","","0"),
("2424","socket.HCI_DATA_DIR","","","0"),
("2425","socket.socket(family=AF_INET, type=SOCK_STREAM, proto=0, fileno=None)","","","0"),
("2426","socket.socketpair([family[, type[, proto]]])","","","0"),
("2427","socket.create_connection(address[, timeout[, source_address]])","","","0"),
("2428","socket.fromfd(fd, family, type, proto=0)","","","0"),
("2429","socket.fromshare(data)","","","0"),
("2430","socket.SocketType","","","0"),
("2431","socket.getaddrinfo(host, port, family=0, type=0, proto=0, flags=0)","","","0"),
("2432","socket.getfqdn([name])","","","0"),
("2433","socket.gethostbyname(hostname)","","","0"),
("2434","socket.gethostbyname_ex(hostname)","","","0"),
("2435","socket.gethostname()","","","0"),
("2436","socket.gethostbyaddr(ip_address)","","","0"),
("2437","socket.getnameinfo(sockaddr, flags)","","","0"),
("2438","socket.getprotobyname(protocolname)","","","0"),
("2439","socket.getservbyname(servicename[, protocolname])","","","0"),
("2440","socket.getservbyport(port[, protocolname])","","","0"),
("2441","socket.ntohl(x)","","","0"),
("2442","socket.ntohs(x)","","","0"),
("2443","socket.htonl(x)","","","0"),
("2444","socket.htons(x)","","","0"),
("2445","socket.inet_aton(ip_string)","","","0"),
("2446","socket.inet_ntoa(packed_ip)","","","0"),
("2447","socket.inet_pton(address_family, ip_string)","","","0"),
("2448","socket.inet_ntop(address_family, packed_ip)","","","0"),
("2449","socket.CMSG_LEN(length)","","","0"),
("2450","socket.CMSG_SPACE(length)","","","0"),
("2451","socket.getdefaulttimeout()","","","0"),
("2452","socket.setdefaulttimeout(timeout)","","","0"),
("2453","socket.sethostname(name)","","","0"),
("2454","socket.if_nameindex()","","","0"),
("2455","socket.if_nametoindex(if_name)","","","0"),
("2456","socket.if_indextoname(if_index)","","","0"),
("2457","socket.accept()","","","0"),
("2458","socket.bind(address)","","","0"),
("2459","socket.close()","","","0"),
("2460","socket.connect(address)","","","0"),
("2461","socket.connect_ex(address)","","","0"),
("2462","socket.detach()","","","0"),
("2463","socket.dup()","","","0"),
("2464","socket.fileno()","","","0"),
("2465","socket.get_inheritable()","","","0"),
("2466","socket.getpeername()","","","0"),
("2467","socket.getsockname()","","","0"),
("2468","socket.getsockopt(level, optname[, buflen])","","","0"),
("2469","socket.gettimeout()","","","0"),
("2470","socket.ioctl(control, option)","","","0"),
("2471","socket.listen([backlog])","","","0"),
("2472","socket.makefile(mode=â€™râ€™, buffering=None, *, encoding=None, errors=None, newline=None)","","","0"),
("2473","socket.recv(bufsize[, flags])","","","0"),
("2474","socket.recvfrom(bufsize[, flags])","","","0"),
("2475","socket.recvmsg(bufsize[, ancbufsize[, flags]])","","","0"),
("2476","socket.recvmsg_into(buffers[, ancbufsize[, flags]])","","","0"),
("2477","socket.recvfrom_into(buffer[, nbytes[, flags]])","","","0"),
("2478","socket.recv_into(buffer[, nbytes[, flags]])","","","0"),
("2479","socket.send(bytes[, flags])","","","0"),
("2480","socket.sendall(bytes[, flags])","","","0"),
("2481","socket.sendto(bytes, address)","","","0"),
("2482","socket.sendto(bytes, flags, address)","","","0");
INSERT INTO function VALUES
("2483","socket.sendmsg(buffers[, ancdata[, flags[, address]]])","","","0"),
("2484","socket.sendmsg_afalg([msg, ]*, op[, iv[, assoclen[, flags]]])","","","0"),
("2485","socket.sendfile(file, offset=0, count=None)","","","0"),
("2486","socket.set_inheritable(inheritable)","","","0"),
("2487","socket.setblocking(flag)","","","0"),
("2488","socket.settimeout(value)","","","0"),
("2489","socket.setsockopt(level, optname, value: int)","","","0"),
("2490","socket.setsockopt(level, optname, value: buffer)","","","0"),
("2491","socket.setsockopt(level, optname, None, optlen: int)","","","0"),
("2492","socket.shutdown(how)","","","0"),
("2493","socket.share(process_id)","","","0"),
("2494","socket.family","","","0"),
("2495","socket.type","","","0"),
("2496","socket.proto","","","0"),
("2497","winreg.CloseKey(hkey)","<p>Closes a previously opened registry key. The&nbsp;<em>hkey</em>&nbsp;argument specifies a previously opened key</p>\n\n<p>&nbsp;</p>\n\n<p>HKEY_LOCAL_MACHINE (HKLM) stores settings that are specific to the local computer<br />\nHKEY_CURRENT_CONFIG (HKCC) contains information gathered at runtime; information stored in this key is not permanently stored on disk<br />\nHKEY_CLASSES_ROOT (HKCR) contains information about registered applications, such as file associations and OLE Object Class IDs<br />\nHKEY_CURRENT_USER (HKCU) stores settings that are specific to the currently logged-in user<br />\nHKEY_USERS or (HKU) contains subkeys corresponding to the HKEY_CURRENT_USER keys for each user profile actively loaded on the machine</p>\n\n<p>HKEY_PERFORMANCE_DATA (only in Windows NT, but invisible in the Windows Registry Editor)<br />\nHKEY_DYN_DATA (only in Windows 9x, and visible in the Windows Registry Editor)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/winreg/Windows_Registry.jpg\" style=\"height:408px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/winreg/DisableTaskMgr.jpg\" style=\"height:534px; width:800px\" /></p>\n","<p>import winreg</p>\n\n<p>aReg = winreg.ConnectRegistry(None,winreg.HKEY_LOCAL_MACHINE)</p>\n\n<p>aKey = winreg.OpenKey(aReg, r&quot;SOFTWAREMicrosoftWindowsCurrentVersiona&quot;)</p>\n\n<p>winreg.CloseKey(aKey)</p>\n","0"),
("2498","winreg.ConnectRegistry(computer_name, key)","<p>Establishes a connection to a predefined registry handle on another computer, and returns a&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#handle-object\">handle object</a></p>\n","<p>import winreg</p>\n\n<p>aReg = winreg.ConnectRegistry(None,winreg.HKEY_LOCAL_MACHINE)</p>\n\n<p><br />\naKey = winreg.OpenKey(aReg, r&quot;SOFTWAREMicrosoftWindowsCurrentVersion&quot;)</p>\n\n<p><br />\nfor i in range(2000):<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ls = winreg.EnumKey(aKey,i)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; # ( 1-KeyOpen, 2- index -&gt; int)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(ls)<br />\n&nbsp; &nbsp; except:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; break</p>\n\n<p>&#39;&#39;&#39;<br />\na<br />\nAccountPicture<br />\nActionCenter<br />\nAdvertisingInfo<br />\nApp Management<br />\nApp Paths<br />\nAppHost<br />\nApplets<br />\nApplicationFrame<br />\nAppModel<br />\nAppModelUnlock<br />\nAppReadiness<br />\nAppx<br />\nAudio<br />\nAuthentication<br />\nAutoRotation<br />\nBackupAndRestoreSettings<br />\nBitLocker<br />\nBITS<br />\nBluetooth<br />\nCasting<br />\nCensus<br />\nClickNote<br />\nClosedCaptioning<br />\nCloudExperienceHost<br />\nCloudStore<br />\nComponent Based Servicing<br />\nConnectedSearch<br />\nControl Panel<br />\n&#39;&#39;&#39;</p>\n","0"),
("2499","winreg.CreateKey(key, sub_key)","<p>Creates or opens the specified key, returning a&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#handle-object\">handle object</a></p>\n","<p>import winreg</p>\n\n<p>aReg = winreg.ConnectRegistry(None,winreg.HKEY_LOCAL_MACHINE)<br />\naKey = winreg.OpenKey(aReg, r&quot;SOFTWAREMicrosoftWindowsCurrentVersion&quot;)</p>\n\n<p>winreg.CreateKey(aKey,&quot;a&quot;)</p>\n","0"),
("2500","winreg.CreateKeyEx(key, sub_key, reserved=0, access=KEY_WRITE)","","","0"),
("2501","winreg.DeleteKey(key, sub_key)","","<p>import winreg</p>\n\n<p>aReg = winreg.ConnectRegistry(None,winreg.HKEY_LOCAL_MACHINE)<br />\naKey = winreg.OpenKey(aReg, r&quot;SOFTWAREMicrosoftWindowsCurrentVersion&quot;)</p>\n\n<p>winreg.DeleteKey(aKey,&quot;a&quot;)<br />\n&nbsp;</p>\n","0"),
("2502","winreg.DeleteKeyEx(key, sub_key, access=KEY_WOW64_64KEY, reserved=0)","","","0"),
("2503","winreg.DeleteValue(key, value)","<p>Removes a named value from a registry key</p>\n","<p>import winreg</p>\n\n<p>key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r&quot;SOFTWAREMicrosoftWindowsCurrentVersiona&quot;,0, winreg.KEY_ALL_ACCESS)</p>\n\n<p>winreg.DeleteValue(key,&quot;Boy&quot;)</p>\n","0"),
("2504","winreg.EnumKey(key, index)","","","0"),
("2505","winreg.EnumValue(key, index)","<p>Enumerates values of an open registry key, returning a tuple</p>\n","<p>&#39;&#39;&#39;<br />\nstring=&#39;This is a &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; string full of spaces &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and taps&#39;<br />\nstring=string.split(&#39; &#39;)<br />\nwhile &#39;&#39; in string:<br />\n&nbsp; &nbsp; string.remove(&#39;&#39;)<br />\nstring=&#39; &#39;.join(string)<br />\nprint(string)<br />\n&#39;&#39;&#39;</p>\n\n<p>import winreg</p>\n\n<p>key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r&quot;SOFTWAREMicrosoftWindowsCurrentVersiona&quot;,0, winreg.KEY_ALL_ACCESS)</p>\n\n<p>for i in range(2000):<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ls = winreg.EnumValue(key,i)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; # ( 1-KeyOpen, 2- index -&gt; int)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(ls)<br />\n&nbsp; &nbsp; except:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; break<br />\n&nbsp; &nbsp;&nbsp;<br />\n&#39;&#39;&#39;<br />\n(&#39;Boy&#39;, &#39;This Valuee&#39;, 1)<br />\n(&#39;Boy2&#39;, &#39;This Valuee&#39;, 1)<br />\n(&#39;Boy3&#39;, &#39;This Valuee&#39;, 1)<br />\n&#39;&#39;&#39;</p>\n","0"),
("2506","winreg.ExpandEnvironmentStrings(str)","","","0"),
("2507","winreg.FlushKey(key)","","","0"),
("2508","winreg.LoadKey(key, sub_key, file_name)","","","0"),
("2509","winreg.OpenKey(key, sub_key, reserved=0, access=KEY_READ)","","","0"),
("2510","winreg.OpenKeyEx(key, sub_key, reserved=0, access=KEY_READ)","","","0"),
("2511","winreg.QueryInfoKey(key)","","","0"),
("2512","winreg.QueryValue(key, sub_key)","","","0"),
("2513","winreg.QueryValueEx(key, value_name)","<p>Retrieves the type and data for a specified value name associated with an open registry key</p>\n","<p>import winreg</p>\n\n<p>key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r&quot;SOFTWAREMicrosoftWindowsCurrentVersiona&quot;,0, winreg.KEY_ALL_ACCESS)</p>\n\n<p>def getMDACversion():<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; # Read the value. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />\n&nbsp; &nbsp; result = winreg.QueryValueEx(key, &quot;Boy&quot;)</p>\n\n<p>&nbsp; &nbsp; # Return only the value from the resulting tuple (value, type_as_int).<br />\n&nbsp; &nbsp; return result[0]</p>\n\n<p><br />\nprint(getMDACversion()) # This Valuee</p>\n","0"),
("2514","winreg.SaveKey(key, file_name)","","","0"),
("2515","winreg.SetValue(key, sub_key, type, value)","","","0"),
("2516","winreg.SetValueEx(key, value_name, reserved, type, value)","<p>Stores data in the value field of an open registry key</p>\n","<p>import winreg</p>\n\n<p>aReg = winreg.ConnectRegistry(None,winreg.HKEY_LOCAL_MACHINE)</p>\n\n<p>key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r&quot;SOFTWAREMicrosoftWindowsCurrentVersiona&quot;,0, winreg.KEY_ALL_ACCESS)<br />\nwinreg.SetValueEx(key,&quot;Boy3&quot;,0, winreg.REG_SZ, &quot;This Valuee&quot;)</p>\n","0"),
("2517","winreg.DisableReflectionKey(key)","","","0"),
("2518","winreg.EnableReflectionKey(key)","","","0"),
("2519","winreg.QueryReflectionKey(key)","","","0"),
("2520","winreg.HKEY_CLASSES_ROOT","","","0"),
("2521","winreg.HKEY_CURRENT_USER","","","0"),
("2522","winreg.HKEY_LOCAL_MACHINE","","","0"),
("2523","winreg.HKEY_USERS","","","0"),
("2524","winreg.HKEY_PERFORMANCE_DATA","","","0"),
("2525","winreg.HKEY_CURRENT_CONFIG","","","0"),
("2526","winreg.HKEY_DYN_DATA","","","0"),
("2527","winreg.KEY_ALL_ACCESS","<p>Combines the STANDARD_RIGHTS_REQUIRED,&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_QUERY_VALUE\" title=\"winreg.KEY_QUERY_VALUE\"><code>KEY_QUERY_VALUE</code></a>,&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_SET_VALUE\" title=\"winreg.KEY_SET_VALUE\"><code>KEY_SET_VALUE</code></a>,&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_CREATE_SUB_KEY\" title=\"winreg.KEY_CREATE_SUB_KEY\"><code>KEY_CREATE_SUB_KEY</code></a>,&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_ENUMERATE_SUB_KEYS\" title=\"winreg.KEY_ENUMERATE_SUB_KEYS\"><code>KEY_ENUMERATE_SUB_KEYS</code></a>,&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_NOTIFY\" title=\"winreg.KEY_NOTIFY\"><code>KEY_NOTIFY</code></a>, and&nbsp;<a href=\"https://docs.python.org/3/library/winreg.html#winreg.KEY_CREATE_LINK\" title=\"winreg.KEY_CREATE_LINK\"><code>KEY_CREATE_LINK</code></a>&nbsp;access rights.</p>\n","<p>import&nbsp;winreg</p>\n\n<p>winreg.KEY_ALL_ACCESS #&nbsp;983103</p>\n","0"),
("2528","winreg.KEY_WRITE","","","0"),
("2529","winreg.KEY_READ","","","0"),
("2530","winreg.KEY_EXECUTE","","","0"),
("2531","winreg.KEY_QUERY_VALUE","","","0"),
("2532","winreg.KEY_SET_VALUE","","","0"),
("2533","winreg.KEY_CREATE_SUB_KEY","","","0"),
("2534","winreg.KEY_ENUMERATE_SUB_KEYS","","","0"),
("2535","winreg.KEY_NOTIFY","","","0"),
("2536","winreg.KEY_CREATE_LINK","","","0"),
("2537","winreg.KEY_WOW64_64KEY","","","0"),
("2538","winreg.KEY_WOW64_32KEY","","","0"),
("2539","winreg.REG_BINARY","","","0"),
("2540","winreg.REG_DWORD","","","0"),
("2541","winreg.REG_DWORD_LITTLE_ENDIAN","","","0"),
("2542","winreg.REG_DWORD_BIG_ENDIAN","","","0"),
("2543","winreg.REG_EXPAND_SZ","","","0"),
("2544","winreg.REG_LINK","","","0"),
("2545","winreg.REG_MULTI_SZ","","","0"),
("2546","winreg.REG_NONE","","","0"),
("2547","winreg.REG_QWORD","","","0"),
("2548","winreg.REG_QWORD_LITTLE_ENDIAN","","","0"),
("2549","winreg.REG_RESOURCE_LIST","","","0"),
("2550","winreg.REG_FULL_RESOURCE_DESCRIPTOR","","","0"),
("2551","winreg.REG_RESOURCE_REQUIREMENTS_LIST","","","0"),
("2552","winreg.REG_SZ","","","0"),
("2553","PyHKEY.Close()","","","0"),
("2554","PyHKEY.Detach()","","","0"),
("2555","PyHKEY.__enter__()","","","0"),
("2556","PyHKEY.__exit__(*exc_info)","","","0"),
("2557","class socketserver.TCPServer(server_address, RequestHandlerClass, bind_and_activate=True)","","","0"),
("2558","class socketserver.UDPServer(server_address, RequestHandlerClass, bind_and_activate=True)","","","0"),
("2559","class socketserver.UnixStreamServer(server_address, RequestHandlerClass, bind_and_activate=True)","","","0"),
("2560","class socketserver.UnixDatagramServer(server_address, RequestHandlerClass, bind_and_activate=True)","","","0"),
("2561","class socketserver.ForkingMixIn","","","0"),
("2562","class socketserver.ThreadingMixIn","","","0"),
("2563","class socketserver.ForkingTCPServer","","","0"),
("2564","class socketserver.ForkingUDPServer","","","0"),
("2565","class socketserver.ThreadingTCPServer","","","0"),
("2566","class socketserver.ThreadingUDPServer","","","0"),
("2567","class socketserver.BaseServer(server_address, RequestHandlerClass)","","","0"),
("2568","fileno()","","","0"),
("2569","handle_request()","","","0"),
("2570","serve_forever(poll_interval=0.5)","","","0"),
("2571","service_actions()","","","0"),
("2572","shutdown()","","","0"),
("2573","server_close()","","","0"),
("2574","address_family","","","0"),
("2575","RequestHandlerClass","","","0"),
("2576","server_address","","","0"),
("2577","socket","","","0"),
("2578","allow_reuse_address","","","0"),
("2579","request_queue_size","","","0"),
("2580","socket_type","","","0"),
("2581","timeout","","","0"),
("2582","finish_request()","","","0");
INSERT INTO function VALUES
("2583","get_request()","","","0"),
("2584","handle_error(request, client_address)","","","0"),
("2585","handle_timeout()","","","0"),
("2586","process_request(request, client_address)","","","0"),
("2587","server_activate()","","","0"),
("2588","server_bind()","","","0"),
("2589","verify_request(request, client_address)","","","0"),
("2590","class socketserver.BaseRequestHandler","","","0"),
("2591","setup()","","","0"),
("2592","handle()","","","0"),
("2593","finish()","","","0"),
("2594","class socketserver.StreamRequestHandler","","","0"),
("2595","class socketserver.DatagramRequestHandler","","","0"),
("2596","threading.active_count()","<p>Return the number of&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#threading.Thread\" title=\"threading.Thread\"><code>Thread</code></a>&nbsp;objects currently alive. The returned count is equal to the length of the list returned by&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#threading.enumerate\" title=\"threading.enumerate\"><code>enumerate()</code></a></p>\n","<p>import threading</p>\n\n<p>threading.active_count() #&nbsp;1</p>\n","0"),
("2597","threading.current_thread()","<p>Return the current&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#threading.Thread\" title=\"threading.Thread\"><code>Thread</code></a>&nbsp;object, corresponding to the caller&rsquo;s thread of control. If the caller&rsquo;s thread of control was not created through the&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#module-threading\" title=\"threading: Thread-based parallelism.\"><code>threading</code></a>&nbsp;module, a dummy thread object with limited functionality is returned</p>\n","<p>import threading</p>\n\n<p>threading.current_thread() # &lt;_MainThread(MainThread, started 11028)&gt;</p>\n","0"),
("2598","threading.get_ident()","<p>Return the &lsquo;thread identifier&rsquo; of the current thread. This is a nonzero integer</p>\n","<p>import threading</p>\n\n<p>threading.get_ident() # 11028</p>\n","0"),
("2599","threading.enumerate()","<p>Return a list of all&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#threading.Thread\" title=\"threading.Thread\"><code>Thread</code></a>&nbsp;objects currently alive</p>\n","<p>import threading</p>\n\n<p>threading.enumerate() #&nbsp;[&lt;_MainThread(MainThread, started 11028)&gt;]</p>\n","0"),
("2600","threading.main_thread()","<p>Return the main&nbsp;<a href=\"https://docs.python.org/3/library/threading.html#threading.Thread\" title=\"threading.Thread\"><code>Thread</code></a>&nbsp;object. In normal conditions, the main thread is the thread from which the Python interpreter was started</p>\n","<p>import threading</p>\n\n<p>threading.main_thread() # &lt;_MainThread(MainThread, started 11028)&gt;</p>\n","0"),
("2601","threading.settrace(func)","","","0"),
("2602","threading.setprofile(func)","","","0"),
("2603","threading.stack_size([size])","","","0"),
("2604","threading.TIMEOUT_MAX","<p>The maximum value allowed for the&nbsp;<em>timeout</em>&nbsp;parameter of blocking functions</p>\n","<p>import threading</p>\n\n<p>threading.TIMEOUT_MAX # 4294967.0</p>\n","0"),
("2605","class threading.local","","","0"),
("2606","class threading.Thread(group=None, target=None, name=None, args=(), kwargs={}, *, daemon=None)","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/threading/threading.jpg\" style=\"height:394px; width:800px\" /></p>\n","<p>import threading</p>\n\n<p>def worker():<br />\n&nbsp; &nbsp; &quot;&quot;&quot;thread worker function&quot;&quot;&quot;<br />\n&nbsp; &nbsp; print(&#39;Worker&#39;)</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>WorkerWorkerWorkerWorker</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&#39;&#39;&#39;<br />\n&nbsp; &nbsp; return</p>\n\n<p>threads = []<br />\nfor i in range(4):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker)<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("2607","start()","","","0"),
("2608","run()","","","0"),
("2609","join(timeout=None)","","","0"),
("2610","name","","","0"),
("2611","getName()","","","0"),
("2612","setName()","","","0"),
("2613","ident","","","0"),
("2614","is_alive()","","","0"),
("2615","daemon","","","0"),
("2616","isDaemon()","","","0"),
("2617","setDaemon()","","","0"),
("2618","class threading.Lock","","","0"),
("2619","acquire(blocking=True, timeout=-1)","","","0"),
("2620","release()","","","0"),
("2621","class threading.RLock","","","0"),
("2622","acquire(blocking=True, timeout=-1)","","","0"),
("2623","release()","","","0"),
("2624","class threading.Condition(lock=None)","","","0"),
("2625","acquire(*args)","","","0"),
("2626","release()","","","0"),
("2627","wait(timeout=None)","","","0"),
("2628","wait_for(predicate, timeout=None)","","","0"),
("2629","notify(n=1)","","","0"),
("2630","notify_all()","","","0"),
("2631","class threading.Semaphore(value=1)","","","0"),
("2632","acquire(blocking=True, timeout=None)","","","0"),
("2633","release()","","","0"),
("2634","class threading.BoundedSemaphore(value=1)","","","0"),
("2635","class threading.Event","","","0"),
("2636","is_set()","","","0"),
("2637","set()","","","0"),
("2638","clear()","","","0"),
("2639","wait(timeout=None)","","","0"),
("2640","class threading.Timer(interval, function, args=None, kwargs=None)","","","0"),
("2641","cancel()","","","0"),
("2642","class threading.Barrier(parties, action=None, timeout=None)","","","0"),
("2643","wait(timeout=None)","","","0"),
("2644","reset()","","","0"),
("2645","abort()","","","0"),
("2646","parties","","","0"),
("2647","n_waiting","","","0"),
("2648","broken","","","0"),
("2649","exception threading.BrokenBarrierError","","","0"),
("2650","copy.copy(x)","<p>Return a shallow copy of&nbsp;<em>x</em>.</p>\n","<p>import copy</p>\n\n<p>a = [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b = copy.copy(a)</p>\n\n<p>b.sort()</p>\n\n<p>a</p>\n\n<p># [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b</p>\n\n<p># [&#39;byÅ‚y&#39;, &#39;lata&#39;, &#39;najlepsze&#39;, &#39;to&#39;]</p>\n","0"),
("2651","copy.deepcopy(x)","<p>Return a deep copy of&nbsp;<em>x</em>.</p>\n","<p>import copy</p>\n\n<p>a = [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b = copy.deepcopy(a)</p>\n\n<p>b.sort()</p>\n\n<p>a</p>\n\n<p># [&quot;to&quot;, &quot;byÅ‚y&quot;, &quot;najlepsze&quot;, &quot;lata&quot;]</p>\n\n<p>b</p>\n\n<p># [&#39;byÅ‚y&#39;, &#39;lata&#39;, &#39;najlepsze&#39;, &#39;to&#39;]</p>\n","0"),
("2652","exception copy.error","","","0"),
("2663","class csv.Dialect","","","0"),
("2662","class csv.DictWriter(f, fieldnames, restval=â€, extrasaction=â€™raiseâ€™, dialect=â€™excelâ€™, *args, **kwds)","<p>Create an object which operates like a regular writer but maps dictionaries onto output rows</p>\n","<p>import csv, os</p>\n\n<p>d = [{&#39;name&#39;: &#39;Alice&#39;, &#39;Quizzes&#39;:30, &#39;Tests&#39;:90, &#39;Final&#39;: 50},<br />\n&nbsp; &nbsp; &nbsp;{&#39;name&#39;: &#39;Bob&#39;, &#39;Quizzes&#39;:40, &#39;Tests&#39;:40, &#39;Final&#39;: 71},<br />\n&nbsp; &nbsp; &nbsp;{&#39;name&#39;: &#39;Charlie&#39;, &#39;Quizzes&#39;:50, &#39;Tests&#39;:80, &#39;Final&#39;: 20}]</p>\n\n<p><br />\nwith open(&#39;spam.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as output:<br />\n&nbsp; &nbsp; fieldnames = [&#39;name&#39;,&#39;Final&#39;,&#39;Tests&#39;,&#39;Quizzes&#39;]<br />\n&nbsp; &nbsp; writer = csv.DictWriter(output, fieldnames=fieldnames)<br />\n&nbsp; &nbsp; writer.writeheader()<br />\n&nbsp; &nbsp; for line in d:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; writer.writerow(line)</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; print(f.read())</p>\n\n<p>&#39;&#39;&#39;<br />\nname,Final,Tests,Quizzes<br />\nAlice,50,90,30<br />\nBob,71,40,40<br />\nCharlie,20,80,50</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>rows = []<br />\nheader = []</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; reader = csv.DictReader(f)<br />\n&nbsp; &nbsp; for row in reader:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; rows.append(row)<br />\nheader = list(row)</p>\n\n<p>print(header) # [&#39;name&#39;, &#39;Final&#39;, &#39;Tests&#39;, &#39;Quizzes&#39;]<br />\nprint(rows)<br />\n&#39;&#39;&#39;<br />\n[OrderedDict([(&#39;name&#39;, &#39;Alice&#39;), (&#39;Final&#39;, &#39;50&#39;), (&#39;Tests&#39;, &#39;90&#39;), (&#39;Quizzes&#39;, &#39;30&#39;)]),<br />\nOrderedDict([(&#39;name&#39;, &#39;Bob&#39;), (&#39;Final&#39;, &#39;71&#39;), (&#39;Tests&#39;, &#39;40&#39;), (&#39;Quizzes&#39;, &#39;40&#39;)]),<br />\nOrderedDict([(&#39;name&#39;, &#39;Charlie&#39;), (&#39;Final&#39;, &#39;20&#39;), (&#39;Tests&#39;, &#39;80&#39;), (&#39;Quizzes&#39;, &#39;50&#39;)])]<br />\n&#39;&#39;&#39;</p>\n","0"),
("2661","class csv.DictReader(f, fieldnames=None, restkey=None, restval=None, dialect=â€™excelâ€™, *args, **kwds)","<p>Create an object that operates like a regular reader but maps the information in each row to an&nbsp;<a href=\"https://docs.python.org/3/library/collections.html#collections.OrderedDict\" title=\"collections.OrderedDict\"><code>OrderedDict</code></a>&nbsp;whose keys are given by the optional&nbsp;<em>fieldnames</em>&nbsp;parameter</p>\n","<p>import csv, os</p>\n\n<p>d = [{&#39;name&#39;: &#39;Alice&#39;, &#39;Quizzes&#39;:30, &#39;Tests&#39;:90, &#39;Final&#39;: 50},<br />\n&nbsp; &nbsp; &nbsp;{&#39;name&#39;: &#39;Bob&#39;, &#39;Quizzes&#39;:40, &#39;Tests&#39;:40, &#39;Final&#39;: 71},<br />\n&nbsp; &nbsp; &nbsp;{&#39;name&#39;: &#39;Charlie&#39;, &#39;Quizzes&#39;:50, &#39;Tests&#39;:80, &#39;Final&#39;: 20}]</p>\n\n<p><br />\nwith open(&#39;spam.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as output:<br />\n&nbsp; &nbsp; fieldnames = [&#39;name&#39;,&#39;Final&#39;,&#39;Tests&#39;,&#39;Quizzes&#39;]<br />\n&nbsp; &nbsp; writer = csv.DictWriter(output, fieldnames=fieldnames)<br />\n&nbsp; &nbsp; writer.writeheader()<br />\n&nbsp; &nbsp; for line in d:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; writer.writerow(line)</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; print(f.read())</p>\n\n<p>&#39;&#39;&#39;<br />\nname,Final,Tests,Quizzes<br />\nAlice,50,90,30<br />\nBob,71,40,40<br />\nCharlie,20,80,50</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>rows = []<br />\nheader = []</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; reader = csv.DictReader(f)<br />\n&nbsp; &nbsp; for row in reader:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; rows.append(row)<br />\nheader = list(row)</p>\n\n<p>print(header) # [&#39;name&#39;, &#39;Final&#39;, &#39;Tests&#39;, &#39;Quizzes&#39;]<br />\nprint(rows)<br />\n&#39;&#39;&#39;<br />\n[OrderedDict([(&#39;name&#39;, &#39;Alice&#39;), (&#39;Final&#39;, &#39;50&#39;), (&#39;Tests&#39;, &#39;90&#39;), (&#39;Quizzes&#39;, &#39;30&#39;)]),<br />\nOrderedDict([(&#39;name&#39;, &#39;Bob&#39;), (&#39;Final&#39;, &#39;71&#39;), (&#39;Tests&#39;, &#39;40&#39;), (&#39;Quizzes&#39;, &#39;40&#39;)]),<br />\nOrderedDict([(&#39;name&#39;, &#39;Charlie&#39;), (&#39;Final&#39;, &#39;20&#39;), (&#39;Tests&#39;, &#39;80&#39;), (&#39;Quizzes&#39;, &#39;50&#39;)])]<br />\n&#39;&#39;&#39;</p>\n","0"),
("2660","csv.field_size_limit([new_limit])","","","0"),
("2658","csv.get_dialect(name)","","","0"),
("2659","csv.list_dialects()","","","0"),
("2656","csv.register_dialect(name[, dialect[, **fmtparams]])","","","0"),
("2657","csv.unregister_dialect(name)","","","0"),
("2655","csv.writer(csvfile, dialect=â€™excelâ€™, **fmtparams)","<p>Return a writer object responsible for converting the user&rsquo;s data into delimited strings on the given file-like object</p>\n","<p>import csv, os</p>\n\n<p>l = [[&#39;spam&#39;,&#39;ham and eggs&#39;, &#39;spam, spam, spam,&#39;, &#39;green eggs&#39;],<br />\n[&quot;here&#39;s the next line&quot;, &#39;more spam&#39;, &#39;spam, ham&#39;, &#39;nonstick pam&#39;]]</p>\n\n<p>os.chdir(r&#39;C:UsersUser\\_Python_&#39;)</p>\n\n<p><br />\ndef write():<br />\n&nbsp; &nbsp; with open(&#39;spam.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as f:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; writer = csv.writer(f)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for line in l:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; writer.writerow(line)</p>\n\n<p>def read():<br />\n&nbsp; &nbsp; with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; reader = csv.reader(f)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for row in reader:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(row)</p>\n\n<p>write()</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; for line in f: print(line)</p>\n\n<p>&#39;&#39;&#39;<br />\nspam,ham and eggs,&quot;spam, spam, spam,&quot;,green eggs</p>\n\n<p>here&#39;s the next line,more spam,&quot;spam, ham&quot;,nonstick pam</p>\n\n<p>&#39;&#39;&#39;<br />\nread()</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>[&#39;spam&#39;, &#39;ham and eggs&#39;, &#39;spam, spam, spam,&#39;, &#39;green eggs&#39;]<br />\n[&quot;here&#39;s the next line&quot;, &#39;more spam&#39;, &#39;spam, ham&#39;, &#39;nonstick pam&#39;]</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("2654","csv.reader(csvfile, dialect=â€™excelâ€™, **fmtparams)","<p>Return a reader object which will iterate over lines in the given&nbsp;<em>csvfile</em></p>\n\n<p>PrzykÅ‚adowe dane w arkuszu kalkulacyjnym:</p>\n\n<table>\n	<tbody>\n		<tr>\n			<td>&nbsp;</td>\n			<td>A</td>\n			<td>B</td>\n			<td>C</td>\n		</tr>\n		<tr>\n			<td>1</td>\n			<td>Kowalski</td>\n			<td>Jan</td>\n			<td>KÅ‚odzko</td>\n		</tr>\n		<tr>\n			<td>2</td>\n			<td>Nowak</td>\n			<td>Zenon</td>\n			<td>Szczecin</td>\n		</tr>\n		<tr>\n			<td>3</td>\n			<td>BrzÄ™czyszczykiewicz</td>\n			<td>Grzegorz</td>\n			<td>ChrzÄ…szczyÅ¼ewoszyce</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>i te same dane zapisane w postaci dokumentu CSV:</p>\n\n<pre>\nKowalski,Jan,KÅ‚odzko\nNowak,Zenon,Szczecin\nBrzÄ™czyszczykiewicz,Grzegorz,ChrzÄ…szczyÅ¼ewoszyce\n</pre>\n\n<p>Znaki specjalne:</p>\n\n<pre>\nimiÄ™,opis,ocena\nAndrzej Nowak,fajny,4\n&quot;Jan WiÅ›niewski&quot;,&quot;fajny&quot;,&quot;2&quot;\nKowalski,&quot;wiecznie pyta &quot;&quot;kt&oacute;ra godzina&quot;&quot;, ale moÅ¼e byÄ‡&quot;,5</pre>\n","<p>import csv, os</p>\n\n<p>l = [[&#39;spam&#39;,&#39;ham and eggs&#39;, &#39;spam, spam, spam,&#39;, &#39;green eggs&#39;],<br />\n[&quot;here&#39;s the next line&quot;, &#39;more spam&#39;, &#39;spam, ham&#39;, &#39;nonstick pam&#39;]]</p>\n\n<p>os.chdir(r&#39;C:UsersUser\\_Python_&#39;)</p>\n\n<p><br />\ndef write():<br />\n&nbsp; &nbsp; with open(&#39;spam.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as f:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; writer = csv.writer(f)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for line in l:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; writer.writerow(line)</p>\n\n<p>def read():<br />\n&nbsp; &nbsp; with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; reader = csv.reader(f)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for row in reader:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(row)</p>\n\n<p>write()</p>\n\n<p>with open(&#39;spam.csv&#39;) as f:<br />\n&nbsp; &nbsp; for line in f: print(line)</p>\n\n<p>&#39;&#39;&#39;<br />\nspam,ham and eggs,&quot;spam, spam, spam,&quot;,green eggs</p>\n\n<p>here&#39;s the next line,more spam,&quot;spam, ham&quot;,nonstick pam</p>\n\n<p>&#39;&#39;&#39;<br />\nread()</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>[&#39;spam&#39;, &#39;ham and eggs&#39;, &#39;spam, spam, spam,&#39;, &#39;green eggs&#39;]<br />\n[&quot;here&#39;s the next line&quot;, &#39;more spam&#39;, &#39;spam, ham&#39;, &#39;nonstick pam&#39;]</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n","0"),
("2664","class csv.excel","","","0"),
("2665","class csv.excel_tab","","","0"),
("2666","class csv.unix_dialect","","","0"),
("2667","class csv.Sniffer","","","0"),
("2668","sniff(sample, delimiters=None)","","","0"),
("2669","has_header(sample)","","","0"),
("2670","csv.QUOTE_ALL","","","0"),
("2671","csv.QUOTE_MINIMAL","","","0"),
("2672","csv.QUOTE_NONNUMERIC","","","0"),
("2673","csv.QUOTE_NONE","","","0"),
("2674","exception csv.Error","","","0"),
("2675","Dialect.delimiter","","","0"),
("2676","Dialect.doublequote","","","0"),
("2677","Dialect.escapechar","","","0"),
("2678","Dialect.lineterminator","","","0"),
("2679","Dialect.quotechar","","","0"),
("2680","Dialect.quoting","","","0"),
("2681","Dialect.skipinitialspace","","","0"),
("2682","Dialect.strict","","","0"),
("2683","csvreader.__next__()","","","0");
INSERT INTO function VALUES
("2684","csvreader.dialect","","","0"),
("2685","csvreader.line_num","","","0"),
("2686","csvreader.fieldnames","","","0"),
("2687","csvwriter.writerow(row)","","","0"),
("2688","csvwriter.writerows(rows)","","","0"),
("2689","csvwriter.dialect","","","0"),
("2690","DictWriter.writeheader()","","","0"),
("2691","datetime.MINYEAR","<p>The smallest year number allowed in a&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.date\" title=\"datetime.date\"><code>date</code></a>&nbsp;or&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"datetime.datetime\"><code>datetime</code></a>&nbsp;object.&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.MINYEAR\" title=\"datetime.MINYEAR\"><code>MINYEAR</code></a>&nbsp;is&nbsp;<code>1</code>.</p>\n","<p>import datetime<br />\ndatetime.MINYEAR # 1</p>\n","0"),
("2692","datetime.MAXYEAR","<p>The largest year number allowed in a&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.date\" title=\"datetime.date\"><code>date</code></a>&nbsp;or&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"datetime.datetime\"><code>datetime</code></a>&nbsp;object.&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.MAXYEAR\" title=\"datetime.MAXYEAR\"><code>MAXYEAR</code></a>&nbsp;is&nbsp;<code>9999</code>.</p>\n","<p>import datetime<br />\ndatetime.MAXYEAR # 9999</p>\n\n<p>&nbsp;</p>\n","0"),
("2695","class datetime.date","","","0"),
("2696","class datetime.time","","","0"),
("2697","class datetime.datetime","","","0"),
("2698","class datetime.timedelta","","","0"),
("2699","class datetime.tzinfo","","","0"),
("2700","class datetime.timezone","","","0"),
("2701","class datetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)","","","0"),
("2702","timedelta.min","","","0"),
("2703","timedelta.max","","","0"),
("2704","timedelta.resolution","","","0"),
("2705","timedelta.total_seconds()","","","0"),
("2706","class datetime.date(year, month, day)","<p>All arguments are required. Arguments may be integers, in the following ranges:</p>\n\n<ul>\n	<li><code>MINYEAR&nbsp;&lt;=&nbsp;year&nbsp;&lt;=&nbsp;MAXYEAR</code></li>\n	<li><code>1&nbsp;&lt;=&nbsp;month&nbsp;&lt;=&nbsp;12</code></li>\n	<li><code>1&nbsp;&lt;=&nbsp;day&nbsp;&lt;=&nbsp;number&nbsp;of&nbsp;days&nbsp;in&nbsp;the&nbsp;given&nbsp;month&nbsp;and&nbsp;year</code></li>\n</ul>\n\n<p>If an argument outside those ranges is given,&nbsp;<a href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"ValueError\"><code>ValueError</code></a>&nbsp;is raised.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n","0"),
("2707","classmethod date.today()","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Return the current local date.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.today() #&nbsp;datetime.date(2017, 5, 6)</p>\n\n<p>datetime.date.today() # datetime.date(2017, 8, 27)</p>\n","0"),
("2708","classmethod date.fromtimestamp(timestamp)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra na podstawie tego ile sekund mineÅ‚o od 1970 ustala aktualnÄ… datÄ™ (rok, miesiÄ…c, dzieÅ„)</p>\n","<p>import datetime</p>\n\n<p>import time</p>\n\n<p>t = time.time() # ile sekund mineÅ‚o od 1970 roku</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p># Funkcja kt&oacute;ra na podstawie tego ile sekund mineÅ‚o od 1970 ustala aktualnÄ… datÄ™ (rok, miesiÄ…c, dzieÅ„)<br />\nd.fromtimestamp(t) #&nbsp;2017-08-26</p>\n\n<p>datetime.date.fromtimestamp(t)&nbsp;#&nbsp;2017-08-26</p>\n\n<p>&nbsp;</p>\n","0"),
("2709","classmethod date.fromordinal(ordinal)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra ustali datÄ™ na podstawie tego ile dni mineÅ‚o od od roku i miesiÄ…ca numer 1</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.fromordinal(1) # datetime.date(1, 1, 1)</p>\n\n<p>d.fromordinal(2) # datetime.date(1, 1, 2)<br />\nd.fromordinal(733114) # datetime.date(2008, 3, 13) #&nbsp;733114 / 365 = 2008.531506849315</p>\n\n<p>datetime.date.fromordinal(2) #&nbsp;datetime.date(1, 1, 2)</p>\n","0"),
("2710","date.min","<p>The earliest representable date,&nbsp;<code>date(MINYEAR,&nbsp;1,&nbsp;1)</code>.</p>\n","<p>import datetime</p>\n\n<p>d.min #&nbsp;datetime.date(1, 1, 1)</p>\n\n<p>datetime.date.min # datetime.date(1, 1, 1)</p>\n","0"),
("2711","date.max","<p>The latest representable date,&nbsp;<code>date(MAXYEAR,&nbsp;12,&nbsp;31)</code>.</p>\n","<p>import datetime</p>\n\n<p>d.max #&nbsp;datetime.date(9999, 12, 31)</p>\n","0"),
("2712","date.resolution","","","0"),
("2713","date.year","<p>Funkcja kt&oacute;ra wyÅ›wietli rok na podstawie danych podanych w klasie.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.year #&nbsp;2017</p>\n","0"),
("2714","date.month","<p>Funkcja kt&oacute;ra wyÅ›wietli miesiÄ…c na podstawie danych podanych w klasie.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.month #&nbsp;3</p>\n","0"),
("2715","date.day","<p>Funkcja kt&oacute;ra wyÅ›wietli dzieÅ„ na podstawie danych podanych w klasie.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.day #&nbsp;16</p>\n","0"),
("2716","date.replace(year=self.year, month=self.month, day=self.day)","<p>Return a date with the same value, except for those parameters given new values by whichever keyword arguments are specified. For example, if&nbsp;<code>d&nbsp;==&nbsp;date(2002,&nbsp;12,31)</code>, then&nbsp;<code>d.replace(day=26)&nbsp;==&nbsp;date(2002,&nbsp;12,&nbsp;26)</code>.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.replace(year=2009, month=1, day=5) #&nbsp;datetime.date(2009, 1, 5)</p>\n","0"),
("2717","date.timetuple()","<p>Return a&nbsp;<a href=\"https://docs.python.org/3/library/time.html#time.struct_time\" title=\"time.struct_time\"><code>time.struct_time</code></a>&nbsp;such as returned by&nbsp;<a href=\"https://docs.python.org/3/library/time.html#time.localtime\" title=\"time.localtime\"><code>time.localtime()</code></a>. The hours, minutes and seconds are 0, and the DST flag is -1.&nbsp;<code>d.timetuple()</code>&nbsp;is equivalent to&nbsp;<code>time.struct_time((d.year,&nbsp;d.month,&nbsp;d.day,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;d.weekday(),&nbsp;yday,&nbsp;-1))</code></p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.timetuple() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=16, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=75, tm_isdst=-1)</p>\n\n<p># tm_wday dzieÅ„ tygodnia niedziela ma numer 0<br />\n# tm_yday dzieÅ„ roku liczÄ…c od 0<br />\n# tm_isdst znacznik czasu letniego</p>\n","0"),
("2718","date.toordinal()","<p>Funkcja kt&oacute;ra poda ile dni mineÅ‚o od roku i miesiÄ…ca numer 1</p>\n","<p>import datetime<br />\nd = datetime.date(2017,3,16)</p>\n\n<p>d.toordinal() #&nbsp;736404</p>\n\n<p>d = datetime.date(1017,3,16)<br />\nd.toordinal() # 371161</p>\n","0"),
("2719","date.weekday()","<p>Return the day of the week based of value in class, as an integer, where Monday is 0 and Sunday is 6.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.weekday() # 3</p>\n","0"),
("2720","date.isoweekday()","<p>Return the day of the week as an integer based of value in class, where Monday is 1 and Sunday is 7</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.isoweekday() # 4</p>\n","0"),
("2721","date.isocalendar()","<p>Return a 3-tuple, (ISO year, ISO week number, ISO weekday).</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.isocalendar() #&nbsp;(2017, 11, 4)</p>\n","0"),
("2722","date.isoformat()","<p>Return a string representing the date in ISO 8601 format, &lsquo;YYYY-MM-DD&rsquo;. For example,&nbsp;<code>date(2002,&nbsp;12,&nbsp;4).isoformat()&nbsp;==&nbsp;&#39;2002-12-04&#39;</code>.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.isoformat() #&nbsp;&#39;2017-03-16&#39;</p>\n","0"),
("2723","date.__str__()","","","0"),
("2724","date.ctime()","<p>Return a string representing the date, for example&nbsp;<code>date(2002,&nbsp;12,&nbsp;4).ctime()&nbsp;==&nbsp;&#39;Wed&nbsp;Dec&nbsp;4&nbsp;00:00:00&nbsp;2002&#39;</code>.</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.ctime() #&nbsp;&#39;Thu Mar 16 00:00:00 2017&#39;</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>DNI TYGODNIA:</p>\n\n<p>poniedziaÅ‚ek Monday&nbsp;<strong>Mon</strong></p>\n\n<p>wtorek Tuesday&nbsp;<strong>Tue</strong></p>\n\n<p>Å›roda Wednesday&nbsp;<strong>Wed</strong></p>\n\n<p>czwartek Thursday&nbsp;<strong>Thu</strong></p>\n\n<p>piÄ…tek Friday&nbsp;<strong>Fri</strong></p>\n\n<p>sobota Saturday&nbsp;<strong>Sat</strong></p>\n\n<p>niedziela Sunday&nbsp;<strong>Sun</strong></p>\n\n<p>MIESIÄ„CE:</p>\n\n<table>\n	<tbody>\n		<tr>\n			<td><strong>Angielski</strong></td>\n			<td><strong>Polski</strong></td>\n		</tr>\n		<tr>\n			<td>January</td>\n			<td>StyczeÅ„</td>\n		</tr>\n		<tr>\n			<td>February</td>\n			<td>Luty</td>\n		</tr>\n		<tr>\n			<td>March</td>\n			<td>Marzec</td>\n		</tr>\n		<tr>\n			<td>April</td>\n			<td>KwiecieÅ„</td>\n		</tr>\n		<tr>\n			<td>May</td>\n			<td>Maj</td>\n		</tr>\n		<tr>\n			<td>June</td>\n			<td>Czerwiec</td>\n		</tr>\n		<tr>\n			<td>July</td>\n			<td>Lipiec</td>\n		</tr>\n		<tr>\n			<td>August</td>\n			<td>SierpieÅ„</td>\n		</tr>\n		<tr>\n			<td>September</td>\n			<td>WrzesieÅ„</td>\n		</tr>\n		<tr>\n			<td>October</td>\n			<td>PaÅºdziernik</td>\n		</tr>\n		<tr>\n			<td>November</td>\n			<td>Listopad</td>\n		</tr>\n		<tr>\n			<td>December</td>\n			<td>GrudzieÅ„</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("2725","date.strftime(format)","<p>Return a string representing the date, controlled by an explicit format string</p>\n","<p>import datetime</p>\n\n<p>d = datetime.date(2017,3,16)</p>\n\n<p>d.strftime(&#39;%A&#39;) #&nbsp;&#39;Thursday&#39;</p>\n\n<p>#ode&nbsp;&nbsp; &nbsp;Meaning&nbsp;&nbsp; &nbsp;Example<br />\n#a&nbsp;&nbsp; &nbsp;Weekday as locale&rsquo;s abbreviated name.&nbsp;&nbsp; &nbsp;Mon<br />\n#A&nbsp;&nbsp; &nbsp;Weekday as locale&rsquo;s full name.&nbsp;&nbsp; &nbsp;Monday<br />\n#w&nbsp;&nbsp; &nbsp;Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.&nbsp;&nbsp; &nbsp;1<br />\n#d&nbsp;&nbsp; &nbsp;Day of the month as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;30<br />\n#-d&nbsp;&nbsp; &nbsp;Day of the month as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;30<br />\n#b&nbsp;&nbsp; &nbsp;Month as locale&rsquo;s abbreviated name.&nbsp;&nbsp; &nbsp;Sep<br />\n#B&nbsp;&nbsp; &nbsp;Month as locale&rsquo;s full name.&nbsp;&nbsp; &nbsp;September<br />\n#m&nbsp;&nbsp; &nbsp;Month as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;09<br />\n#-m&nbsp;&nbsp; &nbsp;Month as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;9<br />\n#y&nbsp;&nbsp; &nbsp;Year without century as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;13<br />\n#Y&nbsp;&nbsp; &nbsp;Year with century as a decimal number.&nbsp;&nbsp; &nbsp;2013<br />\n#H&nbsp;&nbsp; &nbsp;Hour (24-hour clock) as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;07<br />\n#-H&nbsp;&nbsp; &nbsp;Hour (24-hour clock) as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;7<br />\n#I&nbsp;&nbsp; &nbsp;Hour (12-hour clock) as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;07<br />\n#-I&nbsp;&nbsp; &nbsp;Hour (12-hour clock) as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;7<br />\n#p&nbsp;&nbsp; &nbsp;Locale&rsquo;s equivalent of either AM or PM.&nbsp;&nbsp; &nbsp;AM<br />\n#M&nbsp;&nbsp; &nbsp;Minute as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;06<br />\n#-M&nbsp;&nbsp; &nbsp;Minute as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;6<br />\n#S&nbsp;&nbsp; &nbsp;Second as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;05<br />\n#-S&nbsp;&nbsp; &nbsp;Second as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;5<br />\n#f&nbsp;&nbsp; &nbsp;Microsecond as a decimal number, zero-padded on the left.&nbsp;&nbsp; &nbsp;000000<br />\n#z&nbsp;&nbsp; &nbsp;UTC offset in the form +HHMM or -HHMM (empty string if the the object is naive).&nbsp;&nbsp; &nbsp;<br />\n#Z&nbsp;&nbsp; &nbsp;Time zone name (empty string if the object is naive).&nbsp;&nbsp; &nbsp;<br />\n#j&nbsp;&nbsp; &nbsp;Day of the year as a zero-padded decimal number.&nbsp;&nbsp; &nbsp;273<br />\n#-j&nbsp;&nbsp; &nbsp;Day of the year as a decimal number. (Platform specific)&nbsp;&nbsp; &nbsp;273<br />\n#U&nbsp;&nbsp; &nbsp;Week number of the year (Sunday as the first day of the week) as a zero padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0.&nbsp;&nbsp; &nbsp;39<br />\n#W&nbsp;&nbsp; &nbsp;Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0.&nbsp;&nbsp; &nbsp;39<br />\n#c&nbsp;&nbsp; &nbsp;Locale&rsquo;s appropriate date and time representation.&nbsp;&nbsp; &nbsp;Mon Sep 30 07:06:05 2013<br />\n#x&nbsp;&nbsp; &nbsp;Locale&rsquo;s appropriate date representation.&nbsp;&nbsp; &nbsp;09/30/13<br />\n#X&nbsp;&nbsp; &nbsp;Locale&rsquo;s appropriate time representation.&nbsp;&nbsp; &nbsp;07:06:05<br />\n#%&nbsp;&nbsp; &nbsp;A literal &#39;%&#39; character.&nbsp;&nbsp; &nbsp;%</p>\n","0"),
("2726","date.__format__(format)","","","0"),
("2727","class datetime.datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)","<p><em>year</em>,&nbsp;<em>month</em>,&nbsp;<em>day</em>,&nbsp;<em>hour=0</em>,&nbsp;<em>minute=0</em>,&nbsp;<em>second=0</em>,&nbsp;<em>microsecond=0</em>,&nbsp;<em>tzinfo=None</em>,&nbsp;<em>*</em>,&nbsp;<em>fold=0</em></p>\n\n<ul>\n	<li><code>MINYEAR&nbsp;&lt;=&nbsp;year&nbsp;&lt;=&nbsp;MAXYEAR</code>,</li>\n	<li><code>1&nbsp;&lt;=&nbsp;month&nbsp;&lt;=&nbsp;12</code>,</li>\n	<li><code>1&nbsp;&lt;=&nbsp;day&nbsp;&lt;=&nbsp;number&nbsp;of&nbsp;days&nbsp;in&nbsp;the&nbsp;given&nbsp;month&nbsp;and&nbsp;year</code>,</li>\n	<li><code>0&nbsp;&lt;=&nbsp;hour&nbsp;&lt;&nbsp;24</code>,</li>\n	<li><code>0&nbsp;&lt;=&nbsp;minute&nbsp;&lt;&nbsp;60</code>,</li>\n	<li><code>0&nbsp;&lt;=&nbsp;second&nbsp;&lt;&nbsp;60</code>,</li>\n	<li><code>0&nbsp;&lt;=&nbsp;microsecond&nbsp;&lt;&nbsp;1000000</code>,</li>\n	<li><code>fold&nbsp;in&nbsp;[0,&nbsp;1]</code>.</li>\n</ul>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=0) # 2017-03-16 00:00:00<br />\ndt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10) #&nbsp;2017-03-16 00:00:00.000010</p>\n","0"),
("2728","classmethod datetime.today()","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Return the current local datetime</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.today() #&nbsp;datetime.datetime(2017, 8, 27, 0, 15, 47, 986862)</p>\n\n<p>datetime.datetime.today()&nbsp;#&nbsp;datetime.datetime(2017, 8, 27, 0, 15, 47, 986862)</p>\n","0"),
("2729","classmethod datetime.now(tz=None)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Return the current local date and time</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.now() #&nbsp;datetime.datetime(2017, 8, 27, 0, 15, 47, 986862)</p>\n\n<p>datetime.datetime.now() #&nbsp;datetime.datetime(2017, 8, 27, 0, 15, 47, 986862)</p>\n","0"),
("2730","classmethod datetime.utcnow()","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Return the current UTC date and time</p>\n\n<p>UTC = 0</p>\n\n<p><strong>Uniwersalny czas koordynowany</strong>&nbsp;(<a href=\"https://pl.wikipedia.org/wiki/J%C4%99zyk_angielski\" title=\"JÄ™zyk angielski\">ang.</a>&nbsp;<em>Coordinated Universal Time</em>,&nbsp;<em>Universal Time Coordinated</em><sup><a href=\"https://pl.wikipedia.org/wiki/Uniwersalny_czas_koordynowany#cite_note-1\">[1]</a></sup>,&nbsp;<em><strong>UTC</strong></em>;&nbsp;<a href=\"https://pl.wikipedia.org/wiki/J%C4%99zyk_francuski\" title=\"JÄ™zyk francuski\">fr.</a>&nbsp;<em>Temps Universel Coordonn&eacute;</em>) &ndash; wzorcowy&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Czas\" title=\"Czas\">czas</a>ustalany na podstawie&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Mi%C4%99dzynarodowy_czas_atomowy\" title=\"MiÄ™dzynarodowy czas atomowy\">TAI</a>&nbsp;(fr.&nbsp;<em>Temps Atomique International</em>), uwzglÄ™dniajÄ…cy nieregularnoÅ›Ä‡&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Ruch_obrotowy_Ziemi\" title=\"Ruch obrotowy Ziemi\">ruchu obrotowego Ziemi</a>&nbsp;i koordynowany wzglÄ™dem&nbsp;<a href=\"https://pl.wikipedia.org/wiki/Czas_s%C5%82oneczny\" title=\"Czas sÅ‚oneczny\">czasu sÅ‚onecznego</a>.</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.utcnow() #&nbsp;datetime.datetime(2017, 8, 26, 22, 18, 3, 115237)</p>\n\n<p>datetime.datetime.utcnow() #&nbsp;datetime.datetime(2017, 8, 26, 22, 18, 3, 115237)</p>\n","0"),
("2731","classmethod datetime.fromtimestamp(timestamp, tz=None)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra na podstawie tego ile sekund mineÅ‚o od 1970 ustala aktualnÄ… datÄ™ zakÅ‚adajÄ…c Å¼e UTC = 0 (rok, miesiÄ…c, dzieÅ„, godzinÄ™, minutÄ™, sekundÄ™, milisekundÄ™)</p>\n","<p>import&nbsp;datetime</p>\n\n<p>import time</p>\n\n<p>t = time.time() # ile sekund mineÅ‚o od 1970 roku</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.fromtimestamp(t) #&nbsp;datetime.datetime(2017, 5, 6, 17, 49, 45, 782361)</p>\n\n<p>datetime.datetime.fromtimestamp(t) #&nbsp;datetime.datetime(2017, 5, 6, 17, 49, 45, 782361)</p>\n","0"),
("2732","classmethod datetime.utcfromtimestamp(timestamp)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra na podstawie tego ile sekund mineÅ‚o od 1970 ustala aktualnÄ… datÄ™ zakÅ‚adajÄ…c Å¼e UTC = 0 (rok, miesiÄ…c, dzieÅ„, godzinÄ™, minutÄ™, sekundÄ™, milisekundÄ™)</p>\n","<p>import&nbsp;datetime</p>\n\n<p>import time</p>\n\n<p>t = time.time() # ile sekund mineÅ‚o od 1970 roku</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.utcfromtimestamp(t) #&nbsp;datetime.datetime(2017, 5, 6, 16, 49, 45, 782361)</p>\n\n<p>datetime.datetime.utcfromtimestamp(t) #&nbsp;datetime.datetime(2017, 5, 6, 16, 49, 45, 782361)</p>\n","0"),
("2733","classmethod datetime.fromordinal(ordinal)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Return the&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"datetime.datetime\"><code>datetime</code></a>&nbsp;corresponding to the proleptic Gregorian ordinal, where January 1 of year 1 has ordinal 1</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.fromordinal(d.toordinal()) #&nbsp;datetime.datetime(2017, 3, 16, 0, 0)</p>\n\n<p>datetime.datetime.fromordinal(d.toordinal()) #&nbsp;datetime.datetime(2017, 3, 16, 0, 0)</p>\n","0"),
("2734","classmethod datetime.combine(date, time, tzinfo=self.tzinfo)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra Å‚Ä…czy datÄ™ oraz czas</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.combine(datetime.date(2011, 1, 1), datetime.time(10, 23)) #&nbsp;datetime.datetime(2011, 1, 1, 10, 23)</p>\n","0"),
("2735","classmethod datetime.strptime(date_string, format)","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra pozwala wpisaÄ‡ datÄ™ oraz format kt&oacute;ry opisuje w jaki spos&oacute;b data zostÄ…Å‚a wprowadzona</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.strptime(&quot;07/27/2012&quot;,&quot;%m/%d/%Y&quot;) #&nbsp;datetime.datetime(2012, 7, 27, 0, 0)</p>\n\n<p>datetime.datetime.strptime(&quot;07/27/2012&quot;,&quot;%m/%d/%Y&quot;) #&nbsp;datetime.datetime(2012, 7, 27, 0, 0)</p>\n","0"),
("2736","datetime.min","<p>The earliest representable&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"datetime.datetime\"><code>datetime</code></a>,&nbsp;<code>datetime(MINYEAR,&nbsp;1,&nbsp;1,&nbsp;tzinfo=None)</code></p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.min #&nbsp;datetime.datetime(1, 1, 1, 0, 0)</p>\n","0"),
("2737","datetime.max","<p>The latest representable&nbsp;<a href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"datetime.datetime\"><code>datetime</code></a>,&nbsp;<code>datetime(MAXYEAR,&nbsp;12,&nbsp;31,&nbsp;23,&nbsp;59,&nbsp;59,&nbsp;999999,&nbsp;tzinfo=None)</code>.</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.max #&nbsp;datetime.datetime(9999, 12, 31, 23, 59, 59, 999999)</p>\n","0"),
("2738","datetime.resolution","","<p>dt.resolution #&nbsp;datetime.timedelta(0, 0, 1)</p>\n","0"),
("2739","datetime.year","<p>Atybut kt&oacute;ry pokaÅ¼e rok jaki zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.year # 2017</p>\n","0"),
("2740","datetime.month","<p>Atybut kt&oacute;ry pokaÅ¼e miesiÄ…c jaki zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.month # 3</p>\n","0"),
("2741","datetime.day","<p>Atybut kt&oacute;ry pokaÅ¼e dzieÅ„ jaki zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.day # 16</p>\n","0"),
("2742","datetime.hour","<p>Atybut kt&oacute;ry pokaÅ¼e godzinÄ™ jaka zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.hour # 0</p>\n","0"),
("2743","datetime.minute","<p>Atybut kt&oacute;ry pokaÅ¼e minutÄ™ jaka zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.minute # 0</p>\n","0"),
("2744","datetime.second","<p>Atybut kt&oacute;ry pokaÅ¼e sekundÄ™ jaka zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.second # 0</p>\n","0"),
("2745","datetime.microsecond","<p>Atybut kt&oacute;ry pokaÅ¼e mikrosekundÄ™ jaka zostaÅ‚ wprowadzony do klasy datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.microsecond # 10</p>\n","0"),
("2746","datetime.tzinfo","","","0"),
("2747","datetime.fold","","","0"),
("2748","datetime.date()","<p>Funkcja kt&oacute;ra wyÅ›wietla datÄ™ (rok, miesiÄ…c, dzieÅ„) jaki wpisaÅ‚o siÄ™ w klasÄ™ datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.date() #&nbsp;datetime.date(2017, 3, 16)</p>\n","0"),
("2749","datetime.time()","<p>Funkcja kt&oacute;ra wyÅ›wietla czas (godzinÄ™, minutÄ™, sekundÄ™, mikrosekundÄ™) jaki wpisaÅ‚o siÄ™ w klasÄ™ datetime.datetime()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.time() #&nbsp;datetime.time(0, 0, 0, 10)</p>\n","0"),
("2750","datetime.timetz()","<p>Robi to samo co funkcja dt.time()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.timetz() #&nbsp;datetime.time(0, 0, 0, 10)</p>\n","0"),
("2751","datetime.replace(year=self.year, month=self.month, day=self.day, hour=self.hour, minute=self.minute, second=self.second, microsecond=self.microsecond, tzinfo=self.tzinfo, * fold=0)","<p>Funkcja kt&oacute;ra zamieni wartoÅ›Ä‡i wprowadzone w klasÄ™ datatime.datatime() na takie jakie podano w funkcji i pozostawi niezmienione te wartoÅ›ci kt&oacute;re nie zostaÅ‚y ujÄ™te w funkcji</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.replace(year=2009, month=1, day=5) #&nbsp;datetime.datetime(2009, 1, 5, 0, 0, 0, 10)</p>\n","0"),
("2752","datetime.astimezone(tz=None)","<p>Funckja kt&oacute;ra wypisze datÄ™, czas, strefÄ™ czasowÄ…</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.astimezone() #&nbsp;datetime.datetime(2017, 3, 16, 0, 0, 0, 10, tzinfo=datetime.timezone(datetime.timedelta(0), &#39;GMT (czas standardowy)&#39;))</p>\n","0"),
("2753","datetime.utcoffset()","","","0"),
("2754","datetime.dst()","","","0"),
("2755","datetime.tzname()","","","0"),
("2756","datetime.timetuple()","<p>Return a&nbsp;<code><a href=\"https://docs.python.org/3/library/time.html#time.struct_time\" title=\"time.struct_time\">time.struct_time</a>,&nbsp;</code>equivalent to&nbsp;<code>time.struct_time((d.year,&nbsp;d.month,&nbsp;d.day,&nbsp;d.hour,d.minute,&nbsp;d.second,&nbsp;d.weekday(),&nbsp;yday,&nbsp;dst))</code>,</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.timetuple() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=16, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=75, tm_isdst=-1)<br />\n# tm_wday dzieÅ„ tygodnia niedziela ma numer 0<br />\n# tm_yday dzieÅ„ roku liczÄ…c od 0<br />\n# tm_isdst znacznik czasu letniego</p>\n","0"),
("2757","datetime.utctimetuple()","<p>Robi to samo co funkcja dt.timetuple()</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.utctimetuple() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=16, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=75, tm_isdst=0)</p>\n","0"),
("2758","datetime.toordinal()","<p>Funkcja kt&oacute;ra poda ile dni mineÅ‚o od roku i miesiÄ…ca numer 1 na podstawie wartoÅ›ci podanej w klasie</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.toordinal() #&nbsp;736404</p>\n","0"),
("2759","datetime.timestamp()","<p><strong><em>WYNIK NIEZALEÅ»NY OD WARTOÅšCI W KLASIE</em></strong></p>\n\n<p>Funkcja kt&oacute;ra zwr&oacute;ci ile sekund mineÅ‚o od 1.1.1970 do teraz</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.timestamp() #&nbsp;1489618800.0</p>\n","0"),
("2760","datetime.weekday()","<p>Funcja kt&oacute;ra zwr&oacute;ci 0 jezeli jest poniedziaÅ‚ek i 6 gdy niedziela</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.weekday() # 3</p>\n","0"),
("2761","datetime.isoweekday()","<p>Funcja kt&oacute;ra zwr&oacute;ci 1 jezeli jest poniedziaÅ‚ek i 7 gdy niedziela</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.isoweekday() # 4</p>\n","0"),
("2762","datetime.isocalendar()","<p>Funkcja ktra zwr&oacute;ci rok, numer tygodnia, dzieÅ„ tygodnia w wersji ISO</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.isocalendar() #&nbsp;(2017, 11, 4)</p>\n","0"),
("2763","datetime.isoformat(sep=â€™Tâ€™, timespec=â€™autoâ€™)","<p>Funkcja kt&oacute;ra zwr&oacute;ci YYYY-MM-DDTHH:MM:SS.mmmmmm lub gdy milisekundy = 0 to YYYY-MM-DDTHH:MM:SS</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.isoformat() #&nbsp;&#39;2017-03-16T00:00:00.000010&#39;</p>\n","0"),
("2764","datetime.__str__()","","","0"),
("2765","datetime.ctime()","<p>Funkcja kt&oacute;ra zwraca 3 pierwsze litery dnia, miesiÄ…ca oraz liczba kt&oacute;ra okreÅ›la dzieÅ„, pozatym wypisze 00:00:00 i liczbÄ™ okreÅ›lajÄ…cÄ… rok</p>\n","<p>import&nbsp;datetime</p>\n\n<p>dt = datetime.datetime(2017, 3, 16, hour=0, minute=0, second=0, microsecond=10)</p>\n\n<p>dt.ctime() #&nbsp;&#39;Thu Mar 16 00:00:00 2017&#39;</p>\n","0"),
("2766","datetime.strftime(format)","","","0"),
("2767","datetime.__format__(format)","","","0"),
("2768","class datetime.time(hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)","","","0"),
("2769","time.min","","","0"),
("2770","time.max","","","0"),
("2771","time.resolution","","","0"),
("2772","time.hour","","","0"),
("2773","time.minute","","","0"),
("2774","time.second","","","0"),
("2775","time.microsecond","","","0"),
("2776","time.tzinfo","","","0"),
("2777","time.fold","","","0"),
("2778","time.replace(hour=self.hour, minute=self.minute, second=self.second, microsecond=self.microsecond, tzinfo=self.tzinfo, * fold=0)","","","0"),
("2779","time.isoformat(timespec=â€™autoâ€™)","","","0"),
("2780","time.__str__()","","","0"),
("2781","time.strftime(format)","","","0"),
("2782","time.__format__(format)","","","0"),
("2783","time.utcoffset()","","","0"),
("2784","time.dst()","","","0"),
("2785","time.tzname()","","","0");
INSERT INTO function VALUES
("2786","class datetime.tzinfo","","","0"),
("2787","tzinfo.utcoffset(dt)","","","0"),
("2788","tzinfo.dst(dt)","","","0"),
("2789","tzinfo.tzname(dt)","","","0"),
("2790","tzinfo.fromutc(dt)","","","0"),
("2791","dateutil.tz","","","0"),
("2792","IANA timezone database","","","0"),
("2793","class datetime.timezone(offset, name=None)","","","0"),
("2794","timezone.utcoffset(dt)","","","0"),
("2795","timezone.tzname(dt)","","","0"),
("2796","timezone.dst(dt)","","","0"),
("2797","timezone.fromutc(dt)","","","0"),
("2798","timezone.utc","","","0"),
("2799","%z","","","0"),
("2800","%Z","","","0"),
("2801","class email.charset.Charset(input_charset=DEFAULT_CHARSET)","","","0"),
("2802","input_charset","","","0"),
("2803","header_encoding","","","0"),
("2804","body_encoding","","","0"),
("2805","output_charset","","","0"),
("2806","input_codec","","","0"),
("2807","output_codec","","","0"),
("2808","get_body_encoding()","","","0"),
("2809","get_output_charset()","","","0"),
("2810","header_encode(string)","","","0"),
("2811","header_encode_lines(string, maxlengths)","","","0"),
("2812","body_encode(string)","","","0"),
("2813","__str__()","","","0"),
("2814","__eq__(other)","","","0"),
("2815","__ne__(other)","","","0"),
("2816","email.charset.add_charset(charset, header_enc=None, body_enc=None, output_charset=None)","","","0"),
("2817","email.charset.add_alias(alias, canonical)","","","0"),
("2818","email.charset.add_codec(charset, codecname)","","","0"),
("2819","class email.contentmanager.ContentManager","","","0"),
("2820","get_content(msg, *args, **kw)","","","0"),
("2821","set_content(msg, obj, *args, **kw)","","","0"),
("2822","add_get_handler(key, handler)","","","0"),
("2823","add_set_handler(typekey, handler)","","","0"),
("2824","email.contentmanager.raw_data_manager","","","0"),
("2825","email.contentmanager.get_content(msg, errors=â€™replaceâ€™)","","","0"),
("2826","email.contentmanager.set_content(msg, <â€™strâ€™>, subtype=â€plainâ€, charset=â€™utf-8â€™ cte=None, disposition=None, filename=None, cid=None, params=None, headers=None)","","","0"),
("2827","email.contentmanager.set_content(msg, <â€™bytesâ€™>, maintype, subtype, cte=â€base64â€, disposition=None, filename=None, cid=None, params=None, headers=None)","","","0"),
("2828","email.contentmanager.set_content(msg, <â€™EmailMessageâ€™>, cte=None, disposition=None, filename=None, cid=None, params=None, headers=None)","","","0"),
("2829","email.contentmanager.set_content(msg, <â€™listâ€™>, subtype=â€™mixedâ€™, disposition=None, filename=None, cid=None, params=None, headers=None)","","","0"),
("2830","email.encoders.encode_quopri(msg)","","","0"),
("2831","email.encoders.encode_base64(msg)","","","0"),
("2832","email.encoders.encode_7or8bit(msg)","","","0"),
("2833","email.encoders.encode_noop(msg)","","","0"),
("2834","exception email.errors.MessageError","","","0"),
("2835","exception email.errors.MessageParseError","","","0"),
("2836","exception email.errors.HeaderParseError","","","0"),
("2837","exception email.errors.BoundaryError","","","0"),
("2838","exception email.errors.MultipartConversionError","","","0"),
("2839","class email.generator.BytesGenerator(outfp, mangle_from_=None, maxheaderlen=None, *, policy=None)","","","0"),
("2840","flatten(msg, unixfrom=False, linesep=None)","","","0"),
("2841","clone(fp)","","","0"),
("2842","write(s)","","","0"),
("2843","class email.generator.Generator(outfp, mangle_from_=None, maxheaderlen=None, *, policy=None)","","","0"),
("2844","flatten(msg, unixfrom=False, linesep=None)","","","0"),
("2845","clone(fp)","","","0"),
("2846","write(s)","","","0"),
("2847","class email.generator.DecodedGenerator(outfp, mangle_from_=None, maxheaderlen=None, fmt=None, *, policy=None)","","","0"),
("2848","class email.header.Header(s=None, charset=None, maxlinelen=None, header_name=None, continuation_ws=â€™ â€˜, errors=â€™strictâ€™)","","","0"),
("2849","append(s, charset=None, errors=â€™strictâ€™)","","","0"),
("2850","encode(splitchars=â€™;, 	â€™, maxlinelen=None, linesep=â€™\nâ€™)","","","0"),
("2851","__str__()","","","0"),
("2852","__eq__(other)","","","0"),
("2853","__ne__(other)","","","0"),
("2854","email.header.decode_header(header)","","","0"),
("2855","email.header.make_header(decoded_seq, maxlinelen=None, header_name=None, continuation_ws=â€™ â€˜)","","","0"),
("2856","class email.headerregistry.BaseHeader(name, value)","","","0"),
("2857","name","","","0"),
("2858","defects","","","0"),
("2859","max_count","","","0"),
("2860","fold(*, policy)","","","0"),
("2861","class email.headerregistry.UnstructuredHeader","","","0"),
("2862","class email.headerregistry.DateHeader","","","0"),
("2863","datetime","","","0"),
("2864","class email.headerregistry.AddressHeader","","","0"),
("2865","groups","","","0"),
("2866","addresses","","","0"),
("2867","class email.headerregistry.SingleAddressHeader","","","0"),
("2868","address","","","0"),
("2869","class email.headerregistry.MIMEVersionHeader","","","0"),
("2870","version","","","0"),
("2871","major","","","0"),
("2872","minor","","","0"),
("2873","class email.headerregistry.ParameterizedMIMEHeader","","","0"),
("2874","params","","","0"),
("2875","class email.headerregistry.ContentTypeHeader","","","0"),
("2876","content_type","","","0"),
("2877","maintype","","","0"),
("2878","subtype","","","0"),
("2879","class email.headerregistry.ContentDispositionHeader","","","0"),
("2880","content-disposition","","","0"),
("2881","class email.headerregistry.ContentTransferEncoding","","","0"),
("2882","cte","","","0"),
("2883","class email.headerregistry.HeaderRegistry(base_class=BaseHeader, default_class=UnstructuredHeader, use_default_map=True)","","","0"),
("2884","map_to_type(self, name, cls)","","","0"),
("2885","__getitem__(name)","","","0");
INSERT INTO function VALUES
("2886","__call__(name, value)","","","0"),
("2887","class email.headerregistry.Address(display_name=â€, username=â€, domain=â€, addr_spec=None)","","","0"),
("2888","display_name","","","0"),
("2889","username","","","0"),
("2890","domain","","","0"),
("2891","addr_spec","","","0"),
("2892","__str__()","","","0"),
("2893","class email.headerregistry.Group(display_name=None, addresses=None)","","","0"),
("2894","display_name","","","0"),
("2895","addresses","","","0"),
("2896","__str__()","","","0"),
("2897","email.iterators.body_line_iterator(msg, decode=False)","","","0"),
("2898","email.iterators.typed_subpart_iterator(msg, maintype=â€™textâ€™, subtype=None)","","","0"),
("2899","email.iterators._structure(msg, fp=None, level=0, include_default=False)","","","0"),
("2900","class email.message.EmailMessage(policy=default)","","","0"),
("2901","as_string(unixfrom=False, maxheaderlen=None, policy=None)","","","0"),
("2902","__str__()","","","0"),
("2903","as_bytes(unixfrom=False, policy=None)","","","0"),
("2904","__bytes__()","","","0"),
("2905","is_multipart()","","","0"),
("2906","set_unixfrom(unixfrom)","","","0"),
("2907","get_unixfrom()","","","0"),
("2908","__len__()","","","0"),
("2909","__contains__(name)","","","0"),
("2910","__getitem__(name)","","","0"),
("2911","__setitem__(name, val)","","","0"),
("2912","__delitem__(name)","","","0"),
("2913","keys()","","","0"),
("2914","values()","","","0"),
("2915","items()","","","0"),
("2916","get(name, failobj=None)","","","0"),
("2917","get_all(name, failobj=None)","","","0"),
("2918","add_header(_name, _value, **_params)","","","0"),
("2919","replace_header(_name, _value)","","","0"),
("2920","get_content_type()","","","0"),
("2921","get_content_maintype()","","","0"),
("2922","get_content_subtype()","","","0"),
("2923","get_default_type()","","","0"),
("2924","set_default_type(ctype)","","","0"),
("2925","set_param(param, value, header=â€™Content-Typeâ€™, requote=True, charset=None, language=â€, replace=False)","","","0"),
("2926","del_param(param, header=â€™content-typeâ€™, requote=True)","","","0"),
("2927","get_filename(failobj=None)","","","0"),
("2928","get_boundary(failobj=None)","","","0"),
("2929","set_boundary(boundary)","","","0"),
("2930","get_content_charset(failobj=None)","","","0"),
("2931","get_charsets(failobj=None)","","","0"),
("2932","is_attachment()","","","0"),
("2933","get_content_disposition()","","","0"),
("2934","walk()","","","0"),
("2935","get_body(preferencelist=(â€˜relatedâ€™, â€™htmlâ€™, â€™plainâ€™))","","","0"),
("2936","iter_attachments()","","","0"),
("2937","iter_parts()","","","0"),
("2938","get_content(*args, content_manager=None, **kw)","","","0"),
("2939","set_content(*args, content_manager=None, **kw)","","","0"),
("2940","make_related(boundary=None)","","","0"),
("2941","make_alternative(boundary=None)","","","0"),
("2942","make_mixed(boundary=None)","","","0"),
("2943","add_related(*args, content_manager=None, **kw)","","","0"),
("2944","add_alternative(*args, content_manager=None, **kw)","","","0"),
("2945","add_attachment(*args, content_manager=None, **kw)","","","0"),
("2946","clear()","","","0"),
("2947","clear_content()","","","0"),
("2948","preamble","","","0"),
("2949","epilogue","","","0"),
("2950","defects","","","0"),
("2951","class email.message.MIMEPart(policy=default)","","","0"),
("2952","class email.mime.base.MIMEBase(_maintype, _subtype, *, policy=compat32, **_params)","","","0"),
("2953","class email.mime.nonmultipart.MIMENonMultipart","","","0"),
("2954","class email.mime.multipart.MIMEMultipart(_subtype=â€™mixedâ€™, boundary=None, _subparts=None, *, policy=compat32, **_params)","","","0"),
("2955","class email.mime.application.MIMEApplication(_data, _subtype=â€™octet-streamâ€™, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)","","","0"),
("2956","class email.mime.audio.MIMEAudio(_audiodata, _subtype=None, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)","","","0"),
("2957","class email.mime.image.MIMEImage(_imagedata, _subtype=None, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)","","","0"),
("2958","class email.mime.message.MIMEMessage(_msg, _subtype=â€™rfc822â€™, *, policy=compat32)","","","0"),
("2959","class email.mime.text.MIMEText(_text, _subtype=â€™plainâ€™, _charset=None, *, policy=compat32)","","","0"),
("2960","class email.parser.BytesFeedParser(_factory=None, *, policy=policy.compat32)","","","0"),
("2961","feed(data)","","","0"),
("2962","close()","","","0"),
("2963","class email.parser.FeedParser(_factory=None, *, policy=policy.compat32)","","","0"),
("2964","class email.parser.BytesParser(_class=None, *, policy=policy.compat32)","","","0"),
("2965","parse(fp, headersonly=False)","","","0"),
("2966","parsebytes(bytes, headersonly=False)","","","0"),
("2967","class email.parser.BytesHeaderParser(_class=None, *, policy=policy.compat32)","","","0"),
("2968","class email.parser.Parser(_class=None, *, policy=policy.compat32)","","","0"),
("2969","parse(fp, headersonly=False)","","","0"),
("2970","parsestr(text, headersonly=False)","","","0"),
("2971","class email.parser.HeaderParser(_class=None, *, policy=policy.compat32)","","","0"),
("2972","email.message_from_bytes(s, _class=None, *, policy=policy.compat32)","","","0"),
("2973","message_from_binary_file(fp, _class=None, *,","","","0"),
("2974","policy=policy.compat32)","","","0"),
("2975","email.message_from_string(s, _class=None, *, policy=policy.compat32)","","","0"),
("2976","email.message_from_file(fp, _class=None, *, policy=policy.compat32)","","","0"),
("2977","class email.policy.Policy(**kw)","","","0"),
("2978","max_line_length","","","0"),
("2979","linesep","","","0"),
("2980","cte_type","","","0"),
("2981","raise_on_defect","","","0"),
("2982","mangle_from_","","","0"),
("2983","message_factory","","","0"),
("2984","clone(**kw)","","","0"),
("2985","handle_defect(obj, defect)","","","0");
INSERT INTO function VALUES
("2986","register_defect(obj, defect)","","","0"),
("2987","header_max_count(name)","","","0"),
("2988","header_source_parse(sourcelines)","","","0"),
("2989","header_store_parse(name, value)","","","0"),
("2990","header_fetch_parse(name, value)","","","0"),
("2991","fold(name, value)","","","0"),
("2992","fold_binary(name, value)","","","0"),
("2993","class email.policy.EmailPolicy(**kw)","","","0"),
("2994","utf8","","","0"),
("2995","refold_source","","","0"),
("2996","header_factory","","","0"),
("2997","content_manager","","","0"),
("2998","header_max_count(name)","","","0"),
("2999","header_source_parse(sourcelines)","","","0"),
("3000","header_store_parse(name, value)","","","0"),
("3001","header_fetch_parse(name, value)","","","0"),
("3002","fold(name, value)","","","0"),
("3003","fold_binary(name, value)","","","0"),
("3004","email.policy.default","","","0"),
("3005","email.policy.SMTP","","","0"),
("3006","email.policy.SMTPUTF8","","","0"),
("3007","email.policy.HTTP","","","0"),
("3008","email.policy.strict","","","0"),
("3009","class email.policy.Compat32(**kw)","","","0"),
("3010","mangle_from_","","","0"),
("3011","header_source_parse(sourcelines)","","","0"),
("3012","header_store_parse(name, value)","","","0"),
("3013","header_fetch_parse(name, value)","","","0"),
("3014","fold(name, value)","","","0"),
("3015","fold_binary(name, value)","","","0"),
("3016","email.policy.compat32","","","0"),
("3017","email.utils.localtime(dt=None)","","","0"),
("3018","email.utils.make_msgid(idstring=None, domain=None)","","","0"),
("3019","email.utils.quote(str)","","","0"),
("3020","email.utils.unquote(str)","","","0"),
("3021","email.utils.parseaddr(address)","","","0"),
("3022","email.utils.formataddr(pair, charset=â€™utf-8â€™)","","","0"),
("3023","email.utils.getaddresses(fieldvalues)","","","0"),
("3024","email.utils.parsedate(date)","","","0"),
("3025","email.utils.parsedate_tz(date)","","","0"),
("3026","email.utils.parsedate_to_datetime(date)","","","0"),
("3027","email.utils.mktime_tz(tuple)","","","0"),
("3028","email.utils.formatdate(timeval=None, localtime=False, usegmt=False)","","","0"),
("3029","email.utils.format_datetime(dt, usegmt=False)","","","0"),
("3030","email.utils.decode_rfc2231(s)","","","0"),
("3031","email.utils.encode_rfc2231(s, charset=None, language=None)","","","0"),
("3032","email.utils.collapse_rfc2231_value(value, errors=â€™replaceâ€™, fallback_charset=â€™us-asciiâ€™)","","","0"),
("3033","email.utils.decode_params(params)","","","0"),
("3034","class ftplib.FTP(host=â€, user=â€, passwd=â€, acct=â€, timeout=None, source_address=None)","","<p>from ftplib import FTP<br />\nimport os</p>\n\n<p>os.chdir(r&#39;C:UsersUser\\_Python_&#39;)</p>\n\n<p>ftp = FTP(&#39;192.168.1.12&#39;,3332)<br />\nftp.login(user=&#39;user&#39;, passwd=&#39;KX5WVoSB&#39;)<br />\nftp.cwd(r&#39;/sdcard/Download&#39;)<br />\nprint(ftp.getwelcome())</p>\n\n<p>def grabFile():<br />\n&nbsp; &nbsp; filename = &#39;tekst.txt&#39;<br />\n&nbsp; &nbsp; localfile = open(filename, &#39;wb&#39;)<br />\n&nbsp; &nbsp; ftp.retrbinary(&#39;RETR &#39; + filename, localfile.write, 1024)<br />\n&nbsp; &nbsp; ftp.quit()<br />\n&nbsp; &nbsp; localfile.close()</p>\n\n<p>def placeFile():<br />\n&nbsp; &nbsp; filename = &#39;tekst.txt&#39;<br />\n&nbsp; &nbsp; ftp.storbinary(&#39;STOR &#39;+filename, open(filename, &#39;rb&#39;))<br />\n&nbsp; &nbsp; ftp.quit()</p>\n\n<p>grabFile()</p>\n","0"),
("3035","class ftplib.FTP_TLS(host=â€, user=â€, passwd=â€, acct=â€, keyfile=None, certfile=None, context=None, timeout=None, source_address=None)","","","0"),
("3036","exception ftplib.error_reply","","","0"),
("3037","exception ftplib.error_temp","","","0"),
("3038","exception ftplib.error_perm","","","0"),
("3039","exception ftplib.error_proto","","","0"),
("3040","ftplib.all_errors","","","0"),
("3041","Module netrc","","","0"),
("3042","FTP.set_debuglevel(level)","","","0"),
("3043","FTP.connect(host=â€, port=0, timeout=None, source_address=None)","","","0"),
("3044","FTP.getwelcome()","","","0"),
("3045","FTP.login(user=â€™anonymousâ€™, passwd=â€, acct=â€)","","","0"),
("3046","FTP.abort()","","","0"),
("3047","FTP.sendcmd(cmd)","","","0"),
("3048","FTP.voidcmd(cmd)","","","0"),
("3049","FTP.retrbinary(cmd, callback, blocksize=8192, rest=None)","","","0"),
("3050","FTP.retrlines(cmd, callback=None)","","","0"),
("3051","FTP.set_pasv(val)","","","0"),
("3052","FTP.storbinary(cmd, fp, blocksize=8192, callback=None, rest=None)","","","0"),
("3053","FTP.storlines(cmd, fp, callback=None)","","","0"),
("3054","FTP.transfercmd(cmd, rest=None)","","","0"),
("3055","FTP.ntransfercmd(cmd, rest=None)","","","0"),
("3056","FTP.mlsd(path=â€â€œ, facts=[])","","","0"),
("3057","FTP.nlst(argument[, â€¦])","","","0"),
("3058","FTP.dir(argument[, â€¦])","","","0"),
("3059","FTP.rename(fromname, toname)","","","0"),
("3060","FTP.delete(filename)","","","0"),
("3061","FTP.cwd(pathname)","","","0"),
("3062","FTP.mkd(pathname)","","","0"),
("3063","FTP.pwd()","","","0"),
("3064","FTP.rmd(dirname)","","","0"),
("3065","FTP.size(filename)","","","0"),
("3066","FTP.quit()","","","0"),
("3067","FTP.close()","","","0"),
("3068","FTP_TLS.ssl_version","","","0"),
("3069","FTP_TLS.auth()","","","0"),
("3070","FTP_TLS.ccc()","","","0"),
("3071","FTP_TLS.prot_p()","","","0"),
("3072","FTP_TLS.prot_c()","","","0"),
("3073","html.escape(s, quote=True)","","","0"),
("3074","html.unescape(s)","","","0"),
("3075","class html.parser.HTMLParser(*, convert_charrefs=True)","","","0"),
("3076","HTMLParser.feed(data)","","","0"),
("3077","HTMLParser.close()","","","0"),
("3078","HTMLParser.reset()","","","0"),
("3079","HTMLParser.getpos()","","","0"),
("3080","HTMLParser.get_starttag_text()","","","0"),
("3081","HTMLParser.handle_starttag(tag, attrs)","","","0"),
("3082","HTMLParser.handle_endtag(tag)","","","0"),
("3083","HTMLParser.handle_startendtag(tag, attrs)","","","0"),
("3084","HTMLParser.handle_data(data)","","","0"),
("3085","HTMLParser.handle_entityref(name)","","","0");
INSERT INTO function VALUES
("3086","HTMLParser.handle_charref(name)","","","0"),
("3087","HTMLParser.handle_comment(data)","","","0"),
("3088","HTMLParser.handle_decl(decl)","","","0"),
("3089","HTMLParser.handle_pi(data)","","","0"),
("3090","HTMLParser.unknown_decl(data)","","","0"),
("3091","html.entities.html5","","","0"),
("3092","html.entities.entitydefs","","","0"),
("3093","html.entities.name2codepoint","","","0"),
("3094","html.entities.codepoint2name","","","0"),
("3095","json.dump(obj, fp, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)","<p>Convert dictonary to json</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/json/json_vs_xml.jpg\" style=\"height:265px; width:800px\" /></p>\n","<p>import json</p>\n\n<p>book = {}</p>\n\n<p>book[&#39;tom&#39;] = {<br />\n&nbsp; &nbsp; &#39;name&#39;: &#39;tom&#39;,<br />\n&nbsp; &nbsp; &#39;address&#39;: &#39;1 red street, NY&#39;,<br />\n&nbsp; &nbsp; &#39;phone&#39;: 883275424<br />\n}<br />\nbook[&#39;bob&#39;] = {<br />\n&nbsp; &nbsp; &#39;name&#39;: &#39;bob&#39;,<br />\n&nbsp; &nbsp; &#39;address&#39;: &#39;1 green street, NY&#39;,<br />\n&nbsp; &nbsp; &#39;phone&#39;: 289564874<br />\n}<br />\ns = json.dumps(book)<br />\ns # &#39;{&quot;tom&quot;: {&quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: &quot;1 red street, NY&quot;, &quot;phone&quot;: 883275424}, &quot;bob&quot;: {&quot;name&quot;: &quot;bob&quot;, &quot;address&quot;: &quot;1 green street, NY&quot;, &quot;phone&quot;: 289564874}}&#39;</p>\n","0"),
("3096","json.dumps(obj, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)","","","0"),
("3097","json.load(fp, *, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)","<p>Convert json to dictonary</p>\n","<p>import json</p>\n\n<p>book = {}</p>\n\n<p>book[&#39;tom&#39;] = {<br />\n&nbsp; &nbsp; &#39;name&#39;: &#39;tom&#39;,<br />\n&nbsp; &nbsp; &#39;address&#39;: &#39;1 red street, NY&#39;,<br />\n&nbsp; &nbsp; &#39;phone&#39;: 883275424<br />\n}<br />\nbook[&#39;bob&#39;] = {<br />\n&nbsp; &nbsp; &#39;name&#39;: &#39;bob&#39;,<br />\n&nbsp; &nbsp; &#39;address&#39;: &#39;1 green street, NY&#39;,<br />\n&nbsp; &nbsp; &#39;phone&#39;: 289564874<br />\n}<br />\ns = json.dumps(book)<br />\ns #&nbsp;&#39;{&quot;tom&quot;: {&quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: &quot;1 red street, NY&quot;, &quot;phone&quot;: 883275424}, &quot;bob&quot;: {&quot;name&quot;: &quot;bob&quot;, &quot;address&quot;: &quot;1 green street, NY&quot;, &quot;phone&quot;: 289564874}}&#39;</p>\n\n<p><br />\ndictonary = json.loads(s)<br />\ndictonary #&nbsp;{&#39;tom&#39;: {&#39;name&#39;: &#39;tom&#39;, &#39;address&#39;: &#39;1 red street, NY&#39;, &#39;phone&#39;: 883275424}, &#39;bob&#39;: {&#39;name&#39;: &#39;bob&#39;, &#39;address&#39;: &#39;1 green street, NY&#39;, &#39;phone&#39;: 289564874}}</p>\n","0"),
("3098","json.loads(s, *, encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)","","","0"),
("3099","class json.JSONDecoder(*, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, strict=True, object_pairs_hook=None)","","","0"),
("3100","decode(s)","","","0"),
("3101","raw_decode(s)","","","0"),
("3102","class json.JSONEncoder(*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)","","","0"),
("3103","default(o)","","","0"),
("3104","encode(o)","","","0"),
("3105","iterencode(o)","","","0"),
("3106","exception json.JSONDecodeError(msg, doc, pos)","","","0"),
("3107","msg","","","0"),
("3108","doc","","","0"),
("3109","pos","","","0"),
("3110","lineno","","","0"),
("3111","colno","","","0"),
("3112","infile","","","0"),
("3113","outfile","","","0"),
("3114","--sort-keys","","","0"),
("3115","-h, --help","","","0"),
("3116","class pprint.PrettyPrinter(indent=1, width=80, depth=None, stream=None, *, compact=False)","<p>Construct a&nbsp;<a href=\"https://docs.python.org/3/library/pprint.html#pprint.PrettyPrinter\" title=\"pprint.PrettyPrinter\"><code>PrettyPrinter</code></a>&nbsp;instance</p>\n","<p>import pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>print(data)<br />\n{&#39;urls&#39;: [{&#39;packagetype&#39;: &#39;sdist&#39;, &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;, &#39;python_version&#39;: &#39;source&#39;, &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;, &#39;comment_text&#39;: &#39;&#39;, &#39;downloads&#39;: 71844, &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;, &#39;has_sig&#39;: False, &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;, &#39;size&#39;: 2615733}, {&#39;packagetype&#39;: &#39;bdist_msi&#39;, &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;, &#39;python_version&#39;: &#39;2.7&#39;, &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;, &#39;comment_text&#39;: &#39;&#39;, &#39;downloads&#39;: 5224, &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;, &#39;has_sig&#39;: False, &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;, &#39;size&#39;: 2916352}], &#39;info&#39;: {&#39;download_url&#39;: &#39;UNKNOWN&#39;, &#39;name&#39;: &#39;Twisted&#39;, &#39;cheesecake_documentation_id&#39;: None, &#39;cheesecake_code_kwalitee_id&#39;: None, &#39;license&#39;: &#39;MIT&#39;, &#39;platform&#39;: &#39;UNKNOWN&#39;, &#39;bugtrack_url&#39;: &#39;&#39;, &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;, &#39;Programming Language :: Python :: 2.7&#39;, &#39;Programming Language :: Python :: 2 :: Only&#39;], &#39;cheesecake_installability_id&#39;: None, &#39;version&#39;: &#39;12.3.0&#39;, &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;, &#39;requires_python&#39;: None, &#39;stable_version&#39;: None, &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;, &#39;docs_url&#39;: &#39;&#39;, &#39;author&#39;: &#39;Glyph Lefkowitz&#39;, &#39;maintainer&#39;: &#39;&#39;, &#39;_pypi_hidden&#39;: False, &#39;maintainer_email&#39;: &#39;&#39;, &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;, &#39;keywords&#39;: &#39;&#39;, &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;, &#39;_pypi_ordering&#39;: 125, &#39;description&#39;: &#39;An extensible framework for Python programming, with special focus\non event-based network programming and multiprotocol integration.&#39;, &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;}}</p>\n\n<p>printer = pprint.PrettyPrinter(indent=2, width=65)<br />\nprinter.pprint(data)<br />\n{ &#39;info&#39;: { &#39;_pypi_hidden&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;_pypi_ordering&#39;: 125,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;bugtrack_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_code_kwalitee_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_documentation_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_installability_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;classifiers&#39;: [ &#39;Programming Language :: Python :: &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;2.6&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;2 :: Only&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;description&#39;: &#39;An extensible framework for Python &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;programming, with special focus\n&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;on event-based network programming &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;and multiprotocol integration.&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;docs_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;download_url&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;keywords&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;license&#39;: &#39;MIT&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer_email&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;name&#39;: &#39;Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;platform&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;requires_python&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;stable_version&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;summary&#39;: &#39;An asynchronous networking framework &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;written in Python&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;version&#39;: &#39;12.3.0&#39;},<br />\n&nbsp; &#39;urls&#39;: [ { &#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 71844,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;sdist&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;source&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2615733,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { &#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 5224,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;bdist_msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2916352,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</p>\n","0"),
("3117","pprint.pformat(object, indent=1, width=80, depth=None, *, compact=False)","<p>Return the formatted representation of&nbsp;<em>object</em>&nbsp;as a string.&nbsp;<em>indent</em>,&nbsp;<em>width</em>,&nbsp;<em>depth</em>&nbsp;and&nbsp;<em>compact</em>&nbsp;will be passed to the&nbsp;<a href=\"https://docs.python.org/3/library/pprint.html#pprint.PrettyPrinter\" title=\"pprint.PrettyPrinter\"><code>PrettyPrinter</code></a>&nbsp;constructor as formatting parameters</p>\n","<p>import pprint</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.pformat(data)<br />\n&quot;{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;_pypi_ordering&#39;: 125, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;author&#39;: &#39;Glyph Lefkowitz&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;bugtrack_url&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_code_kwalitee_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_documentation_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_installability_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: 2.7&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: 2 :: Only&#39;], &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;description&#39;: &#39;An extensible framework for Python programming, with &#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;special focus\n&#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;on event-based network programming and multiprotocol &#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;integration.&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;docs_url&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;download_url&#39;: &#39;UNKNOWN&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;keywords&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;license&#39;: &#39;MIT&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;maintainer&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;maintainer_email&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;name&#39;: &#39;Twisted&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;platform&#39;: &#39;UNKNOWN&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;requires_python&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;stable_version&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;version&#39;: &#39;12.3.0&#39;}, &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 71844, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;sdist&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;source&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2615733, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;}, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;comment_text&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 5224, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;bdist_msi&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;2.7&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2916352, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}&quot;</p>\n","0"),
("3118","pprint.pprint(object, stream=None, indent=1, width=80, depth=None, *, compact=False)","<p>Prints the formatted representation of&nbsp;<em>object</em>&nbsp;on&nbsp;<em>stream</em>, followed by a newline</p>\n","<p>import pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.pprint(data)<br />\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;_pypi_ordering&#39;: 125,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;bugtrack_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_code_kwalitee_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_documentation_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_installability_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;Programming Language :: Python :: 2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;Programming Language :: Python :: 2 :: Only&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;special focus\n&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;on event-based network programming and multiprotocol &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;integration.&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;docs_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;download_url&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;keywords&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;license&#39;: &#39;MIT&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer_email&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;name&#39;: &#39;Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;platform&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;requires_python&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;stable_version&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;version&#39;: &#39;12.3.0&#39;},<br />\n&nbsp;&#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;downloads&#39;: 71844,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;packagetype&#39;: &#39;sdist&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;python_version&#39;: &#39;source&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;size&#39;: 2615733,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;downloads&#39;: 5224,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;packagetype&#39;: &#39;bdist_msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;python_version&#39;: &#39;2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;size&#39;: 2916352,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</p>\n","0"),
("3119","pprint.isreadable(object)","<p>Determine if the formatted representation of&nbsp;<em>object</em>&nbsp;is &ldquo;readable&rdquo;</p>\n","<p>import pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.isreadable(data) # True</p>\n","0"),
("3120","pprint.isrecursive(object)","","","0"),
("3121","pprint.saferepr(object)","","","0"),
("3122","PrettyPrinter.pformat(object)","<p>Return the formatted representation of&nbsp;<em>object</em></p>\n","<p>import&nbsp;pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.pformat(data)<br />\n&quot;{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;_pypi_ordering&#39;: 125, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;author&#39;: &#39;Glyph Lefkowitz&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;bugtrack_url&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_code_kwalitee_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_documentation_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;cheesecake_installability_id&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: 2.7&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;Programming Language :: Python :: 2 :: Only&#39;], &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;description&#39;: &#39;An extensible framework for Python programming, with &#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;special focus\n&#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;on event-based network programming and multiprotocol &#39; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;integration.&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;docs_url&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;download_url&#39;: &#39;UNKNOWN&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;keywords&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;license&#39;: &#39;MIT&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;maintainer&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;maintainer_email&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;name&#39;: &#39;Twisted&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;platform&#39;: &#39;UNKNOWN&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;requires_python&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;stable_version&#39;: None, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;version&#39;: &#39;12.3.0&#39;}, &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 71844, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;sdist&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;source&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2615733, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;}, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;comment_text&#39;: &#39;&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;downloads&#39;: 5224, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;has_sig&#39;: False, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;packagetype&#39;: &#39;bdist_msi&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;python_version&#39;: &#39;2.7&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;size&#39;: 2916352, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}&quot;</p>\n","0"),
("3123","PrettyPrinter.pprint(object)","<p>Print the formatted representation of&nbsp;<em>object</em>&nbsp;on the configured stream, followed by a newline</p>\n","<p>import&nbsp;pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.pprint(data)<br />\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;_pypi_ordering&#39;: 125,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;bugtrack_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_code_kwalitee_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_documentation_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;cheesecake_installability_id&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;Programming Language :: Python :: 2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;Programming Language :: Python :: 2 :: Only&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;special focus\n&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;on event-based network programming and multiprotocol &#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;integration.&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;docs_url&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;download_url&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;keywords&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;license&#39;: &#39;MIT&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;maintainer_email&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;name&#39;: &#39;Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;platform&#39;: &#39;UNKNOWN&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;requires_python&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;stable_version&#39;: None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;version&#39;: &#39;12.3.0&#39;},<br />\n&nbsp;&#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;downloads&#39;: 71844,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;packagetype&#39;: &#39;sdist&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;python_version&#39;: &#39;source&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;size&#39;: 2615733,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;comment_text&#39;: &#39;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;downloads&#39;: 5224,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;has_sig&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;packagetype&#39;: &#39;bdist_msi&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;python_version&#39;: &#39;2.7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;size&#39;: 2916352,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</p>\n","0"),
("3124","PrettyPrinter.isreadable(object)","<p>Determine if the formatted representation of the object is &ldquo;readable,&rdquo; or can be used to reconstruct the value using&nbsp;<a href=\"https://docs.python.org/3/library/functions.html#eval\" title=\"eval\"><code>eval()</code></a>.</p>\n","<p>import&nbsp;pprint</p>\n\n<p>data =&nbsp;</p>\n\n<pre>\n{&#39;info&#39;: {&#39;_pypi_hidden&#39;: False,\n          &#39;_pypi_ordering&#39;: 125,\n          &#39;author&#39;: &#39;Glyph Lefkowitz&#39;,\n          &#39;author_email&#39;: &#39;glyph@twistedmatrix.com&#39;,\n          &#39;bugtrack_url&#39;: &#39;&#39;,\n          &#39;cheesecake_code_kwalitee_id&#39;: None,\n          &#39;cheesecake_documentation_id&#39;: None,\n          &#39;cheesecake_installability_id&#39;: None,\n          &#39;classifiers&#39;: [&#39;Programming Language :: Python :: 2.6&#39;,\n                          &#39;Programming Language :: Python :: 2.7&#39;,\n                          &#39;Programming Language :: Python :: 2 :: Only&#39;],\n          &#39;description&#39;: &#39;An extensible framework for Python programming, with &#39;\n                         &#39;special focus\n&#39;\n                         &#39;on event-based network programming and multiprotocol &#39;\n                         &#39;integration.&#39;,\n          &#39;docs_url&#39;: &#39;&#39;,\n          &#39;download_url&#39;: &#39;UNKNOWN&#39;,\n          &#39;home_page&#39;: &#39;http://twistedmatrix.com/&#39;,\n          &#39;keywords&#39;: &#39;&#39;,\n          &#39;license&#39;: &#39;MIT&#39;,\n          &#39;maintainer&#39;: &#39;&#39;,\n          &#39;maintainer_email&#39;: &#39;&#39;,\n          &#39;name&#39;: &#39;Twisted&#39;,\n          &#39;package_url&#39;: &#39;http://pypi.python.org/pypi/Twisted&#39;,\n          &#39;platform&#39;: &#39;UNKNOWN&#39;,\n          &#39;release_url&#39;: &#39;http://pypi.python.org/pypi/Twisted/12.3.0&#39;,\n          &#39;requires_python&#39;: None,\n          &#39;stable_version&#39;: None,\n          &#39;summary&#39;: &#39;An asynchronous networking framework written in Python&#39;,\n          &#39;version&#39;: &#39;12.3.0&#39;},\n &#39;urls&#39;: [{&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 71844,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.tar.bz2&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6e289825f3bf5591cfd670874cc0862d&#39;,\n           &#39;packagetype&#39;: &#39;sdist&#39;,\n           &#39;python_version&#39;: &#39;source&#39;,\n           &#39;size&#39;: 2615733,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:47:03&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/source/T/Twisted/Twisted-12.3.0.tar.bz2&#39;},\n          {&#39;comment_text&#39;: &#39;&#39;,\n           &#39;downloads&#39;: 5224,\n           &#39;filename&#39;: &#39;Twisted-12.3.0.win32-py2.7.msi&#39;,\n           &#39;has_sig&#39;: False,\n           &#39;md5_digest&#39;: &#39;6b778f5201b622a5519a2aca1a2fe512&#39;,\n           &#39;packagetype&#39;: &#39;bdist_msi&#39;,\n           &#39;python_version&#39;: &#39;2.7&#39;,\n           &#39;size&#39;: 2916352,\n           &#39;upload_time&#39;: &#39;2012-12-26T12:48:15&#39;,\n           &#39;url&#39;: &#39;https://pypi.python.org/packages/2.7/T/Twisted/Twisted-12.3.0.win32-py2.7.msi&#39;}]}</pre>\n\n<p>pprint.isreadable(data) # True</p>\n","0"),
("3125","PrettyPrinter.isrecursive(object)","","","0"),
("3126","PrettyPrinter.format(object, context, maxlevels, level)","","","0"),
("3127","site.PREFIXES","","","0"),
("3128","site.ENABLE_USER_SITE","","","0"),
("3129","site.USER_SITE","","","0"),
("3130","site.USER_BASE","","","0"),
("3131","site.main()","","","0"),
("3132","site.addsitedir(sitedir, known_paths=None)","","","0"),
("3133","site.getsitepackages()","","","0"),
("3134","site.getuserbase()","","","0"),
("3135","site.getusersitepackages()","","","0"),
("3136","--user-base","","","0"),
("3137","--user-site","","","0"),
("3138","itertools.chain(*iterables)","<p>Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted</p>\n","<p>import itertools</p>\n\n<p>c = itertools.chain([1,2,3,4])</p>\n\n<p>next(c) # 1<br />\nnext(c) # 2<br />\nnext(c) # 3<br />\nnext(c) # 4<br />\nnext(c)</p>\n\n<p>&#39;&#39;&#39;<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br />\nStopIteration</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("3139","classmethod chain.from_iterable(iterable)","","","0"),
("3140","itertools.combinations(iterable, r)","","","0"),
("3141","itertools.combinations_with_replacement(iterable, r)","","","0"),
("3142","itertools.compress(data, selectors)","<p>Make an iterator that filters elements from&nbsp;<em>data</em>&nbsp;returning only those that have a corresponding element in&nbsp;<em>selectors</em>&nbsp;that evaluates to&nbsp;<code>True</code></p>\n","<p>import itertools</p>\n\n<p>list(itertools.compress(&#39;ABCDEF&#39;, [1,0,1,0,1,1])) #&nbsp;[&#39;A&#39;, &#39;C&#39;, &#39;E&#39;, &#39;F&#39;]</p>\n","0"),
("3143","itertools.count(start=0, step=1)","<p>Make an iterator that returns evenly spaced values starting with number&nbsp;<em>start</em></p>\n","<p>import itertools</p>\n\n<p>a = itertools.count(10)<br />\nfor i in range(20):<br />\n&nbsp; next(a)<br />\n<br />\n10<br />\n11<br />\n12<br />\n13<br />\n14<br />\n15<br />\n16<br />\n17<br />\n18<br />\n19<br />\n20<br />\n21<br />\n22<br />\n23<br />\n24<br />\n25<br />\n26<br />\n27<br />\n28<br />\n29</p>\n\n<p>&nbsp;</p>\n\n<p>a = itertools.count(2,0.5)<br />\nfor i in range(10):<br />\n&nbsp;next(a)<br />\n2<br />\n2.5<br />\n3.0<br />\n3.5<br />\n4.0<br />\n4.5<br />\n5.0<br />\n5.5<br />\n6.0<br />\n6.5</p>\n","0"),
("3144","itertools.cycle(iterable)","<p>Make an iterator returning elements from the iterable and saving a copy of each. When the iterable is exhausted, return elements from the saved copy. Repeats indefinitely</p>\n","<p>import itertools</p>\n\n<p>c = itertools.cycle([1,2,3,4])<br />\nnext(c) # 1<br />\nnext(c) # 2<br />\nnext(c) # 3<br />\nnext(c) # 4<br />\nnext(c) # 1<br />\nnext(c) # 2</p>\n","0"),
("3145","itertools.dropwhile(predicate, iterable)","","","0"),
("3146","itertools.groupby(iterable[, key])","","","0"),
("3147","itertools.ifilter(predicate, iterable)","","","0"),
("3148","itertools.ifilterfalse(predicate, iterable)","","","0"),
("3149","itertools.imap(function, *iterables)","","","0"),
("3150","itertools.islice(iterable, stop)","","","0"),
("3151","itertools.islice(iterable, start, stop[, step])","","","0"),
("3152","itertools.izip(*iterables)","","","0"),
("3153","itertools.izip_longest(*iterables[, fillvalue])","","","0"),
("3154","itertools.permutations(iterable[, r])","","","0"),
("3155","itertools.product(*iterables[, repeat])","","","0"),
("3156","itertools.repeat(object[, times])","","","0"),
("3157","itertools.starmap(function, iterable)","","","0"),
("3158","itertools.takewhile(predicate, iterable)","","","0"),
("3159","itertools.tee(iterable[, n=2])","","","0"),
("3160","AutoItError","","","0"),
("3295","py_compile.compile(file, cfile=None, dfile=None, doraise=False, optimize=-1)","<p>Compile a source file to byte-code and write out the byte-code cache file</p>\n","<p>import os</p>\n\n<p>import py_compile<br />\npath = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;<br />\nos.chdir(path)<br />\npy_compile.compile(&#39;example.py&#39;) # &#39;__pycache__example.cpython-36.pyc&#39;</p>\n\n<p># A program doesn&#39;t run any faster when it is read from a &lsquo;.pyc&rsquo; or &lsquo;.pyo&rsquo; file than when it is read from a &lsquo;.py&rsquo; file; the only thing that&#39;s faster about &lsquo;.pyc&rsquo; or &lsquo;.pyo&rsquo; files is the speed with which they are loaded.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/py_compile/py_compile.compile.jpg\" style=\"height:163px; width:800px\" /></p>\n","0"),
("3294","exception py_compile.PyCompileError","","","0"),
("3172","auto_it_set_option","<p>Changes the operation of various AutoIt functions/parameters</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.auto_it_set_option(&#39;SendKeyDelay&#39;,5)</p>\n","0"),
("3173","autoit","","","0"),
("3174","clip_get","<p>Retrieves text from the clipboard</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.clip_put(&#39;example&#39;)<br />\nautoit.clip_get() # &#39;example&#39;</p>\n","0"),
("3175","clip_put","<p>Writes text to the clipboard</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.clip_put(&#39;example&#39;)<br />\nautoit.clip_get() # &#39;example&#39;</p>\n","0"),
("3176","commands","","","0"),
("3177","control","","","0"),
("3178","control_click","","","0"),
("3179","control_click_by_handle","","","0"),
("3180","control_command","","","0"),
("3181","control_command_by_handle","","","0"),
("3182","control_disable","","","0"),
("3183","control_disable_by_handle","","","0"),
("3184","control_enable","","","0"),
("3185","control_enable_by_handle","","","0"),
("3186","control_focus","","","0"),
("3187","control_focus_by_handle","","","0"),
("3188","control_get_focus","","","0"),
("3189","control_get_focus_by_handle","","","0"),
("3190","control_get_handle","","","0"),
("3191","control_get_handle_as_text","","","0"),
("3192","control_get_pos","","","0"),
("3193","control_get_pos_by_handle","","","0"),
("3194","control_get_text","","","0");
INSERT INTO function VALUES
("3195","control_get_text_by_handle","","","0"),
("3196","control_hide","","","0"),
("3197","control_hide_by_handle","","","0"),
("3198","control_list_view","","","0"),
("3199","control_list_view_by_handle","","","0"),
("3200","control_move","","","0"),
("3201","control_move_by_handle","","","0"),
("3202","control_send","","","0"),
("3203","control_send_by_handle","","","0"),
("3204","control_set_text","","","0"),
("3205","control_set_text_by_handle","","","0"),
("3206","control_show","","","0"),
("3207","control_show_by_handle","","","0"),
("3208","control_tree_view","","","0"),
("3209","control_tree_view_by_handle","","","0"),
("3210","drive_map_add","","","0"),
("3211","drive_map_del","","","0"),
("3212","drive_map_get","","","0"),
("3213","error","","","0"),
("3214","is_admin","<p>Checks if the current user has full administrator privileges</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.is_admin() # 0</p>\n","0"),
("3215","mouse_click","<p>Perform a mouse click operation</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_click(&#39;right&#39;,600,30)</p>\n","0"),
("3216","mouse_click_drag","","","0"),
("3217","mouse_down","<p>Perform a mouse down event at the current mouse position</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_down()</p>\n","0"),
("3218","mouse_get_cursor","","","0"),
("3219","mouse_get_pos","<p>Retrieves the current position of the mouse cursor</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_get_pos() # (845, 474)</p>\n","0"),
("3220","mouse_move","<p>Moves the mouse wheel up or down</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_move(10,10)</p>\n","0"),
("3221","mouse_up","<p>Perform a mouse down event at the current mouse position</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_up()</p>\n","0"),
("3222","mouse_wheel","<p>Moves the mouse wheel up or down</p>\n","<p>import&nbsp;autoit</p>\n\n<p>autoit.mouse_wheel(&#39;up&#39;,50)</p>\n","0"),
("3223","opt","","","0"),
("3224","options","","","0"),
("3225","pixel_checksum","<p>Generates a checksum for a region of pixels</p>\n","<p>import autoit</p>\n\n<p>autoit.pixel_checksum(0, 0, 50, 50) # -791430638<br />\nautoit.pixel_checksum(0, 0, 50, 50) # -791430638</p>\n\n<p># Po zmianie tÅ‚a pulpitu<br />\nautoit.pixel_checksum(0, 0, 50, 50) # -197630775</p>\n","0"),
("3226","pixel_get_color","<p>Returns a pixel color according to x,y pixel coordinates</p>\n","<p>import autoit</p>\n\n<p>autoit.pixel_get_color(10,100) # 16777215<br />\nhex(autoit.pixel_get_color(10,100)) # &#39;0xffffff&#39;</p>\n","0"),
("3227","pixel_search","<p>Searches a rectangle of pixels for the pixel color provided</p>\n","<p>import autoit</p>\n\n<p>autoit.pixel_search(0,0,200,200,14381312)</p>\n\n<p>&#39;&#39;&#39;<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&quot;, line 1, in<br />\n&nbsp; File &quot;C:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesautoitautoit.py&quot;, line 80, in wrapper<br />\n&nbsp; &nbsp; raise AutoItError(err_msg)<br />\nautoit.autoit.AutoItError: color is not found</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p>autoit.pixel_search(0,0,200,200,16777215) # (0, 0)</p>\n","0"),
("3228","process","","","0"),
("3229","process_close","<p>Terminates a named process</p>\n","<p>import autoit</p>\n\n<p>autoit.process_close(&#39;notepad.exe&#39;) # 1<br />\nautoit.process_close(6976)</p>\n\n<p>&#39;&#39;&#39;<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&quot;, line 1, in<br />\n&nbsp; File &quot;C:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesautoitprocess.py&quot;, line 44, in process_close<br />\n&nbsp; &nbsp; ret = AUTO_IT.AU3_ProcessClose(LPCWSTR(process))<br />\nOSError: exception: access violation reading 0x00001B40</p>\n\n<p>&#39;&#39;&#39;</p>\n","0"),
("3230","process_exists","<p>Checks to see if a specified process exists</p>\n","<p>import autoit</p>\n\n<p>&gt;&gt;&gt; autoit.process_exists(6976)<br />\nTraceback (most recent call last):<br />\n&nbsp; File &quot;&quot;, line 1, in<br />\n&nbsp; File &quot;C:UsersUserAppDataLocalProgramsPythonPython36-32libsite-packagesautoitprocess.py&quot;, line 54, in process_exists<br />\n&nbsp; &nbsp; ret = AUTO_IT.AU3_ProcessExists(LPCWSTR(process))<br />\nOSError: exception: access violation reading 0x00001B40</p>\n","0"),
("3231","process_set_priority","","","0"),
("3232","process_wait","","","0"),
("3233","process_wait_close","","","0"),
("3234","properties","","","0"),
("3235","run","<p>Runs an external program</p>\n","<p>import autoit</p>\n\n<p>autoit.run(&#39;notepad.exe&#39;)</p>\n","0"),
("3236","run_as","","","0"),
("3237","run_as_wait","","","0"),
("3238","run_wait","<p>Uruchamia program i czeka na zamkniÄ™cie a wtedy zwraca 0</p>\n","<p>import autoit</p>\n\n<p>autoit.run_wait(&#39;notepad.exe&#39;)&nbsp;</p>\n","0"),
("3239","send","<p>Sends simulated keystrokes to the active window</p>\n","<p>import autoit</p>\n\n<p>&gt;&gt;&gt; autoit.send(&quot;{#} cat and dog{ENTER}{ENTER}&quot;)<br />\n&gt;&gt;&gt; # cat and dog<br />\n...</p>\n","0"),
("3240","shutdown","<p>Shuts down the system</p>\n\n<p>The shutdown code is a combination of the following values:<br />\n&nbsp;&nbsp;&nbsp; $SD_LOGOFF (0) = Logoff<br />\n&nbsp;&nbsp;&nbsp; $SD_SHUTDOWN (1) = Shutdown<br />\n&nbsp;&nbsp;&nbsp; $SD_REBOOT (2) = Reboot<br />\n&nbsp;&nbsp;&nbsp; $SD_FORCE (4) = Force<br />\n&nbsp;&nbsp;&nbsp; $SD_POWERDOWN (8) = Power down<br />\n&nbsp;&nbsp;&nbsp; $SD_FORCEHUNG (16) = Force if hung<br />\n&nbsp;&nbsp;&nbsp; $SD_STANDBY (32) = Standby<br />\n&nbsp;&nbsp;&nbsp; $SD_HIBERNATE (64) = Hibernate</p>\n","<p>import autoit</p>\n\n<p>autoit.shutdown(0)</p>\n","0"),
("3241","statusbar_get_text","","","0"),
("3242","statusbar_get_text_by_handle","","","0"),
("3243","tooltip","","","0"),
("3244","win","","","0"),
("3245","win_activate","","","0"),
("3246","win_activate_by_handle","","","0"),
("3247","win_active","","","0"),
("3248","win_active_by_handle","","","0"),
("3249","win_close","","","0"),
("3250","win_close_by_handle","","","0"),
("3251","win_exists","","","0"),
("3252","win_exists_by_handle","","","0"),
("3253","win_get_caret_pos","","","0"),
("3254","win_get_class_list","","","0"),
("3255","win_get_class_list_by_handle","","","0"),
("3256","win_get_client_size","","","0"),
("3257","win_get_client_size_by_handle","","","0"),
("3258","win_get_handle","","","0"),
("3259","win_get_handle_as_text","","","0"),
("3260","win_get_pos","","","0"),
("3261","win_get_pos_by_handle","","","0"),
("3262","win_get_process","","","0"),
("3263","win_get_process_by_handle","","","0"),
("3264","win_get_state","","","0"),
("3265","win_get_state_by_handle","","","0"),
("3266","win_get_text","","","0"),
("3267","win_get_text_by_handle","","","0"),
("3268","win_get_title","","","0"),
("3269","win_get_title_by_handle","","","0"),
("3270","win_kill","","","0"),
("3271","win_kill_by_handle","","","0"),
("3272","win_menu_select_item","","","0"),
("3273","win_menu_select_item_by_handle","","","0"),
("3274","win_minimize_all","","","0"),
("3275","win_minimize_all_undo","","","0"),
("3276","win_move","","","0"),
("3277","win_move_by_handle","","","0"),
("3278","win_set_on_top","","","0"),
("3279","win_set_on_top_by_handle","","","0"),
("3280","win_set_state","","","0"),
("3281","win_set_state_by_handle","","","0"),
("3282","win_set_title","","","0"),
("3283","win_set_title_by_handle","","","0"),
("3284","win_set_trans","","","0"),
("3285","win_set_trans_by_handle","","","0"),
("3286","win_wait","","","0"),
("3287","win_wait_active","","","0"),
("3288","win_wait_active_by_handle","","","0"),
("3289","win_wait_by_handle","","","0"),
("3290","win_wait_close","","","0"),
("3291","win_wait_close_by_handle","","","0"),
("3292","win_wait_not_active","","","0"),
("3293","win_wait_not_active_by_handle","","","0"),
("3296","py_compile.main(args=None)","<p>Compile several source files</p>\n","<p>import os</p>\n\n<p>import py_compile<br />\npath = r&quot;C:UsersUserDownloads\\__Nowypython_example&quot;<br />\nos.chdir(path)</p>\n\n<p>py_compile.main([&#39;example.py&#39;,&#39;example2.py&#39;,&#39;example3.py&#39;]) # 0</p>\n","0");
INSERT INTO function VALUES
("3297","getpass.getpass","<p>Prompt the user for a password without echoing. The user is prompted using the string&nbsp;<em>prompt</em>, which defaults to&nbsp;<code>&#39;Password:&nbsp;&#39;</code>.</p>\n","<p>import getpass<br />\n&gt;&gt;&gt; passw = getpass.getpass()<br />\nPassword:<br />\n&gt;&gt;&gt; passw<br />\n&#39;pas&#39;<br />\n&gt;&gt;&gt; passw = getpass.getpass(&quot;szymon@otreba.co.uk&quot;)<br />\nszymon@otreba.co.uk<br />\n&gt;&gt;&gt; passw<br />\n&#39;password&#39;</p>\n","0"),
("3298","exception getpass.GetPassWarning","","","0"),
("3299","getpass.getuser","<p>Return the &ldquo;login name&rdquo; of the user</p>\n","<p>import getpass</p>\n\n<p>getpass.getuser() # &#39;User&#39;</p>\n","0"),
("3300","version","<p>The version number of this module, as a string. This is not the version of the SQLite library</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/sqlite3/sqlite3.jpg\" /></p>\n","<p>import sqlite3<br />\nsqlite3.version # &#39;2.6.0&#39;</p>\n","0"),
("3301","version_info","<p>The version number of this module, as a tuple of integers. This is not the version of the SQLite library</p>\n","<p>import&nbsp;sqlite3</p>\n\n<p>sqlite3.version_info # (2, 6, 0)</p>\n","0"),
("3302","sqlite_version","<p>The version number of the run-time SQLite library, as a string</p>\n","<p>import&nbsp;sqlite3</p>\n\n<p>sqlite3.sqlite_version # &#39;3.14.2&#39;</p>\n","0"),
("3303","sqlite_version_info","<p>The version number of the run-time SQLite library, as a tuple of integers</p>\n","<p>import&nbsp;sqlite3</p>\n\n<p>sqlite3.sqlite_version_info # (3, 14, 2)</p>\n","0"),
("3304","PARSE_DECLTYPES","<p>This constant is meant to be used with the&nbsp;<em>detect_types</em>&nbsp;parameter of the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.connect\" title=\"sqlite3.connect\"><code>connect()</code></a>&nbsp;function.</p>\n\n<p>Setting it makes the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#module-sqlite3\" title=\"sqlite3: A DB-API 2.0 implementation using SQLite 3.x.\"><code>sqlite3</code></a>&nbsp;module parse the declared type for each column it returns. It will parse out the first word of the declared type, i. e. for &ldquo;integer primary key&rdquo;, it will parse out &ldquo;integer&rdquo;, or for &ldquo;number(10)&rdquo; it will parse out &ldquo;number&rdquo;. Then for that column, it will look into the converters dictionary and use the converter function registered for that type there.</p>\n","<p>import&nbsp;sqlite3</p>\n\n<p>sqlite3.PARSE_DECLTYPES # 1</p>\n","0"),
("3305","PARSE_COLNAMES","<p>This constant is meant to be used with the&nbsp;<em>detect_types</em>&nbsp;parameter of the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.connect\" title=\"sqlite3.connect\"><code>connect()</code></a>&nbsp;function</p>\n","<p>import&nbsp;sqlite3</p>\n\n<p>sqlite3.PARSE_COLNAMES # 2</p>\n","0"),
("3306","connect","<p>Opens a connection to the SQLite database file&nbsp;<em>database</em>. You can use&nbsp;<code>&quot;:memory:&quot;</code>&nbsp;to open a database connection to a database that resides in RAM instead of on disk</p>\n\n<pre>\ncon = lite.connect(&#39;:memory:&#39;)</pre>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>with con:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; cur = con.cursor() &nbsp; &nbsp;<br />\n&nbsp; &nbsp; cur.execute(&quot;INSERT INTO Cars VALUES(NULL,&#39;Audi&#39;,52642)&quot;)<br />\n&nbsp;</p>\n","0"),
("3307","register_converter","","","0"),
("3308","register_adapter","","","0"),
("3309","complete_statement","","","0"),
("3310","enable_callback_tracebacks","","","0"),
("3311","Connection","","","0"),
("3312","isolation_level","","","0"),
("3313","in_transaction","","","0"),
("3314","cursor","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>with con:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; cur = con.cursor() &nbsp; &nbsp;<br />\n&nbsp; &nbsp; cur.execute(&quot;INSERT INTO Cars VALUES(NULL,&#39;Audi&#39;,52642)&quot;)</p>\n","","0"),
("3315","commit","","","0"),
("3316","rollback","","","0"),
("3317","close","","","0"),
("3318","execute","","","0"),
("3319","executemany","","","0"),
("3320","executescript","","","0"),
("3321","create_function","","","0"),
("3322","create_aggregate","","","0"),
("3323","create_collation","","","0"),
("3324","interrupt","","","0"),
("3325","set_authorizer","","","0"),
("3326","set_progress_handler","","","0"),
("3327","set_trace_callback","","","0"),
("3328","enable_load_extension","","","0"),
("3329","load_extension","","","0"),
("3330","row_factory","","","0"),
("3331","text_factory","","","0"),
("3332","total_changes","","","0"),
("3333","iterdump","","","0"),
("3334","Cursor","","","0"),
("3335","execute","<p>Executes an SQL statement</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>with con:<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; cur = con.cursor() &nbsp; &nbsp;<br />\n&nbsp; &nbsp; cur.execute(&quot;INSERT INTO Cars VALUES(NULL,&#39;Audi&#39;,52642)&quot;)</p>\n","0"),
("3336","executemany","","","0"),
("3337","executescript","<p>This is a nonstandard convenience method for executing multiple SQL statements at once</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.executescript(&quot;&quot;&quot;<br />\n&nbsp; &nbsp; INSERT INTO Cars VALUES(NULL,&#39;Citroen&#39;,21000);<br />\n&nbsp; &nbsp; INSERT INTO Cars VALUES(NULL,&#39;Hummer&#39;,41400);<br />\n&nbsp; &nbsp; INSERT INTO Cars VALUES(NULL,&#39;Volkswagen&#39;,21600);<br />\n&nbsp; &nbsp; &quot;&quot;&quot;)</p>\n\n<p>con.commit()</p>\n\n<p>con.close()</p>\n","0"),
("3338","fetchone","<p>Fetches the next row of a query result set, returning a single sequence, or&nbsp;<a href=\"https://docs.python.org/3/library/constants.html#None\" title=\"None\"><code>None</code></a>&nbsp;when no more data is available</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>row = cur.fetchone()</p>\n\n<p>print(row) # (1, &#39;Audi&#39;, 52642)</p>\n\n<p>con.close()</p>\n","0"),
("3339","fetchmany","","","0"),
("3340","fetchall","<p>Fetches all (remaining) rows of a query result, returning a list. Note that the cursor&rsquo;s arraysize attribute can affect the performance of this operation. An empty list is returned when no rows are available.</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>rows = cur.fetchall()</p>\n\n<p>for row in rows:<br />\n&nbsp; &nbsp; print(row)<br />\n&#39;&#39;&#39;<br />\n(1, &#39;Audi&#39;, 52642)<br />\n(2, &#39;Mercedes&#39;, 57127)<br />\n(3, &#39;Skoda&#39;, 9000)<br />\n(4, &#39;Citroen&#39;, 21000)<br />\n(5, &#39;Hummer&#39;, 41400)<br />\n(6, &#39;Volkswagen&#39;, 21600)<br />\n&#39;&#39;&#39;<br />\ncon.close()<br />\n&nbsp;</p>\n","0"),
("3341","close","<p>Close the cursor now</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)<br />\ncon.close()<br />\n&nbsp;</p>\n","0"),
("3342","rowcount","<p>Although the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor\" title=\"sqlite3.Cursor\"><code>Cursor</code></a>&nbsp;class of the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#module-sqlite3\" title=\"sqlite3: A DB-API 2.0 implementation using SQLite 3.x.\"><code>sqlite3</code></a>&nbsp;module implements this attribute, the database engine&rsquo;s own support for the determination of &ldquo;rows affected&rdquo;/&rdquo;rows selected&rdquo; is quirky.</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>count = cur.rowcount</p>\n\n<p>print(count) # -1</p>\n\n<p>con.close()</p>\n","0"),
("3343","lastrowid","<p>This read-only attribute provides the rowid of the last modified row</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>count = cur.lastrowid</p>\n\n<p>print(count) # 0</p>\n\n<p>con.close()</p>\n","0"),
("3344","arraysize","<p>Read/write attribute that controls the number of rows returned by&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.fetchmany\" title=\"sqlite3.Cursor.fetchmany\"><code>fetchmany()</code></a>. The default value is 1 which means a single row would be fetched per call</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>count = cur.arraysize</p>\n\n<p>print(count) # 1</p>\n\n<p>con.close()</p>\n","0"),
("3345","description","<p>This read-only attribute provides the column names of the last query. To remain compatible with the Python DB API, it returns a 7-tuple for each column where the last six items of each tuple are&nbsp;<a href=\"https://docs.python.org/3/library/constants.html#None\" title=\"None\"><code>None</code></a>.</p>\n\n<p>It is set for&nbsp;<code>SELECT</code>&nbsp;statements without any matching rows as well.</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>count = cur.description</p>\n\n<p>print(count)</p>\n\n<p>&#39;&#39;&#39;<br />\n((&#39;Id&#39;, None, None, None, None, None, None),<br />\n(&#39;Cars&#39;, None, None, None, None, None, None),<br />\n(&#39;Price&#39;, None, None, None, None, None, None))<br />\n&#39;&#39;&#39;</p>\n\n<p>con.close()<br />\n&nbsp;</p>\n","0"),
("3346","connection","<p>This read-only attribute provides the SQLite database&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection\" title=\"sqlite3.Connection\"><code>Connection</code></a>&nbsp;used by the&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor\" title=\"sqlite3.Cursor\"><code>Cursor</code></a>&nbsp;object. A&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor\" title=\"sqlite3.Cursor\"><code>Cursor</code></a>&nbsp;object created by calling&nbsp;<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.cursor\" title=\"sqlite3.Connection.cursor\"><code>con.cursor()</code></a>&nbsp;will have a<a href=\"https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.connection\" title=\"sqlite3.Cursor.connection\"><code>connection</code></a>&nbsp;attribute that refers to&nbsp;<em>con</em>:</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUser\\_Python_Sqlite&#39;)</p>\n\n<p>import sqlite3</p>\n\n<p>con = sqlite3.connect(&#39;database.db&#39;)</p>\n\n<p>cur = con.cursor() &nbsp;</p>\n\n<p>cur.execute(&quot;SELECT * FROM Cars&quot;)</p>\n\n<p>count = cur.connection</p>\n\n<p>print(count) # &lt;sqlite3.Connection object at 0x0274FF20&gt;</p>\n\n<p>con.close()</p>\n","0"),
("3347","Row","","","0"),
("3348","keys","","","0"),
("3349","Warning","","","0"),
("3350","Error","","","0"),
("3351","DatabaseError","","","0"),
("3352","IntegrityError","","","0"),
("3353","ProgrammingError","","","0"),
("3354","send_email","<p>Send email</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Bult_in_modules/smtplib/send_email.jpg\" style=\"height:312px; width:800px\" /></p>\n","<p>import smtplib</p>\n\n<p>def send_email(user, pwd, recipient, subject, body):</p>\n\n<p>&nbsp; &nbsp; gmail_user = user<br />\n&nbsp; &nbsp; gmail_pwd = pwd<br />\n&nbsp; &nbsp; FROM = user<br />\n&nbsp; &nbsp; TO = recipient if type(recipient) is list else [recipient]<br />\n&nbsp; &nbsp; SUBJECT = subject<br />\n&nbsp; &nbsp; TEXT = body</p>\n\n<p>&nbsp; &nbsp; # Prepare actual message<br />\n&nbsp; &nbsp; message = &quot;&quot;&quot;From: %s\nTo: %s\nSubject: %s\n\n%s<br />\n&nbsp; &nbsp; &quot;&quot;&quot; % (&#39;Szymon O&#39;, &quot;, &quot;.join(TO), SUBJECT, TEXT)<br />\n&nbsp; &nbsp; try:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server = smtplib.SMTP(&quot;smtp.gmail.com&quot;, 587)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server.ehlo()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server.starttls()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server.login(gmail_user, gmail_pwd)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server.sendmail(FROM, TO, message)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; server.close()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;successfully sent the mail&#39;)<br />\n&nbsp; &nbsp; except:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&quot;failed to send mail&quot;)</p>\n\n<p>send_email(&#39;gerobss@gmail.com&#39;,&#39;noc24890675&#39;,&#39;szymonotreba@interia.pl&#39;,&#39;Example message&#39;,&#39;This is som text&#39;)</p>\n","0"),
("3403","gTTS","<p>Text To Speech</p>\n","<p>import os<br />\nimport gtts<br />\nfrom pygame import mixer</p>\n\n<p>os.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>tts = gtts.gTTS(text=&#39;Hello World&#39;, lang=&#39;en&#39;)<br />\n# tts = gTTS(text=&#39;Nazywam siÄ™ Kasia&#39;, lang=&#39;pl&#39;)<br />\ntts.save(&quot;hello.mp3&quot;)</p>\n\n<p>mixer.init()<br />\nmixer.music.load(&#39;hello.mp3&#39;)<br />\nmixer.music.play()</p>\n","0"),
("3404","Speech recognition","<pre>\nSpeech recognition using Google Speech Recognition</pre>\n","<p>import speech_recognition as sr<br />\n&nbsp;<br />\n# Record Audio<br />\nr = sr.Recognizer()<br />\nwith sr.Microphone() as source:<br />\n&nbsp; &nbsp; print(&quot;Say something!&quot;)<br />\n&nbsp; &nbsp; audio = r.listen(source)<br />\n&nbsp;<br />\n# Speech recognition using Google Speech Recognition<br />\ntry:<br />\n&nbsp; &nbsp; # for testing purposes, we&#39;re just using the default API key<br />\n&nbsp; &nbsp; # to use another API key, use `r.recognize_google(audio, key=&quot;GOOGLE_SPEECH_RECOGNITION_API_KEY&quot;)`<br />\n&nbsp; &nbsp; # instead of `r.recognize_google(audio)`<br />\n&nbsp; &nbsp; print(&quot;You said: &quot; + r.recognize_google(audio))<br />\nexcept sr.UnknownValueError:<br />\n&nbsp; &nbsp; print(&quot;Google Speech Recognition could not understand audio&quot;)<br />\nexcept sr.RequestError as e:<br />\n&nbsp; &nbsp; print(&quot;Could not request results from Google Speech Recognition service; {0}&quot;.format(e))</p>\n","0"),
("3405","SysTrayIcon","<p>Windows system tray icon with a right-click context menu</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>from infi.systray import SysTrayIcon</p>\n\n<p>def hello(systray):<br />\n&nbsp; &nbsp; print (&quot;hello&quot;)</p>\n\n<p>def do_nothing(systray):<br />\n&nbsp; &nbsp; print (&quot;do_nothing&quot;)</p>\n\n<p>def simon(systray):<br />\n&nbsp; &nbsp; print (&quot;simon&quot;)</p>\n\n<p>def on_quit_callback(systray):<br />\n&nbsp; &nbsp; print(&#39;END&#39;)<br />\n&nbsp; &nbsp;&nbsp;<br />\nmenu_options = ((&#39;Say Hello&#39;, &quot;hello.ico&quot;, hello),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (&#39;Do nothing&#39;, None, do_nothing),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (&#39;A sub-menu&#39;, &quot;submenu.ico&quot;, ((&#39;Say Hello to Simon&#39;, &quot;simon.ico&quot;, simon),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(&#39;Do nothing&#39;, None, do_nothing),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ))<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;)<br />\nsystray = SysTrayIcon(&quot;icon.ico&quot;, &quot;Example tray icon&quot;, menu_options, on_quit=on_quit_callback)<br />\nsystray.start()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/infisystray/tray1.jpg\" style=\"height:99px; width:373px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/infisystray/tray2.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/infisystray/tray3.jpg\" /></p>\n","0"),
("3406","A1","","<p>import&nbsp;chess</p>\n\n<p>chess.A1 # 0</p>\n","0"),
("3407","A2","","<p>import&nbsp;chess</p>\n\n<p>chess.A2 # 8</p>\n","0"),
("3408","A3","","<p>import&nbsp;chess</p>\n\n<p>chess.A3 # 16</p>\n","0"),
("3409","A4","","<p>import&nbsp;chess</p>\n\n<p>chess.A4 # 24</p>\n","0"),
("3410","A5","","<p>import&nbsp;chess</p>\n\n<p>chess.A5 # 32</p>\n","0"),
("3411","A6","","<p>import&nbsp;chess</p>\n\n<p>chess.A6 # 40</p>\n","0"),
("3412","A7","","<p>import&nbsp;chess</p>\n\n<p>chess.A7 # 48</p>\n","0"),
("3413","A8","","<p>import&nbsp;chess</p>\n\n<p>chess.A8 # 56</p>\n","0"),
("3414","B1","","<p>import&nbsp;chess</p>\n\n<p>chess.B1 # 1</p>\n","0"),
("3415","B2","","<p>import&nbsp;chess</p>\n\n<p>chess.B2 # 9</p>\n","0"),
("3416","B3","","<p>import&nbsp;chess</p>\n\n<p>chess.B3 # 17</p>\n","0"),
("3417","B4","","<p>import&nbsp;chess</p>\n\n<p>chess.B4 # 25</p>\n","0"),
("3418","B5","","<p>import&nbsp;chess</p>\n\n<p>chess.B5 # 33</p>\n","0"),
("3419","B6","","<p>import&nbsp;chess</p>\n\n<p>chess.B6 # 41</p>\n","0"),
("3420","B7","","<p>import&nbsp;chess</p>\n\n<p>chess.B7 # 49</p>\n","0"),
("3421","B8","","<p>import&nbsp;chess</p>\n\n<p>chess.B8 # 57</p>\n","0"),
("3422","BB_A1","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A1 # 1</p>\n","0"),
("3423","BB_A2","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A2 # 256</p>\n","0"),
("3424","BB_A3","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A3 # 65536</p>\n","0"),
("3425","BB_A4","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A4 # 16777216</p>\n","0"),
("3426","BB_A5","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A5 # 4294967296</p>\n","0"),
("3427","BB_A6","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A6 # 1099511627776</p>\n","0"),
("3428","BB_A7","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A7 # 281474976710656</p>\n","0"),
("3429","BB_A8","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_A8 # 72057594037927936</p>\n","0"),
("3430","BB_ALL","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_ALL # 18446744073709551615</p>\n","0"),
("3431","BB_B1","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B1 # 2</p>\n","0"),
("3432","BB_B2","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B2 # 512</p>\n","0"),
("3433","BB_B3","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B2 # 512</p>\n","0"),
("3434","BB_B4","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B4 # 33554432</p>\n","0"),
("3435","BB_B5","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B5 # 8589934592</p>\n","0"),
("3436","BB_B6","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B6 # 2199023255552</p>\n","0"),
("3437","BB_B7","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B7 # 562949953421312</p>\n","0"),
("3438","BB_B8","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_B8 # 144115188075855872</p>\n","0"),
("3439","BB_BACKRANKS","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_BACKRANKS # 18374686479671623935</p>\n","0"),
("3440","BB_BETWEEN","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_BETWEEN<br />\n[[0, 0, 2, 6, 14, 30, 62, 126, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 512, 0, 0, 0, 0, 0, 65792, 0, 0, 262656, 0, 0, 0, 0, 16843008, 0, 0, 0, 134480384, 0, 0, 0, 4311810304, 0, 0, 0, 0, 68853957120, 0, 0, 1103823438080, 0, 0, 0, 0, 0, 35253226045952, 0, 282578800148736, 0, 0, 0, 0, 0, 0, 18049651735527936], [0, 0, 0, 4, 12, 28, 60, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 1024, 0, 0, 0, 0, 0, 131584, 0, 0, 525312, 0, 0, 0, 0, 33686016, 0, 0, 0, 268960768, 0, 0, 0, 8623620608, 0, 0, 0, 0, 137707914240, 0, 0, 2207646876160, 0, 0, 0, 0, 0, 70506452091904, 0, 565157600297472, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 8, 24, 56, 120, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 1024, 0, 2048, 0, 0, 0, 0, 0, 263168, 0, 0, 1050624, 0, 0, 0, 0, 67372032, 0, 0, 0, 537921536, 0, 0, 0, 17247241216, 0, 0, 0, 0, 275415828480, 0, 0, 4415293752320, 0, 0, 0, 0, 0, 0, 0, 1130315200594944, 0, 0, 0, 0, 0], [6, 4, 0, 0, 0, 16, 48, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1024, 0, 2048, 0, 4096, 0, 0, 132096, 0, 0, 526336, 0, 0, 2101248, 0, 0, 0, 0, 134744064, 0, 0, 0, 1075843072, 0, 0, 0, 34494482432, 0, 0, 0, 0, 0, 0, 0, 8830587504640, 0, 0, 0, 0, 0, 0, 0, 2260630401189888, 0, 0, 0, 0], [14, 12, 8, 0, 0, 0, 32, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2048, 0, 4096, 0, 8192, 0, 0, 264192, 0, 0, 1052672, 0, 0, 4202496, 33818624, 0, 0, 0, 269488128, 0, 0, 0, 0, 0, 0, 0, 68988964864, 0, 0, 0, 0, 0, 0, 0, 17661175009280, 0, 0, 0, 0, 0, 0, 0, 4521260802379776, 0, 0, 0], [30, 28, 24, 16, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4096, 0, 8192, 0, 16384, 0, 0, 528384, 0, 0, 2105344, 0, 0, 0, 67637248, 0, 0, 0, 538976256, 0, 0, 8657571840, 0, 0, 0, 0, 137977929728, 0, 0, 0, 0, 0, 0, 0, 35322350018560, 0, 0, 0, 0, 0, 0, 0, 9042521604759552, 0, 0], [62, 60, 56, 48, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8192, 0, 16384, 0, 0, 0, 0, 1056768, 0, 0, 4210688, 0, 0, 0, 135274496, 0, 0, 0, 1077952512, 0, 0, 17315143680, 0, 0, 0, 0, 275955859456, 0, 2216338399232, 0, 0, 0, 0, 0, 70644700037120, 0, 0, 0, 0, 0, 0, 0, 18085043209519104, 0], [126, 124, 120, 112, 96, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16384, 0, 32768, 0, 0, 0, 0, 2113536, 0, 0, 8421376, 0, 0, 0, 270548992, 0, 0, 0, 2155905024, 0, 0, 34630287360, 0, 0, 0, 0, 551911718912, 0, 4432676798464, 0, 0, 0, 0, 0, 141289400074240, 567382630219776, 0, 0, 0, 0, 0, 0, 36170086419038208], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 1536, 3584, 7680, 15872, 32256, 0, 0, 0, 0, 0, 0, 0, 0, 65536, 0, 131072, 0, 0, 0, 0, 0, 16842752, 0, 0, 67239936, 0, 0, 0, 0, 4311810048, 0, 0, 0, 34426978304, 0, 0, 0, 1103823437824, 0, 0, 0, 0, 17626613022720, 0, 0, 282578800148480, 0, 0, 0, 0, 0, 9024825867763712, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1024, 3072, 7168, 15360, 31744, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 0, 262144, 0, 0, 0, 0, 0, 33685504, 0, 0, 134479872, 0, 0, 0, 0, 8623620096, 0, 0, 0, 68853956608, 0, 0, 0, 2207646875648, 0, 0, 0, 0, 35253226045440, 0, 0, 565157600296960, 0, 0, 0, 0, 0, 18049651735527424], [0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 2048, 6144, 14336, 30720, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 0, 262144, 0, 524288, 0, 0, 0, 0, 0, 67371008, 0, 0, 268959744, 0, 0, 0, 0, 17247240192, 0, 0, 0, 137707913216, 0, 0, 0, 4415293751296, 0, 0, 0, 0, 70506452090880, 0, 0, 1130315200593920, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1536, 1024, 0, 0, 0, 4096, 12288, 28672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 262144, 0, 524288, 0, 1048576, 0, 0, 33816576, 0, 0, 134742016, 0, 0, 537919488, 0, 0, 0, 0, 34494480384, 0, 0, 0, 275415826432, 0, 0, 0, 8830587502592, 0, 0, 0, 0, 0, 0, 0, 2260630401187840, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3584, 3072, 2048, 0, 0, 0, 8192, 24576, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 524288, 0, 1048576, 0, 2097152, 0, 0, 67633152, 0, 0, 269484032, 0, 0, 1075838976, 8657567744, 0, 0, 0, 68988960768, 0, 0, 0, 0, 0, 0, 0, 17661175005184, 0, 0, 0, 0, 0, 0, 0, 4521260802375680, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 7680, 7168, 6144, 4096, 0, 0, 0, 16384, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1048576, 0, 2097152, 0, 4194304, 0, 0, 135266304, 0, 0, 538968064, 0, 0, 0, 17315135488, 0, 0, 0, 137977921536, 0, 0, 2216338391040, 0, 0, 0, 0, 35322350010368, 0, 0, 0, 0, 0, 0, 0, 9042521604751360, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 15872, 15360, 14336, 12288, 8192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2097152, 0, 4194304, 0, 0, 0, 0, 270532608, 0, 0, 1077936128, 0, 0, 0, 34630270976, 0, 0, 0, 275955843072, 0, 0, 4432676782080, 0, 0, 0, 0, 70644700020736, 0, 567382630203392, 0, 0, 0, 0, 0, 18085043209502720, 0], [0, 0, 0, 0, 0, 0, 0, 0, 32256, 31744, 30720, 28672, 24576, 16384, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4194304, 0, 8388608, 0, 0, 0, 0, 541065216, 0, 0, 2155872256, 0, 0, 0, 69260541952, 0, 0, 0, 551911686144, 0, 0, 8865353564160, 0, 0, 0, 0, 141289400041472, 0, 1134765260406784, 0, 0, 0, 0, 0, 36170086419005440], [256, 0, 512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 393216, 917504, 1966080, 4063232, 8257536, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 0, 33554432, 0, 0, 0, 0, 0, 4311744512, 0, 0, 17213423616, 0, 0, 0, 0, 1103823372288, 0, 0, 0, 8813306445824, 0, 0, 0, 282578800082944, 0, 0, 0, 0, 4512412933816320, 0, 0], [0, 512, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 262144, 786432, 1835008, 3932160, 8126464, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33554432, 0, 67108864, 0, 0, 0, 0, 0, 8623489024, 0, 0, 34426847232, 0, 0, 0, 0, 2207646744576, 0, 0, 0, 17626612891648, 0, 0, 0, 565157600165888, 0, 0, 0, 0, 9024825867632640, 0], [512, 0, 1024, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131072, 0, 0, 0, 524288, 1572864, 3670016, 7864320, 0, 0, 0, 0, 0, 0, 0, 0, 33554432, 0, 67108864, 0, 134217728, 0, 0, 0, 0, 0, 17246978048, 0, 0, 68853694464, 0, 0, 0, 0, 4415293489152, 0, 0, 0, 35253225783296, 0, 0, 0, 1130315200331776, 0, 0, 0, 0, 18049651735265280], [0, 1024, 0, 2048, 0, 4096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 393216, 262144, 0, 0, 0, 1048576, 3145728, 7340032, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67108864, 0, 134217728, 0, 268435456, 0, 0, 8657043456, 0, 0, 34493956096, 0, 0, 137707388928, 0, 0, 0, 0, 8830586978304, 0, 0, 0, 70506451566592, 0, 0, 0, 2260630400663552, 0, 0, 0, 0], [0, 0, 2048, 0, 4096, 0, 8192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 917504, 786432, 524288, 0, 0, 0, 2097152, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134217728, 0, 268435456, 0, 536870912, 0, 0, 17314086912, 0, 0, 68987912192, 0, 0, 275414777856, 2216337342464, 0, 0, 0, 17661173956608, 0, 0, 0, 0, 0, 0, 0, 4521260801327104, 0, 0, 0], [0, 0, 0, 4096, 0, 8192, 0, 16384, 0, 0, 0, 0, 0, 0, 0, 0, 1966080, 1835008, 1572864, 1048576, 0, 0, 0, 4194304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 268435456, 0, 536870912, 0, 1073741824, 0, 0, 34628173824, 0, 0, 137975824384, 0, 0, 0, 4432674684928, 0, 0, 0, 35322347913216, 0, 0, 567382628106240, 0, 0, 0, 0, 9042521602654208, 0, 0], [0, 0, 0, 0, 8192, 0, 16384, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4063232, 3932160, 3670016, 3145728, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 536870912, 0, 1073741824, 0, 0, 0, 0, 69256347648, 0, 0, 275951648768, 0, 0, 0, 8865349369856, 0, 0, 0, 70644695826432, 0, 0, 1134765256212480, 0, 0, 0, 0, 18085043205308416, 0], [0, 0, 0, 0, 0, 16384, 0, 32768, 0, 0, 0, 0, 0, 0, 0, 0, 8257536, 8126464, 7864320, 7340032, 6291456, 4194304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1073741824, 0, 2147483648, 0, 0, 0, 0, 138512695296, 0, 0, 551903297536, 0, 0, 0, 17730698739712, 0, 0, 0, 141289391652864, 0, 0, 2269530512424960, 0, 0, 0, 0, 36170086410616832], [65792, 0, 0, 132096, 0, 0, 0, 0, 65536, 0, 131072, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33554432, 100663296, 234881024, 503316480, 1040187392, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 4294967296, 0, 8589934592, 0, 0, 0, 0, 0, 1103806595072, 0, 0, 4406636445696, 0, 0, 0, 0, 282578783305728, 0, 0, 0, 2256206450130944, 0, 0, 0], [0, 131584, 0, 0, 264192, 0, 0, 0, 0, 131072, 0, 262144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67108864, 201326592, 469762048, 1006632960, 2080374784, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8589934592, 0, 17179869184, 0, 0, 0, 0, 0, 2207613190144, 0, 0, 8813272891392, 0, 0, 0, 0, 565157566611456, 0, 0, 0, 4512412900261888, 0, 0], [0, 0, 263168, 0, 0, 528384, 0, 0, 131072, 0, 262144, 0, 524288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33554432, 0, 0, 0, 134217728, 402653184, 939524096, 2013265920, 0, 0, 0, 0, 0, 0, 0, 0, 8589934592, 0, 17179869184, 0, 34359738368, 0, 0, 0, 0, 0, 4415226380288, 0, 0, 17626545782784, 0, 0, 0, 0, 1130315133222912, 0, 0, 0, 9024825800523776, 0], [262656, 0, 0, 526336, 0, 0, 1056768, 0, 0, 262144, 0, 524288, 0, 1048576, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100663296, 67108864, 0, 0, 0, 268435456, 805306368, 1879048192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17179869184, 0, 34359738368, 0, 68719476736, 0, 0, 2216203124736, 0, 0, 8830452760576, 0, 0, 35253091565568, 0, 0, 0, 0, 2260630266445824, 0, 0, 0, 18049651601047552], [0, 525312, 0, 0, 1052672, 0, 0, 2113536, 0, 0, 524288, 0, 1048576, 0, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234881024, 201326592, 134217728, 0, 0, 0, 536870912, 1610612736, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34359738368, 0, 68719476736, 0, 137438953472, 0, 0, 4432406249472, 0, 0, 17660905521152, 0, 0, 70506183131136, 567382359670784, 0, 0, 0, 4521260532891648, 0, 0, 0], [0, 0, 1050624, 0, 0, 2105344, 0, 0, 0, 0, 0, 1048576, 0, 2097152, 0, 4194304, 0, 0, 0, 0, 0, 0, 0, 0, 503316480, 469762048, 402653184, 268435456, 0, 0, 0, 1073741824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68719476736, 0, 137438953472, 0, 274877906944, 0, 0, 8864812498944, 0, 0, 35321811042304, 0, 0, 0, 1134764719341568, 0, 0, 0, 9042521065783296, 0, 0], [0, 0, 0, 2101248, 0, 0, 4210688, 0, 0, 0, 0, 0, 2097152, 0, 4194304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1040187392, 1006632960, 939524096, 805306368, 536870912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137438953472, 0, 274877906944, 0, 0, 0, 0, 17729624997888, 0, 0, 70643622084608, 0, 0, 0, 2269529438683136, 0, 0, 0, 18085042131566592, 0], [0, 0, 0, 0, 4202496, 0, 0, 8421376, 0, 0, 0, 0, 0, 4194304, 0, 8388608, 0, 0, 0, 0, 0, 0, 0, 0, 2113929216, 2080374784, 2013265920, 1879048192, 1610612736, 1073741824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 274877906944, 0, 549755813888, 0, 0, 0, 0, 35459249995776, 0, 0, 141287244169216, 0, 0, 0, 4539058877366272, 0, 0, 0, 36170084263133184], [16843008, 0, 0, 0, 33818624, 0, 0, 0, 16842752, 0, 0, 33816576, 0, 0, 0, 0, 16777216, 0, 33554432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8589934592, 25769803776, 60129542144, 128849018880, 266287972352, 541165879296, 0, 0, 0, 0, 0, 0, 0, 0, 1099511627776, 0, 2199023255552, 0, 0, 0, 0, 0, 282574488338432, 0, 0, 1128098930098176, 0, 0, 0, 0], [0, 33686016, 0, 0, 0, 67637248, 0, 0, 0, 33685504, 0, 0, 67633152, 0, 0, 0, 0, 33554432, 0, 67108864, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17179869184, 51539607552, 120259084288, 257698037760, 532575944704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2199023255552, 0, 4398046511104, 0, 0, 0, 0, 0, 565148976676864, 0, 0, 2256197860196352, 0, 0, 0], [0, 0, 67372032, 0, 0, 0, 135274496, 0, 0, 0, 67371008, 0, 0, 135266304, 0, 0, 33554432, 0, 67108864, 0, 134217728, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8589934592, 0, 0, 0, 34359738368, 103079215104, 240518168576, 515396075520, 0, 0, 0, 0, 0, 0, 0, 0, 2199023255552, 0, 4398046511104, 0, 8796093022208, 0, 0, 0, 0, 0, 1130297953353728, 0, 0, 4512395720392704, 0, 0], [0, 0, 0, 134744064, 0, 0, 0, 270548992, 67239936, 0, 0, 134742016, 0, 0, 270532608, 0, 0, 67108864, 0, 134217728, 0, 268435456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25769803776, 17179869184, 0, 0, 0, 68719476736, 206158430208, 481036337152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4398046511104, 0, 8796093022208, 0, 17592186044416, 0, 0, 567347999932416, 0, 0, 2260595906707456, 0, 0, 9024791440785408, 0], [134480384, 0, 0, 0, 269488128, 0, 0, 0, 0, 134479872, 0, 0, 269484032, 0, 0, 541065216, 0, 0, 134217728, 0, 268435456, 0, 536870912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60129542144, 51539607552, 34359738368, 0, 0, 0, 137438953472, 412316860416, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8796093022208, 0, 17592186044416, 0, 35184372088832, 0, 0, 1134695999864832, 0, 0, 4521191813414912, 0, 0, 18049582881570816], [0, 268960768, 0, 0, 0, 538976256, 0, 0, 0, 0, 268959744, 0, 0, 538968064, 0, 0, 0, 0, 0, 268435456, 0, 536870912, 0, 1073741824, 0, 0, 0, 0, 0, 0, 0, 0, 128849018880, 120259084288, 103079215104, 68719476736, 0, 0, 0, 274877906944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17592186044416, 0, 35184372088832, 0, 70368744177664, 0, 0, 2269391999729664, 0, 0, 9042383626829824, 0, 0], [0, 0, 537921536, 0, 0, 0, 1077952512, 0, 0, 0, 0, 537919488, 0, 0, 1077936128, 0, 0, 0, 0, 0, 536870912, 0, 1073741824, 0, 0, 0, 0, 0, 0, 0, 0, 0, 266287972352, 257698037760, 240518168576, 206158430208, 137438953472, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35184372088832, 0, 70368744177664, 0, 0, 0, 0, 4538783999459328, 0, 0, 18084767253659648, 0], [0, 0, 0, 1075843072, 0, 0, 0, 2155905024, 0, 0, 0, 0, 1075838976, 0, 0, 2155872256, 0, 0, 0, 0, 0, 1073741824, 0, 2147483648, 0, 0, 0, 0, 0, 0, 0, 0, 541165879296, 532575944704, 515396075520, 481036337152, 412316860416, 274877906944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70368744177664, 0, 140737488355328, 0, 0, 0, 0, 9077567998918656, 0, 0, 36169534507319296], [4311810304, 0, 0, 0, 0, 8657571840, 0, 0, 4311810048, 0, 0, 0, 8657567744, 0, 0, 0, 4311744512, 0, 0, 8657043456, 0, 0, 0, 0, 4294967296, 0, 8589934592, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2199023255552, 6597069766656, 15393162788864, 32985348833280, 68169720922112, 138538465099776, 0, 0, 0, 0, 0, 0, 0, 0, 281474976710656, 0, 562949953421312, 0, 0, 0, 0, 0], [0, 8623620608, 0, 0, 0, 0, 17315143680, 0, 0, 8623620096, 0, 0, 0, 17315135488, 0, 0, 0, 8623489024, 0, 0, 17314086912, 0, 0, 0, 0, 8589934592, 0, 17179869184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4398046511104, 13194139533312, 30786325577728, 65970697666560, 136339441844224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 562949953421312, 0, 1125899906842624, 0, 0, 0, 0], [0, 0, 17247241216, 0, 0, 0, 0, 34630287360, 0, 0, 17247240192, 0, 0, 0, 34630270976, 0, 0, 0, 17246978048, 0, 0, 34628173824, 0, 0, 8589934592, 0, 17179869184, 0, 34359738368, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2199023255552, 0, 0, 0, 8796093022208, 26388279066624, 61572651155456, 131941395333120, 0, 0, 0, 0, 0, 0, 0, 0, 562949953421312, 0, 1125899906842624, 0, 2251799813685248, 0, 0, 0], [0, 0, 0, 34494482432, 0, 0, 0, 0, 0, 0, 0, 34494480384, 0, 0, 0, 69260541952, 17213423616, 0, 0, 34493956096, 0, 0, 69256347648, 0, 0, 17179869184, 0, 34359738368, 0, 68719476736, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6597069766656, 4398046511104, 0, 0, 0, 17592186044416, 52776558133248, 123145302310912, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1125899906842624, 0, 2251799813685248, 0, 4503599627370496, 0, 0], [0, 0, 0, 0, 68988964864, 0, 0, 0, 34426978304, 0, 0, 0, 68988960768, 0, 0, 0, 0, 34426847232, 0, 0, 68987912192, 0, 0, 138512695296, 0, 0, 34359738368, 0, 68719476736, 0, 137438953472, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15393162788864, 13194139533312, 8796093022208, 0, 0, 0, 35184372088832, 105553116266496, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2251799813685248, 0, 4503599627370496, 0, 9007199254740992, 0], [68853957120, 0, 0, 0, 0, 137977929728, 0, 0, 0, 68853956608, 0, 0, 0, 137977921536, 0, 0, 0, 0, 68853694464, 0, 0, 137975824384, 0, 0, 0, 0, 0, 68719476736, 0, 137438953472, 0, 274877906944, 0, 0, 0, 0, 0, 0, 0, 0, 32985348833280, 30786325577728, 26388279066624, 17592186044416, 0, 0, 0, 70368744177664, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4503599627370496, 0, 9007199254740992, 0, 18014398509481984], [0, 137707914240, 0, 0, 0, 0, 275955859456, 0, 0, 0, 137707913216, 0, 0, 0, 275955843072, 0, 0, 0, 0, 137707388928, 0, 0, 275951648768, 0, 0, 0, 0, 0, 137438953472, 0, 274877906944, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68169720922112, 65970697666560, 61572651155456, 52776558133248, 35184372088832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9007199254740992, 0, 18014398509481984, 0], [0, 0, 275415828480, 0, 0, 0, 0, 551911718912, 0, 0, 0, 275415826432, 0, 0, 0, 551911686144, 0, 0, 0, 0, 275414777856, 0, 0, 551903297536, 0, 0, 0, 0, 0, 274877906944, 0, 549755813888, 0, 0, 0, 0, 0, 0, 0, 0, 138538465099776, 136339441844224, 131941395333120, 123145302310912, 105553116266496, 70368744177664, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18014398509481984, 0, 36028797018963968], [1103823438080, 0, 0, 0, 0, 0, 2216338399232, 0, 1103823437824, 0, 0, 0, 0, 2216338391040, 0, 0, 1103823372288, 0, 0, 0, 2216337342464, 0, 0, 0, 1103806595072, 0, 0, 2216203124736, 0, 0, 0, 0, 1099511627776, 0, 2199023255552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 562949953421312, 1688849860263936, 3940649673949184, 8444249301319680, 17451448556060672, 35465847065542656, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2207646876160, 0, 0, 0, 0, 0, 4432676798464, 0, 2207646875648, 0, 0, 0, 0, 4432676782080, 0, 0, 2207646744576, 0, 0, 0, 4432674684928, 0, 0, 0, 2207613190144, 0, 0, 4432406249472, 0, 0, 0, 0, 2199023255552, 0, 4398046511104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1125899906842624, 3377699720527872, 7881299347898368, 16888498602639360, 34902897112121344, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 4415293752320, 0, 0, 0, 0, 0, 0, 0, 4415293751296, 0, 0, 0, 0, 8865353564160, 0, 0, 4415293489152, 0, 0, 0, 8865349369856, 0, 0, 0, 4415226380288, 0, 0, 8864812498944, 0, 0, 2199023255552, 0, 4398046511104, 0, 8796093022208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 562949953421312, 0, 0, 0, 2251799813685248, 6755399441055744, 15762598695796736, 33776997205278720, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8830587504640, 0, 0, 0, 0, 0, 0, 0, 8830587502592, 0, 0, 0, 0, 0, 0, 0, 8830586978304, 0, 0, 0, 17730698739712, 4406636445696, 0, 0, 8830452760576, 0, 0, 17729624997888, 0, 0, 4398046511104, 0, 8796093022208, 0, 17592186044416, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1688849860263936, 1125899906842624, 0, 0, 0, 4503599627370496, 13510798882111488, 31525197391593472, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 17661175009280, 0, 0, 0, 0, 0, 0, 0, 17661175005184, 0, 0, 0, 8813306445824, 0, 0, 0, 17661173956608, 0, 0, 0, 0, 8813272891392, 0, 0, 17660905521152, 0, 0, 35459249995776, 0, 0, 8796093022208, 0, 17592186044416, 0, 35184372088832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3940649673949184, 3377699720527872, 2251799813685248, 0, 0, 0, 9007199254740992, 27021597764222976, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 35322350018560, 0, 0, 17626613022720, 0, 0, 0, 0, 35322350010368, 0, 0, 0, 17626612891648, 0, 0, 0, 35322347913216, 0, 0, 0, 0, 17626545782784, 0, 0, 35321811042304, 0, 0, 0, 0, 0, 17592186044416, 0, 35184372088832, 0, 70368744177664, 0, 0, 0, 0, 0, 0, 0, 0, 8444249301319680, 7881299347898368, 6755399441055744, 4503599627370496, 0, 0, 0, 18014398509481984, 0, 0, 0, 0, 0, 0, 0, 0], [35253226045952, 0, 0, 0, 0, 0, 70644700037120, 0, 0, 35253226045440, 0, 0, 0, 0, 70644700020736, 0, 0, 0, 35253225783296, 0, 0, 0, 70644695826432, 0, 0, 0, 0, 35253091565568, 0, 0, 70643622084608, 0, 0, 0, 0, 0, 35184372088832, 0, 70368744177664, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17451448556060672, 16888498602639360, 15762598695796736, 13510798882111488, 9007199254740992, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 70506452091904, 0, 0, 0, 0, 0, 141289400074240, 0, 0, 70506452090880, 0, 0, 0, 0, 141289400041472, 0, 0, 0, 70506451566592, 0, 0, 0, 141289391652864, 0, 0, 0, 0, 70506183131136, 0, 0, 141287244169216, 0, 0, 0, 0, 0, 70368744177664, 0, 140737488355328, 0, 0, 0, 0, 0, 0, 0, 0, 35465847065542656, 34902897112121344, 33776997205278720, 31525197391593472, 27021597764222976, 18014398509481984, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [282578800148736, 0, 0, 0, 0, 0, 0, 567382630219776, 282578800148480, 0, 0, 0, 0, 0, 567382630203392, 0, 282578800082944, 0, 0, 0, 0, 567382628106240, 0, 0, 282578783305728, 0, 0, 0, 567382359670784, 0, 0, 0, 282574488338432, 0, 0, 567347999932416, 0, 0, 0, 0, 281474976710656, 0, 562949953421312, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144115188075855872, 432345564227567616, 1008806316530991104, 2161727821137838080, 4467570830351532032, 9079256848778919936], [0, 565157600297472, 0, 0, 0, 0, 0, 0, 0, 565157600296960, 0, 0, 0, 0, 0, 1134765260406784, 0, 565157600165888, 0, 0, 0, 0, 1134765256212480, 0, 0, 565157566611456, 0, 0, 0, 1134764719341568, 0, 0, 0, 565148976676864, 0, 0, 1134695999864832, 0, 0, 0, 0, 562949953421312, 0, 1125899906842624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 288230376151711744, 864691128455135232, 2017612633061982208, 4323455642275676160, 8935141660703064064], [0, 0, 1130315200594944, 0, 0, 0, 0, 0, 0, 0, 1130315200593920, 0, 0, 0, 0, 0, 0, 0, 1130315200331776, 0, 0, 0, 0, 2269530512424960, 0, 0, 1130315133222912, 0, 0, 0, 2269529438683136, 0, 0, 0, 1130297953353728, 0, 0, 2269391999729664, 0, 0, 562949953421312, 0, 1125899906842624, 0, 2251799813685248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144115188075855872, 0, 0, 0, 576460752303423488, 1729382256910270464, 4035225266123964416, 8646911284551352320], [0, 0, 0, 2260630401189888, 0, 0, 0, 0, 0, 0, 0, 2260630401187840, 0, 0, 0, 0, 0, 0, 0, 2260630400663552, 0, 0, 0, 0, 0, 0, 0, 2260630266445824, 0, 0, 0, 4539058877366272, 1128098930098176, 0, 0, 2260595906707456, 0, 0, 4538783999459328, 0, 0, 1125899906842624, 0, 2251799813685248, 0, 4503599627370496, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 432345564227567616, 288230376151711744, 0, 0, 0, 1152921504606846976, 3458764513820540928, 8070450532247928832], [0, 0, 0, 0, 4521260802379776, 0, 0, 0, 0, 0, 0, 0, 4521260802375680, 0, 0, 0, 0, 0, 0, 0, 4521260801327104, 0, 0, 0, 2256206450130944, 0, 0, 0, 4521260532891648, 0, 0, 0, 0, 2256197860196352, 0, 0, 4521191813414912, 0, 0, 9077567998918656, 0, 0, 2251799813685248, 0, 4503599627370496, 0, 9007199254740992, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1008806316530991104, 864691128455135232, 576460752303423488, 0, 0, 0, 2305843009213693952, 6917529027641081856], [0, 0, 0, 0, 0, 9042521604759552, 0, 0, 0, 0, 0, 0, 0, 9042521604751360, 0, 0, 4512412933816320, 0, 0, 0, 0, 9042521602654208, 0, 0, 0, 4512412900261888, 0, 0, 0, 9042521065783296, 0, 0, 0, 0, 4512395720392704, 0, 0, 9042383626829824, 0, 0, 0, 0, 0, 4503599627370496, 0, 9007199254740992, 0, 18014398509481984, 0, 0, 0, 0, 0, 0, 0, 0, 2161727821137838080, 2017612633061982208, 1729382256910270464, 1152921504606846976, 0, 0, 0, 4611686018427387904], [0, 0, 0, 0, 0, 0, 18085043209519104, 0, 9024825867763712, 0, 0, 0, 0, 0, 18085043209502720, 0, 0, 9024825867632640, 0, 0, 0, 0, 18085043205308416, 0, 0, 0, 9024825800523776, 0, 0, 0, 18085042131566592, 0, 0, 0, 0, 9024791440785408, 0, 0, 18084767253659648, 0, 0, 0, 0, 0, 9007199254740992, 0, 18014398509481984, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4467570830351532032, 4323455642275676160, 4035225266123964416, 3458764513820540928, 2305843009213693952, 0, 0, 0], [18049651735527936, 0, 0, 0, 0, 0, 0, 36170086419038208, 0, 18049651735527424, 0, 0, 0, 0, 0, 36170086419005440, 0, 0, 18049651735265280, 0, 0, 0, 0, 36170086410616832, 0, 0, 0, 18049651601047552, 0, 0, 0, 36170084263133184, 0, 0, 0, 0, 18049582881570816, 0, 0, 36169534507319296, 0, 0, 0, 0, 0, 18014398509481984, 0, 36028797018963968, 0, 0, 0, 0, 0, 0, 0, 0, 9079256848778919936, 8935141660703064064, 8646911284551352320, 8070450532247928832, 6917529027641081856, 4611686018427387904, 0, 0]]</p>\n","0"),
("3441","BB_C1","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C1 # 4</p>\n","0"),
("3442","BB_C2","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C2 # 1024</p>\n","0"),
("3443","BB_C3","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C3 # 262144</p>\n","0"),
("3444","BB_C4","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C4 # 67108864</p>\n","0");
INSERT INTO function VALUES
("3445","BB_C5","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C5 # 17179869184</p>\n","0"),
("3446","BB_C6","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C6 # 4398046511104</p>\n","0"),
("3447","BB_C7","","<p>import&nbsp;chess</p>\n\n<p>chess.BB_C7 # 1125899906842624</p>\n","0"),
("3448","BB_C8","","","0"),
("3449","BB_D1","","","0"),
("3450","BB_D2","","","0"),
("3451","BB_D3","","","0"),
("3452","BB_D4","","","0"),
("3453","BB_D5","","","0"),
("3454","BB_D6","","","0"),
("3455","BB_D7","","","0"),
("3456","BB_D8","","","0"),
("3457","BB_DARK_SQUARES","","","0"),
("3458","BB_DIAG_ATTACKS","","","0"),
("3459","BB_DIAG_MASKS","","","0"),
("3460","BB_E1","","","0"),
("3461","BB_E2","","","0"),
("3462","BB_E3","","","0"),
("3463","BB_E4","","","0"),
("3464","BB_E5","","","0"),
("3465","BB_E6","","","0"),
("3466","BB_E7","","","0"),
("3467","BB_E8","","","0"),
("3468","BB_F1","","","0"),
("3469","BB_F2","","","0"),
("3470","BB_F3","","","0"),
("3471","BB_F4","","","0"),
("3472","BB_F5","","","0"),
("3473","BB_F6","","","0"),
("3474","BB_F7","","","0"),
("3475","BB_F8","","","0"),
("3476","BB_FILES","","","0"),
("3477","BB_FILE_A","","","0"),
("3478","BB_FILE_ATTACKS","","","0"),
("3479","BB_FILE_B","","","0"),
("3480","BB_FILE_C","","","0"),
("3481","BB_FILE_D","","","0"),
("3482","BB_FILE_E","","","0"),
("3483","BB_FILE_F","","","0"),
("3484","BB_FILE_G","","","0"),
("3485","BB_FILE_H","","","0"),
("3486","BB_FILE_MASKS","","","0"),
("3487","BB_G1","","","0"),
("3488","BB_G2","","","0"),
("3489","BB_G3","","","0"),
("3490","BB_G4","","","0"),
("3491","BB_G5","","","0"),
("3492","BB_G6","","","0"),
("3493","BB_G7","","","0"),
("3494","BB_G8","","","0"),
("3495","BB_H1","","","0"),
("3496","BB_H2","","","0"),
("3497","BB_H3","","","0"),
("3498","BB_H4","","","0"),
("3499","BB_H5","","","0"),
("3500","BB_H6","","","0"),
("3501","BB_H7","","","0"),
("3502","BB_H8","","","0"),
("3503","BB_KING_ATTACKS","","","0"),
("3504","BB_KNIGHT_ATTACKS","","","0"),
("3505","BB_LIGHT_SQUARES","","","0"),
("3506","BB_PAWN_ATTACKS","","","0"),
("3507","BB_RANKS","","","0"),
("3508","BB_RANK_1","","","0"),
("3509","BB_RANK_2","","","0"),
("3510","BB_RANK_3","","","0"),
("3511","BB_RANK_4","","","0"),
("3512","BB_RANK_5","","","0"),
("3513","BB_RANK_6","","","0"),
("3514","BB_RANK_7","","","0"),
("3515","BB_RANK_8","","","0"),
("3516","BB_RANK_ATTACKS","","","0"),
("3517","BB_RANK_MASKS","","","0"),
("3518","BB_RAYS","","","0"),
("3519","BB_SQUARES","","","0"),
("3520","BB_VOID","","","0"),
("3521","BISHOP","","","0"),
("3522","BLACK","","","0"),
("3523","BaseBoard","","","0"),
("3524","Board","<p>&nbsp;Provides move generation, validation, parsing, attack generation,<br />\n&nbsp;game end detection, move counters and the capability to make and unmake<br />\n&nbsp;moves.<br />\n<br />\nThe board is initialized to the standard chess starting position,<br />\nunless otherwise specified in the optional *fen* argument.<br />\nIf *fen* is ``None`` an empty board is created.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/01_the_pieces_large.jpg\" style=\"height:189px; width:480px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/board_filds.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/board_filds3.jpg\" /></p>\n","<p>import&nbsp;chess</p>\n\n<p>board = chess.Board()<br />\nboard</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/board_filds2.jpg\" style=\"height:462px; width:473px\" /></p>\n\n<p>board = chess.Board(&quot;r1bqkb1r/pppp1Qpp/2n2n2/4p3/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4&quot;)<br />\nboard</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/chess1.jpg\" /></p>\n\n<p>import pprint<br />\npprint.pprint(board) # Board(&#39;rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1&#39;)</p>\n\n<p>print(board)<br />\nr n b q k b n r<br />\np p p p p p p p<br />\n. . . . . . . .<br />\n. . . . . . . .<br />\n. . . . . . . .<br />\n. . . . . . . .<br />\nP P P P P P P P<br />\nR N B Q K B N R</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_0.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_1.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_2.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_3.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_4.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_5.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_6.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/chess/game_7.jpg\" /></p>\n\n<p>&nbsp;</p>\n","0"),
("3525","C1","","","0"),
("3526","C2","","","0"),
("3527","C3","","","0"),
("3528","C4","","","0"),
("3529","C5","","","0"),
("3530","C6","","","0"),
("3531","C7","","","0"),
("3532","C8","","","0"),
("3533","COLORS","","","0"),
("3534","COLOR_NAMES","","","0"),
("3535","D1","","","0"),
("3536","D2","","","0"),
("3537","D3","","","0"),
("3538","D4","","","0"),
("3539","D5","","","0"),
("3540","D6","","","0"),
("3541","D7","","","0"),
("3542","D8","","","0"),
("3543","E1","","","0"),
("3544","E2","","","0");
INSERT INTO function VALUES
("3545","E3","","","0"),
("3546","E4","","","0"),
("3547","E5","","","0"),
("3548","E6","","","0"),
("3549","E7","","","0"),
("3550","E8","","","0"),
("3551","F1","","","0"),
("3552","F2","","","0"),
("3553","F3","","","0"),
("3554","F4","","","0"),
("3555","F5","","","0"),
("3556","F6","","","0"),
("3557","F7","","","0"),
("3558","F8","","","0"),
("3559","FEN_CASTLING_REGEX","","","0"),
("3560","FILE_NAMES","","","0"),
("3561","G1","","","0"),
("3562","G2","","","0"),
("3563","G3","","","0"),
("3564","G4","","","0"),
("3565","G5","","","0"),
("3566","G6","","","0"),
("3567","G7","","","0"),
("3568","G8","","","0"),
("3569","H1","","","0"),
("3570","H2","","","0"),
("3571","H3","","","0"),
("3572","H4","","","0"),
("3573","H5","","","0"),
("3574","H6","","","0"),
("3575","H7","","","0"),
("3576","H8","","","0"),
("3577","KING","","","0"),
("3578","KNIGHT","","","0"),
("3579","LegalMoveGenerator","","","0"),
("3580","Move","","","0"),
("3581","PAWN","","","0"),
("3582","PIECE_NAMES","","","0"),
("3583","PIECE_SYMBOLS","","","0"),
("3584","PIECE_TYPES","","","0"),
("3585","Piece","","","0"),
("3586","PseudoLegalMoveGenerator","","","0"),
("3587","QUEEN","","","0"),
("3588","RANK_NAMES","","","0"),
("3589","ROOK","","","0"),
("3590","SAN_REGEX","","","0"),
("3591","SQUARES","","","0"),
("3592","SQUARES_180","","","0"),
("3593","SQUARE_NAMES","","","0"),
("3594","STARTING_BOARD_FEN","","","0"),
("3595","STARTING_FEN","","","0"),
("3596","STATUS_BAD_CASTLING_RIGHTS","","","0"),
("3597","STATUS_EMPTY","","","0"),
("3598","STATUS_INVALID_EP_SQUARE","","","0"),
("3599","STATUS_NO_BLACK_KING","","","0"),
("3600","STATUS_NO_WHITE_KING","","","0"),
("3601","STATUS_OPPOSITE_CHECK","","","0"),
("3602","STATUS_PAWNS_ON_BACKRANK","","","0"),
("3603","STATUS_RACE_CHECK","","","0"),
("3604","STATUS_RACE_MATERIAL","","","0"),
("3605","STATUS_RACE_OVER","","","0"),
("3606","STATUS_TOO_MANY_BLACK_PAWNS","","","0"),
("3607","STATUS_TOO_MANY_BLACK_PIECES","","","0"),
("3608","STATUS_TOO_MANY_KINGS","","","0"),
("3609","STATUS_TOO_MANY_WHITE_PAWNS","","","0"),
("3610","STATUS_TOO_MANY_WHITE_PIECES","","","0"),
("3611","STATUS_VALID","","","0"),
("3612","SquareSet","","","0"),
("3613","UNICODE_PIECE_SYMBOLS","","","0"),
("3614","WHITE","","","0"),
("3615","_BoardState","","","0"),
("3616","__author__","","","0"),
("3617","__builtins__","","","0"),
("3618","__cached__","","","0"),
("3619","__doc__","","","0"),
("3620","__email__","","","0"),
("3621","__file__","","","0"),
("3622","__loader__","","","0"),
("3623","__name__","","","0"),
("3624","__package__","","","0"),
("3625","__path__","","","0"),
("3626","msgbox","","","0"),
("3627","__version__","","","0"),
("3628","_attack_table","","","0"),
("3629","_rays","","","0"),
("3630","_sliding_attacks","","","0"),
("3631","collections","","","0"),
("3632","copy","","","0"),
("3633","itertools","","","0"),
("3634","lsb","","","0"),
("3635","msb","","","0"),
("3636","popcount","","","0"),
("3637","re","","","0"),
("3638","scan_forward","","","0"),
("3639","scan_reversed","","","0"),
("3640","shift_2_down","","","0"),
("3641","shift_2_left","","","0"),
("3642","shift_2_right","","","0"),
("3643","shift_2_up","","","0"),
("3644","shift_down","","","0");
INSERT INTO function VALUES
("3645","shift_down_left","","","0"),
("3646","shift_down_right","","","0"),
("3647","shift_left","","","0"),
("3648","shift_right","","","0"),
("3649","shift_up","","","0"),
("3650","shift_up_left","","","0"),
("3651","shift_up_right","","","0"),
("3652","square","","","0"),
("3653","square_distance","","","0"),
("3654","square_file","","","0"),
("3655","square_mirror","","","0"),
("3656","square_name","","","0"),
("3657","square_rank","","","0"),
("3658","FAILSAFE","<p>As a safety feature, a fail-safe feature is enabled by default. When&nbsp;<code>pyautogui.FAILSAFE&nbsp;=&nbsp;True</code>PyAutoGUI functions will raise a&nbsp;<code>pyautogui.FailSafeException</code>&nbsp;if the mouse cursor is in the upper left corner of the screen. If you lose control and need to stop the current PyAutoGUI function, keep moving the mouse cursor up and to the left. To disable this feature, set&nbsp;<code>FAILSAFE</code>&nbsp;to&nbsp;<code>False</code></p>\n","<pre>\nimport pyautogui\npyautogui.FAILSAFE = False # disables the fail-safe</pre>\n","0"),
("3659","FailSafeException","","","0"),
("3660","KEYBOARD_KEYS","<p>List of keys</p>\n","<pre>\nimport pyautogui</pre>\n\n<p>pyautogui.KEYBOARD_KEYS<br />\n[&#39; &#39;, &#39; &#39;, &#39; &#39;, &#39; &#39;, &#39;!&#39;, &#39;&quot;&#39;, &#39;#&#39;, &#39;$&#39;, &#39;%&#39;, &#39;&amp;&#39;, &quot;&#39;&quot;, &#39;(&#39;, &#39;)&#39;, &#39;*&#39;, &#39;+&#39;, &#39;,&#39;, &#39;-&#39;, &#39;.&#39;, &#39;/&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&lt;&#39;, &#39;=&#39;, &#39;&gt;&#39;, &#39;?&#39;, &#39;@&#39;, &#39;[&#39;, &#39;&#39;, &#39;]&#39;, &#39;^&#39;, &#39;_&#39;, &#39;`&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;, &#39;{&#39;, &#39;|&#39;, &#39;}&#39;, &#39;~&#39;, &#39;accept&#39;, &#39;add&#39;, &#39;alt&#39;, &#39;altleft&#39;, &#39;altright&#39;, &#39;apps&#39;, &#39;backspace&#39;, &#39;browserback&#39;, &#39;browserfavorites&#39;, &#39;browserforward&#39;, &#39;browserhome&#39;, &#39;browserrefresh&#39;, &#39;browsersearch&#39;, &#39;browserstop&#39;, &#39;capslock&#39;, &#39;clear&#39;, &#39;convert&#39;, &#39;ctrl&#39;, &#39;ctrlleft&#39;, &#39;ctrlright&#39;, &#39;decimal&#39;, &#39;del&#39;, &#39;delete&#39;, &#39;divide&#39;, &#39;down&#39;, &#39;end&#39;, &#39;enter&#39;, &#39;esc&#39;, &#39;escape&#39;, &#39;execute&#39;, &#39;f1&#39;, &#39;f10&#39;, &#39;f11&#39;, &#39;f12&#39;, &#39;f13&#39;, &#39;f14&#39;, &#39;f15&#39;, &#39;f16&#39;, &#39;f17&#39;, &#39;f18&#39;, &#39;f19&#39;, &#39;f2&#39;, &#39;f20&#39;, &#39;f21&#39;, &#39;f22&#39;, &#39;f23&#39;, &#39;f24&#39;, &#39;f3&#39;, &#39;f4&#39;, &#39;f5&#39;, &#39;f6&#39;, &#39;f7&#39;, &#39;f8&#39;, &#39;f9&#39;, &#39;final&#39;, &#39;fn&#39;, &#39;hanguel&#39;, &#39;hangul&#39;, &#39;hanja&#39;, &#39;help&#39;, &#39;home&#39;, &#39;insert&#39;, &#39;junja&#39;, &#39;kana&#39;, &#39;kanji&#39;, &#39;launchapp1&#39;, &#39;launchapp2&#39;, &#39;launchmail&#39;, &#39;launchmediaselect&#39;, &#39;left&#39;, &#39;modechange&#39;, &#39;multiply&#39;, &#39;nexttrack&#39;, &#39;nonconvert&#39;, &#39;num0&#39;, &#39;num1&#39;, &#39;num2&#39;, &#39;num3&#39;, &#39;num4&#39;, &#39;num5&#39;, &#39;num6&#39;, &#39;num7&#39;, &#39;num8&#39;, &#39;num9&#39;, &#39;numlock&#39;, &#39;pagedown&#39;, &#39;pageup&#39;, &#39;pause&#39;, &#39;pgdn&#39;, &#39;pgup&#39;, &#39;playpause&#39;, &#39;prevtrack&#39;, &#39;print&#39;, &#39;printscreen&#39;, &#39;prntscrn&#39;, &#39;prtsc&#39;, &#39;prtscr&#39;, &#39;return&#39;, &#39;right&#39;, &#39;scrolllock&#39;, &#39;select&#39;, &#39;separator&#39;, &#39;shift&#39;, &#39;shiftleft&#39;, &#39;shiftright&#39;, &#39;sleep&#39;, &#39;space&#39;, &#39;stop&#39;, &#39;subtract&#39;, &#39;tab&#39;, &#39;up&#39;, &#39;volumedown&#39;, &#39;volumemute&#39;, &#39;volumeup&#39;, &#39;win&#39;, &#39;winleft&#39;, &#39;winright&#39;, &#39;yen&#39;, &#39;command&#39;, &#39;option&#39;, &#39;optionleft&#39;, &#39;optionright&#39;]</p>\n","0"),
("3661","KEY_NAMES","<p>List of keys</p>\n","<pre>\nimport pyautogui</pre>\n\n<p>pyautogui.KEY_NAMES<br />\n[&#39; &#39;, &#39; &#39;, &#39; &#39;, &#39; &#39;, &#39;!&#39;, &#39;&quot;&#39;, &#39;#&#39;, &#39;$&#39;, &#39;%&#39;, &#39;&amp;&#39;, &quot;&#39;&quot;, &#39;(&#39;, &#39;)&#39;, &#39;*&#39;, &#39;+&#39;, &#39;,&#39;, &#39;-&#39;, &#39;.&#39;, &#39;/&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&lt;&#39;, &#39;=&#39;, &#39;&gt;&#39;, &#39;?&#39;, &#39;@&#39;, &#39;[&#39;, &#39;&#39;, &#39;]&#39;, &#39;^&#39;, &#39;_&#39;, &#39;`&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;, &#39;{&#39;, &#39;|&#39;, &#39;}&#39;, &#39;~&#39;, &#39;accept&#39;, &#39;add&#39;, &#39;alt&#39;, &#39;altleft&#39;, &#39;altright&#39;, &#39;apps&#39;, &#39;backspace&#39;, &#39;browserback&#39;, &#39;browserfavorites&#39;, &#39;browserforward&#39;, &#39;browserhome&#39;, &#39;browserrefresh&#39;, &#39;browsersearch&#39;, &#39;browserstop&#39;, &#39;capslock&#39;, &#39;clear&#39;, &#39;convert&#39;, &#39;ctrl&#39;, &#39;ctrlleft&#39;, &#39;ctrlright&#39;, &#39;decimal&#39;, &#39;del&#39;, &#39;delete&#39;, &#39;divide&#39;, &#39;down&#39;, &#39;end&#39;, &#39;enter&#39;, &#39;esc&#39;, &#39;escape&#39;, &#39;execute&#39;, &#39;f1&#39;, &#39;f10&#39;, &#39;f11&#39;, &#39;f12&#39;, &#39;f13&#39;, &#39;f14&#39;, &#39;f15&#39;, &#39;f16&#39;, &#39;f17&#39;, &#39;f18&#39;, &#39;f19&#39;, &#39;f2&#39;, &#39;f20&#39;, &#39;f21&#39;, &#39;f22&#39;, &#39;f23&#39;, &#39;f24&#39;, &#39;f3&#39;, &#39;f4&#39;, &#39;f5&#39;, &#39;f6&#39;, &#39;f7&#39;, &#39;f8&#39;, &#39;f9&#39;, &#39;final&#39;, &#39;fn&#39;, &#39;hanguel&#39;, &#39;hangul&#39;, &#39;hanja&#39;, &#39;help&#39;, &#39;home&#39;, &#39;insert&#39;, &#39;junja&#39;, &#39;kana&#39;, &#39;kanji&#39;, &#39;launchapp1&#39;, &#39;launchapp2&#39;, &#39;launchmail&#39;, &#39;launchmediaselect&#39;, &#39;left&#39;, &#39;modechange&#39;, &#39;multiply&#39;, &#39;nexttrack&#39;, &#39;nonconvert&#39;, &#39;num0&#39;, &#39;num1&#39;, &#39;num2&#39;, &#39;num3&#39;, &#39;num4&#39;, &#39;num5&#39;, &#39;num6&#39;, &#39;num7&#39;, &#39;num8&#39;, &#39;num9&#39;, &#39;numlock&#39;, &#39;pagedown&#39;, &#39;pageup&#39;, &#39;pause&#39;, &#39;pgdn&#39;, &#39;pgup&#39;, &#39;playpause&#39;, &#39;prevtrack&#39;, &#39;print&#39;, &#39;printscreen&#39;, &#39;prntscrn&#39;, &#39;prtsc&#39;, &#39;prtscr&#39;, &#39;return&#39;, &#39;right&#39;, &#39;scrolllock&#39;, &#39;select&#39;, &#39;separator&#39;, &#39;shift&#39;, &#39;shiftleft&#39;, &#39;shiftright&#39;, &#39;sleep&#39;, &#39;space&#39;, &#39;stop&#39;, &#39;subtract&#39;, &#39;tab&#39;, &#39;up&#39;, &#39;volumedown&#39;, &#39;volumemute&#39;, &#39;volumeup&#39;, &#39;win&#39;, &#39;winleft&#39;, &#39;winright&#39;, &#39;yen&#39;, &#39;command&#39;, &#39;option&#39;, &#39;optionleft&#39;, &#39;optionright&#39;]</p>\n","0"),
("3662","MINIMUM_DURATION","<p>Minimum duration</p>\n","<pre>\nimport pyautogui</pre>\n\n<p>pyautogui.MINIMUM_DURATION # 0.1</p>\n","0"),
("3663","MINIMUM_SLEEP","<p>Minimal sleep</p>\n","<pre>\nimport pyautogui</pre>\n\n<p>pyautogui.MINIMUM_SLEEP # 0.05</p>\n","0"),
("3664","PAUSE","<p>You can add delays after all of PyAutoGUI&rsquo;s functions by setting the&nbsp;<code>pyautogui.PAUSE</code>&nbsp;variable to a float or integer value of the number of seconds to pause. By default, the pause is set to 0.1 seconds. This can be helpful when interacting with other applications so that PyAutoGUI doesn&rsquo;t move too fast for them</p>\n","<pre>\nimport pyautogui\npyautogui.PAUSE = 2.5\npyautogui.moveTo(100, 100)\npyautogui.click()   # there will be a two and a half second pause after moving and another after the click</pre>\n","0"),
("3665","Window","","","0"),
("3666","__builtins__","","","0"),
("3667","__cached__","","","0"),
("3668","__doc__","","","0"),
("3669","__file__","","","0"),
("3670","__loader__","","","0"),
("3671","__name__","","","0"),
("3672","__package__","","","0"),
("3673","__path__","","","0"),
("3674","msgbox","","","0"),
("3675","__version__","","","0"),
("3676","_autoPause","","","0"),
("3677","_failSafeCheck","","","0"),
("3678","_mouseMoveDrag","","","0"),
("3679","_pyautogui_win","","","0"),
("3680","_unpackXY","","","0"),
("3681","_window_win","","","0"),
("3682","absolute_import","","","0"),
("3683","alert","<p>Displays a simple message box with text and a single OK button. Returns the text of the button clicked on</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.alert(text=&#39;Example text&#39;, title=&#39;Jabadu&#39;, button=&#39;OK&#39;) # &#39;OK&#39; lub nic gdy naciÅ›nie siÄ™ kÅ¼yÅ¼yk</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/alert1.jpg\" style=\"height:151px; width:402px\" /><br />\npyautogui.alert(text=&#39;&#39;, title=&#39;&#39;, button=&#39;ENTER&#39;) # &#39;ENTER&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/alert2.jpg\" style=\"height:151px; width:402px\" /></p>\n","0"),
("3684","center","<p>Get the X and Y coordinates at the center of this region</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import pyautogui</p>\n\n<p>button7location = pyautogui.locateOnScreen(&#39;calc7key.png&#39;)<br />\nprint(button7location) # (1616, 738, 97, 62)<br />\nbutton7x, button7y = pyautogui.center(button7location)<br />\nprint(button7x, button7y) # 1664 769</p>\n","0"),
("3685","click","<p>Click left mouse button</p>\n","<pre>\nimport pyautogui</pre>\n\n<pre>\npyautogui.click()</pre>\n","0"),
("3686","collections","","","0"),
("3687","confirm","<p>Displays a message box with OK and Cancel buttons. Number and text of buttons can be customized. Returns the text of the button clicked on</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.confirm(text=&#39;&#39;, title=&#39;&#39;, buttons=[&#39;OK&#39;, &#39;Cancel&#39;]) # &#39;Cancel&#39; lub &#39;OK&#39; lub nic</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/confirm.jpg\" /></p>\n","0"),
("3688","displayMousePosition","<p>Display mouse position</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.displayMousePosition()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/displayMousePosition.jpg\" style=\"height:457px; width:800px\" /></p>\n","0"),
("3689","division","","","0"),
("3690","doubleClick","<p>Click two time left mouse button</p>\n","<pre>\nimport&nbsp;pyautogui\npyautogui.doubleClick()</pre>\n","0"),
("3691","dragRel","<p>PrzesuniÄ™cie myszki w poÅ¼Ä…danym kierunku wzglÄ™dem obecengo poÅ‚oÅ¼enia.</p>\n","<pre>\nimport&nbsp;pyautogui\npyautogui.dragRel(10, 10, duration=5) # dodatnie wartoÅ›ci x i y kierujÄ… myszkÄ™ na d&oacute;Å‚</pre>\n","0"),
("3692","dragTo","<p>If&nbsp;<code>duration</code>&nbsp;is 0 or unspecified, movement is immediate. Note: dragging on Mac can&rsquo;t be immediate.</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.dragTo(10, 10, duration=5) &nbsp;# drag mouse to XY</p>\n","0"),
("3693","easeInBack","","","0"),
("3694","easeInBounce","","","0"),
("3695","easeInCirc","","","0"),
("3696","easeInCubic","","","0"),
("3697","easeInElastic","","","0"),
("3698","easeInExpo","","","0"),
("3699","easeInOutBack","","","0"),
("3700","easeInOutBounce","","","0"),
("3701","easeInOutCirc","","","0"),
("3702","easeInOutCubic","","","0"),
("3703","easeInOutElastic","","","0"),
("3704","easeInOutExpo","","","0"),
("3705","easeInOutQuad","","","0"),
("3706","easeInOutQuart","","","0"),
("3707","easeInOutQuint","","","0"),
("3708","easeInOutSine","","","0"),
("3709","easeInQuad","","","0"),
("3710","easeInQuart","","","0"),
("3711","easeInQuint","","","0"),
("3712","easeInSine","","","0"),
("3713","easeOutBack","","","0"),
("3714","easeOutBounce","","","0"),
("3715","easeOutCirc","","","0"),
("3716","easeOutCubic","","","0"),
("3717","easeOutElastic","","","0"),
("3718","easeOutExpo","","","0"),
("3719","easeOutQuad","","","0"),
("3720","easeOutQuart","","","0"),
("3721","easeOutQuint","","","0"),
("3722","easeOutSine","","","0"),
("3723","getPointOnLine","","","0"),
("3724","getWindow","<p>Returns a &ldquo;Win&rdquo; object</p>\n\n<ul>\n	<li>win.move(x, y)</li>\n	<li>win.resize(width, height)</li>\n	<li>win.maximize()</li>\n	<li>win.minimize()</li>\n	<li>win.restore()</li>\n	<li>win.close()</li>\n	<li>win.position() # returns (x, y) of top-left corner</li>\n	<li>win.moveRel(x=0, y=0) # moves relative to the x, y of top-left corner of the window</li>\n	<li>win.clickRel(x=0, y=0, clicks=1, interval=0.0, button=&rsquo;left&rsquo;) # click relative to the x, y of top-left corner of the window</li>\n</ul>\n","<p>import&nbsp;pyautogui</p>\n\n<p>import pprint</p>\n\n<p>pprint.pprint(pyautogui.getWindows())<br />\n{&#39;&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x016106C0&gt;,<br />\n&nbsp;&#39;C:\\Users\\User\\Desktop\\_Python\\HotKey\\HotKey.au3 - Notepad++&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x01610850&gt;,<br />\n&nbsp;&#39;Kalkulator&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x01610800&gt;,<br />\n&nbsp;&#39;Program Manager&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x016108A0&gt;,<br />\n&nbsp;&#39;Python 3.6 (32-bit)&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x01610620&gt;,<br />\n&nbsp;&#39;Python 3.6.0 Shell&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x016105D0&gt;,<br />\n&nbsp;&#39;Roadmap &mdash; PyAutoGUI 1.0.0 documentation - Google Chrome&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x01610760&gt;,<br />\n&nbsp;&#39;_Skrypty&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x016107B0&gt;,<br />\n&nbsp;&#39;skrypt1.py - C:/Users/User/Documents/_Skrypty/skrypt1.py (3.6.0)&#39;: &lt;ctypes.wintypes.LP_c_long object at 0x01610710&gt;}</p>\n\n<p>a = pyautogui.getWindow(&#39;Kalkulator&#39;)</p>\n\n<p>a.move(100, 100)</p>\n\n<p>a.resize(250, 250)</p>\n\n<p>a.maximize()<br />\na.minimize()<br />\na.close() # close to samo co minimalize<br />\na.restore()</p>\n\n<p>&nbsp;</p>\n","0"),
("3725","getWindows","<p>Returns a dict of window titles mapped to window IDs</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>import pprint</p>\n\n<p>pprint.pprint(pyautogui.getWindows())<br />\n{&#39;&#39;: ,<br />\n&nbsp;&#39;C:UsersUserDesktop\\_PythonHotKeyHotKey.au3 - Notepad++&#39;: ,<br />\n&nbsp;&#39;Kalkulator&#39;: ,<br />\n&nbsp;&#39;Program Manager&#39;: ,<br />\n&nbsp;&#39;Python 3.6 (32-bit)&#39;: ,<br />\n&nbsp;&#39;Python 3.6.0 Shell&#39;: ,<br />\n&nbsp;&#39;Roadmap &mdash; PyAutoGUI 1.0.0 documentation - Google Chrome&#39;: ,<br />\n&nbsp;&#39;_Skrypty&#39;: ,<br />\n&nbsp;&#39;skrypt1.py - C:/Users/User/Documents/_Skrypty/skrypt1.py (3.6.0)&#39;: }</p>\n\n<p>a = pyautogui.getWindow(&#39;Kalkulator&#39;)</p>\n\n<p>a.move(100, 100)</p>\n\n<p>a.resize(250, 250)</p>\n\n<p>a.maximize()<br />\na.minimize()<br />\na.close() # close to samo co minimalize<br />\na.restore()</p>\n","0"),
("3726","grab","","","0"),
("3727","hotkey","<p>To make pressing hotkeys or keyboard shortcuts convenient, the&nbsp;<code>hotkey()</code>&nbsp;can be passed several key strings which will be pressed down in order, and then released in reverse order.</p>\n\n<pre>\n&gt;&gt;&gt; pyautogui.hotkey(&#39;ctrl&#39;, &#39;shift&#39;, &#39;esc&#39;)\nis equivalent to this code:</pre>\n\n<pre>\n&gt;&gt;&gt; pyautogui.keyDown(&#39;ctrl&#39;)\n&gt;&gt;&gt; pyautogui.keyDown(&#39;shift&#39;)\n&gt;&gt;&gt; pyautogui.keyDown(&#39;esc&#39;)\n&gt;&gt;&gt; pyautogui.keyUp(&#39;esc&#39;)\n&gt;&gt;&gt; pyautogui.keyUp(&#39;shift&#39;)\n&gt;&gt;&gt; pyautogui.keyUp(&#39;ctrl&#39;)</pre>\n","<p>import pyautogui</p>\n\n<p>pyautogui.hotkey(&#39;ctrl&#39;, &#39;c&#39;)</p>\n\n<p># is equivalent to this code:</p>\n\n<pre>\npyautogui.keyDown(&#39;ctrl&#39;)\npyautogui.keyDown(&#39;c&#39;)\npyautogui.keyUp(&#39;ctrl&#39;)\npyautogui.keyUp(&#39;c&#39;)\n</pre>\n","0"),
("3728","hscroll","","","0"),
("3729","isShiftCharacter","","","0"),
("3730","isValidKey","","","0"),
("3731","keyDown","<pre>\nHold down specyfied key</pre>\n","<p>import pyautogui</p>\n\n<p>pyautogui.keyDown(&#39;a&#39;)<br />\npyautogui.keyUp(&#39;a&#39;)</p>\n","0"),
("3732","keyUp","<p>import pyautogui</p>\n\n<p>pyautogui.keyDown(&#39;a&#39;)<br />\npyautogui.keyUp(&#39;a&#39;)</p>\n","<p>Release holded key</p>\n","0"),
("3733","linear","","","0"),
("3734","locate","","","0"),
("3735","locateAll","","","0"),
("3736","locateAllOnScreen","","","0"),
("3737","locateCenterOnScreen","<p>Returns (x, y) coordinates of the center of the first found instance of the&nbsp;<code>image</code>&nbsp;on the screen. Returns None if not found on the screen</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import pyautogui<br />\nbutton7x, button7y = pyautogui.locateCenterOnScreen(&#39;calc7key.png&#39;)<br />\nprint(button7x, button7y) # 1664 769<br />\npyautogui.click(button7x, button7y) &nbsp;# clicks the center of where the 7 button was found</p>\n","0"),
("3738","locateOnScreen","<p>You can call the&nbsp;<code>locateOnScreen(&#39;calc7key.png&#39;)</code>&nbsp;function to get the screen coordinates. The return value is a 4-integer tuple: (left, top, width, height). This tuple can be passed to&nbsp;<code>center()</code>&nbsp;to get the X and Y coordinates at the center of this region. If the image can&rsquo;t be found on the screen,&nbsp;<code>locateOnScreen()</code>&nbsp;returns&nbsp;<code>None</code>.</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import pyautogui</p>\n\n<p>button7location = pyautogui.locateOnScreen(&#39;calc7key.png&#39;)<br />\nprint(button7location) # (1616, 738, 97, 62)<br />\nbutton7x, button7y = pyautogui.center(button7location)<br />\nprint(button7x, button7y) # 1664 769<br />\npyautogui.click(button7x, button7y) &nbsp;# clicks the center of where the 7 button was found</p>\n","0"),
("3739","middleClick","<p>Click middle button key</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.middleClick()</p>\n","0"),
("3740","mouseDown","<p>Hold mouse down</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.mouseDown()</p>\n","0"),
("3741","mouseUp","<p>Release mouse</p>\n","","0"),
("3742","moveRel","<p>Move mouse to specyfic location based on curent location</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.moveRel(None, 100) #&nbsp;move mouse 100 pixels down (x, y)</p>\n","0"),
("3743","moveTo","<p>Move to specyfic location</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.moveTo(100, 150)</p>\n","0"),
("3744","onScreen","<pre>\nTrue if x &amp; y are within the screen.</pre>\n","<p>import pyautogui<br />\npyautogui.onScreen(10, 10) # True<br />\npyautogui.onScreen(2000, 2000) # False</p>\n","0");
INSERT INTO function VALUES
("3745","password","<p>Displays a message box with text input, and OK &amp; Cancel buttons. Typed characters appear as&nbsp;<code>*</code>. Returns the text entered, or None if Cancel was clicked</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.password(text=&#39;&#39;, title=&#39;&#39;, default=&#39;&#39;, mask=&#39;*&#39;) # &#39;password&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/password.jpg\" /></p>\n","0"),
("3746","pixel","<p>Get pixel of specyfic location</p>\n","<p>import pyautogui<br />\nprint(pyautogui.pixel(100, 200)) # (190, 233, 255)</p>\n","0"),
("3747","pixelMatchesColor","<p>If you just need to verify that a single pixel matches a given pixel, call the&nbsp;<code>pixelMatchesColor()</code>function, passing it the X coordinate, Y coordinate, and RGB tuple of the color it represents</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.pixelMatchesColor(100, 200, (130, 135, 144)) # False</p>\n\n<pre>\npyautogui.pixelMatchesColor(100, 200, (140, 125, 134), tolerance=10) # False</pre>\n","0"),
("3748","platformModule","","","0"),
("3749","position","<p>Current mouse position</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.position() #&nbsp;(966, 614)</p>\n\n<p>currentMouseX, currentMouseY = pyautogui.position()<br />\ncurrentMouseX # 966<br />\ncurrentMouseY # 614</p>\n","0"),
("3750","press","","","0"),
("3751","print_function","","","0"),
("3752","prompt","<p>Displays a message box with text input, and OK &amp; Cancel buttons. Returns the text entered, or None if Cancel was clicked.</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.prompt(text=&#39;&#39;, title=&#39;&#39; , default=&#39;&#39;) # &#39;Text&#39; lub &#39;&#39; lub nic gdy naciÅ›nie siÄ™ krzyÅ¼yk lub concel</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/prompt.jpg\" /></p>\n","0"),
("3753","pymsgbox","","","0"),
("3754","pyscreeze","","","0"),
("3755","pytweening","","","0"),
("3756","rightClick","<p>Click right mouse button at specyfic location</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.rightClick()</p>\n\n<p>pyautogui.rightClick(10,10)</p>\n","0"),
("3757","screenshot","<p>Calling&nbsp;<code>screenshot()</code>&nbsp;will return an Image object (see the Pillow or PIL module documentation for details). Passing a string of a filename will save the screenshot to a file as well as return it as an Image object</p>\n\n<p>On a 1920 x 1080 screen, the&nbsp;<code>screenshot()</code>&nbsp;function takes roughly 100 milliseconds - it&rsquo;s not fast but it&rsquo;s not slow.</p>\n\n<p>There is also an optional&nbsp;<code>region</code>&nbsp;keyword argument, if you do not want a screenshot of the entire screen. You can pass a four-integer tuple of the left, top, width, and height of the region to capture:</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import pyautogui<br />\nim1 = pyautogui.screenshot()<br />\nim2 = pyautogui.screenshot(&#39;my_screenshot.png&#39;)</p>\n\n<pre>\nim = pyautogui.screenshot(region=(0,0, 300, 400))</pre>\n","0"),
("3758","scroll","<p>scroll(clicks, x=None, y=None, pause=None, _pause=True)<br />\n&nbsp; &nbsp; Performs a scroll of the mouse scroll wheel.</p>\n\n<p>&nbsp; &nbsp; Whether this is a vertical or horizontal scroll depends on the underlying<br />\n&nbsp; &nbsp; operating system.</p>\n\n<p>&nbsp; &nbsp; The x and y parameters detail where the mouse event happens. If None, the<br />\n&nbsp; &nbsp; current mouse position is used. If a float value, it is rounded down. If<br />\n&nbsp; &nbsp; outside the boundaries of the screen, the event happens at edge of the<br />\n&nbsp; &nbsp; screen.</p>\n","<p>import pyautogui</p>\n\n<p>pyautogui.scroll(-50000000) # scroll down</p>\n\n<p>pyautogui.scroll(50000000) # scroll up</p>\n","0"),
("3759","size","<p>Get screen size</p>\n","<p>import pyautogui<br />\nscreenWidth, screenHeight = pyautogui.size()<br />\nscreenWidth # 1920<br />\nscreenHeight # 1080</p>\n","0"),
("3760","sys","","","0"),
("3761","time","","","0"),
("3762","tripleClick","<p>Potr&oacute;jne naciÅ›niÄ™cie lewego klawisza myszki</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.tripleClick()&nbsp;</p>\n","0"),
("3763","typewrite","<p>Symulate typing some text on keyboard</p>\n","<p>import&nbsp;pyautogui</p>\n\n<p>pyautogui.typewrite(&#39;Hello world!&#39;, interval=0.25) &nbsp;# type with quarter-second pause in between each key</p>\n","0"),
("3764","vscroll","","","0"),
("3765","AppEngineServer","","","0"),
("3766","AppStack","","","0"),
("3767","AutoServer","","","0"),
("3768","BaseRequest","","","0"),
("3769","BaseResponse","","","0"),
("3770","BaseTemplate","","","0"),
("3771","BjoernServer","","","0"),
("3772","Bottle","","","0"),
("3773","BottleException","","","0"),
("3774","BytesIO","","","0"),
("3775","CGIServer","","","0"),
("3776","CheetahTemplate","","","0"),
("3777","CherryPyServer","","","0"),
("3778","ConfigDict","","","0"),
("3779","ConfigParser","","","0"),
("3780","DEBUG","","","0"),
("3781","DictMixin","","","0"),
("3782","DictProperty","","","0"),
("3783","DieselServer","","","0"),
("3784","ERROR_PAGE_TEMPLATE","","","0"),
("3785","EventletServer","","","0"),
("3786","FapwsServer","","","0"),
("3787","FileCheckerThread","","","0"),
("3788","FileUpload","","","0"),
("3789","FlupFCGIServer","","","0"),
("3790","FormsDict","","","0"),
("3791","GeventServer","","","0"),
("3792","GeventSocketIOServer","","","0"),
("3793","GunicornServer","","","0"),
("3794","HTTPError","","","0"),
("3795","HTTPResponse","","","0"),
("3796","HTTP_CODES","","","0"),
("3797","HeaderDict","","","0"),
("3798","HeaderProperty","","","0"),
("3799","JSONPlugin","","","0"),
("3800","Jinja2Template","","","0"),
("3801","LocalRequest","","","0"),
("3802","LocalResponse","","","0"),
("3803","MakoTemplate","","","0"),
("3804","MeinheldServer","","","0"),
("3805","MultiDict","","","0"),
("3806","NORUN","","","0"),
("3807","PasteServer","","","0"),
("3808","PluginError","","","0"),
("3809","Request","","<p>from bottle import run, route, request</p>\n\n<p>@route(&#39;/querytest&#39;)<br />\ndef querytest():<br />\n&nbsp; &nbsp; param1 = request.query.param1<br />\n&nbsp; &nbsp; param2 = request.query.param2 &nbsp; &nbsp;<br />\n&nbsp; &nbsp; return &#39;The value of param1 is: &#39; + param1 + &#39; and the value of param2 is &#39; + param2</p>\n\n<p># http://127.0.0.1:8080/querytest?param2=10&amp;param1=20<br />\n# result --&gt; The value of param1 is: 20 and the value of param2 is 10<br />\nrun()</p>\n","0"),
("3810","ResourceManager","","","0"),
("3811","Response","","","0"),
("3812","RocketServer","","","0"),
("3813","Route","","<p>from bottle import run, route</p>\n\n<p>@route(&#39;/login&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;Hello World!&#39;</p>\n\n<p>run()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/route/route.jpg\" style=\"height:268px; width:400px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/route/route2.jpg\" /></p>\n\n<p>from bottle import run, route</p>\n\n<p>@route(&#39;/login&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;On the login page&#39;</p>\n\n<p>@route(&#39;/register&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;On the register page&#39;</p>\n\n<p>@route(&#39;/article/&#39;)<br />\ndef article(id):<br />\n&nbsp; &nbsp; return &#39;You are viewing article &#39; + id</p>\n\n<p>@route(&#39;/page//&#39;)<br />\ndef article(id, name):<br />\n&nbsp; &nbsp; return &#39;You are viewing article &#39; + id + &#39; with a name of &#39; + name</p>\n\n<p>run()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/route/route3.jpg\" /></p>\n\n<p>from bottle import run, route</p>\n\n<p>@route(&#39;/login&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;On the login page&#39;</p>\n\n<p>@route(&#39;/register&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;On the register page&#39;</p>\n\n<p>@route(&#39;/article/&#39;)<br />\ndef article(id):<br />\n&nbsp; &nbsp; return &#39;You are viewing article &#39; + id</p>\n\n<p>@route(&#39;/page//&#39;)<br />\ndef article(id, name):<br />\n&nbsp; &nbsp; return &#39;You are viewing article &#39; + id + &#39; with a name of &#39; + name</p>\n\n<p>@route(&#39;/posted&#39;, method=&quot;POST&quot;)<br />\ndef posted():<br />\n&nbsp; &nbsp; return &#39;Posted&#39;</p>\n\n<p>@route(&#39;/geted&#39;, method=&quot;GET&quot;) # GET method is default<br />\ndef posted():<br />\n&nbsp; &nbsp; return &#39;Geted&#39;</p>\n\n<p>run()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/route/route4.jpg\" /></p>\n","0"),
("3814","RouteBuildError","","","0"),
("3815","RouteError","","","0"),
("3816","RouteReset","","","0"),
("3817","RouteSyntaxError","","","0"),
("3818","Router","","","0"),
("3819","RouterUnknownModeError","","","0"),
("3820","ServerAdapter","","","0"),
("3821","SimpleCookie","","","0"),
("3822","SimpleTemplate","","","0"),
("3823","StplParser","","","0"),
("3824","StplSyntaxError","","","0"),
("3825","TEMPLATES","","","0"),
("3826","TEMPLATE_PATH","","","0"),
("3827","TemplateError","","","0"),
("3828","TemplatePlugin","","","0"),
("3829","TemporaryFile","","","0"),
("3830","TornadoServer","","","0"),
("3831","TwistedServer","","","0"),
("3832","UrlSplitResult","","","0"),
("3833","WSGIFileWrapper","","","0"),
("3834","WSGIHeaderDict","","","0"),
("3835","WSGIRefServer","","","0"),
("3836","WaitressServer","","","0"),
("3837","_HTTP_STATUS_LINES","","","0"),
("3838","_ImportRedirect","","","0"),
("3839","__author__","","","0"),
("3840","__builtins__","","","0"),
("3841","__cached__","","","0"),
("3842","__doc__","","","0"),
("3843","__file__","","","0"),
("3844","__license__","","","0");
INSERT INTO function VALUES
("3845","__loader__","","","0"),
("3846","__name__","","","0"),
("3847","__package__","","","0"),
("3848","msgbox","","","0"),
("3849","__version__","","","0"),
("3850","_closeiter","","","0"),
("3851","_debug","","","0"),
("3852","_e","","","0"),
("3853","_file_iter_range","","","0"),
("3854","_hkey","","","0"),
("3855","_hval","","","0"),
("3856","_lscmp","","","0"),
("3857","_parse_qsl","","","0"),
("3858","_raise","","","0"),
("3859","_re_flatten","","","0"),
("3860","_stderr","","","0"),
("3861","_stdout","","","0"),
("3862","abort","","","0"),
("3863","app","","","0"),
("3864","auth_basic","","","0"),
("3865","base64","","","0"),
("3866","basestring","","","0"),
("3867","cached_property","","","0"),
("3868","callable","","","0"),
("3869","cgi","","","0"),
("3870","cheetah_template","","","0"),
("3871","cheetah_view","","","0"),
("3872","cookie_decode","","","0"),
("3873","cookie_encode","","","0"),
("3874","cookie_is_encoded","","","0"),
("3875","datedate","","","0"),
("3876","datetime","","","0"),
("3877","debug","","","0"),
("3878","default_app","","","0"),
("3879","delete","","","0"),
("3880","depr","","","0"),
("3881","email","","","0"),
("3882","error","","<p>from bottle import run, route, error</p>\n\n<p>@error(404)<br />\ndef error404(error):&nbsp;<br />\n&nbsp; &nbsp; return &#39;You have experienced a 404&#39;</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():&nbsp;<br />\n&nbsp; &nbsp; return &#39;index&#39;</p>\n\n<p><br />\nrun()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/error404.jpg\" style=\"height:302px; width:725px\" /></p>\n\n<p>from bottle import run, route, error</p>\n\n<p>@error(404)<br />\ndef error404(error):&nbsp;<br />\n&nbsp; &nbsp; return &#39;You have experienced a 404&#39;</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():&nbsp;<br />\n&nbsp; &nbsp; return &#39;index&#39;</p>\n\n<p><br />\nrun()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/missing.jpg\" /></p>\n\n<p>from bottle import run, route, error</p>\n\n<p>@error(404)<br />\ndef error404(error):&nbsp;<br />\n&nbsp; &nbsp; return &#39;You have experienced a 404&#39;</p>\n\n<p>@error(500)<br />\ndef error500(error):&nbsp;<br />\n&nbsp; &nbsp; return &#39;You have experienced a 500&#39;</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():&nbsp;<br />\n&nbsp; &nbsp; return &#39;index&#39;</p>\n\n<p>@route(&#39;/zero&#39;)<br />\ndef zero():&nbsp;<br />\n&nbsp; &nbsp; return 1/0</p>\n\n<p>run()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/error500.jpg\" /></p>\n","0"),
("3883","ext","","","0"),
("3884","format_exc","","","0"),
("3885","functools","","","0"),
("3886","get","","<p>from bottle import run, get, post, request</p>\n\n<p>animals = [{&#39;name&#39; : &#39;Ellie&#39;, &#39;type&#39; : &#39;Elephant&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;name&#39; : &#39;Python&#39;, &#39;type&#39; : &#39;Snake&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;name&#39; : &#39;Zed&#39;, &#39;type&#39; : &#39;Zebra&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;]</p>\n\n<p>@get(&#39;/index&#39;)<br />\ndef getAll():&nbsp;<br />\n&nbsp; &nbsp; return &#39;&#39;&#39;</p>\n\n<p><br />\n&nbsp;<br />\n<br />\n&nbsp;<br />\n&nbsp;</p>\n\n<p><br />\n&#39;&#39;&#39;</p>\n\n<p>&nbsp;</p>\n\n<p><br />\n@get(&#39;/animal&#39;)<br />\ndef getAll():&nbsp;<br />\n&nbsp; &nbsp; return {&#39;animals&#39; : animals} # {&quot;animals&quot;: [{&quot;name&quot;: &quot;Ellie&quot;, &quot;type&quot;: &quot;Elephant&quot;}, {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}, {&quot;name&quot;: &quot;Zed&quot;, &quot;type&quot;: &quot;Zebra&quot;}]}</p>\n\n<p>@get(&#39;/animal/&#39;)<br />\ndef getOne(name):<br />\n&nbsp; &nbsp; the_animal = [animal for animal in animals if animal[&#39;name&#39;] == name]<br />\n&nbsp; &nbsp; return {&#39;animals&#39; : the_animal[0]} # {&quot;animals&quot;: {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}}</p>\n\n<p>@post(&#39;/animal&#39;)<br />\ndef addOne():<br />\n&nbsp; &nbsp; new_animal = {&#39;name&#39; : request.forms.get(&#39;param1&#39;), &#39;type&#39; : request.forms.get(&#39;param2&#39;)}<br />\n&nbsp; &nbsp; animals.append(new_animal)<br />\n&nbsp; &nbsp; return {&#39;annimals&#39; : animals}<br />\nrun(reLoader=True,debug=True) # {&quot;annimals&quot;: [{&quot;name&quot;: &quot;Ellie&quot;, &quot;type&quot;: &quot;Elephant&quot;}, {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}, {&quot;name&quot;: &quot;Zed&quot;, &quot;type&quot;: &quot;Zebra&quot;}, {&quot;name&quot;: &quot;Max&quot;, &quot;type&quot;: &quot;Dog&quot;}]}<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/methods.jpg\" style=\"height:398px; width:900px\" /></p>\n","0"),
("3887","getargspec","","","0"),
("3888","hmac","","","0"),
("3889","hook","","","0"),
("3890","html_escape","","","0"),
("3891","html_quote","","","0"),
("3892","http_date","","","0"),
("3893","httplib","","","0"),
("3894","imap","","","0"),
("3895","imp","","","0"),
("3896","install","","","0"),
("3897","itertools","","","0"),
("3898","jinja2_template","","","0"),
("3899","jinja2_view","","","0"),
("3900","json_dumps","","","0"),
("3901","json_lds","","","0"),
("3902","json_loads","","","0"),
("3903","lazy_attribute","","","0"),
("3904","load","","","0"),
("3905","load_app","","","0"),
("3906","local","","","0"),
("3907","local_property","","","0"),
("3908","make_default_app_wrapper","","","0"),
("3909","makelist","","","0"),
("3910","mako_template","","","0"),
("3911","mako_view","","","0"),
("3912","mimetypes","","","0"),
("3913","mount","","","0"),
("3914","normalize","","","0"),
("3915","os","","","0"),
("3916","parse_auth","","","0"),
("3917","parse_date","","","0"),
("3918","parse_range_header","","","0"),
("3919","path_shift","","","0"),
("3920","pickle","","","0"),
("3921","post","","<p>from bottle import run, get, post, request</p>\n\n<p>animals = [{&#39;name&#39; : &#39;Ellie&#39;, &#39;type&#39; : &#39;Elephant&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;name&#39; : &#39;Python&#39;, &#39;type&#39; : &#39;Snake&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;name&#39; : &#39;Zed&#39;, &#39;type&#39; : &#39;Zebra&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;]</p>\n\n<p>@get(&#39;/index&#39;)<br />\ndef getAll():&nbsp;<br />\n&nbsp; &nbsp; return &#39;&#39;&#39;</p>\n\n<p><br />\n&nbsp;<br />\n<br />\n&nbsp;<br />\n&nbsp;</p>\n\n<p><br />\n&#39;&#39;&#39;</p>\n\n<p>&nbsp;</p>\n\n<p><br />\n@get(&#39;/animal&#39;)<br />\ndef getAll():&nbsp;<br />\n&nbsp; &nbsp; return {&#39;animals&#39; : animals} # {&quot;animals&quot;: [{&quot;name&quot;: &quot;Ellie&quot;, &quot;type&quot;: &quot;Elephant&quot;}, {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}, {&quot;name&quot;: &quot;Zed&quot;, &quot;type&quot;: &quot;Zebra&quot;}]}</p>\n\n<p>@get(&#39;/animal/&#39;)<br />\ndef getOne(name):<br />\n&nbsp; &nbsp; the_animal = [animal for animal in animals if animal[&#39;name&#39;] == name]<br />\n&nbsp; &nbsp; return {&#39;animals&#39; : the_animal[0]} # {&quot;animals&quot;: {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}}</p>\n\n<p>@post(&#39;/animal&#39;)<br />\ndef addOne():<br />\n&nbsp; &nbsp; new_animal = {&#39;name&#39; : request.forms.get(&#39;param1&#39;), &#39;type&#39; : request.forms.get(&#39;param2&#39;)}<br />\n&nbsp; &nbsp; animals.append(new_animal)<br />\n&nbsp; &nbsp; return {&#39;annimals&#39; : animals}<br />\nrun(reLoader=True,debug=True) # {&quot;annimals&quot;: [{&quot;name&quot;: &quot;Ellie&quot;, &quot;type&quot;: &quot;Elephant&quot;}, {&quot;name&quot;: &quot;Python&quot;, &quot;type&quot;: &quot;Snake&quot;}, {&quot;name&quot;: &quot;Zed&quot;, &quot;type&quot;: &quot;Zebra&quot;}, {&quot;name&quot;: &quot;Max&quot;, &quot;type&quot;: &quot;Dog&quot;}]}</p>\n","0"),
("3922","print_exc","","","0"),
("3923","put","","","0"),
("3924","py","","","0"),
("3925","py25","","","0"),
("3926","py31","","","0"),
("3927","py3k","","","0"),
("3928","re","","","0"),
("3929","redirect","","","0"),
("3930","request","","","0"),
("3931","response","","","0"),
("3932","route","","","0"),
("3933","run","","<p>from bottle import run, route</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;Hello World!&#39;</p>\n\n<p>&nbsp;</p>\n\n<p>run()<br />\n&nbsp;</p>\n","0"),
("3934","server_names","","","0"),
("3935","static_file","","<p>from bottle import run, route, template, static_file</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():&nbsp;<br />\n&nbsp; &nbsp; return template(&#39;test&#39;)</p>\n\n<p>@route(&#39;/static/&lt;filename&gt;&#39;)<br />\ndef server_static(filename):&nbsp;<br />\n&nbsp; &nbsp; return static_file(filename, root=&#39;./myFiles&#39;)</p>\n\n<p>run(reLoader=True,debug=True)<br />\n&nbsp;</p>\n\n<p><strong>test.html</strong></p>\n\n<p>&lt;html&gt;</p>\n\n<p>&lt;head&gt;<br />\n&lt;/head&gt;</p>\n\n<p>&lt;body&gt;<br />\n&lt;img src=&quot;/static/Ward.jpg&quot; /&gt;<br />\n&lt;/body&gt;</p>\n\n<p>&lt;/html&gt;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/static_file.jpg\" style=\"height:208px; width:685px\" /></p>\n","0"),
("3936","subprocess","","","0"),
("3937","sys","","","0"),
("3938","tempfile","","","0"),
("3939","template","","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>from bottle import run, route, template</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return template(&#39;test&#39;)</p>\n\n<p><br />\nrun()<br />\n<strong>test.html</strong></p>\n\n<p>Hello World</p>\n\n<p><strong>test.html</strong></p>\n\n<p>% if True:<br />\n&nbsp;&nbsp; &nbsp;If Block<br />\n% else:<br />\n&nbsp;&nbsp; &nbsp;Else Block<br />\n% end</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/template.jpg\" /></p>\n\n<p><strong>test.html</strong></p>\n\n<p>% if True:<br />\n&nbsp;&nbsp; &nbsp;If Block<br />\n% else:<br />\n&nbsp;&nbsp; &nbsp;Else Block<br />\n% end</p>\n\n<p>% for i in range(1,11):</p>\n\n<p>This is loopindex {{ i }}<br />\n% end</p>\n\n<p><strong>test.html</strong></p>\n\n<p>% if True:<br />\n&nbsp;&nbsp; &nbsp;If Block<br />\n% else:<br />\n&nbsp;&nbsp; &nbsp;Else Block<br />\n% end</p>\n\n<p>% for i in range(1,11):<br />\n&nbsp;&nbsp; &nbsp;</p>\n\n<p>This is loopindex {{ i }}</p>\n\n<p><br />\n% end</p>\n\n<p>Hello {{ name }}</p>\n\n<p><strong>script.py</strong></p>\n\n<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>from bottle import run, route, template</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return template(&#39;test&#39;, name=&#39;Anthony&#39;)</p>\n\n<p><br />\nrun()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/bottle/template2.jpg\" /></p>\n","0"),
("3940","thread","","","0"),
("3941","threading","","","0"),
("3942","time","","","0"),
("3943","timedelta","","","0"),
("3944","tob","","","0");
INSERT INTO function VALUES
("3945","tonat","","","0"),
("3946","touni","","","0"),
("3947","unicode","","","0"),
("3948","uninstall","","","0"),
("3949","update_wrapper","","","0"),
("3950","url","","","0"),
("3951","urlencode","","","0"),
("3952","urljoin","","","0"),
("3953","urlquote","","","0"),
("3954","urlunquote","","","0"),
("3955","view","","","0"),
("3956","warnings","","","0"),
("3957","with_statement","","","0"),
("3958","yieldroutes","","","0"),
("3959","EgStore","<p>A common need is to ask the user for some setting, and then to &ldquo;persist it&rdquo;, or store it on disk, so that the next time the user uses your application, you can remember his previous setting.</p>\n\n<p>In order to make the process of storing and restoring user settings, EasyGui provides a class called EgStore. In order to remember some settings, your application must define a class (let&rsquo;s call it Settings, although you can call it anything you want) that inherits from EgStore.</p>\n","<p>import easygui , os</p>\n\n<p>class Settings(easygui.EgStore):</p>\n\n<p>&nbsp; &nbsp; def __init__(self, filename): &nbsp;</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.userId = &quot;&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self.targetServer = &quot;&quot;</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; self.filename = filename &nbsp;# this is required<br />\n&nbsp; &nbsp; &nbsp; &nbsp; self.restore() &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# restore values from the storage file if possible</p>\n\n<p>settingsFilename = &#39;settings.txt&#39;<br />\nsettings = Settings(settingsFilename)</p>\n\n<p>user &nbsp; &nbsp;= &quot;obama_barak&quot;<br />\nserver &nbsp;= &quot;whitehouse1&quot;</p>\n\n<p>settings.userId = user<br />\nsettings.targetServer = server<br />\nsettings.store() &nbsp;&nbsp;</p>\n\n<p>user &nbsp; &nbsp;= &quot;obama_barak&quot;<br />\nsettings.userId = user<br />\nsettings.store()</p>\n\n<p>print(settings)<br />\n&#39;&#39;&#39;<br />\nfilename &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : &#39;settings.txt&#39;<br />\nlast_time_restored : &#39;2017-09-18T18:44:01.261754&#39;<br />\nlast_time_stored &nbsp; : &#39;2017-09-18T18:44:01.262755&#39;<br />\ntargetServer &nbsp; &nbsp; &nbsp; : &#39;whitehouse1&#39;<br />\nuserId &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : &#39;obama_barak&#39;<br />\n&#39;&#39;&#39;</p>\n","0"),
("3960","__all__","","","0"),
("3961","__builtins__","","","0"),
("3962","__cached__","","","0"),
("3963","__doc__","","","0"),
("3964","__file__","","","0"),
("3965","__loader__","","","0"),
("3966","__name__","","","0"),
("3967","__package__","","","0"),
("3968","__path__","","","0"),
("3970","abouteasygui","<p>Shows the easygui revision history</p>\n","<p>import easygui</p>\n\n<p>easygui.abouteasygui()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/abouteasygui.jpg\" /></p>\n","0"),
("3971","boolbox","<p>&nbsp; &nbsp; Display a boolean msgbox.</p>\n\n<p>&nbsp; &nbsp; The returned value is calculated this way::</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if the first choice is chosen, or if the dialog is cancelled:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; returns True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; returns False</p>\n","<p>import easygui</p>\n\n<p>a = easygui.boolbox(msg=&#39;Shall I continue?&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title=&#39; &#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; choices=(&#39;[Y]es&#39;, &#39;[N]o&#39;),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; image=None,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default_choice=&#39;Yes&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cancel_choice=&#39;No&#39;)<br />\nprint(a) # True, False lub None</p>\n","0"),
("3972","boxes","","","0"),
("3973","buttonbox","<p>To specify your own set of buttons in a buttonbox, use the buttonbox() function.</p>\n\n<p>The buttonbox can be used to display a set of buttons of your choice. When the user clicks on a button, buttonbox() returns the text of the choice. If the user cancels or closes the buttonbox, the default choice (the first choice) is returned</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import easygui&nbsp;</p>\n\n<p>image = &quot;image.jpg&quot;<br />\nmsg = &quot;Do you like this picture?&quot;<br />\nchoices = [&quot;Yes&quot;,&quot;No&quot;,&quot;No opinion&quot;]<br />\nreply = easygui.buttonbox(msg, image=image, choices=choices)<br />\nprint(reply) # Yes, No, No opinion lub image.jpg gdy siÄ™ kliknie na obrazek</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/buttonbox.jpg\" /></p>\n","0"),
("3974","ccbox","<p>&nbsp; &nbsp; Display a msgbox with choices of Continue and Cancel.</p>\n\n<p>&nbsp; &nbsp; The returned value is calculated this way::</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if the first choice (&quot;Continue&quot;) is chosen,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or if the dialog is cancelled:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return True<br />\n&nbsp; &nbsp; &nbsp; &nbsp; else:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return False</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg = &quot;Do you want to continue?&quot;<br />\ntitle = &quot;Please Confirm&quot;</p>\n\n<p>if easygui.ccbox(msg, title):<br />\n&nbsp; &nbsp; print(&#39;user chose Continue&#39;)<br />\nelse:<br />\n&nbsp; &nbsp; print(&#39;user chose Cancel&#39;)<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/ccbox.jpg\" /></p>\n","0"),
("3975","choicebox","<p>Buttonboxes are good for offering the user a small selection of short choices. But if there are many choices, or the text of the choices is long, then a better strategy is to present them as a list</p>\n\n<p>choicebox provides a way for a user to select from a list of choices. The choices are specified in a sequence (a tuple or a list). The choices will be given a case-insensitive sort before they are presented</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;What is your favorite flavor?&quot;<br />\ntitle = &quot;Ice Cream Survey&quot;<br />\nchoices = [&quot;Vanilla&quot;, &quot;Chocolate&quot;, &quot;Strawberry&quot;, &quot;Rocky Road&quot;]<br />\nchoice = easygui.choicebox(msg, title, choices)<br />\nprint(choice) # Strawberry, None gdy nacisnie sie cancel</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/choicebox.jpg\" style=\"height:340px; width:737px\" /></p>\n","0"),
("3976","codebox","<p>The codebox() function displays text in a monospaced font and does not wrap</p>\n","<p>import easygui&nbsp;</p>\n\n<p>text = &#39;&#39;&#39;<br />\n# Import modules</p>\n\n<p>import pygame, cv2, time, os, subprocess, autoit<br />\nfrom pyscreenshot import *<br />\nimport tkinter as tk</p>\n\n<p># Initializing tkinter<br />\nroot = tk.Tk()</p>\n\n<p># Monitor resolution that is used by user<br />\nscreen_resolution_w = root.winfo_screenwidth()<br />\nscreen_resolution_h = root.winfo_screenheight()</p>\n\n<p># Make sure that file directory is &bdquo;current working directory&rdquo;<br />\ndir_path = os.path.dirname(os.path.realpath(__file__))<br />\nos.chdir(dir_path)</p>\n\n<p># Selecting first webcam camera<br />\ncam = cv2.VideoCapture(0)</p>\n\n<p># Capture view from the camera<br />\ndef CaptureWebcam(): &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if __name__ == &quot;__main__&quot;:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; # Repeat opertation of capturing view twice to make sure that camera works correctly<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for i in range (1):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Captures image<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s, im = cam.read()&nbsp;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Writes image webcam.jpg to disk<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.imwrite(&quot;webcam.jpg&quot;,im)<br />\n&nbsp; &nbsp; time.sleep(5) &nbsp; &nbsp;</p>\n\n<p># Capture screen view<br />\ndef CaptureScreenshot(): &nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; autoit.run(&quot;nircmd.exe cmdwait 2000 savescreenshot screenshot.jpg&quot;)<br />\n&nbsp; &nbsp; time.sleep(5)</p>\n\n<p># Merge captured Webcam view on top of screen view &nbsp;&nbsp;<br />\ndef CombineImage(x,y,number):<br />\n&nbsp; &nbsp; # Open image screenshot and webcam<br />\n&nbsp; &nbsp; im = Image.open(&quot;screenshot.jpg&quot;)<br />\n&nbsp; &nbsp; im2 = Image.open(&quot;webcam.jpg&quot;)</p>\n\n<p>&nbsp; &nbsp; # Combine images<br />\n&nbsp; &nbsp; im.paste(im2, (x,y))</p>\n\n<p>&nbsp; &nbsp; # Create path captureImage<br />\n&nbsp; &nbsp; pathSave = os.path.join(&quot;captureImage&quot;, str(number)+&#39;.jpg&#39;)</p>\n\n<p>&nbsp; &nbsp; # Save combined image to captureImage folder<br />\n&nbsp; &nbsp; im.save(pathSave)<br />\n&nbsp; &nbsp; number = number + 1<br />\n&nbsp; &nbsp; print(number)</p>\n\n<p># Capture Webcam and Desktop viev and use them as a background in this software<br />\nCaptureScreenshot()<br />\nCaptureWebcam()<br />\n&#39;&#39;&#39;<br />\neasygui.codebox(text)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/codebox.jpg\" /></p>\n","0"),
("3977","diropenbox","<p>Diropenbox returns the name of a directory</p>\n","<p>import easygui&nbsp;</p>\n\n<p>path = easygui.diropenbox()<br />\nprint(path) #&nbsp;C:UsersUserDownloads\\__Nowy\\_USA</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/diropenbox.jpg\" /></p>\n","0"),
("3978","eg_version","<p>Version of&nbsp;easygui</p>\n","<p>import&nbsp;easygui</p>\n\n<p>easygui.eg_version # &#39;0.98.0-RELEASED&#39;</p>\n","0"),
("3979","egdemo","<p>Run the EasyGui demo</p>\n","<p>import&nbsp;easygui</p>\n\n<p>easygui.egdemo()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/egdemo.jpg\" /></p>\n","0"),
("3980","egversion","<p>Version of&nbsp;easygui</p>\n","<p>import&nbsp;easygui</p>\n\n<p>easygui.egversion<br />\n&#39;0.98.0-RELEASED&#39;</p>\n","0"),
("3981","enterbox","<p>enterbox is a simple way of getting a string from the user</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;What cauntrys do you want to visit?&quot;<br />\ntitle = &quot;Country list&quot;<br />\nvalue = &quot;Default value&quot;<br />\nchoice = easygui.enterbox(msg, title, value)<br />\nprint(choice) # Default value lub wartoÅ›Ä‡ wprowadzona przez uÅ¼ytkownika lub None<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/enterbox.jpg\" style=\"height:229px; width:496px\" /></p>\n","0"),
("3982","exceptionbox","<p>Sometimes exceptions are raised... even in EasyGui applications. Depending on how you run your application, the stack trace might be thrown away, or written to stdout while your application crashes.</p>\n\n<p>EasyGui provides a better way of handling exceptions via exceptionbox. Exceptionbox displays the stack trace in a codebox and may allow you to continue processing</p>\n","<p>import easygui</p>\n\n<p>try:<br />\n&nbsp; &nbsp; a = 2 / 0<br />\nexcept:<br />\n&nbsp; &nbsp; easygui.exceptionbox()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/exceptionbox.jpg\" /></p>\n","0"),
("3983","fileopenbox","<p>fileopenbox returns the name of a file</p>\n","<p>import easygui&nbsp;</p>\n\n<p>path = easygui.fileopenbox()<br />\nprint(path) # C:UsersUserDocuments\\_Skryptyimage.jpg<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/fileopenbox.jpg\" /></p>\n","0"),
("3984","filesavebox","<p>filesavebox returns the name of a file</p>\n","<p>import easygui&nbsp;</p>\n\n<p>path = easygui.filesavebox()<br />\nprint(path) #&nbsp;C:UsersUserDocuments\\_Skryptyexample.py</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/filesavebox.jpg\" /></p>\n","0"),
("3985","Config","","","0"),
("3986","Event","","","0"),
("3987","FOLDER_DIALOG","","","0"),
("3988","OPEN_DIALOG","","","0"),
("3989","SAVE_DIALOG","","","0"),
("3990","__builtins__","","","0"),
("3991","__cached__","","","0"),
("3992","__doc__","","","0"),
("3993","__file__","","","0"),
("3994","__loader__","","","0"),
("3995","__name__","","","0"),
("3996","__package__","","","0"),
("3997","__path__","","","0"),
("3998","msgbox","","","0"),
("3999","_initialize_imports","","","0"),
("4000","_initialized","","","0"),
("4001","_make_unicode","","","0"),
("4002","_transform_url","","","0"),
("4003","_webview_ready","","","0"),
("4004","config","","","0"),
("4005","create_file_dialog","","","0"),
("4006","create_window","<p>Create a new WebView window. Calling this function will block application execution, so you have to execute your program logic in a separate thread</p>\n","<p>import webview<br />\nwebview.create_window(&quot;It works, Jim!&quot;, &quot;http://www.flowrl.com&quot;)</p>\n\n<p>&nbsp;</p>\n\n<p>import webview<br />\nwebview.create_window(&quot;It works, Jim!&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url=&#39;http://www.flowrl.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width=800,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height=600,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; resizable=True,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fullscreen=False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; min_size=(200, 100),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; strings={},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; confirm_quit=False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background_color=&#39;#FFF&#39;)<br />\n&nbsp;</p>\n\n<p>from bottle import run, route</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;&lt;h1&gt;Hello World!&lt;/h1&gt;&#39;</p>\n\n<p>if __name__ == &#39;__main__&#39;:<br />\n&nbsp; &nbsp; run()</p>\n\n<p><strong>console</strong></p>\n\n<p>import webview<br />\nwebview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/webview/create_window3.jpg\" style=\"height:645px; width:808px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/webview/create_window.jpg\" /></p>\n\n<p><br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/webview/create_window2.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/webview/mac_example.png\" style=\"height:644px; width:800px\" /></p>\n","0"),
("4007","destroy_window","<p>Destroy the webview window</p>\n","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; time.sleep(100)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.destroy_window()<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(&#39;destroyd&#39;)<br />\n&#39;&#39;&#39;<br />\n&lt;module &#39;re&#39; from &#39;C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\re.py&#39;&gt;<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("4008","get_current_url","<p>Return a current URL</p>\n","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; while 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; time.sleep(30)<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(webview.get_current_url()) # http://127.0.0.1:8080/<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("4009","load_html","","","0"),
("4010","load_url","","","0"),
("4011","localization","","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(webview.localization)<br />\n&#39;&#39;&#39;<br />\n{&#39;global.quitConfirmation&#39;: &#39;Do you really want to quit?&#39;, &#39;global.quit&#39;: &#39;Quit&#39;, &#39;global.cancel&#39;: &#39;Cancel&#39;, &#39;global.saveFile&#39;: &#39;Save file&#39;, &#39;cocoa.menu.about&#39;: &#39;About&#39;, &#39;cocoa.menu.services&#39;: &#39;Services&#39;, &#39;cocoa.menu.view&#39;: &#39;View&#39;, &#39;cocoa.menu.hide&#39;: &#39;Hide&#39;, &#39;cocoa.menu.hideOthers&#39;: &#39;Hide Others&#39;, &#39;cocoa.menu.showAll&#39;: &#39;Show All&#39;, &#39;cocoa.menu.quit&#39;: &#39;Quit&#39;, &#39;cocoa.menu.fullscreen&#39;: &#39;Enter Fullscreen&#39;, &#39;windows.fileFilter.allFiles&#39;: &#39;All files&#39;, &#39;windows.fileFilter.otherFiles&#39;: &#39;Other file types&#39;, &#39;linux.openFile&#39;: &#39;Open file&#39;, &#39;linux.openFiles&#39;: &#39;Open files&#39;, &#39;linux.openFolder&#39;: &#39;Open folder&#39;}</p>\n\n<p>&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()<br />\n&nbsp;</p>\n","0"),
("4012","logger","","","0"),
("4013","logging","","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(webview.logging)<br />\n&#39;&#39;&#39;<br />\n&lt;module &#39;logging&#39; from &#39;C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\logging\\__init__.py&#39;&gt;<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("4014","os","","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(webview.os.getcwd())<br />\n&#39;&#39;&#39;<br />\nC:UsersUserDocuments\\_Skrypty<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("4015","platform","","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(webview.platform)<br />\n&#39;&#39;&#39;<br />\n&lt;module &#39;platform&#39; from &#39;C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\platform.py&#39;&gt;<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()</p>\n","0"),
("4016","re","","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>def worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; print(webview.re)<br />\n&#39;&#39;&#39;<br />\n<br />\n&#39;&#39;&#39;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(2):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()<br />\n&nbsp;</p>\n","0"),
("4017","sys","","","0"),
("4018","toggle_fullscreen","<p>Toggle a fullscreen mode on the active monitor</p>\n","<p>import threading<br />\nimport webview<br />\nimport time</p>\n\n<p>from bottle import run, route</p>\n\n<p>@route(&#39;/&#39;)<br />\ndef index():<br />\n&nbsp; &nbsp; return &#39;&lt;h1&gt;Hello World!&lt;/h1&gt;&#39;</p>\n\n<p><br />\ndef worker(num):<br />\n&nbsp; &nbsp; if num == 0:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; run() &nbsp; &nbsp;<br />\n&nbsp; &nbsp; if num == 1:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.create_window(&quot;It works, Jim!&quot;, &quot;http://127.0.0.1:8080/&quot;)<br />\n&nbsp; &nbsp; if num == 2:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; webview.toggle_fullscreen()<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\nthreads = []<br />\nfor i in range(3):<br />\n&nbsp; &nbsp; t = threading.Thread(target=worker, args=(i,))<br />\n&nbsp; &nbsp; threads.append(t)<br />\n&nbsp; &nbsp; t.start()<br />\n&nbsp; &nbsp; time.sleep(60)</p>\n","0"),
("4019","getpixel","<p>Get pixel of specyfic location</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import pyautogui<br />\nim = pyautogui.screenshot()</p>\n\n<p>print(im.getpixel((100, 200))) # (190, 233, 255)</p>\n","0"),
("4020","FFmpeg","<p>Compiles FFmpeg command line from passed arguments (executable path, options, inputs and<br />\noutputs). ``inputs`` and ``outputs`` are dictionares containing inputs/outputs as keys and<br />\ntheir respective options as values. One dictionary value (set of options) must be either a<br />\nsingle space separated string, or a list or strings without spaces (i.e. each part of the<br />\noption is a separate item of the list, the result of calling ``split()`` on the options<br />\nstring). If the value is a list, it cannot be mixed, i.e. cannot contain items with spaces.<br />\nAn exception are complex FFmpeg command lines that contain quotes: the quoted part must be<br />\none string, even if it contains spaces (see *Examples* for more info).<br />\nFor more info about FFmpeg command line format see `here<br />\n&lt;https://ffmpeg.org/ffmpeg.html#Synopsis&gt;`_.</p>\n","<p>import ffmpy</p>\n\n<p>ff = ffmpy.FFmpeg(inputs={&#39;movie.mp4&#39;: None},outputs={&#39;output.ogg&#39;: None})<br />\nff.run()</p>\n\n<p>&#39;&#39;&#39;<br />\nffmpeg version 2.8.4 Copyright (c) 2000-2015 the FFmpeg developers<br />\n&nbsp; built with gcc 5.2.0 (GCC)<br />\n&nbsp; configuration: --enable-gpl --enable-version3 --disable-w32threads --enable-avisynth --enable-bzlib --enable-fontconfig --enable-frei0r --enable-gnutls --enable-iconv --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libdcadec --enable-libfreetype --enable-libgme --enable-libgsm --enable-libilbc --enable-libmodplug --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopus --enable-librtmp --enable-libschroedinger --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvo-aacenc --enable-libvo-amrwbenc --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxavs --enable-libxvid --enable-lzma --enable-decklink --enable-zlib<br />\n&nbsp; libavutil &nbsp; &nbsp; &nbsp;54. 31.100 / 54. 31.100<br />\n&nbsp; libavcodec &nbsp; &nbsp; 56. 60.100 / 56. 60.100<br />\n&nbsp; libavformat &nbsp; &nbsp;56. 40.101 / 56. 40.101<br />\n&nbsp; libavdevice &nbsp; &nbsp;56. &nbsp;4.100 / 56. &nbsp;4.100<br />\n&nbsp; libavfilter &nbsp; &nbsp; 5. 40.101 / &nbsp;5. 40.101<br />\n&nbsp; libswscale &nbsp; &nbsp; &nbsp;3. &nbsp;1.101 / &nbsp;3. &nbsp;1.101<br />\n&nbsp; libswresample &nbsp; 1. &nbsp;2.101 / &nbsp;1. &nbsp;2.101<br />\n&nbsp; libpostproc &nbsp; &nbsp;53. &nbsp;3.100 / 53. &nbsp;3.100<br />\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from &#39;movie.mp4&#39;:<br />\n&nbsp; Metadata:<br />\n&nbsp; &nbsp; major_brand &nbsp; &nbsp; : isom<br />\n&nbsp; &nbsp; minor_version &nbsp; : 512<br />\n&nbsp; &nbsp; compatible_brands: isomiso2avc1mp41<br />\n&nbsp; &nbsp; encoder &nbsp; &nbsp; &nbsp; &nbsp; : Lavf54.63.104<br />\n&nbsp; Duration: 00:00:22.11, start: 0.000000, bitrate: 1239 kb/s<br />\n&nbsp; &nbsp; Stream #0:0(und): Video: h264 (Main) (avc1 / 0x31637661), yuv420p, 854x480 [SAR 1280:1281 DAR 16:9], 1113 kb/s, 25 fps, 25 tbr, 90k tbn, 50 tbc (default)<br />\n&nbsp; &nbsp; Metadata:<br />\n&nbsp; &nbsp; &nbsp; handler_name &nbsp; &nbsp;: VideoHandler<br />\n&nbsp; &nbsp; Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 125 kb/s (default)<br />\n&nbsp; &nbsp; Metadata:<br />\n&nbsp; &nbsp; &nbsp; handler_name &nbsp; &nbsp;: SoundHandler<br />\nOutput #0, ogg, to &#39;output.ogg&#39;:<br />\n&nbsp; Metadata:<br />\n&nbsp; &nbsp; major_brand &nbsp; &nbsp; : isom<br />\n&nbsp; &nbsp; minor_version &nbsp; : 512<br />\n&nbsp; &nbsp; compatible_brands: isomiso2avc1mp41<br />\n&nbsp; &nbsp; encoder &nbsp; &nbsp; &nbsp; &nbsp; : Lavf56.40.101<br />\n&nbsp; &nbsp; Stream #0:0(und): Video: theora (libtheora), yuv420p, 854x480 [SAR 1280:1281 DAR 16:9], q=2-31, 200 kb/s, 25 fps, 25 tbn, 25 tbc (default)<br />\n&nbsp; &nbsp; Metadata:<br />\n&nbsp; &nbsp; &nbsp; handler_name &nbsp; &nbsp;: VideoHandler<br />\n&nbsp; &nbsp; &nbsp; encoder &nbsp; &nbsp; &nbsp; &nbsp; : Lavc56.60.100 libtheora<br />\n&nbsp; &nbsp; &nbsp; major_brand &nbsp; &nbsp; : isom<br />\n&nbsp; &nbsp; &nbsp; minor_version &nbsp; : 512<br />\n&nbsp; &nbsp; &nbsp; compatible_brands: isomiso2avc1mp41<br />\n&nbsp; &nbsp; Stream #0:1(und): Audio: vorbis (libvorbis), 44100 Hz, stereo, fltp (default)<br />\n&nbsp; &nbsp; Metadata:<br />\n&nbsp; &nbsp; &nbsp; handler_name &nbsp; &nbsp;: SoundHandler<br />\n&nbsp; &nbsp; &nbsp; encoder &nbsp; &nbsp; &nbsp; &nbsp; : Lavc56.60.100 libvorbis<br />\n&nbsp; &nbsp; &nbsp; major_brand &nbsp; &nbsp; : isom<br />\n&nbsp; &nbsp; &nbsp; minor_version &nbsp; : 512<br />\n&nbsp; &nbsp; &nbsp; compatible_brands: isomiso2avc1mp41<br />\nStream mapping:<br />\n&nbsp; Stream #0:0 -&gt; #0:0 (h264 (native) -&gt; theora (libtheora))<br />\n&nbsp; Stream #0:1 -&gt; #0:1 (aac (native) -&gt; vorbis (libvorbis))<br />\nPress [q] to stop, [?] for help<br />\nframe= &nbsp;550 fps= 25 q=-0.0 Lsize= &nbsp; &nbsp; 867kB time=00:00:22.08 bitrate= 321.7kbits/s<br />\nvideo:575kB audio:276kB subtitle:0kB other streams:0kB global headers:7kB muxing overhead: 1.895568%<br />\n(None, None)</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/FFmpeg/FFmpeg.jpg\" style=\"height:231px; width:800px\" /></p>\n","0"),
("4021","indexbox","<p>indexbox displays a message, a title, and a set of buttons. Returns the index of the user&rsquo;s choice. For example, if you invoked index box with three choices (A, B, C), indexbox would return 0 if the user picked A, 1 if he picked B, and 2 if he picked C.</p>\n","<p>import easygui</p>\n\n<p>a = easygui.indexbox(msg=&#39;Chose option?&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title=&#39;Title&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; choices=(&#39;A&#39;, &#39;B&#39;, &#39;C&#39;))<br />\nprint(a) # 1</p>\n\n<p>&#39;&#39;&#39;<br />\nA -&gt; 0<br />\nB -&gt; 1<br />\nC -&gt; 2<br />\n&#39;&#39;&#39;</p>\n","0"),
("4022","integerbox","<p>integerbox is a simple way of getting an integer from the user</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;What cauntrys do you want to visit?&quot;<br />\ntitle = &quot;Country list&quot;<br />\nvalue = 11<br />\nchoice = easygui.integerbox(msg, title, value)<br />\nprint(choice) # 11</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/integerbox.jpg\" /></p>\n\n<p># Po podaniu wartoÅ›ci wiÄ™kszej niÅ¼ 99 pojawi siÄ™ takie menu i po wicÅ›niÄ™ciu ok wrazcamy do poprzedniego menu w kt&oacute;rym wpisujemy liczbÄ™</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/integerbox2.jpg\" style=\"height:278px; width:870px\" /></p>\n\n<p>&nbsp;</p>\n","0"),
("4023","msgbox","<p>msgbox displays a message and offers an OK button. You can send whatever message you want, along with whatever title you want. You can even over-ride the default text of &ldquo;OK&rdquo; on the button if you wish. Here is the signature of the msgbox function:</p>\n\n<pre>\ndef msgbox(msg=&quot;(Your message goes here)&quot;, title=&quot;&quot;, ok_button=&quot;OK&quot;):</pre>\n","<p>import easygui&nbsp;<br />\neasygui.msgbox(&quot;You chose result&quot;)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/msgbox.jpg\" /></p>\n","0"),
("4024","multchoicebox","<p>The multchoicebox() function provides a way for a user to select from a list of choices. The interface looks just like the choicebox, but the user may select zero, one, or multiple choices.</p>\n\n<p>The choices are specified in a sequence (a tuple or a list). The choices will be given a case-insensitive sort before they are presented.</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;What cauntrys do you want to visit?&quot;<br />\ntitle = &quot;Country list&quot;<br />\nchoices = [&quot;UK&quot;, &quot;Poland&quot;, &quot;France&quot;, &quot;Czech Republic&quot;]<br />\nchoice = easygui.multchoicebox(msg, title, choices)<br />\nprint(choice) # NaprzykÅ‚ad [&#39;UK&#39;, &#39;Czech Republic&#39;] lub [&#39;France&#39;] lub None</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/multchoicebox.jpg\" style=\"height:368px; width:752px\" /></p>\n","0"),
("4025","multenterbox","<p>multenterbox is a simple way of showing multiple enterboxes on a single screen</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import easygui&nbsp;</p>\n\n<p>msg = &quot;Enter your personal information&quot;<br />\ntitle = &quot;Credit Card Application&quot;</p>\n\n<p>fieldNames = [&quot;Name&quot;,&quot;Street Address&quot;,&quot;City&quot;,&quot;State&quot;,&quot;ZipCode&quot;]<br />\nfieldValues = [] &nbsp;# we start with blanks for the values<br />\nfieldValues = easygui.multenterbox(msg,title, fieldNames)<br />\nprint(fieldValues) # [&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;] lub None</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/multenterbox.jpg\" /></p>\n","0"),
("4026","multpasswordbox","<p>multpasswordbox has the same interface as multenterbox, but when it is displayed, the last of the fields is assumed to be a password, and is masked with asterisks</p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>import easygui&nbsp;</p>\n\n<p>msg = &quot;Enter your personal information&quot;<br />\ntitle = &quot;Credit Card Application&quot;</p>\n\n<p>fieldNames = [&quot;Name&quot;,&quot;Street Address&quot;,&quot;City&quot;,&quot;State&quot;,&quot;ZipCode&quot;]<br />\nfieldValues = [] &nbsp;# we start with blanks for the values<br />\nfieldValues = easygui.multpasswordbox(msg,title, fieldNames)<br />\nprint(fieldValues) # [&#39;example 1&#39;, &#39;example 2&#39;, &#39;example 3&#39;, &#39;example 4&#39;, &#39;example 5&#39;] lub None<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/multpasswordbox.jpg\" /></p>\n","0"),
("4027","passwordbox","<p>A passwordbox box is like an enterbox, but used for entering passwords. The text is masked as it is typed in.</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;Password?&quot;<br />\ntitle = &quot;Enter Password&quot;<br />\nvalue = &quot;Default value&quot;<br />\nchoice = easygui.passwordbox(msg, title, value)<br />\nprint(choice) # Default value lub wartoÅ›Ä‡ wprowadzona przez uÅ¼ytkownika lub None<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/passwordbox.jpg\" /></p>\n","0"),
("4028","read_or_create_settings","","","0"),
("4029","textbox","<p>The textbox() function displays text in a proportional font. The text will word-wrap.</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg =&quot;Write some text&quot;<br />\ntitle = &quot;Text editor&quot;<br />\nvalue = &quot;Default value&quot;<br />\nchoice = easygui.textbox(msg, title, value)<br />\nprint(choice) # Default value lub wartoÅ›Ä‡ wprowadzona przez uÅ¼ytkownika lub None<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyautogui/textbox.jpg\" /></p>\n","0"),
("4030","ynbox","<p>ynbox offers a choice of Yes and No, and returns either True of False</p>\n","<p>import easygui&nbsp;</p>\n\n<p>msg = &quot;Do you want to continue?&quot;<br />\ntitle = &quot;Please Confirm&quot;</p>\n\n<p>if easygui.ynbox(msg, title):<br />\n&nbsp; &nbsp; print(&#39;user chose Yes&#39;)<br />\nelse:<br />\n&nbsp; &nbsp; print(&#39;user chose No&#39;)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/easygui/ynbox.jpg\" /></p>\n","0"),
("4031","schedule","<pre>\nAn in-process scheduler for periodic jobs that uses the builder pattern\nfor configuration. Schedule lets you run Python functions (or any other\ncallable) periodically at pre-determined intervals using a simple,\nhuman-friendly syntax.\n</pre>\n","<p>import schedule<br />\nimport time</p>\n\n<p>def job():<br />\n&nbsp; &nbsp; print(&quot;I&#39;m working...&quot;)</p>\n\n<p>a = schedule.every(1).minutes.do(job)<br />\nschedule.cancel_job(a)<br />\nschedule.every().hour.do(job)<br />\nschedule.every().day.at(&quot;10:30&quot;).do(job)<br />\nschedule.every().monday.do(job)<br />\nschedule.every().wednesday.at(&quot;13:15&quot;).do(job)<br />\nwhile True:<br />\n&nbsp; &nbsp; schedule.run_pending()<br />\n&nbsp; &nbsp; time.sleep(1)</p>\n","0"),
("4032","c2f","<pre>\nCelsius to Fahrenheit</pre>\n","<pre>\nimport pytemperature\npytemperature.c2f(37.78) # 100.0</pre>\n","0"),
("4033","c2k","<pre>\nCelsius to Kelvin</pre>\n","<p>import pytemperature</p>\n\n<pre>\npytemperature.c2k(40) # 313.15</pre>\n","0"),
("4034","c2r","<pre>\nCelsius to Romoe</pre>\n","<p>import pytemperature</p>\n\n<pre>\npytemperature.c2r(100) # 80.0</pre>\n","0"),
("4035","f2c","<pre>\nFahrenheit to Celsius</pre>\n","<p>import pytemperature</p>\n\n<pre>\npytemperature.f2c(104) # 40.0</pre>\n","0"),
("4036","f2k","<pre>\nFahrenheit to Kelvin</pre>\n","<p>import pytemperature</p>\n\n<pre>\npytemperature.f2k(100) # 310.93</pre>\n","0"),
("4037","k2c","<pre>\nKelvin to Celsius</pre>\n","<pre>\nimport pytemperature\npytemperature.k2c(273.15) # 0.0</pre>\n","0"),
("4038","k2f","<pre>\nKelvin to Fahrenheit</pre>\n","<pre>\nimport pytemperature\npytemperature.k2f(273.15) # 31.98</pre>\n","0"),
("4039","r2c","<pre>\nRomoe to Celsius</pre>\n","<pre>\nimport pytemperature\npytemperature.r2c(80) # 100.0</pre>\n","0"),
("4040","r2k","<pre>\nRomoe to Kelvin</pre>\n","<pre>\nimport pytemperature\npytemperature.r2k(80) # 373.15</pre>\n","0"),
("4041","ConnectTimeout","","","0"),
("4042","ConnectionError","","","0"),
("4043","DependencyWarning","","","0"),
("4044","FileModeWarning","","","0"),
("4045","HTTPError","","","0");
INSERT INTO function VALUES
("4046","NullHandler","","","0"),
("4047","PreparedRequest","","","0"),
("4048","ReadTimeout","","","0"),
("4049","Request","","","0"),
("4050","RequestException","","","0"),
("4051","RequestsDependencyWarning","","","0"),
("4052","Response","","","0"),
("4053","Session","","","0"),
("4054","Timeout","","","0"),
("4055","TooManyRedirects","","","0"),
("4056","URLRequired","","","0"),
("4057","__author__","","","0"),
("4058","__author_email__","","","0"),
("4059","__build__","","","0"),
("4060","__builtins__","","","0"),
("4061","__cached__","","","0"),
("4062","__cake__","","","0"),
("4063","__copyright__","","","0"),
("4064","__description__","","","0"),
("4065","__doc__","","","0"),
("4066","__file__","","","0"),
("4067","__license__","","","0"),
("4068","__loader__","","","0"),
("4069","__name__","","","0"),
("4070","__package__","","","0"),
("4071","__path__","","","0"),
("4072","__spec__","","","0"),
("4073","__title__","","","0"),
("4074","__url__","","","0"),
("4075","__version__","","","0"),
("4076","_internal_utils","","","0"),
("4077","adapters","","","0"),
("4078","api","","","0"),
("4079","auth","","","0"),
("4080","certs","","","0"),
("4081","chardet","","","0"),
("4082","check_compatibility","","","0"),
("4083","codes","","","0"),
("4084","compat","","","0"),
("4085","cookies","","","0"),
("4086","delete","","","0"),
("4087","exceptions","","","0"),
("4088","get","","<p>import pprint<br />\nimport requests<br />\nimport pytemperature</p>\n\n<p>key_openweathermap = &#39;546ada243bb94570a6c7728e814f5c4d&#39;<br />\nkey_google = &#39;AIzaSyCLzjyR5aH64cr224mSzpXMoSl01R8QdHU&#39;</p>\n\n<p># openweathermap<br />\ncity = &#39;London&#39;</p>\n\n<p># Google Maps<br />\norigin = &#39;Disneyland&#39;<br />\ndestination = &#39;Universal+Studios+Hollywood&#39;<br />\n&#39;&#39;&#39;<br />\nr = requests.get(&#39;http://samples.openweathermap.org/data/2.5/weather?q=&#39;+ city +&#39;&amp;appid=&#39; + key_openweathermap)<br />\npprint.pprint(r.text)</p>\n\n<p>&#39;&#39;&#39;<br />\n(&#39;{&quot;coord&quot;:{&quot;lon&quot;:-0.13,&quot;lat&quot;:51.51},&quot;weather&quot;:[{&quot;id&quot;:300,&quot;main&quot;:&quot;Drizzle&quot;,&quot;description&quot;:&quot;light &#39;<br />\n&nbsp;&#39;intensity &#39;<br />\n&nbsp;&#39;drizzle&quot;,&quot;icon&quot;:&quot;09d&quot;}],&quot;base&quot;:&quot;stations&quot;,&quot;main&quot;:{&quot;temp&quot;:280.32,&quot;pressure&quot;:1012,&quot;humidity&quot;:81,&quot;temp_min&quot;:279.15,&quot;temp_max&quot;:281.15},&quot;visibility&quot;:10000,&quot;wind&quot;:{&quot;speed&quot;:4.1,&quot;deg&quot;:80},&quot;clouds&quot;:{&quot;all&quot;:90},&quot;dt&quot;:1485789600,&quot;sys&quot;:{&quot;type&quot;:1,&quot;id&quot;:5091,&quot;message&quot;:0.0103,&quot;country&quot;:&quot;GB&quot;,&quot;sunrise&quot;:1485762037,&quot;sunset&quot;:1485794875},&quot;id&quot;:2643743,&quot;name&quot;:&quot;London&quot;,&quot;cod&quot;:200}&#39;)<br />\n&#39;&#39;&#39;</p>\n\n<p>temp_kelvin = r.json()[&#39;main&#39;][&#39;temp&#39;]<br />\nprint(temp_kelvin) # 280.32<br />\nprint(pytemperature.k2c(temp_kelvin)) # 7.170000000000016</p>\n\n<p>print()<br />\n&#39;&#39;&#39;<br />\nr = requests.get(&#39;https://maps.googleapis.com/maps/api/directions/json?origin=&#39; + origin + &#39;&amp;destination=&#39; + destination + &#39;&amp;key=&#39; + key_google)<br />\nprint(r.text)</p>\n\n<p>#pprint.pprint(r.json())<br />\nexample = r.json()[&#39;geocoded_waypoints&#39;][0][&#39;geocoder_status&#39;]<br />\nprint(example) # OK</p>\n\n<p>distance = r.json()[&#39;routes&#39;][0][&#39;legs&#39;][0][&#39;distance&#39;][&#39;text&#39;]<br />\nprint(distance) # 35.8 mi<br />\n&#39;&#39;&#39;<br />\n{<br />\n&nbsp; &nbsp;&quot;geocoded_waypoints&quot; : [<br />\n&nbsp; &nbsp;<br />\n&nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;geocoder_status&quot; : &quot;OK&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;place_id&quot; : &quot;ChIJa147K9HX3IAR-lwiGIQv9i4&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;types&quot; : [ &quot;amusement_park&quot;, &quot;establishment&quot;, &quot;point_of_interest&quot; ]<br />\n&nbsp; &nbsp; &nbsp; },</p>\n\n<p>&nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;geocoder_status&quot; : &quot;OK&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;place_id&quot; : &quot;ChIJzzgyJU--woARcZqceSdQ3dM&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;types&quot; : [ &quot;amusement_park&quot;, &quot;establishment&quot;, &quot;point_of_interest&quot; ]<br />\n&nbsp; &nbsp; &nbsp; }</p>\n\n<p>&nbsp; &nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp;],<br />\n&nbsp; &nbsp;&quot;routes&quot; : [<br />\n&nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;bounds&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;northeast&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;lat&quot; : 34.1358282,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;lng&quot; : -117.9220826<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;southwest&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;lat&quot; : 33.8151707,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;lng&quot; : -118.3517014<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;copyrights&quot; : &quot;Map data &copy;2017 Google&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;legs&quot; : [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;35.8 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 57576<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;50 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 3024<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_address&quot; : &quot;100 Universal City Plaza, Universal City, CA 91608, USA&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1339489,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.350456<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_address&quot; : &quot;1313 Disneyland Dr, Anaheim, CA 92802, USA&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8162219,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9224731<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;steps&quot; : [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;59 ft&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 18<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;1 min&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 2<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8160679,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9225314<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Head u003cbu003esouthu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;kvkmElvvnUJ&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8162219,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9224731<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.4 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 569<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;2 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 101<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8151707,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9280369<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Keep u003cbu003eleftu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;keep-left&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;mukmExvvnUH@H@JDJHNJJJPTNLb@B`@?h@@v@DdYZ?R?&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8160679,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9225314<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.6 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 1028<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;2 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 117<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8200876,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9228559<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Turn u003cbu003eleftu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;turn-left&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;yokmEfywnUAyW?u@@k@Cg@EUO]KSOSIOKQOOQK]U[Mm@Q}@Ug@Km@Ig@Ec@A[?U@U@U@[DA?WBG@g@HkAZeAVkBb@_AV_@N&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8151707,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9280369<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;230 ft&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 70<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;1 min&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 6<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8206848,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9230995<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Merge onto u003cbu003eDisneyland Dru003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;merge&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;qnlmEzxvnUa@LsA`@&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8200876,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9228559<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;22.3 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 35909<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;25 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 1486<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.0256221,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.2059515<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Slight u003cbu003erightu003c/bu003e to merge onto u003cbu003eI-5 Nu003c/bu003e toward u003cbu003eLos Angelesu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;grlmEjzvnUu@MKCIAWI_Cy@WGSGMEQEKCYCMAU?a@@E@E?MBE@I@IBKBWLE@EBIDGDKF}ArAeFlEWTs@l@qAjA_@]p@}ApAg@b@iAdA}BbCSTYXmExEsAxAOP[^cBlBw@x@qBtB}@~@{B`Cs@x@KLEBEDSPGF_BhCa@r@Wh@Wf@Sf@c@jAOb@K^ITW`AMd@_@xAWnAU`Bm@jEi@`Eu@hFOv@GXWlAMh@e@|AM`@M^KX{@vBkJtSmKhVgB|DiFlLeFfLWl@Q^Uf@_@t@a@r@a@r@A@Yd@y@zA}@|AQZYd@[h@U`@QZ[l@c@|@_@v@{@rBUn@s@hB_BjE_BtDuEhLu@hB[t@aChGQf@{CjHcDtHiItRkAdCuAdCy@rAgA~Aa@l@aB|BGHgAtAu@dAeGlIe@z@?@A@IPKRA@?@GJSd@_@~@Qh@Qh@WdAADIb@YrAe@~BGREVSbAU~@kAlE_A|Eg@zBADWbAOn@}@hCQh@k@~AcB~DYp@Wh@qAjCc@x@yBvD_BpC[f@eAfBgChFaBrDc@`AyHhQsAbDmAjCKV]v@uBxEuBvEoBnEsAnCABGHGNINEJCJGJGRc@`A[t@c@`AoAlCmBjEMZ]t@_@z@w@bBe@|@c@r@OTOTUg@v@a@h@g@n@e@j@Y^QRi@l@_@b@MPA?_@f@GFw@`AiBjCe@r@S^a@t@Ub@g@fACDq@xAm@tAqAxCiBbEg@lAcAzBYl@Wn@GJIRaBxDuCvGuEnK_ArBiBbE}@rBcAzBqBtEkBdEqA|CcAzBkErJ_AvBcA`Cc@v@y@jBo@nAsFdJ[p@Q^uAlDc@fAUh@q@~AaBbEgBlEsHzQeDjIyC|GGLyB~EaFdLaAjBkBvD{AxCaC`Fu@hBw@bBc@~@gFhKkC`GaAfCoBbFe@tAeAzCiBpEqBvEaAnBoA`Ck@`Ak@`A{@tA{@rAeBbCkBfC}AjBwBbCyBvBkClCCB{BxBeDdDKHwBxBqBtA}A|@gAx@kApAeBxBW`@[d@i@|@Yf@[l@g@`AuAzCw@`BIRm@zAs@bBuAhCgArBcB|ByAvBa@l@m@~@c@j@s@z@aAlAy@dAiAdAyAjAw@n@UNuBnAwAz@]T_@TqFjD]RIF]RGD]TcHlE_Aj@mf@zZeEhC]T]Tk@ZuBrAaKlGcAp@wNbJSLm@^wAz@a@V{@h@sDvBqAt@wBnAGBoBjA}BrAKFGDu@b@k@Xi@XeNdIcAn@_Ah@{BlAaAj@]RKF_@Ru@b@GDm@yAz@w@b@eAn@q@`@qEhC{A~@cDjBkAp@cAl@_FtC_@T_@T_Ap@y@n@g@b@iAfAa@`@UXmAvAa@j@QVwAvBk@|@}A`CeA`B{BhDeA~A_@l@iAfB}@rAeEpGo@bAMPSZCBuAvByBhDo@|@a@p@}@rAm@`AUq@dAwBdDeCxDsEbHSZSZg@n@SVe@j@_@^[kAdAe@UNgC`Bk@KFq@XgAb@g@Pm@Po@PYHQDaDp@gAVmHxAmAVeB`@_IzAWFw@R}@Z]Lu@Vm@T_@ReAf@}A|@e@VGDSL{@h@i@^s@j@cAr@}B~A[PeAr@mClB_@cAz@qAnAoApA_A|@{A|AYX_A~@}@|@yBxBuBtBoBpBmAlA{AzAeBdBkAhAeAhAg@f@KLOPs@|@a@n@QXq@fA{@vAy@tA]l@[b@w@pA[b@a@d@y@|@w@v@YT?@CBKJA?ON]kClCmAlA}@t@{@v@A@wEjEoJbJeJ|IaC|B]Zc@^ED]Zo@n@q@l@MNc@o@d@m@`@cAj@aAh@q@Xq@Zq@^i@ZC@k@cAt@}@t@sBnByCpCkB`B}AzA_CvB}AvAu@r@cA`AoAtAsMnOuAdBy@pAk@bAi@hA_AnBo@fAQZQV_ApAgAnAo@j@SPq@n@mD~C_@OHWVg@f@e@h@g@p@a@l@QXk@hAy@lBeAxCYr@w@zBaAtC{GpRcA|CYfAW~Au@zDMr@k@|B]`Ae@fAg@dAq@pAMVKP?@A@?@Wb@MXGNGNCHA@Yt@CDABg@~ASl@Of@Wr@cAbDaAlCkCrHa@hAA@GNq@lBe@vAe@dBWbACLMt@m@vDOrAKrAGjAEdBCbC@|J@zM?lB?nE?rEAbDCv@EhAA`@C`@It@MrAOhAMz@QfAKh@Mf@Qt@Of@W|@Sp@wBpGiAfD{@jCkEtMaH|S_@fAMb@_@rAa@zAIM`@&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 33.8206848,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -117.9230995<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;11.7 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 18809<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;19 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 1112<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1294658,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3475583<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Keep u003cbu003eleftu003c/bu003e at the fork to continue on u003cbu003eUS-101 Nu003c/bu003e, follow signs for u003cbu003eLos Angeles Nu003c/bu003e/u003cbu003eCivic Centeru003c/bu003eu003cdiv style=&quot;font-size:0.9em&quot;u003eParts of this road may be closed at certain times or daysu003c/divu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;fork-left&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;cstnEdbnpU@d@?@?@?@CJm@fCW`AMf@Od@Ut@cArCe@xAq@lB?@u@vBkD|Jq@nBc@rASh@e@vAYx@Wp@q@rB]bAm@`BUj@a@jAWp@w@hBOZS`@[p@INKROVOX_@l@o@`Ag@r@q@|@g@l@KLGDCBC@C@SHa@d@A@YZs@r@yAlAm@`@]T]RQFa@RSJQFMDiAXa@LWDg@FOB]Dy@Du@@u@As@EoBWy@Gu@Ek@?MAQ?_@@[BmAFy@Fa@@U@a@?W?a@Aa@Ca@C]Cm@KWCKCmASyC]}CU]Ak@Ae@?aEBoC@k@?}AFi@@uAJk@Di@Hm@Fm@JyAXi@LcBd@_Ac@PsAh@UHeAh@q@TOHc@Pa@Pe@P}@^{Al@WNUNm@f@ONY^SXEHCBYj@[z@A??BUp@CLAHCJAHCP?HCNAPARAb@Er@?HAF?DAJAJG^AJC^AFATEOnAU~BKhAEZC`@CNMrAKpA_@pESnCInAK|ACRATClAARCVEZK|AKzA?JInACd@?V?d@@^@^?NBb@Br@@T?X?T?V?RAPAZCTCVCZCLGIZI^GPCJUl@Wn@Q`@OMVc@t@yApCYh@[j@Yf@]n@mA|Bk@fAkAvBS`@o@jA]n@QZ]n@_@p@KNs@lAMRKP]h@w@pAk@v@[`@Y^_BtBST_@`@i@h@g@d@g@b@URUPUPo@h@gA|@gA|@k@d@eBvAEBi@b@i@b@UPWTe@`@YVSRQNYQTY^UZW^g@x@]h@GHq@dASXW`@[`@Se@p@aA|AiBpCeA`Ba@p@OXu@zAk@nAOWr@Wp@c@rASr@K^_@tA[rAi@tB[nAiAnEw@~CQp@e@lBCDg@pBg@pB[nAg@pBa@tAq@vBi@|Ai@zAc@nAc@nAc@pAq@pBa@lAm@jBaA|Ca@pAABCHCJIViApDk@|A_A~Bg@lAc@fAi@bBm@nBa@|AYdAKb@Mj@Ml@i@nCe@jC]~Au@~Dq@rDS|@Y|ACHAJMn@I`@I`@If@YjBm@bE?@Kr@?Dc@`Dg@jDYpB[pBc@fDMjAShBO~AQtAKr@ObAWvAId@Ot@YvAUx@Wz@c@lAKZYp@k@pAYr@k@jAMZeAbCuAhD}@dC}@`Cm@dBQd@Up@wB~FSh@g@rAEHSb@_@x@?Ba@t@KRSb@Wd@CD]n@c@x@o@bAiAjB_@l@ILILABMTKPMPqBfDo@bAk@~@a@p@MPEDOVmAjB[b@g@l@g@n@i@f@k@j@k@d@e@^m@b@_@V_@VC@ABSPQHUL{Av@iExB_@RyAt@u@`@k@XUN[P]To@d@URc@`@g@h@WVe@l@QTOVMR_@l@q@lAAB[l@q@lA_AdB_@r@}@`Bc@v@_A|As@hAY`@g@n@c@h@QPEF_@`@_@^e@b@YTq@j@YPcAt@cAj@IFq@kB|@gKfFa@Pe@Re@Vs@s@b@[R_@X[Vg@f@[Zc@h@UXQRUg@~@i@dA]|@Y|@]tASbAMx@E`@EIx@Cn@E~@?^Ah@AvAAv@?d@A|@Ar@C`@Ab@I~@ALCPE^GCTGZGZK^Kb@Oj@k@zAO^Yl@Wh@]l@u@vAu@vAOZ[h@]p@Uf@s@vAqDnHu@zAyBhEQXkA`Cg@|@Ud@]l@KN]j@YiAvAKLQNCD]XMJg@`@[Re@Zu@`@q@XQJQFQF[JQDSFu@PaAT_@Js@Ne@LiDv@k@JkCl@sAXcAPk@JOBG@{@JgCf@q@Pe@Lq@RUFi@Rc@NSHYJ_@PYJUJo@ZeAj@_@TUN]Tq@b@}@n@e@^o@h@UTQNSPOPMLSPWXYZKLCDUVMRILQRoAzAs@~@]QXSVSVcAlAoA|AUXWZc@f@g@f@ONg@b@YTk@^_Al@eB`AWL[RYRWPQNQLa@ONQPi@h@iBjBEFMJWVMNo@n@uBvBo@p@&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.0256221,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.2059515<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.1 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 180<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;1 min&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 11<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1307998,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3485738<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Take exit u003cbu003e11Bu003c/bu003e toward u003cbu003eUniversal Studios Blvdu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;ramp-right&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;e|hoEfwiqUAACAA?A?C?E?A@C@MHURYXKHa@^WV[VKJMLIFIFKHCBA?A?A@A?A?C?CA&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1294658,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3475583<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.3 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 447<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;1 min&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 33<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1338819,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3515888<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Merge onto u003cbu003eW.C. Fields Dru003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;merge&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;odioEp}iqUMNQJYR_@Re@ZiBjASJk@^EBKJIHMLKLUTUQUb@GJKPGJGHCFEDCBCBCBC@EDEBEBC@EDCBEBEBCDCBC@CBEFCBCDEDEFINUd@&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1307998,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3485738<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.1 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 183<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;1 min&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 23<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.135398,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3511682<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Turn u003cbu003erightu003c/bu003e onto u003cbu003eUniversal Studios Blvdu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;turn-right&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;wwioElpjqUQNA@A@A?A@G?A?A?A?C?CAA?CAAAA??AA?CAEAC?A?A?A?A?A?A?OQCAAAECUMGCGCECGCGCICICICGAECKACAGAIAGAGAG?IAQA&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1338819,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3515888<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;distance&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;0.2 mi&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 363<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;duration&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;text&quot; : &quot;2 mins&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;value&quot; : 133<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;end_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.1339489,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.350456<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;html_instructions&quot; : &quot;Turn u003cbu003erightu003c/bu003e&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;maneuver&quot; : &quot;turn-right&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;gajoExmjqUCEAAAACCEE?AAACIACCKACGWACGYACAIAEEMAIEMAEAICICOCI?E?E@E@EBGBGDCHMDEBCBAHCFAB?B?B@B@B@BB^PNFB?B@B?D?DAF?JEJCFAN?@?@?H@BBFFHFHFb@XJFVRl@j@&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;start_location&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lat&quot; : 34.135398,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;lng&quot; : -118.3511682<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;travel_mode&quot; : &quot;DRIVING&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;traffic_speed_entry&quot; : [],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;via_waypoint&quot; : []<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;overview_polyline&quot; : {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;points&quot; : &quot;kvkmElvvnU|@Tx@v@`ABjAF|Zn@?Ccq@{Aw@}@y@c@kBg@aD]}AD}@JeH`BuEvAcB]yDoAeAOkBNo@V{BfBcK|I}@nAeCtBuFxFmIdJmOjPaChDeBlDiAdD}ApGcDxU}@hEmAxD}[tt@yNbyBdEqFnJqB~DeFxM{Yrs@uKzVoCxEsEtG}BzCkHhKWh@]t@{AxEcClLuDlPwBfHaEzJoInOaBnCiF|K_Oz{MdZwAbDaKbUiB|CgCnDkDbEiE|FqBlDsLdXqQra@kX|m@aF|KcHtLm@pAaE~JcTxh@}NpkK~SyJvSmEhKuCxHoDlJsDfIcFzIaDvEiErFaKlKeLbLoErCsCjCcE~FsDrHcDtH}C|F}DtFgDtE{BrCcDpC{GjEmIjFez@vh@od@lYw^dTyl@l]oV~NmE|DwCtDsQxXiP|VcOhUcHjKuB`CgCrBqF`DmExAuGxAaXnFkDdAiEhB_DhBkQ|L{NpNyVxViCpCyCnEoD~FsAtB{AbBuArA{@x@cg@xe@wIhIeEpCwE~B}CpBwLxKqJ~IsCvCiPtReBtCiBxDsClE}D|D}EfEmCzCs@fAeBvDyE~M_JnWq@fDcAnFiA~DmCvFcAtBaBxE}IlWeCzHi@fC}@jGS~CIhF@|J@l^MfIk@tFy@tEmAlEiMz_@oJ|Yk@xBKfA?DwA|FcLnqGhR}BjGwBxEu@tAiD`F_AdA}@r@oApAcExCyAn@qCr@oCVkB?cD]iDO{CLsCJ}BIoBWgFq@{DWcLBiGTqDb@cCf@cDbAsEnBgCbAwEnBmBfBw@rAs@pBUjBOzC}@vIgB~Sk@lJa@tGAbCJdF[vD_@xAoA|CgIjOiHzMwFxImDlEoCfCcKjIgFlEaE|F_JbNmDhGkBrEcB|FkDhNgGjVeIjVgEzMuBnGgBlE}CxJeF~VgCxMiD`VgBvMaArIaAvFkBzGaIhReKbYsC~FsFhJyGzKqBzCuChDqFjEqOfI{BpAqCdC_BrBaBrCcKvQwBlCkBlBiDhCkFnCuNdHcDnBcCdCeBjCgAbCw@rCm@|DShEE~EIvDU~B[jBsAjEwFzKgPbgB`DmCnDaAz@_DrB_F`BqRjEgCb@{GrA}FrBkDhBcDxBcErDaCvCoJnLyBdC}BhBoHtEcG`GcFhFICyAdAoCbCQDaGtDgAx@eAnAuAbCe@e@`@kAdBUDQGSC]UkAi@cAUa@EYKWk@u@oDd@w@h@Av@R?dAItC|B&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;summary&quot; : &quot;I-5 N and US-101 N&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;warnings&quot; : [],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;waypoint_order&quot; : []<br />\n&nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp;],<br />\n&nbsp; &nbsp;&quot;status&quot; : &quot;OK&quot;<br />\n}<br />\n&#39;&#39;&#39;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>import requests</p>\n\n<p>key = &#39;AIzaSyCLzjyR5aH64cr224mSzpXMoSl01R8QdHU&#39;<br />\norigin = &#39;Disneyland&#39;<br />\ndestination = &#39;Universal+Studios+Hollywood&#39;</p>\n\n<p>payload = {&#39;key&#39;: key, &#39;origin&#39;: origin, &#39;destination&#39; : destination}<br />\nr = requests.get(&#39;https://maps.googleapis.com/maps/api/directions/json&#39;, params=payload)<br />\nprint(r.url) # https://maps.googleapis.com/maps/api/directions/json?key=AIzaSyCLzjyR5aH64cr224mSzpXMoSl01R8QdHU&amp;origin=Disneyland&amp;destination=Universal%2BStudios%2BHollywood</p>\n","0"),
("4089","head","","","0"),
("4090","hooks","","","0"),
("4091","logging","","","0"),
("4092","models","","","0"),
("4093","options","","","0"),
("4094","packages","","","0"),
("4095","patch","","","0"),
("4096","post","","<p>import requests</p>\n\n<p>key = &#39;AIzaSyCLzjyR5aH64cr224mSzpXMoSl01R8QdHU&#39;<br />\norigin = &#39;Disneyland&#39;<br />\ndestination = &#39;Universal+Studios+Hollywood&#39;</p>\n\n<p>payload = {&#39;key&#39;: key, &#39;origin&#39;: origin, &#39;destination&#39; : destination}<br />\nr = requests.post(&#39;https://maps.googleapis.com/maps/api/directions/json&#39;, params=payload)<br />\nprint(r.text)</p>\n","0"),
("4097","put","","","0"),
("4098","request","","","0"),
("4099","session","","","0"),
("4100","sessions","","","0"),
("4101","status_codes","","<p>import requests</p>\n\n<p>key_google = &#39;AIzaSyCLzjyR5aH64cr224mSzpXMoSl01R8QdHU&#39;</p>\n\n<p># Google Maps<br />\norigin = &#39;Disneyland&#39;<br />\ndestination = &#39;Universal+Studios+Hollywood&#39;</p>\n\n<p>r = requests.get(&#39;https://maps.googleapis.com/maps/api/directions/json?origin=&#39; + origin + &#39;&amp;destination=&#39; + destination + &#39;&amp;key=&#39; + key_google)<br />\nprint(r.status_code) # 200<br />\nprint(r.headers[&#39;content-type&#39;]) # application/json; charset=UTF-8<br />\nprint(r.encoding) # UTF-8<br />\nprint(r.text)<br />\nprint(r.json())</p>\n","0"),
("4102","structures","","","0"),
("4103","urllib3","","","0"),
("4104","utils","","","0"),
("4105","warnings","","","0"),
("4106","Distance","","<p>from measurement.measures import Distance<br />\ndistance = Distance(mi=10).km # mi to Mile<br />\nprint(distance) # 16.09344</p>\n","0"),
("4107","Area","","","0"),
("4108","Energy","","","0"),
("4109","Speed","","<p>from measurement.measures import Speed<br />\nmy_speed = Speed(mile__hour=24)<br />\nprint(my_speed) # 24.0 mi/hr<br />\nprint(my_speed.km__hr) # 38.624256</p>\n","0"),
("4110","Temperature","","","0"),
("4111","Time","","","0"),
("4112","Volume","","","0"),
("4113","Weight","","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/measurement/American_metric.jpg\" /></p>\n\n<p>from measurement.measures import Weight<br />\nweight_1 = Weight(lb=125) # lb to pound<br />\nweight_2 = Weight(kg=40)</p>\n\n<p>added_together = weight_1 + weight_2<br />\nprint(added_together) # 213.18497680735112 lb<br />\nprint(added_together.kg) # 96.699</p>\n","0"),
("4114","Currency Rates","","<p>import datetime<br />\nimport pprint<br />\nfrom forex_python.converter import CurrencyRates, CurrencyCodes</p>\n\n<p>c = CurrencyRates()<br />\na = CurrencyCodes()</p>\n\n<p>pprint.pprint(c.get_rates(&#39;PLN&#39;))<br />\n{&#39;AUD&#39;: 0.35178,<br />\n&nbsp;&#39;BGN&#39;: 0.45833,<br />\n&nbsp;&#39;BRL&#39;: 0.87784,<br />\n&nbsp;&#39;CAD&#39;: 0.3439,<br />\n&nbsp;&#39;CHF&#39;: 0.27156,<br />\n&nbsp;&#39;CNY&#39;: 1.8468,<br />\n&nbsp;&#39;CZK&#39;: 6.1038,<br />\n&nbsp;&#39;DKK&#39;: 1.7437,<br />\n&nbsp;&#39;EUR&#39;: 0.23435,<br />\n&nbsp;&#39;GBP&#39;: 0.20659,<br />\n&nbsp;&#39;HKD&#39;: 2.1891,<br />\n&nbsp;&#39;HRK&#39;: 1.7539,<br />\n&nbsp;&#39;HUF&#39;: 72.584,<br />\n&nbsp;&#39;IDR&#39;: 3728.0,<br />\n&nbsp;&#39;ILS&#39;: 0.97851,<br />\n&nbsp;&#39;INR&#39;: 18.162,<br />\n&nbsp;&#39;JPY&#39;: 31.405,<br />\n&nbsp;&#39;KRW&#39;: 317.02,<br />\n&nbsp;&#39;MXN&#39;: 4.9892,<br />\n&nbsp;&#39;MYR&#39;: 1.1745,<br />\n&nbsp;&#39;NOK&#39;: 2.1839,<br />\n&nbsp;&#39;NZD&#39;: 0.38283,<br />\n&nbsp;&#39;PHP&#39;: 14.185,<br />\n&nbsp;&#39;RON&#39;: 1.0772,<br />\n&nbsp;&#39;RUB&#39;: 16.144,<br />\n&nbsp;&#39;SEK&#39;: 2.2347,<br />\n&nbsp;&#39;SGD&#39;: 0.37713,<br />\n&nbsp;&#39;THB&#39;: 9.2752,<br />\n&nbsp;&#39;TRY&#39;: 0.97966,<br />\n&nbsp;&#39;USD&#39;: 0.2803,<br />\n&nbsp;&#39;ZAR&#39;: 3.7111}</p>\n\n<p>date_obj = datetime.datetime(2014, 5, 23)</p>\n\n<p>c.get_rates(&#39;USD&#39;, date_obj) # {&#39;AUD&#39;: 1.0845, &#39;BGN&#39;: 1.4349, &#39;BRL&#39;: 2.2178, &#39;CAD&#39;: 1.0901, &#39;CHF&#39;: 0.89582, &#39;CNY&#39;: 6.2377, &#39;CZK&#39;: 20.131, &#39;DKK&#39;: 5.4762, &#39;GBP&#39;: 0.5938, &#39;HKD&#39;: 7.752, &#39;HRK&#39;: 5.5751, &#39;HUF&#39;: 222.66, &#39;IDR&#39;: 11613.0, &#39;ILS&#39;: 3.4861, &#39;INR&#39;: 58.508, &#39;JPY&#39;: 101.92, &#39;KRW&#39;: 1024.9, &#39;LTL&#39;: 2.5332, &#39;MXN&#39;: 12.894, &#39;MYR&#39;: 3.2101, &#39;NOK&#39;: 5.9652, &#39;NZD&#39;: 1.1707, &#39;PHP&#39;: 43.721, &#39;PLN&#39;: 3.0544, &#39;RON&#39;: 3.2359, &#39;RUB&#39;: 34.122, &#39;SEK&#39;: 6.6471, &#39;SGD&#39;: 1.2527, &#39;THB&#39;: 32.6, &#39;TRY&#39;: 2.0888, &#39;ZAR&#39;: 10.356, &#39;EUR&#39;: 0.73368}<br />\nc.get_rates(&#39;PLN&#39;, date_obj) # {&#39;AUD&#39;: 0.35507, &#39;BGN&#39;: 0.46979, &#39;BRL&#39;: 0.72612, &#39;CAD&#39;: 0.3569, &#39;CHF&#39;: 0.29329, &#39;CNY&#39;: 2.0422, &#39;CZK&#39;: 6.5908, &#39;DKK&#39;: 1.7929, &#39;GBP&#39;: 0.19441, &#39;HKD&#39;: 2.538, &#39;HRK&#39;: 1.8253, &#39;HUF&#39;: 72.9, &#39;IDR&#39;: 3802.0, &#39;ILS&#39;: 1.1414, &#39;INR&#39;: 19.156, &#39;JPY&#39;: 33.369, &#39;KRW&#39;: 335.54, &#39;LTL&#39;: 0.82938, &#39;MXN&#39;: 4.2214, &#39;MYR&#39;: 1.051, &#39;NOK&#39;: 1.953, &#39;NZD&#39;: 0.3833, &#39;PHP&#39;: 14.314, &#39;RON&#39;: 1.0594, &#39;RUB&#39;: 11.171, &#39;SEK&#39;: 2.1763, &#39;SGD&#39;: 0.41013, &#39;THB&#39;: 10.673, &#39;TRY&#39;: 0.68389, &#39;USD&#39;: 0.3274, &#39;ZAR&#39;: 3.3905, &#39;EUR&#39;: 0.24021}</p>\n\n<p>c.get_rate(&#39;PLN&#39;, &#39;USD&#39;) # 0.2803</p>\n\n<p>c.convert(&#39;PLN&#39;, &#39;USD&#39;, 10) # 2.803</p>\n","0"),
("4115","Bitcoin Prices","","<p>from forex_python.bitcoin import BtcConverter<br />\nimport datetime</p>\n\n<p>date_obj = datetime.datetime(2011, 1, 1)</p>\n\n<p>b = BtcConverter()</p>\n\n<p>print(b.get_latest_price(&#39;USD&#39;)) &nbsp; # 3707.5138<br />\nprint(b.get_previous_price(&#39;USD&#39;, date_obj)) # 0.3<br />\nprint(b.get_symbol()) &nbsp;# à¸¿</p>\n","0"),
("4116","Currency Symbols & Codes","","<p>from forex_python.converter import CurrencyRates, CurrencyCodes</p>\n\n<p>c = CurrencyRates()<br />\na = CurrencyCodes()</p>\n\n<p>for x in c.get_rates(&#39;PLN&#39;):<br />\n&nbsp; &nbsp; print(x,a.get_symbol(x),a.get_currency_name(x))</p>\n\n<p>print(&#39;PLN zÅ‚ Polish zloty&#39;)<br />\n&#39;&#39;&#39;<br />\nAUD $ Australian dollar<br />\nBGN BGN Bulgarian lev<br />\nBRL R$ Brazilian real<br />\nCAD $ Canadian dollar<br />\nCHF Fr. Swiss franc<br />\nCNY &yen; Chinese/Yuan renminbi<br />\nCZK KÄ Czech koruna<br />\nDKK Kr Danish krone<br />\nGBP &pound; British pound<br />\nHKD HK$ Hong Kong dollar<br />\nHRK kn Croatian kuna<br />\nHUF Ft Hungarian forint<br />\nIDR Rp Indonesian rupiah<br />\nILS â‚ª Israeli new sheqel<br />\nINR â‚¹ Indian rupee<br />\nJPY &yen; Japanese yen<br />\nKRW W South Korean won<br />\nMXN $ Mexican peso<br />\nMYR RM Malaysian ringgit<br />\nNOK kr Norwegian krone<br />\nNZD NZ$ New Zealand dollar<br />\nPHP â‚± Philippine peso<br />\nRON L Romanian leu<br />\nRUB R Russian ruble<br />\nSEK kr Swedish krona<br />\nSGD S$ Singapore dollar<br />\nTHB à¸¿ Thai baht<br />\nTRY TRY Turkish new lira<br />\nUSD US$ United States dollar<br />\nZAR R South African rand<br />\nEUR &euro; European Euro<br />\nPLN zÅ‚ Polish zloty<br />\n&#39;&#39;&#39;</p>\n","0"),
("4117","DEFAULT_OUTTMPL","","","0"),
("4118","DateRange","","","0"),
("4119","DownloadError","","","0"),
("4120","FileDownloader","","","0"),
("4121","MSO_INFO","","","0"),
("4122","MaxDownloadsReached","","","0"),
("4123","SameFileError","","","0"),
("4124","YoutubeDL","","<p>import youtube_dl<br />\nimport pprint<br />\nydl = youtube_dl.YoutubeDL({&#39;outtmpl&#39;: &#39;%(id)s%(ext)s&#39;})</p>\n\n<p>with ydl:<br />\n&nbsp; &nbsp; result = ydl.extract_info(<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &#39;https://www.youtube.com/watch?v=ZSt9tm3RoUU&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; download=False # We just want to extract the info<br />\n&nbsp; &nbsp; )</p>\n\n<p>if &#39;entries&#39; in result:<br />\n&nbsp; &nbsp; # Can be a playlist or a list of videos<br />\n&nbsp; &nbsp; video = result[&#39;entries&#39;][0]<br />\nelse:<br />\n&nbsp; &nbsp; # Just a video<br />\n&nbsp; &nbsp; video = result</p>\n\n<p>print()</p>\n\n<p>print(video[&#39;id&#39;]) # ZSt9tm3RoUU &nbsp; &nbsp;| Video identifier<br />\nprint(video[&#39;title&#39;]) # Our Story in 1 Minute &nbsp; &nbsp;| Video title&nbsp;<br />\nprint(video[&#39;ext&#39;]) # mp4 &nbsp; &nbsp;| Video filename extension<br />\nprint(video[&#39;alt_title&#39;]) # None &nbsp; &nbsp;| &nbsp;A secondary title of the video<br />\nprint(video[&#39;display_id&#39;]) # ZSt9tm3RoUU &nbsp; &nbsp;| An alternative identifier for the video<br />\nprint(video[&#39;uploader&#39;]) # melodysheep &nbsp; &nbsp;| Full name of the video uploader<br />\nprint(video[&#39;license&#39;]) # Standard YouTube License &nbsp; &nbsp;| License name the video is licensed under<br />\nprint(video[&#39;creator&#39;]) # None &nbsp; &nbsp;| &nbsp;The creator of the video<br />\nprint(video[&#39;upload_date&#39;]) # 20121030 &nbsp; &nbsp;| The date (YYYYMMDD) when the video was released<br />\nprint(video[&#39;uploader_id&#39;]) # melodysheep &nbsp; &nbsp;| Nickname or id of the video uploader<br />\nprint(video[&#39;duration&#39;]) # 97 &nbsp; &nbsp;| Length of the video in seconds<br />\nprint(video[&#39;view_count&#39;]) # 5290144 &nbsp; &nbsp;| How many users have watched the video on the platform<br />\nprint(video[&#39;like_count&#39;]) # 68182 &nbsp; &nbsp;| Number of positive ratings of the video<br />\nprint(video[&#39;dislike_count&#39;]) # 1365 &nbsp; &nbsp;| Number of negative ratings of the video<br />\nprint(video[&#39;average_rating&#39;]) # 4.92149209976 &nbsp; &nbsp;| Average rating give by users, the scale used depends on the webpage<br />\nprint(video[&#39;age_limit&#39;]) # 0 &nbsp; &nbsp;| Age restriction for the video (years)<br />\nprint(video[&#39;format&#39;]) # 215 - 1280x544 (DASH video)+251 - audio only (DASH audio) &nbsp; &nbsp;| A human-readable description of the format<br />\nprint(video[&#39;format_id&#39;]) # 215+251 &nbsp; &nbsp;| Format code specified by --format<br />\nprint(video[&#39;width&#39;]) # 1280 &nbsp; &nbsp;| Width of the video<br />\nprint(video[&#39;height&#39;]) # 544 &nbsp; &nbsp;| Height of the video<br />\nprint(video[&#39;resolution&#39;]) # None &nbsp; &nbsp;| Textual description of width and height<br />\nprint(video[&#39;abr&#39;]) # 160 &nbsp; &nbsp;| Average audio bitrate in KBit/s<br />\nprint(video[&#39;acodec&#39;]) # opus &nbsp; &nbsp;| Name of the audio codec in use<br />\nprint(video[&#39;vbr&#39;]) # None &nbsp; &nbsp;| Average video bitrate in KBit/s<br />\nprint(video[&#39;fps&#39;]) # 1 &nbsp; &nbsp;| Frame rate<br />\nprint(video[&#39;vcodec&#39;]) # avc1.4d401f &nbsp; &nbsp;| Name of the video codec in use&nbsp;<br />\nprint(video[&#39;extractor&#39;]) # youtube &nbsp; &nbsp;| Name of the extractor<br />\nprint(video[&#39;extractor_key&#39;]) # Youtube &nbsp; &nbsp;| Key name of the extractor<br />\nprint(video[&#39;playlist&#39;]) # None &nbsp; &nbsp;| Name or id of the playlist that contains the video<br />\nprint(video[&#39;playlist_index&#39;]) # None &nbsp; &nbsp;| Index of the video in the playlist padded with leading zeros according to the total length of the playlist<br />\n#print(video[&#39;playlist_id&#39;]) &nbsp; &nbsp;| Playlist identifier<br />\n#print(video[&#39;playlist_title&#39;]) &nbsp; &nbsp;| Playlist title</p>\n\n<p>import youtube_dl<br />\nimport pprint<br />\nydl = youtube_dl.YoutubeDL({&#39;outtmpl&#39;: &#39;%(id)s%(ext)s&#39;})</p>\n\n<p>with ydl:<br />\n&nbsp; &nbsp; result = ydl.extract_info(<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &#39;https://www.youtube.com/watch?v=g_9nsFJS_pk&amp;list=PLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; download=False # We just want to extract the info<br />\n&nbsp; &nbsp; )<br />\nprint()</p>\n\n<p>count_playlist = len(result[&#39;entries&#39;])<br />\nprint(count_playlist) # 10</p>\n\n<p>for x in range(count_playlist):<br />\n&nbsp; &nbsp; video = result[&#39;entries&#39;][x]<br />\n&nbsp; &nbsp; print(video[&#39;title&#39;])<br />\n&nbsp; &nbsp; print(video[&#39;playlist&#39;])<br />\n&nbsp; &nbsp; print(video[&#39;playlist_index&#39;])<br />\n&nbsp; &nbsp; print(video[&#39;playlist_id&#39;])<br />\n&nbsp; &nbsp; print(video[&#39;playlist_title&#39;])</p>\n\n<p><br />\n&#39;&#39;&#39;<br />\n10<br />\nAn Introduction to the Bottle Web Framework for Python<br />\nBottle Tutorials<br />\n1<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nBottle Routing Tutorial<br />\nBottle Tutorials<br />\n2<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nIntro to Templates in Bottle<br />\nBottle Tutorials<br />\n3<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nAccessing URL Query Strings in Bottle<br />\nBottle Tutorials<br />\n4<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nReturning JSON Data in Bottle Using Python Data Structures<br />\nBottle Tutorials<br />\n5<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nHow To Create Custom Error Pages in Bottle<br />\nBottle Tutorials<br />\n6<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nCreating a RESTFul API With Python and Bottle<br />\nBottle Tutorials<br />\n7<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nHow to Connect to a Mongo DB in the Python Web Framework Bottle<br />\nBottle Tutorials<br />\n8<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nConnecting to a SQL Database in Bottle Using SQLAlchemy<br />\nBottle Tutorials<br />\n9<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\nBottle Python Web Framework - Static Files<br />\nBottle Tutorials<br />\n10<br />\nPLXmMXHVSvS-AyIwEYkGNa4WE1AR1_45mv<br />\nBottle Tutorials<br />\n&#39;&#39;&#39;</p>\n\n<p>import youtube_dl<br />\nimport pprint<br />\nydl = youtube_dl.YoutubeDL({&#39;outtmpl&#39;: &#39;%(id)s%(ext)s&#39;})</p>\n\n<p>with ydl:<br />\n&nbsp; &nbsp; result = ydl.extract_info(<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &#39;https://www.pornhub.com/view_video.php?viewkey=ph599d108d45dac&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; download=False # We just want to extract the info<br />\n&nbsp; &nbsp; )</p>\n\n<p>if &#39;entries&#39; in result:<br />\n&nbsp; &nbsp; # Can be a playlist or a list of videos<br />\n&nbsp; &nbsp; video = result[&#39;entries&#39;][0]<br />\nelse:<br />\n&nbsp; &nbsp; # Just a video<br />\n&nbsp; &nbsp; video = result</p>\n\n<p>print()</p>\n\n<p>print(video[&#39;id&#39;]) # ph599d108d45dac &nbsp; &nbsp;| Video identifier<br />\nprint(video[&#39;title&#39;]) # Bridgette B - Mom And Son Taboo (parts 1&amp;amp;2) &nbsp; &nbsp;| Video title&nbsp;<br />\nprint(video[&#39;ext&#39;]) # mp4 &nbsp; &nbsp;| Video filename extension<br />\nprint(video[&#39;duration&#39;]) # 2424 &nbsp; &nbsp;| Length of the video in seconds<br />\nprint(video[&#39;view_count&#39;]) # 1792048 &nbsp; &nbsp;| How many users have watched the video on the platform<br />\nprint(video[&#39;like_count&#39;]) # 5396 &nbsp; &nbsp;| Number of positive ratings of the video<br />\nprint(video[&#39;dislike_count&#39;]) # 1751 &nbsp; &nbsp;| Number of negative ratings of the video</p>\n","0"),
("4125","__all__","","","0"),
("4126","__builtins__","","","0"),
("4127","__cached__","","","0"),
("4128","__doc__","","","0"),
("4129","__file__","","","0"),
("4130","__license__","","","0"),
("4131","__loader__","","","0"),
("4132","__name__","","","0"),
("4133","__package__","","","0"),
("4134","__path__","","","0"),
("4135","__spec__","","","0"),
("4136","_real_main","","","0"),
("4137","aes","","","0"),
("4138","cache","","","0"),
("4139","codecs","","","0"),
("4140","compat","","","0"),
("4141","compat_getpass","","","0"),
("4142","compat_shlex_split","","","0"),
("4143","decodeOption","","","0"),
("4144","downloader","","","0"),
("4145","expand_path","","","0");
INSERT INTO function VALUES
("4146","extractor","","","0"),
("4147","gen_extractors","","","0"),
("4148","io","","","0"),
("4149","jsinterp","","","0"),
("4150","list_extractors","","","0"),
("4151","main","","","0"),
("4152","match_filter_func","","","0"),
("4153","options","","","0"),
("4154","os","","","0"),
("4155","parseOpts","","","0"),
("4156","postprocessor","","","0"),
("4157","preferredencoding","","","0"),
("4158","random","","","0"),
("4159","read_batch_urls","","","0"),
("4160","render_table","","","0"),
("4161","setproctitle","","","0"),
("4162","socks","","","0"),
("4163","std_headers","","","0"),
("4164","swfinterp","","","0"),
("4165","sys","","","0"),
("4166","unicode_literals","","","0"),
("4167","update","","","0"),
("4168","update_self","","","0"),
("4169","utils","","","0"),
("4170","version","","","0"),
("4171","workaround_optparse_bug9161","","","0"),
("4172","write_string","","","0"),
("4173","pdfcrowd.Client","","<p>import pdfcrowd</p>\n\n<p># create an API client instance<br />\nclient = pdfcrowd.Client(&quot;terbis&quot;, &quot;c17a1bb659f3a61b17cb46827d5b20b4&quot;)</p>\n\n<p># convert a web page and store the generated PDF into a pdf variable<br />\npdf = client.convertURI(&#39;http://www.google.com&#39;)<br />\nopen(&#39;html2.pdf&#39;, &#39;wb&#39;).write(pdf)</p>\n\n<p># convert an HTML string and save the result to a file<br />\noutput_file = open(&#39;html.pdf&#39;, &#39;wb&#39;)<br />\nhtml=&quot;</p>\n\n<p>My HTML Layout</p>\n\n<p>&quot;<br />\nclient.convertHtml(html, output_file)<br />\noutput_file.close()</p>\n\n<p># convert an HTML file<br />\noutput_file = open(&#39;html3.pdf&#39;, &#39;wb&#39;) # wb --&gt; write binary<br />\nclient.convertFile(&#39;Janusz Korwin-Mikke.html&#39;, output_file)<br />\noutput_file.close()<br />\n&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pdfcrowd/directory.jpg\" style=\"height:520px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pdfcrowd/html.jpg\" style=\"height:369px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pdfcrowd/html2.jpg\" style=\"height:419px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pdfcrowd/html3.jpg\" style=\"height:426px; width:800px\" /></p>\n","0"),
("4174","convertHtml","","","0"),
("4175","convertFile","","","0"),
("4176","convertURI","","","0"),
("4177","setPageWidth","","","0"),
("4178","setPageHeight","","","0"),
("4179","setPageMargins","","","0"),
("4180","setFooterHtml","","","0"),
("4181","setFooterUrl","","","0"),
("4182","setHeaderHtml","","","0"),
("4183","setHeaderUrl","","","0"),
("4184","setHeaderFooterPageExc","","","0"),
("4185","setPageNumberingOffset","","","0"),
("4186","enableImages","","","0"),
("4187","enableBackgrounds","","","0"),
("4188","setHtmlZoom","","","0"),
("4189","enableJavaScript","","","0"),
("4190","enableHyperlinks","","","0"),
("4191","setDefaultTextEncoding","","","0"),
("4192","usePrintMedia","","","0"),
("4193","setEncrypted","","","0"),
("4194","setUserPassword","","","0"),
("4195","setOwnerPassword","","","0"),
("4196","setNoPrint","","","0"),
("4197","setNoModify","","","0"),
("4198","setNoCopy","","","0"),
("4199","setPageLayout","","","0"),
("4200","setPageMode","","","0"),
("4201","enablePdfcrowdLogo","","","0"),
("4202","setInitialPdfZoomType","","","0"),
("4203","setInitialPdfExactZoom","","","0"),
("4204","setPdfScalingFactor","","","0"),
("4205","setPageBackgroundColor","","","0"),
("4206","setTransparentBackground","","","0"),
("4207","setAuthor","","","0"),
("4208","setWatermark","","","0"),
("4209","setWatermarkRotation","","","0"),
("4210","setWatermarkInBackground","","","0"),
("4211","useSSL","","","0"),
("4212","numTokens","","","0"),
("4213","setMaxPages","","","0"),
("4214","setFailOnNon200","","","0"),
("4215","pdfcrowd.Error","","","0"),
("4216","","","","0"),
("4217","ACCESS_FAST","<p>C: Users User Documents _Skrypty OpenCV</p>\n","","0"),
("4218","ACCESS_MASK","","","0"),
("4219","ACCESS_READ","","","0"),
("4220","ACCESS_RW","","","0"),
("4221","ACCESS_WRITE","","","0"),
("4222","ADAPTIVE_THRESH_GAUSSIAN_C","","","0"),
("4223","ADAPTIVE_THRESH_MEAN_C","","","0"),
("4224","AGAST_FEATURE_DETECTOR_AGAST_5_8","","","0"),
("4225","AGAST_FEATURE_DETECTOR_AGAST_7_12D","","","0"),
("4226","AGAST_FEATURE_DETECTOR_AGAST_7_12S","","","0"),
("4227","AGAST_FEATURE_DETECTOR_NONMAX_SUPPRESSION","","","0"),
("4228","AGAST_FEATURE_DETECTOR_OAST_9_16","","","0"),
("4229","AGAST_FEATURE_DETECTOR_THRESHOLD","","","0"),
("4230","AKAZE_DESCRIPTOR_KAZE","","","0"),
("4231","AKAZE_DESCRIPTOR_KAZE_UPRIGHT","","","0"),
("4232","AKAZE_DESCRIPTOR_MLDB","","","0"),
("4233","AKAZE_DESCRIPTOR_MLDB_UPRIGHT","","","0"),
("4234","AKAZE_create","","","0"),
("4235","AgastFeatureDetector_AGAST_5_8","","","0"),
("4236","AgastFeatureDetector_AGAST_7_12d","","","0"),
("4237","AgastFeatureDetector_AGAST_7_12s","","","0"),
("4238","AgastFeatureDetector_NONMAX_SUPPRESSION","","","0"),
("4239","AgastFeatureDetector_OAST_9_16","","","0"),
("4240","AgastFeatureDetector_THRESHOLD","","","0"),
("4241","AgastFeatureDetector_create","","","0"),
("4242","BFMatcher","","","0"),
("4243","BFMatcher_create","","","0"),
("4244","BORDER_CONSTANT","","","0"),
("4245","BORDER_DEFAULT","","","0");
INSERT INTO function VALUES
("4246","BORDER_ISOLATED","","","0"),
("4247","BORDER_REFLECT","","","0"),
("4248","BORDER_REFLECT101","","","0"),
("4249","BORDER_REFLECT_101","","","0"),
("4250","BORDER_REPLICATE","","","0"),
("4251","BORDER_TRANSPARENT","","","0"),
("4252","BORDER_WRAP","","","0"),
("4253","BOWImgDescriptorExtractor","","","0"),
("4254","BOWKMeansTrainer","","","0"),
("4255","BRISK_create","","","0"),
("4256","CALIB_CB_ADAPTIVE_THRESH","","","0"),
("4257","CALIB_CB_ASYMMETRIC_GRID","","","0"),
("4258","CALIB_CB_CLUSTERING","","","0"),
("4259","CALIB_CB_FAST_CHECK","","","0"),
("4260","CALIB_CB_FILTER_QUADS","","","0"),
("4261","CALIB_CB_NORMALIZE_IMAGE","","","0"),
("4262","CALIB_CB_SYMMETRIC_GRID","","","0"),
("4263","CALIB_FIX_ASPECT_RATIO","","","0"),
("4264","CALIB_FIX_FOCAL_LENGTH","","","0"),
("4265","CALIB_FIX_INTRINSIC","","","0"),
("4266","CALIB_FIX_K1","","","0"),
("4267","CALIB_FIX_K2","","","0"),
("4268","CALIB_FIX_K3","","","0"),
("4269","CALIB_FIX_K4","","","0"),
("4270","CALIB_FIX_K5","","","0"),
("4271","CALIB_FIX_K6","","","0"),
("4272","CALIB_FIX_PRINCIPAL_POINT","","","0"),
("4273","CALIB_FIX_S1_S2_S3_S4","","","0"),
("4274","CALIB_FIX_TANGENT_DIST","","","0"),
("4275","CALIB_FIX_TAUX_TAUY","","","0"),
("4276","CALIB_RATIONAL_MODEL","","","0"),
("4277","CALIB_SAME_FOCAL_LENGTH","","","0"),
("4278","CALIB_THIN_PRISM_MODEL","","","0"),
("4279","CALIB_TILTED_MODEL","","","0"),
("4280","CALIB_USE_INTRINSIC_GUESS","","","0"),
("4281","CALIB_USE_LU","","","0"),
("4282","CALIB_USE_QR","","","0"),
("4283","CALIB_ZERO_DISPARITY","","","0"),
("4284","CALIB_ZERO_TANGENT_DIST","","","0"),
("4285","CAP_ANDROID","","","0"),
("4286","CAP_ANY","","","0"),
("4287","CAP_ARAVIS","","","0"),
("4288","CAP_AVFOUNDATION","","","0"),
("4289","CAP_CMU1394","","","0"),
("4290","CAP_DC1394","","","0"),
("4291","CAP_DSHOW","","","0"),
("4292","CAP_FFMPEG","","","0"),
("4293","CAP_FIREWARE","","","0"),
("4294","CAP_FIREWIRE","","","0"),
("4295","CAP_GIGANETIX","","","0"),
("4296","CAP_GPHOTO2","","","0"),
("4297","CAP_GSTREAMER","","","0"),
("4298","CAP_IEEE1394","","","0"),
("4299","CAP_IMAGES","","","0"),
("4300","CAP_INTELPERC","","","0"),
("4301","CAP_INTELPERC_DEPTH_GENERATOR","","","0"),
("4302","CAP_INTELPERC_DEPTH_MAP","","","0"),
("4303","CAP_INTELPERC_GENERATORS_MASK","","","0"),
("4304","CAP_INTELPERC_IMAGE","","","0"),
("4305","CAP_INTELPERC_IMAGE_GENERATOR","","","0"),
("4306","CAP_INTELPERC_IR_MAP","","","0"),
("4307","CAP_INTELPERC_UVDEPTH_MAP","","","0"),
("4308","CAP_INTEL_MFX","","","0"),
("4309","CAP_MODE_BGR","","","0"),
("4310","CAP_MODE_GRAY","","","0"),
("4311","CAP_MODE_RGB","","","0"),
("4312","CAP_MODE_YUYV","","","0"),
("4313","CAP_MSMF","","","0"),
("4314","CAP_OPENCV_MJPEG","","","0"),
("4315","CAP_OPENNI","","","0"),
("4316","CAP_OPENNI2","","","0"),
("4317","CAP_OPENNI2_ASUS","","","0"),
("4318","CAP_OPENNI_ASUS","","","0"),
("4319","CAP_OPENNI_BGR_IMAGE","","","0"),
("4320","CAP_OPENNI_DEPTH_GENERATOR","","","0"),
("4321","CAP_OPENNI_DEPTH_GENERATOR_BASELINE","","","0"),
("4322","CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH","","","0"),
("4323","CAP_OPENNI_DEPTH_GENERATOR_PRESENT","","","0"),
("4324","CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION","","","0"),
("4325","CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON","","","0"),
("4326","CAP_OPENNI_DEPTH_MAP","","","0"),
("4327","CAP_OPENNI_DISPARITY_MAP","","","0"),
("4328","CAP_OPENNI_DISPARITY_MAP_32F","","","0"),
("4329","CAP_OPENNI_GENERATORS_MASK","","","0"),
("4330","CAP_OPENNI_GRAY_IMAGE","","","0"),
("4331","CAP_OPENNI_IMAGE_GENERATOR","","","0"),
("4332","CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE","","","0"),
("4333","CAP_OPENNI_IMAGE_GENERATOR_PRESENT","","","0"),
("4334","CAP_OPENNI_IR_GENERATOR","","","0"),
("4335","CAP_OPENNI_IR_GENERATOR_PRESENT","","","0"),
("4336","CAP_OPENNI_IR_IMAGE","","","0"),
("4337","CAP_OPENNI_POINT_CLOUD_MAP","","","0"),
("4338","CAP_OPENNI_QVGA_30HZ","","","0"),
("4339","CAP_OPENNI_QVGA_60HZ","","","0"),
("4340","CAP_OPENNI_SXGA_15HZ","","","0"),
("4341","CAP_OPENNI_SXGA_30HZ","","","0"),
("4342","CAP_OPENNI_VALID_DEPTH_MASK","","","0"),
("4343","CAP_OPENNI_VGA_30HZ","","","0"),
("4344","CAP_PROP_APERTURE","","","0"),
("4345","CAP_PROP_AUTOFOCUS","","","0");
INSERT INTO function VALUES
("4346","CAP_PROP_AUTO_EXPOSURE","","","0"),
("4347","CAP_PROP_BACKLIGHT","","","0"),
("4348","CAP_PROP_BRIGHTNESS","","","0"),
("4349","CAP_PROP_BUFFERSIZE","","","0"),
("4350","CAP_PROP_CONTRAST","","","0"),
("4351","CAP_PROP_CONVERT_RGB","","","0"),
("4352","CAP_PROP_DC1394_MAX","","","0"),
("4353","CAP_PROP_DC1394_MODE_AUTO","","","0"),
("4354","CAP_PROP_DC1394_MODE_MANUAL","","","0"),
("4355","CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO","","","0"),
("4356","CAP_PROP_DC1394_OFF","","","0"),
("4357","CAP_PROP_EXPOSURE","","","0"),
("4358","CAP_PROP_EXPOSUREPROGRAM","","","0"),
("4359","CAP_PROP_FOCUS","","","0"),
("4360","CAP_PROP_FORMAT","","","0"),
("4361","CAP_PROP_FOURCC","","","0"),
("4362","CAP_PROP_FPS","","","0"),
("4363","CAP_PROP_FRAME_COUNT","","","0"),
("4364","CAP_PROP_FRAME_HEIGHT","","","0"),
("4365","CAP_PROP_FRAME_WIDTH","","","0"),
("4366","CAP_PROP_GAIN","","","0"),
("4367","CAP_PROP_GAMMA","","","0"),
("4368","CAP_PROP_GIGA_FRAME_HEIGH_MAX","","","0"),
("4369","CAP_PROP_GIGA_FRAME_OFFSET_X","","","0"),
("4370","CAP_PROP_GIGA_FRAME_OFFSET_Y","","","0"),
("4371","CAP_PROP_GIGA_FRAME_SENS_HEIGH","","","0"),
("4372","CAP_PROP_GIGA_FRAME_SENS_WIDTH","","","0"),
("4373","CAP_PROP_GIGA_FRAME_WIDTH_MAX","","","0"),
("4374","CAP_PROP_GPHOTO2_COLLECT_MSGS","","","0"),
("4375","CAP_PROP_GPHOTO2_FLUSH_MSGS","","","0"),
("4376","CAP_PROP_GPHOTO2_PREVIEW","","","0"),
("4377","CAP_PROP_GPHOTO2_RELOAD_CONFIG","","","0"),
("4378","CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE","","","0"),
("4379","CAP_PROP_GPHOTO2_WIDGET_ENUMERATE","","","0"),
("4380","CAP_PROP_GSTREAMER_QUEUE_LENGTH","","","0"),
("4381","CAP_PROP_GUID","","","0"),
("4382","CAP_PROP_HUE","","","0"),
("4383","CAP_PROP_IMAGES_BASE","","","0"),
("4384","CAP_PROP_IMAGES_LAST","","","0"),
("4385","CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD","","","0"),
("4386","CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ","","","0"),
("4387","CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT","","","0"),
("4388","CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE","","","0"),
("4389","CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE","","","0"),
("4390","CAP_PROP_INTELPERC_PROFILE_COUNT","","","0"),
("4391","CAP_PROP_INTELPERC_PROFILE_IDX","","","0"),
("4392","CAP_PROP_IOS_DEVICE_EXPOSURE","","","0"),
("4393","CAP_PROP_IOS_DEVICE_FLASH","","","0"),
("4394","CAP_PROP_IOS_DEVICE_FOCUS","","","0"),
("4395","CAP_PROP_IOS_DEVICE_TORCH","","","0"),
("4396","CAP_PROP_IOS_DEVICE_WHITEBALANCE","","","0"),
("4397","CAP_PROP_IRIS","","","0"),
("4398","CAP_PROP_ISO_SPEED","","","0"),
("4399","CAP_PROP_MODE","","","0"),
("4400","CAP_PROP_MONOCHROME","","","0"),
("4401","CAP_PROP_OPENNI2_MIRROR","","","0"),
("4402","CAP_PROP_OPENNI2_SYNC","","","0"),
("4403","CAP_PROP_OPENNI_APPROX_FRAME_SYNC","","","0"),
("4404","CAP_PROP_OPENNI_BASELINE","","","0"),
("4405","CAP_PROP_OPENNI_CIRCLE_BUFFER","","","0"),
("4406","CAP_PROP_OPENNI_FOCAL_LENGTH","","","0"),
("4407","CAP_PROP_OPENNI_FRAME_MAX_DEPTH","","","0"),
("4408","CAP_PROP_OPENNI_GENERATOR_PRESENT","","","0"),
("4409","CAP_PROP_OPENNI_MAX_BUFFER_SIZE","","","0"),
("4410","CAP_PROP_OPENNI_MAX_TIME_DURATION","","","0"),
("4411","CAP_PROP_OPENNI_OUTPUT_MODE","","","0"),
("4412","CAP_PROP_OPENNI_REGISTRATION","","","0"),
("4413","CAP_PROP_OPENNI_REGISTRATION_ON","","","0"),
("4414","CAP_PROP_PAN","","","0"),
("4415","CAP_PROP_POS_AVI_RATIO","","","0"),
("4416","CAP_PROP_POS_FRAMES","","","0"),
("4417","CAP_PROP_POS_MSEC","","","0"),
("4418","CAP_PROP_PVAPI_BINNINGX","","","0"),
("4419","CAP_PROP_PVAPI_BINNINGY","","","0"),
("4420","CAP_PROP_PVAPI_DECIMATIONHORIZONTAL","","","0"),
("4421","CAP_PROP_PVAPI_DECIMATIONVERTICAL","","","0"),
("4422","CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE","","","0"),
("4423","CAP_PROP_PVAPI_MULTICASTIP","","","0"),
("4424","CAP_PROP_PVAPI_PIXELFORMAT","","","0"),
("4425","CAP_PROP_RECTIFICATION","","","0"),
("4426","CAP_PROP_ROLL","","","0"),
("4427","CAP_PROP_SATURATION","","","0"),
("4428","CAP_PROP_SETTINGS","","","0"),
("4429","CAP_PROP_SHARPNESS","","","0"),
("4430","CAP_PROP_SPEED","","","0"),
("4431","CAP_PROP_TEMPERATURE","","","0"),
("4432","CAP_PROP_TILT","","","0"),
("4433","CAP_PROP_TRIGGER","","","0"),
("4434","CAP_PROP_TRIGGER_DELAY","","","0"),
("4435","CAP_PROP_VIEWFINDER","","","0"),
("4436","CAP_PROP_WHITE_BALANCE_BLUE_U","","","0"),
("4437","CAP_PROP_WHITE_BALANCE_RED_V","","","0"),
("4438","CAP_PROP_XI_ACQ_BUFFER_SIZE","","","0"),
("4439","CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT","","","0"),
("4440","CAP_PROP_XI_ACQ_FRAME_BURST_COUNT","","","0"),
("4441","CAP_PROP_XI_ACQ_TIMING_MODE","","","0"),
("4442","CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT","","","0"),
("4443","CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE","","","0"),
("4444","CAP_PROP_XI_AEAG","","","0"),
("4445","CAP_PROP_XI_AEAG_LEVEL","","","0");
INSERT INTO function VALUES
("4446","CAP_PROP_XI_AEAG_ROI_HEIGHT","","","0"),
("4447","CAP_PROP_XI_AEAG_ROI_OFFSET_X","","","0"),
("4448","CAP_PROP_XI_AEAG_ROI_OFFSET_Y","","","0"),
("4449","CAP_PROP_XI_AEAG_ROI_WIDTH","","","0"),
("4450","CAP_PROP_XI_AE_MAX_LIMIT","","","0"),
("4451","CAP_PROP_XI_AG_MAX_LIMIT","","","0"),
("4452","CAP_PROP_XI_APPLY_CMS","","","0"),
("4453","CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION","","","0"),
("4454","CAP_PROP_XI_AUTO_WB","","","0"),
("4455","CAP_PROP_XI_AVAILABLE_BANDWIDTH","","","0"),
("4456","CAP_PROP_XI_BINNING_HORIZONTAL","","","0"),
("4457","CAP_PROP_XI_BINNING_PATTERN","","","0"),
("4458","CAP_PROP_XI_BINNING_SELECTOR","","","0"),
("4459","CAP_PROP_XI_BINNING_VERTICAL","","","0"),
("4460","CAP_PROP_XI_BPC","","","0"),
("4461","CAP_PROP_XI_BUFFERS_QUEUE_SIZE","","","0"),
("4462","CAP_PROP_XI_BUFFER_POLICY","","","0"),
("4463","CAP_PROP_XI_CC_MATRIX_00","","","0"),
("4464","CAP_PROP_XI_CC_MATRIX_01","","","0"),
("4465","CAP_PROP_XI_CC_MATRIX_02","","","0"),
("4466","CAP_PROP_XI_CC_MATRIX_03","","","0"),
("4467","CAP_PROP_XI_CC_MATRIX_10","","","0"),
("4468","CAP_PROP_XI_CC_MATRIX_11","","","0"),
("4469","CAP_PROP_XI_CC_MATRIX_12","","","0"),
("4470","CAP_PROP_XI_CC_MATRIX_13","","","0"),
("4471","CAP_PROP_XI_CC_MATRIX_20","","","0"),
("4472","CAP_PROP_XI_CC_MATRIX_21","","","0"),
("4473","CAP_PROP_XI_CC_MATRIX_22","","","0"),
("4474","CAP_PROP_XI_CC_MATRIX_23","","","0"),
("4475","CAP_PROP_XI_CC_MATRIX_30","","","0"),
("4476","CAP_PROP_XI_CC_MATRIX_31","","","0"),
("4477","CAP_PROP_XI_CC_MATRIX_32","","","0"),
("4478","CAP_PROP_XI_CC_MATRIX_33","","","0"),
("4479","CAP_PROP_XI_CHIP_TEMP","","","0"),
("4480","CAP_PROP_XI_CMS","","","0"),
("4481","CAP_PROP_XI_COLOR_FILTER_ARRAY","","","0"),
("4482","CAP_PROP_XI_COLUMN_FPN_CORRECTION","","","0"),
("4483","CAP_PROP_XI_COOLING","","","0"),
("4484","CAP_PROP_XI_COUNTER_SELECTOR","","","0"),
("4485","CAP_PROP_XI_COUNTER_VALUE","","","0"),
("4486","CAP_PROP_XI_DATA_FORMAT","","","0"),
("4487","CAP_PROP_XI_DEBOUNCE_EN","","","0"),
("4488","CAP_PROP_XI_DEBOUNCE_POL","","","0"),
("4489","CAP_PROP_XI_DEBOUNCE_T0","","","0"),
("4490","CAP_PROP_XI_DEBOUNCE_T1","","","0"),
("4491","CAP_PROP_XI_DEBUG_LEVEL","","","0"),
("4492","CAP_PROP_XI_DECIMATION_HORIZONTAL","","","0"),
("4493","CAP_PROP_XI_DECIMATION_PATTERN","","","0"),
("4494","CAP_PROP_XI_DECIMATION_SELECTOR","","","0"),
("4495","CAP_PROP_XI_DECIMATION_VERTICAL","","","0"),
("4496","CAP_PROP_XI_DEFAULT_CC_MATRIX","","","0"),
("4497","CAP_PROP_XI_DEVICE_MODEL_ID","","","0"),
("4498","CAP_PROP_XI_DEVICE_RESET","","","0"),
("4499","CAP_PROP_XI_DEVICE_SN","","","0"),
("4500","CAP_PROP_XI_DOWNSAMPLING","","","0"),
("4501","CAP_PROP_XI_DOWNSAMPLING_TYPE","","","0"),
("4502","CAP_PROP_XI_EXPOSURE","","","0"),
("4503","CAP_PROP_XI_EXPOSURE_BURST_COUNT","","","0"),
("4504","CAP_PROP_XI_EXP_PRIORITY","","","0"),
("4505","CAP_PROP_XI_FFS_ACCESS_KEY","","","0"),
("4506","CAP_PROP_XI_FFS_FILE_ID","","","0"),
("4507","CAP_PROP_XI_FFS_FILE_SIZE","","","0"),
("4508","CAP_PROP_XI_FRAMERATE","","","0"),
("4509","CAP_PROP_XI_FREE_FFS_SIZE","","","0"),
("4510","CAP_PROP_XI_GAIN","","","0"),
("4511","CAP_PROP_XI_GAIN_SELECTOR","","","0"),
("4512","CAP_PROP_XI_GAMMAC","","","0"),
("4513","CAP_PROP_XI_GAMMAY","","","0"),
("4514","CAP_PROP_XI_GPI_LEVEL","","","0"),
("4515","CAP_PROP_XI_GPI_MODE","","","0"),
("4516","CAP_PROP_XI_GPI_SELECTOR","","","0"),
("4517","CAP_PROP_XI_GPO_MODE","","","0"),
("4518","CAP_PROP_XI_GPO_SELECTOR","","","0"),
("4519","CAP_PROP_XI_HDR","","","0"),
("4520","CAP_PROP_XI_HDR_KNEEPOINT_COUNT","","","0"),
("4521","CAP_PROP_XI_HDR_T1","","","0"),
("4522","CAP_PROP_XI_HDR_T2","","","0"),
("4523","CAP_PROP_XI_HEIGHT","","","0"),
("4524","CAP_PROP_XI_HOUS_BACK_SIDE_TEMP","","","0"),
("4525","CAP_PROP_XI_HOUS_TEMP","","","0"),
("4526","CAP_PROP_XI_HW_REVISION","","","0"),
("4527","CAP_PROP_XI_IMAGE_BLACK_LEVEL","","","0"),
("4528","CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH","","","0"),
("4529","CAP_PROP_XI_IMAGE_DATA_FORMAT","","","0"),
("4530","CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA","","","0"),
("4531","CAP_PROP_XI_IMAGE_IS_COLOR","","","0"),
("4532","CAP_PROP_XI_IMAGE_PAYLOAD_SIZE","","","0"),
("4533","CAP_PROP_XI_IS_COOLED","","","0"),
("4534","CAP_PROP_XI_IS_DEVICE_EXIST","","","0"),
("4535","CAP_PROP_XI_KNEEPOINT1","","","0"),
("4536","CAP_PROP_XI_KNEEPOINT2","","","0"),
("4537","CAP_PROP_XI_LED_MODE","","","0"),
("4538","CAP_PROP_XI_LED_SELECTOR","","","0"),
("4539","CAP_PROP_XI_LENS_APERTURE_VALUE","","","0"),
("4540","CAP_PROP_XI_LENS_FEATURE","","","0"),
("4541","CAP_PROP_XI_LENS_FEATURE_SELECTOR","","","0"),
("4542","CAP_PROP_XI_LENS_FOCAL_LENGTH","","","0"),
("4543","CAP_PROP_XI_LENS_FOCUS_DISTANCE","","","0"),
("4544","CAP_PROP_XI_LENS_FOCUS_MOVE","","","0"),
("4545","CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE","","","0");
INSERT INTO function VALUES
("4546","CAP_PROP_XI_LENS_MODE","","","0"),
("4547","CAP_PROP_XI_LIMIT_BANDWIDTH","","","0"),
("4548","CAP_PROP_XI_LUT_EN","","","0"),
("4549","CAP_PROP_XI_LUT_INDEX","","","0"),
("4550","CAP_PROP_XI_LUT_VALUE","","","0"),
("4551","CAP_PROP_XI_MANUAL_WB","","","0"),
("4552","CAP_PROP_XI_OFFSET_X","","","0"),
("4553","CAP_PROP_XI_OFFSET_Y","","","0"),
("4554","CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH","","","0"),
("4555","CAP_PROP_XI_OUTPUT_DATA_PACKING","","","0"),
("4556","CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE","","","0"),
("4557","CAP_PROP_XI_RECENT_FRAME","","","0"),
("4558","CAP_PROP_XI_REGION_MODE","","","0"),
("4559","CAP_PROP_XI_REGION_SELECTOR","","","0"),
("4560","CAP_PROP_XI_ROW_FPN_CORRECTION","","","0"),
("4561","CAP_PROP_XI_SENSOR_BOARD_TEMP","","","0"),
("4562","CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ","","","0"),
("4563","CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX","","","0"),
("4564","CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH","","","0"),
("4565","CAP_PROP_XI_SENSOR_FEATURE_SELECTOR","","","0"),
("4566","CAP_PROP_XI_SENSOR_FEATURE_VALUE","","","0"),
("4567","CAP_PROP_XI_SENSOR_MODE","","","0"),
("4568","CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT","","","0"),
("4569","CAP_PROP_XI_SENSOR_TAPS","","","0"),
("4570","CAP_PROP_XI_SHARPNESS","","","0"),
("4571","CAP_PROP_XI_SHUTTER_TYPE","","","0"),
("4572","CAP_PROP_XI_TARGET_TEMP","","","0"),
("4573","CAP_PROP_XI_TEST_PATTERN","","","0"),
("4574","CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR","","","0"),
("4575","CAP_PROP_XI_TIMEOUT","","","0"),
("4576","CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT","","","0"),
("4577","CAP_PROP_XI_TRG_DELAY","","","0"),
("4578","CAP_PROP_XI_TRG_SELECTOR","","","0"),
("4579","CAP_PROP_XI_TRG_SOFTWARE","","","0"),
("4580","CAP_PROP_XI_TRG_SOURCE","","","0"),
("4581","CAP_PROP_XI_TS_RST_MODE","","","0"),
("4582","CAP_PROP_XI_TS_RST_SOURCE","","","0"),
("4583","CAP_PROP_XI_USED_FFS_SIZE","","","0"),
("4584","CAP_PROP_XI_WB_KB","","","0"),
("4585","CAP_PROP_XI_WB_KG","","","0"),
("4586","CAP_PROP_XI_WB_KR","","","0"),
("4587","CAP_PROP_XI_WIDTH","","","0"),
("4588","CAP_PROP_ZOOM","","","0"),
("4589","CAP_PVAPI","","","0"),
("4590","CAP_PVAPI_DECIMATION_2OUTOF16","","","0"),
("4591","CAP_PVAPI_DECIMATION_2OUTOF4","","","0"),
("4592","CAP_PVAPI_DECIMATION_2OUTOF8","","","0"),
("4593","CAP_PVAPI_DECIMATION_OFF","","","0"),
("4594","CAP_PVAPI_FSTRIGMODE_FIXEDRATE","","","0"),
("4595","CAP_PVAPI_FSTRIGMODE_FREERUN","","","0"),
("4596","CAP_PVAPI_FSTRIGMODE_SOFTWARE","","","0"),
("4597","CAP_PVAPI_FSTRIGMODE_SYNCIN1","","","0"),
("4598","CAP_PVAPI_FSTRIGMODE_SYNCIN2","","","0"),
("4599","CAP_PVAPI_PIXELFORMAT_BAYER16","","","0"),
("4600","CAP_PVAPI_PIXELFORMAT_BAYER8","","","0"),
("4601","CAP_PVAPI_PIXELFORMAT_BGR24","","","0"),
("4602","CAP_PVAPI_PIXELFORMAT_BGRA32","","","0"),
("4603","CAP_PVAPI_PIXELFORMAT_MONO16","","","0"),
("4604","CAP_PVAPI_PIXELFORMAT_MONO8","","","0"),
("4605","CAP_PVAPI_PIXELFORMAT_RGB24","","","0"),
("4606","CAP_PVAPI_PIXELFORMAT_RGBA32","","","0"),
("4607","CAP_QT","","","0"),
("4608","CAP_UNICAP","","","0"),
("4609","CAP_V4L","","","0"),
("4610","CAP_V4L2","","","0"),
("4611","CAP_VFW","","","0"),
("4612","CAP_WINRT","","","0"),
("4613","CAP_XIAPI","","","0"),
("4614","CASCADE_DO_CANNY_PRUNING","","","0"),
("4615","CASCADE_DO_ROUGH_SEARCH","","","0"),
("4616","CASCADE_FIND_BIGGEST_OBJECT","","","0"),
("4617","CASCADE_SCALE_IMAGE","","","0"),
("4618","CCL_DEFAULT","","","0"),
("4619","CCL_GRANA","","","0"),
("4620","CCL_WU","","","0"),
("4621","CC_STAT_AREA","","","0"),
("4622","CC_STAT_HEIGHT","","","0"),
("4623","CC_STAT_LEFT","","","0"),
("4624","CC_STAT_MAX","","","0"),
("4625","CC_STAT_TOP","","","0"),
("4626","CC_STAT_WIDTH","","","0"),
("4627","CHAIN_APPROX_NONE","","","0"),
("4628","CHAIN_APPROX_SIMPLE","","","0"),
("4629","CHAIN_APPROX_TC89_KCOS","","","0"),
("4630","CHAIN_APPROX_TC89_L1","","","0"),
("4631","CIRCLES_GRID_FINDER_PARAMETERS_ASYMMETRIC_GRID","","","0"),
("4632","CIRCLES_GRID_FINDER_PARAMETERS_SYMMETRIC_GRID","","","0"),
("4633","CMP_EQ","","","0"),
("4634","CMP_GE","","","0"),
("4635","CMP_GT","","","0"),
("4636","CMP_LE","","","0"),
("4637","CMP_LT","","","0"),
("4638","CMP_NE","","","0"),
("4639","COLORMAP_AUTUMN","","","0"),
("4640","COLORMAP_BONE","","","0"),
("4641","COLORMAP_COOL","","","0"),
("4642","COLORMAP_HOT","","","0"),
("4643","COLORMAP_HSV","","","0"),
("4644","COLORMAP_JET","","","0"),
("4645","COLORMAP_OCEAN","","","0");
INSERT INTO function VALUES
("4646","COLORMAP_PARULA","","","0"),
("4647","COLORMAP_PINK","","","0"),
("4648","COLORMAP_RAINBOW","","","0"),
("4649","COLORMAP_SPRING","","","0"),
("4650","COLORMAP_SUMMER","","","0"),
("4651","COLORMAP_WINTER","","","0"),
("4652","COLOR_BAYER_BG2BGR","","","0"),
("4653","COLOR_BAYER_BG2BGRA","","","0"),
("4654","COLOR_BAYER_BG2BGR_EA","","","0"),
("4655","COLOR_BAYER_BG2BGR_VNG","","","0"),
("4656","COLOR_BAYER_BG2GRAY","","","0"),
("4657","COLOR_BAYER_BG2RGB","","","0"),
("4658","COLOR_BAYER_BG2RGBA","","","0"),
("4659","COLOR_BAYER_BG2RGB_EA","","","0"),
("4660","COLOR_BAYER_BG2RGB_VNG","","","0"),
("4661","COLOR_BAYER_GB2BGR","","","0"),
("4662","COLOR_BAYER_GB2BGRA","","","0"),
("4663","COLOR_BAYER_GB2BGR_EA","","","0"),
("4664","COLOR_BAYER_GB2BGR_VNG","","","0"),
("4665","COLOR_BAYER_GB2GRAY","","","0"),
("4666","COLOR_BAYER_GB2RGB","","","0"),
("4667","COLOR_BAYER_GB2RGBA","","","0"),
("4668","COLOR_BAYER_GB2RGB_EA","","","0"),
("4669","COLOR_BAYER_GB2RGB_VNG","","","0"),
("4670","COLOR_BAYER_GR2BGR","","","0"),
("4671","COLOR_BAYER_GR2BGRA","","","0"),
("4672","COLOR_BAYER_GR2BGR_EA","","","0"),
("4673","COLOR_BAYER_GR2BGR_VNG","","","0"),
("4674","COLOR_BAYER_GR2GRAY","","","0"),
("4675","COLOR_BAYER_GR2RGB","","","0"),
("4676","COLOR_BAYER_GR2RGBA","","","0"),
("4677","COLOR_BAYER_GR2RGB_EA","","","0"),
("4678","COLOR_BAYER_GR2RGB_VNG","","","0"),
("4679","COLOR_BAYER_RG2BGR","","","0"),
("4680","COLOR_BAYER_RG2BGRA","","","0"),
("4681","COLOR_BAYER_RG2BGR_EA","","","0"),
("4682","COLOR_BAYER_RG2BGR_VNG","","","0"),
("4683","COLOR_BAYER_RG2GRAY","","","0"),
("4684","COLOR_BAYER_RG2RGB","","","0"),
("4685","COLOR_BAYER_RG2RGBA","","","0"),
("4686","COLOR_BAYER_RG2RGB_EA","","","0"),
("4687","COLOR_BAYER_RG2RGB_VNG","","","0"),
("4688","COLOR_BGR2BGR555","","","0"),
("4689","COLOR_BGR2BGR565","","","0"),
("4690","COLOR_BGR2BGRA","","","0"),
("4691","COLOR_BGR2GRAY","","","0"),
("4692","COLOR_BGR2HLS","","","0"),
("4693","COLOR_BGR2HLS_FULL","","","0"),
("4694","COLOR_BGR2HSV","","","0"),
("4695","COLOR_BGR2HSV_FULL","","","0"),
("4696","COLOR_BGR2LAB","","","0"),
("4697","COLOR_BGR2LUV","","","0"),
("4698","COLOR_BGR2Lab","","","0"),
("4699","COLOR_BGR2Luv","","","0"),
("4700","COLOR_BGR2RGB","","","0"),
("4701","COLOR_BGR2RGBA","","","0"),
("4702","COLOR_BGR2XYZ","","","0"),
("4703","COLOR_BGR2YCR_CB","","","0"),
("4704","COLOR_BGR2YCrCb","","","0"),
("4705","COLOR_BGR2YUV","","","0"),
("4706","COLOR_BGR2YUV_I420","","","0"),
("4707","COLOR_BGR2YUV_IYUV","","","0"),
("4708","COLOR_BGR2YUV_YV12","","","0"),
("4709","COLOR_BGR5552BGR","","","0"),
("4710","COLOR_BGR5552BGRA","","","0"),
("4711","COLOR_BGR5552GRAY","","","0"),
("4712","COLOR_BGR5552RGB","","","0"),
("4713","COLOR_BGR5552RGBA","","","0"),
("4714","COLOR_BGR5652BGR","","","0"),
("4715","COLOR_BGR5652BGRA","","","0"),
("4716","COLOR_BGR5652GRAY","","","0"),
("4717","COLOR_BGR5652RGB","","","0"),
("4718","COLOR_BGR5652RGBA","","","0"),
("4719","COLOR_BGRA2BGR","","","0"),
("4720","COLOR_BGRA2BGR555","","","0"),
("4721","COLOR_BGRA2BGR565","","","0"),
("4722","COLOR_BGRA2GRAY","","","0"),
("4723","COLOR_BGRA2RGB","","","0"),
("4724","COLOR_BGRA2RGBA","","","0"),
("4725","COLOR_BGRA2YUV_I420","","","0"),
("4726","COLOR_BGRA2YUV_IYUV","","","0"),
("4727","COLOR_BGRA2YUV_YV12","","","0"),
("4728","COLOR_BayerBG2BGR","","","0"),
("4729","COLOR_BayerBG2BGRA","","","0"),
("4730","COLOR_BayerBG2BGR_EA","","","0"),
("4731","COLOR_BayerBG2BGR_VNG","","","0"),
("4732","COLOR_BayerBG2GRAY","","","0"),
("4733","COLOR_BayerBG2RGB","","","0"),
("4734","COLOR_BayerBG2RGBA","","","0"),
("4735","COLOR_BayerBG2RGB_EA","","","0"),
("4736","COLOR_BayerBG2RGB_VNG","","","0"),
("4737","COLOR_BayerGB2BGR","","","0"),
("4738","COLOR_BayerGB2BGRA","","","0"),
("4739","COLOR_BayerGB2BGR_EA","","","0"),
("4740","COLOR_BayerGB2BGR_VNG","","","0"),
("4741","COLOR_BayerGB2GRAY","","","0"),
("4742","COLOR_BayerGB2RGB","","","0"),
("4743","COLOR_BayerGB2RGBA","","","0"),
("4744","COLOR_BayerGB2RGB_EA","","","0"),
("4745","COLOR_BayerGB2RGB_VNG","","","0");
INSERT INTO function VALUES
("4746","COLOR_BayerGR2BGR","","","0"),
("4747","COLOR_BayerGR2BGRA","","","0"),
("4748","COLOR_BayerGR2BGR_EA","","","0"),
("4749","COLOR_BayerGR2BGR_VNG","","","0"),
("4750","COLOR_BayerGR2GRAY","","","0"),
("4751","COLOR_BayerGR2RGB","","","0"),
("4752","COLOR_BayerGR2RGBA","","","0"),
("4753","COLOR_BayerGR2RGB_EA","","","0"),
("4754","COLOR_BayerGR2RGB_VNG","","","0"),
("4755","COLOR_BayerRG2BGR","","","0"),
("4756","COLOR_BayerRG2BGRA","","","0"),
("4757","COLOR_BayerRG2BGR_EA","","","0"),
("4758","COLOR_BayerRG2BGR_VNG","","","0"),
("4759","COLOR_BayerRG2GRAY","","","0"),
("4760","COLOR_BayerRG2RGB","","","0"),
("4761","COLOR_BayerRG2RGBA","","","0"),
("4762","COLOR_BayerRG2RGB_EA","","","0"),
("4763","COLOR_BayerRG2RGB_VNG","","","0"),
("4764","COLOR_COLORCVT_MAX","","","0"),
("4765","COLOR_GRAY2BGR","","","0"),
("4766","COLOR_GRAY2BGR555","","","0"),
("4767","COLOR_GRAY2BGR565","","","0"),
("4768","COLOR_GRAY2BGRA","","","0"),
("4769","COLOR_GRAY2RGB","","","0"),
("4770","COLOR_GRAY2RGBA","","","0"),
("4771","COLOR_HLS2BGR","","","0"),
("4772","COLOR_HLS2BGR_FULL","","","0"),
("4773","COLOR_HLS2RGB","","","0"),
("4774","COLOR_HLS2RGB_FULL","","","0"),
("4775","COLOR_HSV2BGR","","","0"),
("4776","COLOR_HSV2BGR_FULL","","","0"),
("4777","COLOR_HSV2RGB","","","0"),
("4778","COLOR_HSV2RGB_FULL","","","0"),
("4779","COLOR_LAB2BGR","","","0"),
("4780","COLOR_LAB2LBGR","","","0"),
("4781","COLOR_LAB2LRGB","","","0"),
("4782","COLOR_LAB2RGB","","","0"),
("4783","COLOR_LBGR2LAB","","","0"),
("4784","COLOR_LBGR2LUV","","","0"),
("4785","COLOR_LBGR2Lab","","","0"),
("4786","COLOR_LBGR2Luv","","","0"),
("4787","COLOR_LRGB2LAB","","","0"),
("4788","COLOR_LRGB2LUV","","","0"),
("4789","COLOR_LRGB2Lab","","","0"),
("4790","COLOR_LRGB2Luv","","","0"),
("4791","COLOR_LUV2BGR","","","0"),
("4792","COLOR_LUV2LBGR","","","0"),
("4793","COLOR_LUV2LRGB","","","0"),
("4794","COLOR_LUV2RGB","","","0"),
("4795","COLOR_Lab2BGR","","","0"),
("4796","COLOR_Lab2LBGR","","","0"),
("4797","COLOR_Lab2LRGB","","","0"),
("4798","COLOR_Lab2RGB","","","0"),
("4799","COLOR_Luv2BGR","","","0"),
("4800","COLOR_Luv2LBGR","","","0"),
("4801","COLOR_Luv2LRGB","","","0"),
("4802","COLOR_Luv2RGB","","","0"),
("4803","COLOR_M_RGBA2RGBA","","","0"),
("4804","COLOR_RGB2BGR","","","0"),
("4805","COLOR_RGB2BGR555","","","0"),
("4806","COLOR_RGB2BGR565","","","0"),
("4807","COLOR_RGB2BGRA","","","0"),
("4808","COLOR_RGB2GRAY","","","0"),
("4809","COLOR_RGB2HLS","","","0"),
("4810","COLOR_RGB2HLS_FULL","","","0"),
("4811","COLOR_RGB2HSV","","","0"),
("4812","COLOR_RGB2HSV_FULL","","","0"),
("4813","COLOR_RGB2LAB","","","0"),
("4814","COLOR_RGB2LUV","","","0"),
("4815","COLOR_RGB2Lab","","","0"),
("4816","COLOR_RGB2Luv","","","0"),
("4817","COLOR_RGB2RGBA","","","0"),
("4818","COLOR_RGB2XYZ","","","0"),
("4819","COLOR_RGB2YCR_CB","","","0"),
("4820","COLOR_RGB2YCrCb","","","0"),
("4821","COLOR_RGB2YUV","","","0"),
("4822","COLOR_RGB2YUV_I420","","","0"),
("4823","COLOR_RGB2YUV_IYUV","","","0"),
("4824","COLOR_RGB2YUV_YV12","","","0"),
("4825","COLOR_RGBA2BGR","","","0"),
("4826","COLOR_RGBA2BGR555","","","0"),
("4827","COLOR_RGBA2BGR565","","","0"),
("4828","COLOR_RGBA2BGRA","","","0"),
("4829","COLOR_RGBA2GRAY","","","0"),
("4830","COLOR_RGBA2M_RGBA","","","0"),
("4831","COLOR_RGBA2RGB","","","0"),
("4832","COLOR_RGBA2YUV_I420","","","0"),
("4833","COLOR_RGBA2YUV_IYUV","","","0"),
("4834","COLOR_RGBA2YUV_YV12","","","0"),
("4835","COLOR_RGBA2mRGBA","","","0"),
("4836","COLOR_XYZ2BGR","","","0"),
("4837","COLOR_XYZ2RGB","","","0"),
("4838","COLOR_YCR_CB2BGR","","","0"),
("4839","COLOR_YCR_CB2RGB","","","0"),
("4840","COLOR_YCrCb2BGR","","","0"),
("4841","COLOR_YCrCb2RGB","","","0"),
("4842","COLOR_YUV2BGR","","","0"),
("4843","COLOR_YUV2BGRA_I420","","","0"),
("4844","COLOR_YUV2BGRA_IYUV","","","0"),
("4845","COLOR_YUV2BGRA_NV12","","","0");
INSERT INTO function VALUES
("4846","COLOR_YUV2BGRA_NV21","","","0"),
("4847","COLOR_YUV2BGRA_UYNV","","","0"),
("4848","COLOR_YUV2BGRA_UYVY","","","0"),
("4849","COLOR_YUV2BGRA_Y422","","","0"),
("4850","COLOR_YUV2BGRA_YUNV","","","0"),
("4851","COLOR_YUV2BGRA_YUY2","","","0"),
("4852","COLOR_YUV2BGRA_YUYV","","","0"),
("4853","COLOR_YUV2BGRA_YV12","","","0"),
("4854","COLOR_YUV2BGRA_YVYU","","","0"),
("4855","COLOR_YUV2BGR_I420","","","0"),
("4856","COLOR_YUV2BGR_IYUV","","","0"),
("4857","COLOR_YUV2BGR_NV12","","","0"),
("4858","COLOR_YUV2BGR_NV21","","","0"),
("4859","COLOR_YUV2BGR_UYNV","","","0"),
("4860","COLOR_YUV2BGR_UYVY","","","0"),
("4861","COLOR_YUV2BGR_Y422","","","0"),
("4862","COLOR_YUV2BGR_YUNV","","","0"),
("4863","COLOR_YUV2BGR_YUY2","","","0"),
("4864","COLOR_YUV2BGR_YUYV","","","0"),
("4865","COLOR_YUV2BGR_YV12","","","0"),
("4866","COLOR_YUV2BGR_YVYU","","","0"),
("4867","COLOR_YUV2GRAY_420","","","0"),
("4868","COLOR_YUV2GRAY_I420","","","0"),
("4869","COLOR_YUV2GRAY_IYUV","","","0"),
("4870","COLOR_YUV2GRAY_NV12","","","0"),
("4871","COLOR_YUV2GRAY_NV21","","","0"),
("4872","COLOR_YUV2GRAY_UYNV","","","0"),
("4873","COLOR_YUV2GRAY_UYVY","","","0"),
("4874","COLOR_YUV2GRAY_Y422","","","0"),
("4875","COLOR_YUV2GRAY_YUNV","","","0"),
("4876","COLOR_YUV2GRAY_YUY2","","","0"),
("4877","COLOR_YUV2GRAY_YUYV","","","0"),
("4878","COLOR_YUV2GRAY_YV12","","","0"),
("4879","COLOR_YUV2GRAY_YVYU","","","0"),
("4880","COLOR_YUV2RGB","","","0"),
("4881","COLOR_YUV2RGBA_I420","","","0"),
("4882","COLOR_YUV2RGBA_IYUV","","","0"),
("4883","COLOR_YUV2RGBA_NV12","","","0"),
("4884","COLOR_YUV2RGBA_NV21","","","0"),
("4885","COLOR_YUV2RGBA_UYNV","","","0"),
("4886","COLOR_YUV2RGBA_UYVY","","","0"),
("4887","COLOR_YUV2RGBA_Y422","","","0"),
("4888","COLOR_YUV2RGBA_YUNV","","","0"),
("4889","COLOR_YUV2RGBA_YUY2","","","0"),
("4890","COLOR_YUV2RGBA_YUYV","","","0"),
("4891","COLOR_YUV2RGBA_YV12","","","0"),
("4892","COLOR_YUV2RGBA_YVYU","","","0"),
("4893","COLOR_YUV2RGB_I420","","","0"),
("4894","COLOR_YUV2RGB_IYUV","","","0"),
("4895","COLOR_YUV2RGB_NV12","","","0"),
("4896","COLOR_YUV2RGB_NV21","","","0"),
("4897","COLOR_YUV2RGB_UYNV","","","0"),
("4898","COLOR_YUV2RGB_UYVY","","","0"),
("4899","COLOR_YUV2RGB_Y422","","","0"),
("4900","COLOR_YUV2RGB_YUNV","","","0"),
("4901","COLOR_YUV2RGB_YUY2","","","0"),
("4902","COLOR_YUV2RGB_YUYV","","","0"),
("4903","COLOR_YUV2RGB_YV12","","","0"),
("4904","COLOR_YUV2RGB_YVYU","","","0"),
("4905","COLOR_YUV420P2BGR","","","0"),
("4906","COLOR_YUV420P2BGRA","","","0"),
("4907","COLOR_YUV420P2GRAY","","","0"),
("4908","COLOR_YUV420P2RGB","","","0"),
("4909","COLOR_YUV420P2RGBA","","","0"),
("4910","COLOR_YUV420SP2BGR","","","0"),
("4911","COLOR_YUV420SP2BGRA","","","0"),
("4912","COLOR_YUV420SP2GRAY","","","0"),
("4913","COLOR_YUV420SP2RGB","","","0"),
("4914","COLOR_YUV420SP2RGBA","","","0"),
("4915","COLOR_YUV420p2BGR","","","0"),
("4916","COLOR_YUV420p2BGRA","","","0"),
("4917","COLOR_YUV420p2GRAY","","","0"),
("4918","COLOR_YUV420p2RGB","","","0"),
("4919","COLOR_YUV420p2RGBA","","","0"),
("4920","COLOR_YUV420sp2BGR","","","0"),
("4921","COLOR_YUV420sp2BGRA","","","0"),
("4922","COLOR_YUV420sp2GRAY","","","0"),
("4923","COLOR_YUV420sp2RGB","","","0"),
("4924","COLOR_YUV420sp2RGBA","","","0"),
("4925","COLOR_mRGBA2RGBA","","","0"),
("4926","CONTOURS_MATCH_I1","","","0"),
("4927","CONTOURS_MATCH_I2","","","0"),
("4928","CONTOURS_MATCH_I3","","","0"),
("4929","COVAR_COLS","","","0"),
("4930","COVAR_NORMAL","","","0"),
("4931","COVAR_ROWS","","","0"),
("4932","COVAR_SCALE","","","0"),
("4933","COVAR_SCRAMBLED","","","0"),
("4934","COVAR_USE_AVG","","","0"),
("4935","CV_16S","","","0"),
("4936","CV_16SC1","","","0"),
("4937","CV_16SC2","","","0"),
("4938","CV_16SC3","","","0"),
("4939","CV_16SC4","","","0"),
("4940","CV_16U","","","0"),
("4941","CV_16UC1","","","0"),
("4942","CV_16UC2","","","0"),
("4943","CV_16UC3","","","0"),
("4944","CV_16UC4","","","0"),
("4945","CV_32F","","","0");
INSERT INTO function VALUES
("4946","CV_32FC1","","","0"),
("4947","CV_32FC2","","","0"),
("4948","CV_32FC3","","","0"),
("4949","CV_32FC4","","","0"),
("4950","CV_32S","","","0"),
("4951","CV_32SC1","","","0"),
("4952","CV_32SC2","","","0"),
("4953","CV_32SC3","","","0"),
("4954","CV_32SC4","","","0"),
("4955","CV_64F","","","0"),
("4956","CV_64FC1","","","0"),
("4957","CV_64FC2","","","0"),
("4958","CV_64FC3","","","0"),
("4959","CV_64FC4","","","0"),
("4960","CV_8S","","","0"),
("4961","CV_8SC1","","","0"),
("4962","CV_8SC2","","","0"),
("4963","CV_8SC3","","","0"),
("4964","CV_8SC4","","","0"),
("4965","CV_8U","","","0"),
("4966","CV_8UC1","","","0"),
("4967","CV_8UC2","","","0"),
("4968","CV_8UC3","","","0"),
("4969","CV_8UC4","","","0"),
("4970","CamShift","","","0"),
("4971","Canny","","","0"),
("4972","CascadeClassifier","","","0"),
("4973","CascadeClassifier_convert","","","0"),
("4974","CirclesGridFinderParameters","","","0"),
("4975","CirclesGridFinderParameters_ASYMMETRIC_GRID","","","0"),
("4976","CirclesGridFinderParameters_SYMMETRIC_GRID","","","0"),
("4977","DCT_INVERSE","","","0"),
("4978","DCT_ROWS","","","0"),
("4979","DECOMP_CHOLESKY","","","0"),
("4980","DECOMP_EIG","","","0"),
("4981","DECOMP_LU","","","0"),
("4982","DECOMP_NORMAL","","","0"),
("4983","DECOMP_QR","","","0"),
("4984","DECOMP_SVD","","","0"),
("4985","DESCRIPTOR_MATCHER_BRUTEFORCE","","","0"),
("4986","DESCRIPTOR_MATCHER_BRUTEFORCE_HAMMING","","","0"),
("4987","DESCRIPTOR_MATCHER_BRUTEFORCE_HAMMINGLUT","","","0"),
("4988","DESCRIPTOR_MATCHER_BRUTEFORCE_L1","","","0"),
("4989","DESCRIPTOR_MATCHER_BRUTEFORCE_SL2","","","0"),
("4990","DESCRIPTOR_MATCHER_FLANNBASED","","","0"),
("4991","DFT_COMPLEX_INPUT","","","0"),
("4992","DFT_COMPLEX_OUTPUT","","","0"),
("4993","DFT_INVERSE","","","0"),
("4994","DFT_REAL_OUTPUT","","","0"),
("4995","DFT_ROWS","","","0"),
("4996","DFT_SCALE","","","0"),
("4997","DIST_C","","","0"),
("4998","DIST_FAIR","","","0"),
("4999","DIST_HUBER","","","0"),
("5000","DIST_L1","","","0"),
("5001","DIST_L12","","","0"),
("5002","DIST_L2","","","0"),
("5003","DIST_LABEL_CCOMP","","","0"),
("5004","DIST_LABEL_PIXEL","","","0"),
("5005","DIST_MASK_3","","","0"),
("5006","DIST_MASK_5","","","0"),
("5007","DIST_MASK_PRECISE","","","0"),
("5008","DIST_USER","","","0"),
("5009","DIST_WELSCH","","","0"),
("5010","DMatch","","","0"),
("5011","DRAW_MATCHES_FLAGS_DEFAULT","","","0"),
("5012","DRAW_MATCHES_FLAGS_DRAW_OVER_OUTIMG","","","0"),
("5013","DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS","","","0"),
("5014","DRAW_MATCHES_FLAGS_NOT_DRAW_SINGLE_POINTS","","","0"),
("5015","DescriptorMatcher_BRUTEFORCE","","","0"),
("5016","DescriptorMatcher_BRUTEFORCE_HAMMING","","","0"),
("5017","DescriptorMatcher_BRUTEFORCE_HAMMINGLUT","","","0"),
("5018","DescriptorMatcher_BRUTEFORCE_L1","","","0"),
("5019","DescriptorMatcher_BRUTEFORCE_SL2","","","0"),
("5020","DescriptorMatcher_FLANNBASED","","","0"),
("5021","DescriptorMatcher_create","","","0"),
("5022","DrawMatchesFlags_DEFAULT","","","0"),
("5023","DrawMatchesFlags_DRAW_OVER_OUTIMG","","","0"),
("5024","DrawMatchesFlags_DRAW_RICH_KEYPOINTS","","","0"),
("5025","DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS","","","0"),
("5026","DualTVL1OpticalFlow_create","","","0"),
("5027","EMD","","","0"),
("5028","EVENT_FLAG_ALTKEY","","","0"),
("5029","EVENT_FLAG_CTRLKEY","","","0"),
("5030","EVENT_FLAG_LBUTTON","","","0"),
("5031","EVENT_FLAG_MBUTTON","","","0"),
("5032","EVENT_FLAG_RBUTTON","","","0"),
("5033","EVENT_FLAG_SHIFTKEY","","","0"),
("5034","EVENT_LBUTTONDBLCLK","","","0"),
("5035","EVENT_LBUTTONDOWN","","","0"),
("5036","EVENT_LBUTTONUP","","","0"),
("5037","EVENT_MBUTTONDBLCLK","","","0"),
("5038","EVENT_MBUTTONDOWN","","","0"),
("5039","EVENT_MBUTTONUP","","","0"),
("5040","EVENT_MOUSEHWHEEL","","","0"),
("5041","EVENT_MOUSEMOVE","","","0"),
("5042","EVENT_MOUSEWHEEL","","","0"),
("5043","EVENT_RBUTTONDBLCLK","","","0"),
("5044","EVENT_RBUTTONDOWN","","","0"),
("5045","EVENT_RBUTTONUP","","","0");
INSERT INTO function VALUES
("5046","Error","","","0"),
("5047","FAST_FEATURE_DETECTOR_FAST_N","","","0"),
("5048","FAST_FEATURE_DETECTOR_NONMAX_SUPPRESSION","","","0"),
("5049","FAST_FEATURE_DETECTOR_THRESHOLD","","","0"),
("5050","FAST_FEATURE_DETECTOR_TYPE_5_8","","","0"),
("5051","FAST_FEATURE_DETECTOR_TYPE_7_12","","","0"),
("5052","FAST_FEATURE_DETECTOR_TYPE_9_16","","","0"),
("5053","FILE_NODE_EMPTY","","","0"),
("5054","FILE_NODE_FLOAT","","","0"),
("5055","FILE_NODE_FLOW","","","0"),
("5056","FILE_NODE_INT","","","0"),
("5057","FILE_NODE_MAP","","","0"),
("5058","FILE_NODE_NAMED","","","0"),
("5059","FILE_NODE_NONE","","","0"),
("5060","FILE_NODE_REAL","","","0"),
("5061","FILE_NODE_REF","","","0"),
("5062","FILE_NODE_SEQ","","","0"),
("5063","FILE_NODE_STR","","","0"),
("5064","FILE_NODE_STRING","","","0"),
("5065","FILE_NODE_TYPE_MASK","","","0"),
("5066","FILE_NODE_USER","","","0"),
("5067","FILE_STORAGE_APPEND","","","0"),
("5068","FILE_STORAGE_BASE64","","","0"),
("5069","FILE_STORAGE_FORMAT_AUTO","","","0"),
("5070","FILE_STORAGE_FORMAT_JSON","","","0"),
("5071","FILE_STORAGE_FORMAT_MASK","","","0"),
("5072","FILE_STORAGE_FORMAT_XML","","","0"),
("5073","FILE_STORAGE_FORMAT_YAML","","","0"),
("5074","FILE_STORAGE_INSIDE_MAP","","","0"),
("5075","FILE_STORAGE_MEMORY","","","0"),
("5076","FILE_STORAGE_NAME_EXPECTED","","","0"),
("5077","FILE_STORAGE_READ","","","0"),
("5078","FILE_STORAGE_UNDEFINED","","","0"),
("5079","FILE_STORAGE_VALUE_EXPECTED","","","0"),
("5080","FILE_STORAGE_WRITE","","","0"),
("5081","FILE_STORAGE_WRITE_BASE64","","","0"),
("5082","FILLED","","","0"),
("5083","FLOODFILL_FIXED_RANGE","","","0"),
("5084","FLOODFILL_MASK_ONLY","","","0"),
("5085","FM_7POINT","","","0"),
("5086","FM_8POINT","","","0"),
("5087","FM_LMEDS","","","0"),
("5088","FM_RANSAC","","","0"),
("5089","FONT_HERSHEY_COMPLEX","","","0"),
("5090","FONT_HERSHEY_COMPLEX_SMALL","","","0"),
("5091","FONT_HERSHEY_DUPLEX","","","0"),
("5092","FONT_HERSHEY_PLAIN","","","0"),
("5093","FONT_HERSHEY_SCRIPT_COMPLEX","","","0"),
("5094","FONT_HERSHEY_SCRIPT_SIMPLEX","","","0"),
("5095","FONT_HERSHEY_SIMPLEX","","","0"),
("5096","FONT_HERSHEY_TRIPLEX","","","0"),
("5097","FONT_ITALIC","","","0"),
("5098","FORMATTER_FMT_C","","","0"),
("5099","FORMATTER_FMT_CSV","","","0"),
("5100","FORMATTER_FMT_DEFAULT","","","0"),
("5101","FORMATTER_FMT_MATLAB","","","0"),
("5102","FORMATTER_FMT_NUMPY","","","0"),
("5103","FORMATTER_FMT_PYTHON","","","0"),
("5104","FarnebackOpticalFlow_create","","","0"),
("5105","FastFeatureDetector_FAST_N","","","0"),
("5106","FastFeatureDetector_NONMAX_SUPPRESSION","","","0"),
("5107","FastFeatureDetector_THRESHOLD","","","0"),
("5108","FastFeatureDetector_TYPE_5_8","","","0"),
("5109","FastFeatureDetector_TYPE_7_12","","","0"),
("5110","FastFeatureDetector_TYPE_9_16","","","0"),
("5111","FastFeatureDetector_create","","","0"),
("5112","FileNode","","","0"),
("5113","FileNode_EMPTY","","","0"),
("5114","FileNode_FLOAT","","","0"),
("5115","FileNode_FLOW","","","0"),
("5116","FileNode_INT","","","0"),
("5117","FileNode_MAP","","","0"),
("5118","FileNode_NAMED","","","0"),
("5119","FileNode_NONE","","","0"),
("5120","FileNode_REAL","","","0"),
("5121","FileNode_REF","","","0"),
("5122","FileNode_SEQ","","","0"),
("5123","FileNode_STR","","","0"),
("5124","FileNode_STRING","","","0"),
("5125","FileNode_TYPE_MASK","","","0"),
("5126","FileNode_USER","","","0"),
("5127","FileStorage","","","0"),
("5128","FileStorage_APPEND","","","0"),
("5129","FileStorage_BASE64","","","0"),
("5130","FileStorage_FORMAT_AUTO","","","0"),
("5131","FileStorage_FORMAT_JSON","","","0"),
("5132","FileStorage_FORMAT_MASK","","","0"),
("5133","FileStorage_FORMAT_XML","","","0"),
("5134","FileStorage_FORMAT_YAML","","","0"),
("5135","FileStorage_INSIDE_MAP","","","0"),
("5136","FileStorage_MEMORY","","","0"),
("5137","FileStorage_NAME_EXPECTED","","","0"),
("5138","FileStorage_READ","","","0"),
("5139","FileStorage_UNDEFINED","","","0"),
("5140","FileStorage_VALUE_EXPECTED","","","0"),
("5141","FileStorage_WRITE","","","0"),
("5142","FileStorage_WRITE_BASE64","","","0"),
("5143","FlannBasedMatcher","","","0"),
("5144","FlannBasedMatcher_create","","","0"),
("5145","Formatter_FMT_C","","","0");
INSERT INTO function VALUES
("5146","Formatter_FMT_CSV","","","0"),
("5147","Formatter_FMT_DEFAULT","","","0"),
("5148","Formatter_FMT_MATLAB","","","0"),
("5149","Formatter_FMT_NUMPY","","","0"),
("5150","Formatter_FMT_PYTHON","","","0"),
("5151","GC_BGD","","","0"),
("5152","GC_EVAL","","","0"),
("5153","GC_FGD","","","0"),
("5154","GC_INIT_WITH_MASK","","","0"),
("5155","GC_INIT_WITH_RECT","","","0"),
("5156","GC_PR_BGD","","","0"),
("5157","GC_PR_FGD","","","0"),
("5158","GEMM_1_T","","","0"),
("5159","GEMM_2_T","","","0"),
("5160","GEMM_3_T","","","0"),
("5161","GFTTDetector_create","","","0"),
("5162","GaussianBlur","","","0"),
("5163","HAMMING_NORM_TYPE","","","0"),
("5164","HISTCMP_BHATTACHARYYA","","","0"),
("5165","HISTCMP_CHISQR","","","0"),
("5166","HISTCMP_CHISQR_ALT","","","0"),
("5167","HISTCMP_CORREL","","","0"),
("5168","HISTCMP_HELLINGER","","","0"),
("5169","HISTCMP_INTERSECT","","","0"),
("5170","HISTCMP_KL_DIV","","","0"),
("5171","HOGDESCRIPTOR_DEFAULT_NLEVELS","","","0"),
("5172","HOGDESCRIPTOR_L2HYS","","","0"),
("5173","HOGDescriptor","","","0"),
("5174","HOGDescriptor_DEFAULT_NLEVELS","","","0"),
("5175","HOGDescriptor_L2Hys","","","0"),
("5176","HOGDescriptor_getDaimlerPeopleDetector","","","0"),
("5177","HOGDescriptor_getDefaultPeopleDetector","","","0"),
("5178","HOUGH_GRADIENT","","","0"),
("5179","HOUGH_MULTI_SCALE","","","0"),
("5180","HOUGH_PROBABILISTIC","","","0"),
("5181","HOUGH_STANDARD","","","0"),
("5182","Hamming_normType","","","0"),
("5183","HoughCircles","","","0"),
("5184","HoughLines","","","0"),
("5185","HoughLinesP","","","0"),
("5186","HuMoments","","","0"),
("5187","IMREAD_ANYCOLOR","<p>Unchanged image. You may also use the flag IMREAD_UNCHANGED instead</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:428px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_ANYCOLOR) # to samo co img = cv2.imread(&#39;clouds.jpg&#39;)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>If set, the image is read in any possible color format.</p>\n\n<p>cv2.IMREAD_ANYCOLOR # 4</p>\n","0"),
("5188","IMREAD_ANYDEPTH","<p>If set, return 16-bit/32-bit image when the input has the corresponding depth, otherwise convert it to 8-bit.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:426px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_ANYDEPTH)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>cv2.IMREAD_ANYDEPTH # 2</p>\n","0"),
("5189","IMREAD_COLOR","<p>If set, always convert image to the 3 channel BGR color image</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:428px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_COLOR)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>cv2.IMREAD_COLOR # 1</p>\n\n<p>&nbsp;</p>\n","0"),
("5190","IMREAD_GRAYSCALE","<p>If set, always convert image to the single channel grayscale image</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:426px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_GRAYSCALE)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>cv2.IMREAD_GRAYSCALE # 0</p>\n","0"),
("5191","IMREAD_IGNORE_ORIENTATION","<p>If set, do not rotate the image according to EXIF&rsquo;s orientation flag.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:426px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_IGNORE_ORIENTATION)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<pre>\ncv2.IMREAD_IGNORE_ORIENTATION # 128\n</pre>\n","0"),
("5192","IMREAD_LOAD_GDAL","<p>If set, use the gdal driver for loading the image</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:428px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_LOAD_GDAL)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_LOAD_GDAL # 8</p>\n","0"),
("5193","IMREAD_REDUCED_COLOR_2","<p>If set, always convert image to the 3 channel BGR color image and the image size reduced 1/2</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:214px; width:400px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_COLOR_2)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_COLOR_2 # 17</p>\n","0"),
("5194","IMREAD_REDUCED_COLOR_4","<p>If set, always convert image to the 3 channel BGR color image and the image size reduced 1/4.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:107px; width:200px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_COLOR_4)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_COLOR_4 # 33</p>\n\n<p>&nbsp;</p>\n","0"),
("5195","IMREAD_REDUCED_COLOR_8","<p>If set, always convert image to the 3 channel BGR color image and the image size reduced 1/8</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_REDUCED_COLOR_8.jpg\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_COLOR_8)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_COLOR_8 # 65</p>\n","0"),
("5196","IMREAD_REDUCED_GRAYSCALE_2","<p>If set, always convert image to the single channel grayscale image and the image size reduced 1/2</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:213px; width:400px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_GRAYSCALE_2)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_GRAYSCALE_2 # 16</p>\n","0"),
("5197","IMREAD_REDUCED_GRAYSCALE_4","<p>If set, always convert image to the single channel grayscale image and the image size reduced 1/4</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:213px; width:400px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_GRAYSCALE_2)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_GRAYSCALE_4 # 32</p>\n","0"),
("5198","IMREAD_REDUCED_GRAYSCALE_8","<p>If set, always convert image to the single channel grayscale image and the image size reduced 1/8.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/IMREAD_ANYDEPTH.jpg\" style=\"height:213px; width:400px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_GRAYSCALE_8)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_REDUCED_GRAYSCALE_8 # 64</p>\n","0"),
("5199","IMREAD_UNCHANGED","<p>Unchanged image</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:428px; width:800px\" /></p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_UNCHANGED) # to samo co img = cv2.imread(&#39;clouds.jpg&#39;)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p>&nbsp;</p>\n\n<p>cv2.IMREAD_UNCHANGED # -1</p>\n","0"),
("5200","IMWRITE_JPEG_CHROMA_QUALITY","","","0"),
("5201","IMWRITE_JPEG_LUMA_QUALITY","","","0"),
("5202","IMWRITE_JPEG_OPTIMIZE","","","0"),
("5203","IMWRITE_JPEG_PROGRESSIVE","","","0"),
("5204","IMWRITE_JPEG_QUALITY","","","0"),
("5205","IMWRITE_JPEG_RST_INTERVAL","","","0"),
("5206","IMWRITE_PAM_FORMAT_BLACKANDWHITE","","","0"),
("5207","IMWRITE_PAM_FORMAT_GRAYSCALE","","","0"),
("5208","IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA","","","0"),
("5209","IMWRITE_PAM_FORMAT_NULL","","","0"),
("5210","IMWRITE_PAM_FORMAT_RGB","","","0"),
("5211","IMWRITE_PAM_FORMAT_RGB_ALPHA","","","0"),
("5212","IMWRITE_PAM_TUPLETYPE","","","0"),
("5213","IMWRITE_PNG_BILEVEL","","","0"),
("5214","IMWRITE_PNG_COMPRESSION","","","0"),
("5215","IMWRITE_PNG_STRATEGY","","","0"),
("5216","IMWRITE_PNG_STRATEGY_DEFAULT","","","0"),
("5217","IMWRITE_PNG_STRATEGY_FILTERED","","","0"),
("5218","IMWRITE_PNG_STRATEGY_FIXED","","","0"),
("5219","IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY","","","0"),
("5220","IMWRITE_PNG_STRATEGY_RLE","","","0"),
("5221","IMWRITE_PXM_BINARY","","","0"),
("5222","IMWRITE_WEBP_QUALITY","","","0"),
("5223","INPAINT_NS","","","0"),
("5224","INPAINT_TELEA","","","0"),
("5225","INTERSECT_FULL","","","0"),
("5226","INTERSECT_NONE","","","0"),
("5227","INTERSECT_PARTIAL","","","0"),
("5228","INTER_AREA","","","0"),
("5229","INTER_BITS","","","0"),
("5230","INTER_BITS2","","","0"),
("5231","INTER_CUBIC","","","0"),
("5232","INTER_LANCZOS4","","","0"),
("5233","INTER_LINEAR","","","0"),
("5234","INTER_MAX","","","0"),
("5235","INTER_NEAREST","","","0"),
("5236","INTER_TAB_SIZE","","","0"),
("5237","INTER_TAB_SIZE2","","","0"),
("5238","KAZE_DIFF_CHARBONNIER","","","0"),
("5239","KAZE_DIFF_PM_G1","","","0"),
("5240","KAZE_DIFF_PM_G2","","","0"),
("5241","KAZE_DIFF_WEICKERT","","","0"),
("5242","KAZE_create","","","0"),
("5243","KMEANS_PP_CENTERS","","","0"),
("5244","KMEANS_RANDOM_CENTERS","","","0"),
("5245","KMEANS_USE_INITIAL_LABELS","","","0");
INSERT INTO function VALUES
("5246","KalmanFilter","","","0"),
("5247","KeyPoint","","","0"),
("5248","KeyPoint_convert","","","0"),
("5249","KeyPoint_overlap","","","0"),
("5250","LDR_SIZE","","","0"),
("5251","LINE_4","","","0"),
("5252","LINE_8","","","0"),
("5253","LINE_AA","","","0"),
("5254","LMEDS","","","0"),
("5255","LSD_REFINE_ADV","","","0"),
("5256","LSD_REFINE_NONE","","","0"),
("5257","LSD_REFINE_STD","","","0"),
("5258","LUT","","","0"),
("5259","Laplacian","","","0"),
("5260","MARKER_CROSS","","","0"),
("5261","MARKER_DIAMOND","","","0"),
("5262","MARKER_SQUARE","","","0"),
("5263","MARKER_STAR","","","0"),
("5264","MARKER_TILTED_CROSS","","","0"),
("5265","MARKER_TRIANGLE_DOWN","","","0"),
("5266","MARKER_TRIANGLE_UP","","","0"),
("5267","MAT_AUTO_STEP","","","0"),
("5268","MAT_CONTINUOUS_FLAG","","","0"),
("5269","MAT_DEPTH_MASK","","","0"),
("5270","MAT_MAGIC_MASK","","","0"),
("5271","MAT_MAGIC_VAL","","","0"),
("5272","MAT_SUBMATRIX_FLAG","","","0"),
("5273","MAT_TYPE_MASK","","","0"),
("5274","MIXED_CLONE","","","0"),
("5275","MONOCHROME_TRANSFER","","","0"),
("5276","MORPH_BLACKHAT","","","0"),
("5277","MORPH_CLOSE","","","0"),
("5278","MORPH_CROSS","","","0"),
("5279","MORPH_DILATE","","","0"),
("5280","MORPH_ELLIPSE","","","0"),
("5281","MORPH_ERODE","","","0"),
("5282","MORPH_GRADIENT","","","0"),
("5283","MORPH_HITMISS","","","0"),
("5284","MORPH_OPEN","","","0"),
("5285","MORPH_RECT","","","0"),
("5286","MORPH_TOPHAT","","","0"),
("5287","MOTION_AFFINE","","","0"),
("5288","MOTION_EUCLIDEAN","","","0"),
("5289","MOTION_HOMOGRAPHY","","","0"),
("5290","MOTION_TRANSLATION","","","0"),
("5291","MSER_create","","","0"),
("5292","Mahalanobis","","","0"),
("5293","Mat_AUTO_STEP","","","0"),
("5294","Mat_CONTINUOUS_FLAG","","","0"),
("5295","Mat_DEPTH_MASK","","","0"),
("5296","Mat_MAGIC_MASK","","","0"),
("5297","Mat_MAGIC_VAL","","","0"),
("5298","Mat_SUBMATRIX_FLAG","","","0"),
("5299","Mat_TYPE_MASK","","","0"),
("5300","NORMAL_CLONE","","","0"),
("5301","NORMCONV_FILTER","","","0"),
("5302","NORM_HAMMING","","","0"),
("5303","NORM_HAMMING2","","","0"),
("5304","NORM_INF","","","0"),
("5305","NORM_L1","","","0"),
("5306","NORM_L2","","","0"),
("5307","NORM_L2SQR","","","0"),
("5308","NORM_MINMAX","","","0"),
("5309","NORM_RELATIVE","","","0"),
("5310","NORM_TYPE_MASK","","","0"),
("5311","OPTFLOW_FARNEBACK_GAUSSIAN","","","0"),
("5312","OPTFLOW_LK_GET_MIN_EIGENVALS","","","0"),
("5313","OPTFLOW_USE_INITIAL_FLOW","","","0"),
("5314","ORB_FAST_SCORE","","","0"),
("5315","ORB_HARRIS_SCORE","","","0"),
("5316","ORB_K_BYTES","","","0"),
("5317","ORB_create","","","0"),
("5318","ORB_kBytes","","","0"),
("5319","PARAM_ALGORITHM","","","0"),
("5320","PARAM_BOOLEAN","","","0"),
("5321","PARAM_FLOAT","","","0"),
("5322","PARAM_INT","","","0"),
("5323","PARAM_MAT","","","0"),
("5324","PARAM_MAT_VECTOR","","","0"),
("5325","PARAM_REAL","","","0"),
("5326","PARAM_STRING","","","0"),
("5327","PARAM_UCHAR","","","0"),
("5328","PARAM_UINT64","","","0"),
("5329","PARAM_UNSIGNED_INT","","","0"),
("5330","PCABackProject","","","0"),
("5331","PCACompute","","","0"),
("5332","PCAProject","","","0"),
("5333","PCA_DATA_AS_COL","","","0"),
("5334","PCA_DATA_AS_ROW","","","0"),
("5335","PCA_USE_AVG","","","0"),
("5336","PROJ_SPHERICAL_EQRECT","","","0"),
("5337","PROJ_SPHERICAL_ORTHO","","","0"),
("5338","PSNR","","","0"),
("5339","Param_ALGORITHM","","","0"),
("5340","Param_BOOLEAN","","","0"),
("5341","Param_FLOAT","","","0"),
("5342","Param_INT","","","0"),
("5343","Param_MAT","","","0"),
("5344","Param_MAT_VECTOR","","","0"),
("5345","Param_REAL","","","0");
INSERT INTO function VALUES
("5346","Param_STRING","","","0"),
("5347","Param_UCHAR","","","0"),
("5348","Param_UINT64","","","0"),
("5349","Param_UNSIGNED_INT","","","0"),
("5350","QT_CHECKBOX","","","0"),
("5351","QT_FONT_BLACK","","","0"),
("5352","QT_FONT_BOLD","","","0"),
("5353","QT_FONT_DEMIBOLD","","","0"),
("5354","QT_FONT_LIGHT","","","0"),
("5355","QT_FONT_NORMAL","","","0"),
("5356","QT_NEW_BUTTONBAR","","","0"),
("5357","QT_PUSH_BUTTON","","","0"),
("5358","QT_RADIOBOX","","","0"),
("5359","QT_STYLE_ITALIC","","","0"),
("5360","QT_STYLE_NORMAL","","","0"),
("5361","QT_STYLE_OBLIQUE","","","0"),
("5362","RANSAC","","","0"),
("5363","RECURS_FILTER","","","0"),
("5364","REDUCE_AVG","","","0"),
("5365","REDUCE_MAX","","","0"),
("5366","REDUCE_MIN","","","0"),
("5367","REDUCE_SUM","","","0"),
("5368","RETR_CCOMP","","","0"),
("5369","RETR_EXTERNAL","","","0"),
("5370","RETR_FLOODFILL","","","0"),
("5371","RETR_LIST","","","0"),
("5372","RETR_TREE","","","0"),
("5373","RHO","","","0"),
("5374","RNG_NORMAL","","","0"),
("5375","RNG_UNIFORM","","","0"),
("5376","ROTATE_180","","","0"),
("5377","ROTATE_90_CLOCKWISE","","","0"),
("5378","ROTATE_90_COUNTERCLOCKWISE","","","0"),
("5379","RQDecomp3x3","","","0"),
("5380","Rodrigues","","","0"),
("5381","SOLVELP_MULTI","","","0"),
("5382","SOLVELP_SINGLE","","","0"),
("5383","SOLVELP_UNBOUNDED","","","0"),
("5384","SOLVELP_UNFEASIBLE","","","0"),
("5385","SOLVEPNP_AP3P","","","0"),
("5386","SOLVEPNP_DLS","","","0"),
("5387","SOLVEPNP_EPNP","","","0"),
("5388","SOLVEPNP_ITERATIVE","","","0"),
("5389","SOLVEPNP_MAX_COUNT","","","0"),
("5390","SOLVEPNP_P3P","","","0"),
("5391","SOLVEPNP_UPNP","","","0"),
("5392","SORT_ASCENDING","","","0"),
("5393","SORT_DESCENDING","","","0"),
("5394","SORT_EVERY_COLUMN","","","0"),
("5395","SORT_EVERY_ROW","","","0"),
("5396","SPARSE_MAT_HASH_BIT","","","0"),
("5397","SPARSE_MAT_HASH_SCALE","","","0"),
("5398","SPARSE_MAT_MAGIC_VAL","","","0"),
("5399","SPARSE_MAT_MAX_DIM","","","0"),
("5400","STEREO_BM_PREFILTER_NORMALIZED_RESPONSE","","","0"),
("5401","STEREO_BM_PREFILTER_XSOBEL","","","0"),
("5402","STEREO_MATCHER_DISP_SCALE","","","0"),
("5403","STEREO_MATCHER_DISP_SHIFT","","","0"),
("5404","STEREO_SGBM_MODE_HH","","","0"),
("5405","STEREO_SGBM_MODE_HH4","","","0"),
("5406","STEREO_SGBM_MODE_SGBM","","","0"),
("5407","STEREO_SGBM_MODE_SGBM_3WAY","","","0"),
("5408","STITCHER_ERR_CAMERA_PARAMS_ADJUST_FAIL","","","0"),
("5409","STITCHER_ERR_HOMOGRAPHY_EST_FAIL","","","0"),
("5410","STITCHER_ERR_NEED_MORE_IMGS","","","0"),
("5411","STITCHER_OK","","","0"),
("5412","STITCHER_ORIG_RESOL","","","0"),
("5413","STITCHER_PANORAMA","","","0"),
("5414","STITCHER_SCANS","","","0"),
("5415","SUBDIV2D_NEXT_AROUND_DST","","","0"),
("5416","SUBDIV2D_NEXT_AROUND_LEFT","","","0"),
("5417","SUBDIV2D_NEXT_AROUND_ORG","","","0"),
("5418","SUBDIV2D_NEXT_AROUND_RIGHT","","","0"),
("5419","SUBDIV2D_PREV_AROUND_DST","","","0"),
("5420","SUBDIV2D_PREV_AROUND_LEFT","","","0"),
("5421","SUBDIV2D_PREV_AROUND_ORG","","","0"),
("5422","SUBDIV2D_PREV_AROUND_RIGHT","","","0"),
("5423","SUBDIV2D_PTLOC_ERROR","","","0"),
("5424","SUBDIV2D_PTLOC_INSIDE","","","0"),
("5425","SUBDIV2D_PTLOC_ON_EDGE","","","0"),
("5426","SUBDIV2D_PTLOC_OUTSIDE_RECT","","","0"),
("5427","SUBDIV2D_PTLOC_VERTEX","","","0"),
("5428","SVBackSubst","","","0"),
("5429","SVD_FULL_UV","","","0"),
("5430","SVD_MODIFY_A","","","0"),
("5431","SVD_NO_UV","","","0"),
("5432","SVDecomp","","","0"),
("5433","Scharr","","","0"),
("5434","SimpleBlobDetector_Params","","","0"),
("5435","SimpleBlobDetector_create","","","0"),
("5436","Sobel","","","0"),
("5437","SparseMat_HASH_BIT","","","0"),
("5438","SparseMat_HASH_SCALE","","","0"),
("5439","SparseMat_MAGIC_VAL","","","0"),
("5440","SparseMat_MAX_DIM","","","0"),
("5441","SparsePyrLKOpticalFlow_create","","","0"),
("5442","StereoBM_PREFILTER_NORMALIZED_RESPONSE","","","0"),
("5443","StereoBM_PREFILTER_XSOBEL","","","0"),
("5444","StereoBM_create","","","0"),
("5445","StereoMatcher_DISP_SCALE","","","0");
INSERT INTO function VALUES
("5446","StereoMatcher_DISP_SHIFT","","","0"),
("5447","StereoSGBM_MODE_HH","","","0"),
("5448","StereoSGBM_MODE_HH4","","","0"),
("5449","StereoSGBM_MODE_SGBM","","","0"),
("5450","StereoSGBM_MODE_SGBM_3WAY","","","0"),
("5451","StereoSGBM_create","","","0"),
("5452","Stitcher_ERR_CAMERA_PARAMS_ADJUST_FAIL","","","0"),
("5453","Stitcher_ERR_HOMOGRAPHY_EST_FAIL","","","0"),
("5454","Stitcher_ERR_NEED_MORE_IMGS","","","0"),
("5455","Stitcher_OK","","","0"),
("5456","Stitcher_ORIG_RESOL","","","0"),
("5457","Stitcher_PANORAMA","","","0"),
("5458","Stitcher_SCANS","","","0"),
("5459","Subdiv2D","","","0"),
("5460","Subdiv2D_NEXT_AROUND_DST","","","0"),
("5461","Subdiv2D_NEXT_AROUND_LEFT","","","0"),
("5462","Subdiv2D_NEXT_AROUND_ORG","","","0"),
("5463","Subdiv2D_NEXT_AROUND_RIGHT","","","0"),
("5464","Subdiv2D_PREV_AROUND_DST","","","0"),
("5465","Subdiv2D_PREV_AROUND_LEFT","","","0"),
("5466","Subdiv2D_PREV_AROUND_ORG","","","0"),
("5467","Subdiv2D_PREV_AROUND_RIGHT","","","0"),
("5468","Subdiv2D_PTLOC_ERROR","","","0"),
("5469","Subdiv2D_PTLOC_INSIDE","","","0"),
("5470","Subdiv2D_PTLOC_ON_EDGE","","","0"),
("5471","Subdiv2D_PTLOC_OUTSIDE_RECT","","","0"),
("5472","Subdiv2D_PTLOC_VERTEX","","","0"),
("5473","TERM_CRITERIA_COUNT","","","0"),
("5474","TERM_CRITERIA_EPS","","","0"),
("5475","TERM_CRITERIA_MAX_ITER","","","0"),
("5476","THRESH_BINARY","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 10, 255, cv2.THRESH_BINARY) # jeÅ¼eli powyÅ¼ej 10 przekonwertuj na 255<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/logo.png\" style=\"height:126px; width:126px\" />&nbsp;orginal</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_BINARY.jpg\" style=\"height:234px; width:197px\" /></p>\n","0"),
("5477","THRESH_BINARY_INV","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 10, 255, cv2.THRESH_BINARY_INV) # jeÅ¼eli powyÅ¼ej 10 przekonwertuj na 255<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_BINARY_INV.jpg\" style=\"height:234px; width:197px\" /></p>\n","0"),
("5478","THRESH_MASK","","","0"),
("5479","THRESH_OTSU","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 10, 255, cv2.THRESH_OTSU) # jeÅ¼eli powyÅ¼ej 10 przekonwertuj na 255<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_BINARY.jpg\" style=\"height:234px; width:197px\" /></p>\n","0"),
("5480","THRESH_TOZERO","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 10, 255, cv2.THRESH_TOZERO) # jeÅ¼eli powyÅ¼ej 10 przekonwertuj na 255<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_TOZERO.jpg\" style=\"height:232px; width:197px\" /></p>\n","0"),
("5481","THRESH_TOZERO_INV","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 220, 255, cv2.THRESH_TOZERO_INV)<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_TOZERO_INV.jpg\" style=\"height:235px; width:197px\" /></p>\n","0"),
("5482","THRESH_TRIANGLE","","","0"),
("5483","THRESH_TRUNC","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;logo.png&#39;)<br />\nimg2gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)</p>\n\n<p>ret, mask = cv2.threshold(img2gray, 220, 255, cv2.THRESH_TRUNC)<br />\ncv2.imshow(&#39;image&#39;,mask)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/THRESH_TRUNC.jpg\" style=\"height:234px; width:198px\" /></p>\n","0"),
("5484","TM_CCOEFF","","","0"),
("5485","TM_CCOEFF_NORMED","","","0"),
("5486","TM_CCORR","","","0"),
("5487","TM_CCORR_NORMED","","","0"),
("5488","TM_SQDIFF","","","0"),
("5489","TM_SQDIFF_NORMED","","","0"),
("5490","TermCriteria_COUNT","","","0"),
("5491","TermCriteria_EPS","","","0"),
("5492","TermCriteria_MAX_ITER","","","0"),
("5493","TickMeter","","","0"),
("5494","UMAT_AUTO_STEP","","","0"),
("5495","UMAT_CONTINUOUS_FLAG","","","0"),
("5496","UMAT_DATA_ASYNC_CLEANUP","","","0"),
("5497","UMAT_DATA_COPY_ON_MAP","","","0"),
("5498","UMAT_DATA_DEVICE_COPY_OBSOLETE","","","0"),
("5499","UMAT_DATA_DEVICE_MEM_MAPPED","","","0"),
("5500","UMAT_DATA_HOST_COPY_OBSOLETE","","","0"),
("5501","UMAT_DATA_TEMP_COPIED_UMAT","","","0"),
("5502","UMAT_DATA_TEMP_UMAT","","","0"),
("5503","UMAT_DATA_USER_ALLOCATED","","","0"),
("5504","UMAT_DEPTH_MASK","","","0"),
("5505","UMAT_MAGIC_MASK","","","0"),
("5506","UMAT_MAGIC_VAL","","","0"),
("5507","UMAT_SUBMATRIX_FLAG","","","0"),
("5508","UMAT_TYPE_MASK","","","0"),
("5509","UMat","","","0"),
("5510","UMatData_ASYNC_CLEANUP","","","0"),
("5511","UMatData_COPY_ON_MAP","","","0"),
("5512","UMatData_DEVICE_COPY_OBSOLETE","","","0"),
("5513","UMatData_DEVICE_MEM_MAPPED","","","0"),
("5514","UMatData_HOST_COPY_OBSOLETE","","","0"),
("5515","UMatData_TEMP_COPIED_UMAT","","","0"),
("5516","UMatData_TEMP_UMAT","","","0"),
("5517","UMatData_USER_ALLOCATED","","","0"),
("5518","UMat_AUTO_STEP","","","0"),
("5519","UMat_CONTINUOUS_FLAG","","","0"),
("5520","UMat_DEPTH_MASK","","","0"),
("5521","UMat_MAGIC_MASK","","","0"),
("5522","UMat_MAGIC_VAL","","","0"),
("5523","UMat_SUBMATRIX_FLAG","","","0"),
("5524","UMat_TYPE_MASK","","","0"),
("5525","USAGE_ALLOCATE_DEVICE_MEMORY","","","0"),
("5526","USAGE_ALLOCATE_HOST_MEMORY","","","0"),
("5527","USAGE_ALLOCATE_SHARED_MEMORY","","","0"),
("5528","USAGE_DEFAULT","","","0"),
("5529","VIDEOWRITER_PROP_FRAMEBYTES","","","0"),
("5530","VIDEOWRITER_PROP_NSTRIPES","","","0"),
("5531","VIDEOWRITER_PROP_QUALITY","","","0"),
("5532","VideoCapture","<p>VideoCapture(...)<br />\n&nbsp; &nbsp; VideoCapture() -&gt; &lt;VideoCapture object&gt;<br />\n&nbsp; &nbsp; . &nbsp; @brief Default constructor<br />\n&nbsp; &nbsp; . &nbsp; @note In @ref videoio_c &quot;C API&quot;, when you finished working with video, release CvCapture structure with<br />\n&nbsp; &nbsp; . &nbsp; cvReleaseCapture(), or use Ptr&lt;CvCapture&gt; that calls cvReleaseCapture() automatically in the<br />\n&nbsp; &nbsp; . &nbsp; destructor.</p>\n\n<p>&nbsp; &nbsp; VideoCapture(filename) -&gt; &lt;VideoCapture object&gt;<br />\n&nbsp; &nbsp; . &nbsp; @overload<br />\n&nbsp; &nbsp; . &nbsp; @brief &nbsp;Open video file or a capturing device or a IP video stream for video capturing<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; Same as VideoCapture(const String&amp; filename, int apiPreference) but using default Capture API backends</p>\n\n<p>&nbsp; &nbsp; VideoCapture(filename, apiPreference) -&gt; &lt;VideoCapture object&gt;<br />\n&nbsp; &nbsp; . &nbsp; @overload<br />\n&nbsp; &nbsp; . &nbsp; @brief &nbsp;Open video file or a capturing device or a IP video stream for video capturing with API Preference<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param filename it can be:<br />\n&nbsp; &nbsp; . &nbsp; - name of video file (eg. `video.avi`)<br />\n&nbsp; &nbsp; . &nbsp; - or image sequence (eg. `img_%02d.jpg`, which will read samples like `img_00.jpg, img_01.jpg, img_02.jpg, ...`) &nbsp; &nbsp;. &nbsp; - or URL of video stream (eg. `protocol://host:port/script_name?script_params|auth`).<br />\n&nbsp; &nbsp; . &nbsp; Note that each video stream or IP camera feed has its own URL scheme. Please refer to the<br />\n&nbsp; &nbsp; . &nbsp; documentation of source stream to know the right URL.<br />\n&nbsp; &nbsp; . &nbsp; @param apiPreference preferred Capture API backends to use. Can be used to enforce a specific reader<br />\n&nbsp; &nbsp; . &nbsp; implementation if multiple are available: e.g. cv::CAP_FFMPEG or cv::CAP_IMAGES or cv::CAP_DSHOW.<br />\n&nbsp; &nbsp; . &nbsp; @sa The list of supported API backends cv::VideoCaptureAPIs</p>\n","<p>import numpy as np<br />\nimport keyboard<br />\nimport cv2</p>\n\n<p>cap = cv2.VideoCapture(0) # 0 -&gt; camera number 0<br />\n&nbsp;<br />\nwhile(True):<br />\n&nbsp; &nbsp; ret, frame = cap.read()<br />\n&nbsp; &nbsp; gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) # COLOR_BGR2GRAY -&gt; COLOR_BlueGreenRedToGray<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; cv2.imshow(&#39;gray&#39;,gray)<br />\n&nbsp; &nbsp; cv2.imshow(&#39;frame&#39;,frame)<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; print(ret) # True<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if cv2.waitKey(1) &amp; keyboard.is_pressed(&#39;space&#39;): # Returns True if the key is pressed<br />\n&nbsp; &nbsp; &nbsp; &nbsp; break<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n\n<p>cap.release()<br />\ncv2.destroyAllWindows()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/VideoCapture.jpg\" style=\"height:322px; width:800px\" /></p>\n\n<p>import numpy as np<br />\nimport keyboard<br />\nimport cv2</p>\n\n<p>cap = cv2.VideoCapture(&#39;animals.avi&#39;)<br />\n&nbsp;<br />\nwhile(True):<br />\n&nbsp; &nbsp; ret, frame = cap.read()<br />\n&nbsp; &nbsp; gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) # COLOR_BGR2GRAY -&gt; COLOR_BlueGreenRedToGray<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; cv2.imshow(&#39;gray&#39;,gray)<br />\n&nbsp; &nbsp; cv2.imshow(&#39;frame&#39;,frame)<br />\n&nbsp; &nbsp;&nbsp;<br />\n&nbsp; &nbsp; if cv2.waitKey(1) &amp; keyboard.is_pressed(&#39;space&#39;): # Returns True if the key is pressed<br />\n&nbsp; &nbsp; &nbsp; &nbsp; break<br />\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n\n<p>cap.release()<br />\ncv2.destroyAllWindows()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/VideoCapture2.jpg\" /></p>\n","0"),
("5533","VideoWriter","","","0"),
("5534","VideoWriter_fourcc","","","0"),
("5535","WARP_FILL_OUTLIERS","","","0"),
("5536","WARP_INVERSE_MAP","","","0"),
("5537","WINDOW_AUTOSIZE","","","0"),
("5538","WINDOW_FREERATIO","","","0"),
("5539","WINDOW_FULLSCREEN","","","0"),
("5540","WINDOW_GUI_EXPANDED","","","0"),
("5541","WINDOW_GUI_NORMAL","","","0"),
("5542","WINDOW_KEEPRATIO","","","0"),
("5543","WINDOW_NORMAL","","","0"),
("5544","WINDOW_OPENGL","","","0"),
("5545","WND_PROP_ASPECT_RATIO","","","0");
INSERT INTO function VALUES
("5546","WND_PROP_AUTOSIZE","","","0"),
("5547","WND_PROP_FULLSCREEN","","","0"),
("5548","WND_PROP_OPENGL","","","0"),
("5549","WND_PROP_VISIBLE","","","0"),
("5550","_INPUT_ARRAY_CUDA_GPU_MAT","","","0"),
("5551","_INPUT_ARRAY_CUDA_HOST_MEM","","","0"),
("5552","_INPUT_ARRAY_EXPR","","","0"),
("5553","_INPUT_ARRAY_FIXED_SIZE","","","0"),
("5554","_INPUT_ARRAY_FIXED_TYPE","","","0"),
("5555","_INPUT_ARRAY_KIND_MASK","","","0"),
("5556","_INPUT_ARRAY_KIND_SHIFT","","","0"),
("5557","_INPUT_ARRAY_MAT","","","0"),
("5558","_INPUT_ARRAY_MATX","","","0"),
("5559","_INPUT_ARRAY_NONE","","","0"),
("5560","_INPUT_ARRAY_OPENGL_BUFFER","","","0"),
("5561","_INPUT_ARRAY_STD_ARRAY","","","0"),
("5562","_INPUT_ARRAY_STD_ARRAY_MAT","","","0"),
("5563","_INPUT_ARRAY_STD_BOOL_VECTOR","","","0"),
("5564","_INPUT_ARRAY_STD_VECTOR","","","0"),
("5565","_INPUT_ARRAY_STD_VECTOR_CUDA_GPU_MAT","","","0"),
("5566","_INPUT_ARRAY_STD_VECTOR_MAT","","","0"),
("5567","_INPUT_ARRAY_STD_VECTOR_UMAT","","","0"),
("5568","_INPUT_ARRAY_STD_VECTOR_VECTOR","","","0"),
("5569","_INPUT_ARRAY_UMAT","","","0"),
("5570","_InputArray_CUDA_GPU_MAT","","","0"),
("5571","_InputArray_CUDA_HOST_MEM","","","0"),
("5572","_InputArray_EXPR","","","0"),
("5573","_InputArray_FIXED_SIZE","","","0"),
("5574","_InputArray_FIXED_TYPE","","","0"),
("5575","_InputArray_KIND_MASK","","","0"),
("5576","_InputArray_KIND_SHIFT","","","0"),
("5577","_InputArray_MAT","","","0"),
("5578","_InputArray_MATX","","","0"),
("5579","_InputArray_NONE","","","0"),
("5580","_InputArray_OPENGL_BUFFER","","","0"),
("5581","_InputArray_STD_ARRAY","","","0"),
("5582","_InputArray_STD_ARRAY_MAT","","","0"),
("5583","_InputArray_STD_BOOL_VECTOR","","","0"),
("5584","_InputArray_STD_VECTOR","","","0"),
("5585","_InputArray_STD_VECTOR_CUDA_GPU_MAT","","","0"),
("5586","_InputArray_STD_VECTOR_MAT","","","0"),
("5587","_InputArray_STD_VECTOR_UMAT","","","0"),
("5588","_InputArray_STD_VECTOR_VECTOR","","","0"),
("5589","_InputArray_UMAT","","","0"),
("5590","_OUTPUT_ARRAY_DEPTH_MASK_16S","","","0"),
("5591","_OUTPUT_ARRAY_DEPTH_MASK_16U","","","0"),
("5592","_OUTPUT_ARRAY_DEPTH_MASK_32F","","","0"),
("5593","_OUTPUT_ARRAY_DEPTH_MASK_32S","","","0"),
("5594","_OUTPUT_ARRAY_DEPTH_MASK_64F","","","0"),
("5595","_OUTPUT_ARRAY_DEPTH_MASK_8S","","","0"),
("5596","_OUTPUT_ARRAY_DEPTH_MASK_8U","","","0"),
("5597","_OUTPUT_ARRAY_DEPTH_MASK_ALL","","","0"),
("5598","_OUTPUT_ARRAY_DEPTH_MASK_ALL_BUT_8S","","","0"),
("5599","_OUTPUT_ARRAY_DEPTH_MASK_FLT","","","0"),
("5600","_OutputArray_DEPTH_MASK_16S","","","0"),
("5601","_OutputArray_DEPTH_MASK_16U","","","0"),
("5602","_OutputArray_DEPTH_MASK_32F","","","0"),
("5603","_OutputArray_DEPTH_MASK_32S","","","0"),
("5604","_OutputArray_DEPTH_MASK_64F","","","0"),
("5605","_OutputArray_DEPTH_MASK_8S","","","0"),
("5606","_OutputArray_DEPTH_MASK_8U","","","0"),
("5607","_OutputArray_DEPTH_MASK_ALL","","","0"),
("5608","_OutputArray_DEPTH_MASK_ALL_BUT_8S","","","0"),
("5609","_OutputArray_DEPTH_MASK_FLT","","","0"),
("5610","__UMAT_USAGE_FLAGS_32BIT","","","0"),
("5611","__builtins__","","","0"),
("5612","__cached__","","","0"),
("5613","__doc__","","","0"),
("5614","__file__","","","0"),
("5615","__loader__","","","0"),
("5616","__name__","","","0"),
("5617","__package__","","","0"),
("5618","__path__","","","0"),
("5619","__spec__","","","0"),
("5620","__version__","","","0"),
("5621","absdiff","","","0"),
("5622","accumulate","","","0"),
("5623","accumulateProduct","","","0"),
("5624","accumulateSquare","","","0"),
("5625","accumulateWeighted","","","0"),
("5626","adaptiveThreshold","","","0"),
("5627","add","<p>add(...)<br />\n&nbsp; &nbsp; add(src1, src2[, dst[, mask[, dtype]]]) -&gt; dst<br />\n&nbsp; &nbsp; . &nbsp; @brief Calculates the per-element sum of two arrays or an array and a scalar.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function add calculates:<br />\n&nbsp; &nbsp; . &nbsp; - Sum of two arrays when both input arrays have the same size and the same number of channels:<br />\n&nbsp; &nbsp; . &nbsp; f[ exttt{dst}(I) = &nbsp; exttt{saturate} ( exttt{src1}(I) + &nbsp; exttt{src2}(I)) quad exttt{if mask}(I) e0f]<br />\n&nbsp; &nbsp; . &nbsp; - Sum of an array and a scalar when src2 is constructed from Scalar or has the same number of<br />\n&nbsp; &nbsp; . &nbsp; elements as `src1.channels()`:<br />\n&nbsp; &nbsp; . &nbsp; f[ exttt{dst}(I) = &nbsp; exttt{saturate} ( exttt{src1}(I) + &nbsp; exttt{src2} ) quad exttt{if mask}(I) e0f]<br />\n&nbsp; &nbsp; . &nbsp; - Sum of a scalar and an array when src1 is constructed from Scalar or has the same number of<br />\n&nbsp; &nbsp; . &nbsp; elements as `src2.channels()`:<br />\n&nbsp; &nbsp; . &nbsp; f[ exttt{dst}(I) = &nbsp; exttt{saturate} ( exttt{src1} + &nbsp; exttt{src2}(I) ) quad exttt{if mask}(I) e0f]<br />\n&nbsp; &nbsp; . &nbsp; where `I` is a multi-dimensional index of array elements. In case of multi-channel arrays, each<br />\n&nbsp; &nbsp; . &nbsp; channel is processed independently.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The first function in the list above can be replaced with matrix expressions:<br />\n&nbsp; &nbsp; . &nbsp; @code{.cpp}<br />\n&nbsp; &nbsp; . &nbsp; dst = src1 + src2;<br />\n&nbsp; &nbsp; . &nbsp; dst += src1; // equivalent to add(dst, src1, dst);<br />\n&nbsp; &nbsp; . &nbsp; @endcode<br />\n&nbsp; &nbsp; . &nbsp; The input arrays and the output array can all have the same or different depths. For example, you<br />\n&nbsp; &nbsp; . &nbsp; can add a 16-bit unsigned array to a 8-bit signed array and store the sum as a 32-bit<br />\n&nbsp; &nbsp; . &nbsp; floating-point array. Depth of the output array is determined by the dtype parameter. In the second<br />\n&nbsp; &nbsp; . &nbsp; and third cases above, as well as in the first case, when src1.depth() == src2.depth(), dtype can<br />\n&nbsp; &nbsp; . &nbsp; be set to the default -1. In this case, the output array will have the same depth as the input<br />\n&nbsp; &nbsp; . &nbsp; array, be it src1, src2 or both.<br />\n&nbsp; &nbsp; . &nbsp; @note Saturation is not applied when the output array has the depth CV_32S. You may even get<br />\n&nbsp; &nbsp; . &nbsp; result of an incorrect sign in the case of overflow.<br />\n&nbsp; &nbsp; . &nbsp; @param src1 first input array or a scalar.<br />\n&nbsp; &nbsp; . &nbsp; @param src2 second input array or a scalar.<br />\n&nbsp; &nbsp; . &nbsp; @param dst output array that has the same size and number of channels as the input array(s); the<br />\n&nbsp; &nbsp; . &nbsp; depth is defined by dtype or src1/src2.<br />\n&nbsp; &nbsp; . &nbsp; @param mask optional operation mask - 8-bit single channel array, that specifies elements of the<br />\n&nbsp; &nbsp; . &nbsp; output array to be changed.<br />\n&nbsp; &nbsp; . &nbsp; @param dtype optional depth of the output array (see the discussion below).<br />\n&nbsp; &nbsp; . &nbsp; @sa subtract, addWeighted, scaleAdd, Mat::convertTo</p>\n","<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;image_2.png&#39;)&nbsp;</p>\n\n<p># (155, 211, 79) + (50, 170, 200) = 205, 381, 279...transleted to (205, 255, 255)</p>\n\n<p>#add = img1 + img2<br />\nadd = cv2.add(img1, img2)</p>\n\n<p>cv2.imshow(&#39;add&#39;,add)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/image_1.png\" style=\"height:200px; width:400px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/image_2.png\" style=\"height:200px; width:400px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/add.jpg\" style=\"height:226px; width:400px\" /></p>\n","0"),
("5628","addText","","","0"),
("5629","addWeighted","<p>addWeighted(...)<br />\n&nbsp; &nbsp; addWeighted(src1, alpha, src2, beta, gamma[, dst[, dtype]]) -&gt; dst<br />\n&nbsp; &nbsp; . &nbsp; @brief Calculates the weighted sum of two arrays.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function addWeighted calculates the weighted sum of two arrays as follows:<br />\n&nbsp; &nbsp; . &nbsp; f[	exttt{dst} (I)= 	exttt{saturate} ( 	exttt{src1} (I)* 	exttt{alpha} + &nbsp;	exttt{src2} (I)* 	exttt{beta} + &nbsp;	exttt{gamma} )f]<br />\n&nbsp; &nbsp; . &nbsp; where I is a multi-dimensional index of array elements. In case of multi-channel arrays, each<br />\n&nbsp; &nbsp; . &nbsp; channel is processed independently.<br />\n&nbsp; &nbsp; . &nbsp; The function can be replaced with a matrix expression:<br />\n&nbsp; &nbsp; . &nbsp; @code{.cpp}<br />\n&nbsp; &nbsp; . &nbsp; dst = src1*alpha + src2*beta + gamma;<br />\n&nbsp; &nbsp; . &nbsp; @endcode<br />\n&nbsp; &nbsp; . &nbsp; @note Saturation is not applied when the output array has the depth CV_32S. You may even get<br />\n&nbsp; &nbsp; . &nbsp; result of an incorrect sign in the case of overflow.<br />\n&nbsp; &nbsp; . &nbsp; @param src1 first input array.<br />\n&nbsp; &nbsp; . &nbsp; @param alpha weight of the first array elements.<br />\n&nbsp; &nbsp; . &nbsp; @param src2 second input array of the same size and channel number as src1.<br />\n&nbsp; &nbsp; . &nbsp; @param beta weight of the second array elements.<br />\n&nbsp; &nbsp; . &nbsp; @param gamma scalar added to each sum.<br />\n&nbsp; &nbsp; . &nbsp; @param dst output array that has the same size and number of channels as the input arrays.<br />\n&nbsp; &nbsp; . &nbsp; @param dtype optional depth of the output array; when both input arrays have the same depth, dtype<br />\n&nbsp; &nbsp; . &nbsp; can be set to -1, which will be equivalent to src1.depth().<br />\n&nbsp; &nbsp; . &nbsp; @sa &nbsp;add, subtract, scaleAdd, Mat::convertTo</p>\n","<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;image_2.png&#39;)&nbsp;</p>\n\n<p>add = cv2.addWeighted(img1, 0.6, img2, 0.4, 0)</p>\n\n<p>cv2.imshow(&#39;add&#39;,add)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/image_2.png\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/addWeighted.jpg\" style=\"height:228px; width:400px\" /></p>\n","0"),
("5630","applyColorMap","","","0"),
("5631","approxPolyDP","","","0"),
("5632","arcLength","","","0"),
("5633","arrowedLine","","","0"),
("5634","batchDistance","","","0"),
("5635","bilateralFilter","","","0"),
("5636","bitwise_and","","","0"),
("5637","bitwise_not","<p>bitwise_not(...)<br />\n&nbsp; &nbsp; bitwise_not(src[, dst[, mask]]) -&gt; dst<br />\n&nbsp; &nbsp; . &nbsp; @brief &nbsp;Inverts every bit of an array.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function cv::bitwise_not calculates per-element bit-wise inversion of the input<br />\n&nbsp; &nbsp; . &nbsp; array:<br />\n&nbsp; &nbsp; . &nbsp; f[	exttt{dst} (I) = &nbsp;\neg 	exttt{src} (I)f]<br />\n&nbsp; &nbsp; . &nbsp; In case of a floating-point input array, its machine-specific bit<br />\n&nbsp; &nbsp; . &nbsp; representation (usually IEEE754-compliant) is used for the operation. In<br />\n&nbsp; &nbsp; . &nbsp; case of multi-channel arrays, each channel is processed independently.<br />\n&nbsp; &nbsp; . &nbsp; @param src input array.<br />\n&nbsp; &nbsp; . &nbsp; @param dst output array that has the same size and type as the input<br />\n&nbsp; &nbsp; . &nbsp; array.<br />\n&nbsp; &nbsp; . &nbsp; @param mask optional operation mask, 8-bit single channel array, that<br />\n&nbsp; &nbsp; . &nbsp; specifies elements of the output array to be changed.</p>\n","<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;logo.png&#39;)&nbsp;</p>\n\n<p>rows, cols, channels = img2.shape</p>\n\n<p>img2gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)<br />\nret, mask = cv2.threshold(img2gray, 220, 255, cv2.THRESH_BINARY_INV) # jeÅ¼eli powyÅ¼ej 220 przekonwertuj na 255</p>\n\n<p>mask_inv = cv2.bitwise_not(mask)</p>\n\n<p>cv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/logo.png\" style=\"height:126px; width:126px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/cvtColor.jpg\" /><br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/threshold.jpg\" style=\"height:160px; width:142px\" /><br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/bitwise_not.jpg\" style=\"height:164px; width:147px\" /></p>\n","0"),
("5638","bitwise_or","","","0"),
("5639","bitwise_xor","","","0"),
("5640","blur","","","0"),
("5641","borderInterpolate","","","0"),
("5642","boundingRect","","","0"),
("5643","boxFilter","","","0"),
("5644","boxPoints","","","0"),
("5645","buildOpticalFlowPyramid","","","0");
INSERT INTO function VALUES
("5646","calcBackProject","","","0"),
("5647","calcCovarMatrix","","","0"),
("5648","calcHist","","","0"),
("5649","calcOpticalFlowFarneback","","","0"),
("5650","calcOpticalFlowPyrLK","","","0"),
("5651","calibrateCamera","","","0"),
("5652","calibrateCameraExtended","","","0"),
("5653","calibrationMatrixValues","","","0"),
("5654","cartToPolar","","","0"),
("5655","checkHardwareSupport","","","0"),
("5656","checkRange","","","0"),
("5657","circle","<p>circle(...)<br />\n&nbsp; &nbsp; circle(img, center, radius, color[, thickness[, lineType[, shift]]]) -&gt; img<br />\n&nbsp; &nbsp; . &nbsp; @brief Draws a circle.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function circle draws a simple or filled circle with a given center and radius.<br />\n&nbsp; &nbsp; . &nbsp; @param img Image where the circle is drawn.<br />\n&nbsp; &nbsp; . &nbsp; @param center Center of the circle.<br />\n&nbsp; &nbsp; . &nbsp; @param radius Radius of the circle.<br />\n&nbsp; &nbsp; . &nbsp; @param color Circle color.<br />\n&nbsp; &nbsp; . &nbsp; @param thickness Thickness of the circle outline, if positive. Negative thickness means that a<br />\n&nbsp; &nbsp; . &nbsp; filled circle is to be drawn.<br />\n&nbsp; &nbsp; . &nbsp; @param lineType Type of the circle boundary. See the line description.<br />\n&nbsp; &nbsp; . &nbsp; @param shift Number of fractional bits in the coordinates of the center and in the radius value.</p>\n","<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)<br />\n&nbsp;<br />\ncv2.circle(img, (100,63), 55, (0,0,255), -1)&nbsp;# (image, (center), radius, (color), thickness)</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/circle.jpg\" style=\"height:429px; width:800px\" /></p>\n\n<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)<br />\n&nbsp;<br />\ncv2.circle(img, (100,63), 55, (0,0,255),10) # (image, (center), radius, (color), thickness)</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/circle2.jpg\" style=\"height:429px; width:800px\" /></p>\n","0"),
("5658","clipLine","","","0"),
("5659","colorChange","","","0"),
("5660","compare","","","0"),
("5661","compareHist","","","0"),
("5662","completeSymm","","","0"),
("5663","composeRT","","","0"),
("5664","computeCorrespondEpilines","","","0"),
("5665","connectedComponents","","","0"),
("5666","connectedComponentsWithAlgorithm","","","0"),
("5667","connectedComponentsWithStats","","","0"),
("5668","connectedComponentsWithStatsWithAlgorithm","","","0"),
("5669","contourArea","","","0"),
("5670","convertFp16","","","0"),
("5671","convertMaps","","","0"),
("5672","convertPointsFromHomogeneous","","","0"),
("5673","convertPointsToHomogeneous","","","0"),
("5674","convertScaleAbs","","","0"),
("5675","convexHull","","","0"),
("5676","convexityDefects","","","0"),
("5677","copyMakeBorder","","","0"),
("5678","cornerEigenValsAndVecs","","","0"),
("5679","cornerHarris","","","0"),
("5680","cornerMinEigenVal","","","0"),
("5681","cornerSubPix","","","0"),
("5682","correctMatches","","","0"),
("5683","countNonZero","","","0"),
("5684","createAffineTransformer","","","0"),
("5685","createAlignMTB","","","0"),
("5686","createBackgroundSubtractorKNN","","","0"),
("5687","createBackgroundSubtractorMOG2","","","0"),
("5688","createButton","","","0"),
("5689","createCLAHE","","","0"),
("5690","createCalibrateDebevec","","","0"),
("5691","createCalibrateRobertson","","","0"),
("5692","createChiHistogramCostExtractor","","","0"),
("5693","createEMDHistogramCostExtractor","","","0"),
("5694","createEMDL1HistogramCostExtractor","","","0"),
("5695","createHanningWindow","","","0"),
("5696","createHausdorffDistanceExtractor","","","0"),
("5697","createLineSegmentDetector","","","0"),
("5698","createMergeDebevec","","","0"),
("5699","createMergeMertens","","","0"),
("5700","createMergeRobertson","","","0"),
("5701","createNormHistogramCostExtractor","","","0"),
("5702","createOptFlow_DualTVL1","","","0"),
("5703","createShapeContextDistanceExtractor","","","0"),
("5704","createStitcher","","","0"),
("5705","createThinPlateSplineShapeTransformer","","","0"),
("5706","createTonemap","","","0"),
("5707","createTonemapDrago","","","0"),
("5708","createTonemapDurand","","","0"),
("5709","createTonemapMantiuk","","","0"),
("5710","createTonemapReinhard","","","0"),
("5711","createTrackbar","","","0"),
("5712","cubeRoot","","","0"),
("5713","cv2","","","0"),
("5714","cvtColor","<p>cvtColor(...)<br />\n&nbsp; &nbsp; cvtColor(src, code[, dst[, dstCn]]) -&gt; dst<br />\n&nbsp; &nbsp; . &nbsp; @brief Converts an image from one color space to another.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function converts an input image from one color space to another. In case of a transformation<br />\n&nbsp; &nbsp; . &nbsp; to-from RGB color space, the order of the channels should be specified explicitly (RGB or BGR). Note<br />\n&nbsp; &nbsp; . &nbsp; that the default color format in OpenCV is often referred to as RGB but it is actually BGR (the<br />\n&nbsp; &nbsp; . &nbsp; bytes are reversed). So the first byte in a standard (24-bit) color image will be an 8-bit Blue<br />\n&nbsp; &nbsp; . &nbsp; component, the second byte will be Green, and the third byte will be Red. The fourth, fifth, and<br />\n&nbsp; &nbsp; . &nbsp; sixth bytes would then be the second pixel (Blue, then Green, then Red), and so on.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The conventional ranges for R, G, and B channel values are:<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; 0 to 255 for CV_8U images<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; 0 to 65535 for CV_16U images<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; 0 to 1 for CV_32F images<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; In case of linear transformations, the range does not matter. But in case of a non-linear<br />\n&nbsp; &nbsp; . &nbsp; transformation, an input RGB image should be normalized to the proper value range to get the correct<br />\n&nbsp; &nbsp; . &nbsp; results, for example, for RGB f$ightarrowf$ L*u*v* transformation. For example, if you have a<br />\n&nbsp; &nbsp; . &nbsp; 32-bit floating-point image directly converted from an 8-bit image without any scaling, then it will<br />\n&nbsp; &nbsp; . &nbsp; have the 0..255 value range instead of 0..1 assumed by the function. So, before calling cvtColor ,<br />\n&nbsp; &nbsp; . &nbsp; you need first to scale the image down:<br />\n&nbsp; &nbsp; . &nbsp; @code<br />\n&nbsp; &nbsp; . &nbsp; img *= 1./255;<br />\n&nbsp; &nbsp; . &nbsp; cvtColor(img, img, COLOR_BGR2Luv);<br />\n&nbsp; &nbsp; . &nbsp; @endcode<br />\n&nbsp; &nbsp; . &nbsp; If you use cvtColor with 8-bit images, the conversion will have some information lost. For many<br />\n&nbsp; &nbsp; . &nbsp; applications, this will not be noticeable but it is recommended to use 32-bit images in applications<br />\n&nbsp; &nbsp; . &nbsp; that need the full range of colors or that convert an image before an operation and then convert<br />\n&nbsp; &nbsp; . &nbsp; back.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; If conversion adds the alpha channel, its value will set to the maximum of corresponding channel<br />\n&nbsp; &nbsp; . &nbsp; range: 255 for CV_8U, 65535 for CV_16U, 1 for CV_32F.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param src input image: 8-bit unsigned, 16-bit unsigned ( CV_16UC... ), or single-precision<br />\n&nbsp; &nbsp; . &nbsp; floating-point.<br />\n&nbsp; &nbsp; . &nbsp; @param dst output image of the same size and depth as src.<br />\n&nbsp; &nbsp; . &nbsp; @param code color space conversion code (see cv::ColorConversionCodes).<br />\n&nbsp; &nbsp; . &nbsp; @param dstCn number of channels in the destination image; if the parameter is 0, the number of the<br />\n&nbsp; &nbsp; . &nbsp; channels is derived automatically from src and code.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @see @ref imgproc_color_conversions</p>\n","<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;logo.png&#39;)&nbsp;</p>\n\n<p>rows, cols, channels = img2.shape</p>\n\n<p>img2gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)</p>\n\n<p>cv2.imshow(&#39;mask&#39;,img2gray)</p>\n\n<p>cv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/logo.png\" style=\"height:126px; width:126px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/cvtColor.jpg\" /></p>\n","0"),
("5715","dct","","","0"),
("5716","decolor","","","0"),
("5717","decomposeEssentialMat","","","0"),
("5718","decomposeHomographyMat","","","0"),
("5719","decomposeProjectionMatrix","","","0"),
("5720","demosaicing","","","0"),
("5721","denoise_TVL1","","","0"),
("5722","destroyAllWindows","<p>The function destroyAllWindows destroys all of the opened HighGUI windows.</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_COLOR_4)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(30)<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n","0"),
("5723","destroyWindow","","","0"),
("5724","detail","","","0"),
("5725","detailEnhance","","","0"),
("5726","determinant","","","0"),
("5727","dft","","","0"),
("5728","dilate","","","0"),
("5729","displayOverlay","","","0"),
("5730","displayStatusBar","","","0"),
("5731","distanceTransform","","","0"),
("5732","distanceTransformWithLabels","","","0"),
("5733","divide","","","0"),
("5734","dnn","","","0"),
("5735","drawChessboardCorners","","","0"),
("5736","drawContours","","","0"),
("5737","drawKeypoints","","","0"),
("5738","drawMarker","","","0"),
("5739","drawMatches","","","0"),
("5740","drawMatchesKnn","","","0"),
("5741","edgePreservingFilter","","","0"),
("5742","eigen","","","0"),
("5743","ellipse","","","0"),
("5744","ellipse2Poly","","","0"),
("5745","equalizeHist","","","0");
INSERT INTO function VALUES
("5746","erode","","","0"),
("5747","error","","","0"),
("5748","estimateAffine2D","","","0"),
("5749","estimateAffine3D","","","0"),
("5750","estimateAffinePartial2D","","","0"),
("5751","estimateRigidTransform","","","0"),
("5752","exp","","","0"),
("5753","extractChannel","","","0"),
("5754","fastAtan2","","","0"),
("5755","fastNlMeansDenoising","","","0"),
("5756","fastNlMeansDenoisingColored","","","0"),
("5757","fastNlMeansDenoisingColoredMulti","","","0"),
("5758","fastNlMeansDenoisingMulti","","","0"),
("5759","fillConvexPoly","","","0"),
("5760","fillPoly","","","0"),
("5761","filter2D","","","0"),
("5762","filterSpeckles","","","0"),
("5763","findChessboardCorners","","","0"),
("5764","findCirclesGrid","","","0"),
("5765","findContours","","","0"),
("5766","findEssentialMat","","","0"),
("5767","findFundamentalMat","","","0"),
("5768","findHomography","","","0"),
("5769","findNonZero","","","0"),
("5770","findTransformECC","","","0"),
("5771","fisheye","","","0"),
("5772","fitEllipse","","","0"),
("5773","fitLine","","","0"),
("5774","flann","","","0"),
("5775","flip","","","0"),
("5776","floodFill","","","0"),
("5777","gemm","","","0"),
("5778","getAffineTransform","","","0"),
("5779","getBuildInformation","","","0"),
("5780","getCPUTickCount","","","0"),
("5781","getDefaultNewCameraMatrix","","","0"),
("5782","getDerivKernels","","","0"),
("5783","getGaborKernel","","","0"),
("5784","getGaussianKernel","","","0"),
("5785","getNumThreads","","","0"),
("5786","getNumberOfCPUs","","","0"),
("5787","getOptimalDFTSize","","","0"),
("5788","getOptimalNewCameraMatrix","","","0"),
("5789","getPerspectiveTransform","","","0"),
("5790","getRectSubPix","","","0"),
("5791","getRotationMatrix2D","","","0"),
("5792","getStructuringElement","","","0"),
("5793","getTextSize","","","0"),
("5794","getThreadNum","","","0"),
("5795","getTickCount","","","0"),
("5796","getTickFrequency","","","0"),
("5797","getTrackbarPos","","","0"),
("5798","getValidDisparityROI","","","0"),
("5799","getWindowProperty","","","0"),
("5800","goodFeaturesToTrack","","","0"),
("5801","grabCut","","","0"),
("5802","groupRectangles","","","0"),
("5803","haveOpenVX","","","0"),
("5804","hconcat","","","0"),
("5805","idct","","","0"),
("5806","idft","","","0"),
("5807","illuminationChange","","","0"),
("5808","imdecode","","","0"),
("5809","imencode","","","0"),
("5810","importlib","","","0"),
("5811","imread","<p>imread(filename[, flags]) -&gt; retval<br />\n&nbsp; &nbsp; . &nbsp; @brief Loads an image from a file.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @anchor imread<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function imread loads an image from the specified file and returns it. If the image cannot be<br />\n&nbsp; &nbsp; . &nbsp; read (because of missing file, improper permissions, unsupported or invalid format), the function<br />\n&nbsp; &nbsp; . &nbsp; returns an empty matrix ( Mat::data==NULL ).<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; Currently, the following file formats are supported:<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Windows bitmaps - *.bmp, *.dib (always supported)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; JPEG files - *.jpeg, *.jpg, *.jpe (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; JPEG 2000 files - *.jp2 (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Portable Network Graphics - *.png (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; WebP - *.webp (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Portable image format - *.pbm, *.pgm, *.ppm *.pxm, *.pnm (always supported)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Sun rasters - *.sr, *.ras (always supported)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; TIFF files - *.tiff, *.tif (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; OpenEXR Image files - *.exr (see the *Notes* section)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Radiance HDR - *.hdr, *.pic (always supported)<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; Raster and Vector geospatial data supported by Gdal (see the *Notes* section)<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @note<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; The function determines the type of an image by the content, not by the file extension.<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; In the case of color images, the decoded images will have the channels stored in **B G R** order.<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; On Microsoft Windows* OS and MacOSX*, the codecs shipped with an OpenCV image (libjpeg,<br />\n&nbsp; &nbsp; . &nbsp; libpng, libtiff, and libjasper) are used by default. So, OpenCV can always read JPEGs, PNGs,<br />\n&nbsp; &nbsp; . &nbsp; and TIFFs. On MacOSX, there is also an option to use native MacOSX image readers. But beware<br />\n&nbsp; &nbsp; . &nbsp; that currently these native image loaders give images with different pixel values because of<br />\n&nbsp; &nbsp; . &nbsp; the color management embedded into MacOSX.<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; On Linux*, BSD flavors and other Unix-like open-source operating systems, OpenCV looks for<br />\n&nbsp; &nbsp; . &nbsp; codecs supplied with an OS image. Install the relevant packages (do not forget the development<br />\n&nbsp; &nbsp; . &nbsp; files, for example, &quot;libjpeg-dev&quot;, in Debian* and Ubuntu*) to get the codec support or turn<br />\n&nbsp; &nbsp; . &nbsp; on the OPENCV_BUILD_3RDPARTY_LIBS flag in CMake.<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; In the case you set *WITH_GDAL* flag to true in CMake and @ref IMREAD_LOAD_GDAL to load the image,<br />\n&nbsp; &nbsp; . &nbsp; then [GDAL](http://www.gdal.org) driver will be used in order to decode the image by supporting<br />\n&nbsp; &nbsp; . &nbsp; the following formats: [Raster](http://www.gdal.org/formats_list.html),<br />\n&nbsp; &nbsp; . &nbsp; [Vector](http://www.gdal.org/ogr_formats.html).<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; If EXIF information are embedded in the image file, the EXIF orientation will be taken into account<br />\n&nbsp; &nbsp; . &nbsp; and thus the image will be rotated accordingly except if the flag @ref IMREAD_IGNORE_ORIENTATION is passed.<br />\n&nbsp; &nbsp; . &nbsp; @param filename Name of file to be loaded.<br />\n&nbsp; &nbsp; . &nbsp; @param flags Flag that can take values of cv::ImreadModes</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_UNCHANGED) # to samo co img = cv2.imread(&#39;clouds.jpg&#39;)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:428px; width:800px\" /></p>\n\n<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_COLOR)</p>\n\n<p>px = img[55,55]<br />\nprint(px) # [153 &nbsp;86 &nbsp;25]</p>\n\n<p>px = img[100:150,100:150]<br />\nprint(px)<br />\n&#39;&#39;&#39;<br />\n[[[166 &nbsp;95 &nbsp;31]<br />\n&nbsp; [166 &nbsp;95 &nbsp;31]<br />\n&nbsp; [167 &nbsp;95 &nbsp;31]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [169 &nbsp;94 &nbsp;26]<br />\n&nbsp; [166 &nbsp;94 &nbsp;24]<br />\n&nbsp; [167 &nbsp;95 &nbsp;25]]</p>\n\n<p>&nbsp;[[167 &nbsp;96 &nbsp;32]<br />\n&nbsp; [167 &nbsp;96 &nbsp;32]<br />\n&nbsp; [167 &nbsp;96 &nbsp;32]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [169 &nbsp;94 &nbsp;26]<br />\n&nbsp; [166 &nbsp;94 &nbsp;24]<br />\n&nbsp; [167 &nbsp;95 &nbsp;23]]</p>\n\n<p>&nbsp;[[166 &nbsp;95 &nbsp;31]<br />\n&nbsp; [168 &nbsp;97 &nbsp;33]<br />\n&nbsp; [168 &nbsp;97 &nbsp;33]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [167 &nbsp;94 &nbsp;26]<br />\n&nbsp; [167 &nbsp;94 &nbsp;26]<br />\n&nbsp; [165 &nbsp;94 &nbsp;26]]</p>\n\n<p>&nbsp;...,&nbsp;<br />\n&nbsp;[[175 106 &nbsp;43]<br />\n&nbsp; [174 106 &nbsp;41]<br />\n&nbsp; [175 106 &nbsp;43]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [214 173 140]<br />\n&nbsp; [213 173 138]<br />\n&nbsp; [208 163 126]]</p>\n\n<p>&nbsp;[[173 106 &nbsp;43]<br />\n&nbsp; [174 108 &nbsp;43]<br />\n&nbsp; [176 107 &nbsp;44]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [213 171 136]<br />\n&nbsp; [208 166 131]<br />\n&nbsp; [208 160 124]]</p>\n\n<p>&nbsp;[[174 107 &nbsp;46]<br />\n&nbsp; [174 107 &nbsp;44]<br />\n&nbsp; [176 107 &nbsp;44]<br />\n&nbsp; ...,&nbsp;<br />\n&nbsp; [201 156 119]<br />\n&nbsp; [206 161 124]<br />\n&nbsp; [208 159 121]]]<br />\n&#39;&#39;&#39;</p>\n\n<p>img[100:150,100:150] = [255,255,255]</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/imread.jpg\" style=\"height:428px; width:800px\" /></p>\n\n<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;logo.png&#39;)&nbsp;</p>\n\n<p>import cv2<br />\nimport numpy as np</p>\n\n<p>img1 = cv2.imread(&#39;image_1.png&#39;)<br />\nimg2 = cv2.imread(&#39;logo.png&#39;)&nbsp;</p>\n\n<p><br />\nprint(img2.shape) #&nbsp;rows, cols, channels --&gt; szerokoÅ›Ä‡, wysokoÅ›Ä‡, kanaÅ‚y czyli RGB, moÅ¼e byÄ‡ naprzykÅ‚ad RGBA lub inny</p>\n\n<p>cv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n\n<p>print(img2.shape)</p>\n\n<p>cv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n&nbsp;</p>\n","0"),
("5812","imreadmulti","","","0"),
("5813","imshow","<p>imshow(...)<br />\n&nbsp; &nbsp; imshow(winname, mat) -&gt; None<br />\n&nbsp; &nbsp; . &nbsp; @brief Displays an image in the specified window.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function imshow displays an image in the specified window. If the window was created with the<br />\n&nbsp; &nbsp; . &nbsp; cv::WINDOW_AUTOSIZE flag, the image is shown with its original size, however it is still limited by the screen resolution.<br />\n&nbsp; &nbsp; . &nbsp; Otherwise, the image is scaled to fit the window. The function may scale the image, depending on its depth:<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; If the image is 8-bit unsigned, it is displayed as is.<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; If the image is 16-bit unsigned or 32-bit integer, the pixels are divided by 256. That is, the<br />\n&nbsp; &nbsp; . &nbsp; value range [0,255*256] is mapped to [0,255].<br />\n&nbsp; &nbsp; . &nbsp; - &nbsp; If the image is 32-bit or 64-bit floating-point, the pixel values are multiplied by 255. That is, the<br />\n&nbsp; &nbsp; . &nbsp; value range [0,1] is mapped to [0,255].<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; If window was created with OpenGL support, cv::imshow also support ogl::Buffer , ogl::Texture2D and<br />\n&nbsp; &nbsp; . &nbsp; cuda::GpuMat as input.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; If the window was not created before this function, it is assumed creating a window with cv::WINDOW_AUTOSIZE.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; If you need to show an image that is bigger than the screen resolution, you will need to call namedWindow(&quot;&quot;, WINDOW_NORMAL) before the imshow.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @note This function should be followed by cv::waitKey function which displays the image for specified<br />\n&nbsp; &nbsp; . &nbsp; milliseconds. Otherwise, it won&#39;t display the image. For example, **waitKey(0)** will display the window<br />\n&nbsp; &nbsp; . &nbsp; infinitely until any keypress (it is suitable for image display). **waitKey(25)** will display a frame<br />\n&nbsp; &nbsp; . &nbsp; for 25 ms, after which display will be automatically closed. (If you put it in a loop to read<br />\n&nbsp; &nbsp; . &nbsp; videos, it will display the video frame-by-frame)</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;)<br />\ncv2.imshow(&#39;image&#39;,img) # (window title, image)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/Unchanged.jpg\" style=\"height:214px; width:400px\" /><br />\n&nbsp;</p>\n","0"),
("5814","imwrite","<p>imwrite(...)<br />\n&nbsp; &nbsp; imwrite(filename, img[, params]) -&gt; retval<br />\n&nbsp; &nbsp; . &nbsp; @brief Saves an image to a specified file.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function imwrite saves the image to the specified file. The image format is chosen based on the<br />\n&nbsp; &nbsp; . &nbsp; filename extension (see cv::imread for the list of extensions). Only 8-bit (or 16-bit unsigned (CV_16U)<br />\n&nbsp; &nbsp; . &nbsp; in case of PNG, JPEG 2000, and TIFF) single-channel or 3-channel (with &#39;BGR&#39; channel order) images<br />\n&nbsp; &nbsp; . &nbsp; can be saved using this function. If the format, depth or channel order is different, use<br />\n&nbsp; &nbsp; . &nbsp; Mat::convertTo , and cv::cvtColor to convert it before saving. Or, use the universal FileStorage I/O<br />\n&nbsp; &nbsp; . &nbsp; functions to save the image to XML or YAML format.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; It is possible to store PNG images with an alpha channel using this function. To do this, create<br />\n&nbsp; &nbsp; . &nbsp; 8-bit (or 16-bit) 4-channel image BGRA, where the alpha channel goes last. Fully transparent pixels<br />\n&nbsp; &nbsp; . &nbsp; should have alpha set to 0, fully opaque pixels should have alpha set to 255/65535.</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;)<br />\ncv2.imwrite(&#39;watchgray.png&#39;,img)</p>\n","0"),
("5815","inRange","","","0"),
("5816","initCameraMatrix2D","","","0"),
("5817","initUndistortRectifyMap","","","0"),
("5818","initWideAngleProjMap","","","0"),
("5819","inpaint","","","0"),
("5820","insertChannel","","","0"),
("5821","instr","","","0"),
("5822","integral","","","0"),
("5823","integral2","","","0"),
("5824","integral3","","","0"),
("5825","intersectConvexConvex","","","0"),
("5826","invert","","","0"),
("5827","invertAffineTransform","","","0"),
("5828","ipp","","","0"),
("5829","isContourConvex","","","0"),
("5830","kmeans","","","0"),
("5831","line","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/line.jpg\" style=\"height:427px; width:800px\" /></p>\n\n<p>&nbsp; &nbsp; line(img, pt1, pt2, color[, thickness[, lineType[, shift]]]) -&gt; img<br />\n&nbsp; &nbsp; . &nbsp; @brief Draws a line segment connecting two points.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function line draws the line segment between pt1 and pt2 points in the image. The line is<br />\n&nbsp; &nbsp; . &nbsp; clipped by the image boundaries. For non-antialiased lines with integer coordinates, the 8-connected<br />\n&nbsp; &nbsp; . &nbsp; or 4-connected Bresenham algorithm is used. Thick lines are drawn with rounding endings. Antialiased<br />\n&nbsp; &nbsp; . &nbsp; lines are drawn using Gaussian filtering.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param img Image.<br />\n&nbsp; &nbsp; . &nbsp; @param pt1 First point of the line segment.<br />\n&nbsp; &nbsp; . &nbsp; @param pt2 Second point of the line segment.<br />\n&nbsp; &nbsp; . &nbsp; @param color Line color.<br />\n&nbsp; &nbsp; . &nbsp; @param thickness Line thickness.<br />\n&nbsp; &nbsp; . &nbsp; @param lineType Type of the line, see cv::LineTypes.<br />\n&nbsp; &nbsp; . &nbsp; @param shift Number of fractional bits in the point coordinates.</p>\n","<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)<br />\n&nbsp;<br />\ncv2.line(img,(0,0),(150,150),(255,255,255),15) # (image, (x y start), (x y end), (color Blue Green Red), thickness)</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()</p>\n","0"),
("5832","linearPolar","","","0"),
("5833","log","","","0"),
("5834","logPolar","","","0"),
("5835","magnitude","","","0"),
("5836","matMulDeriv","","","0"),
("5837","matchShapes","","","0"),
("5838","matchTemplate","","","0"),
("5839","max","","","0"),
("5840","mean","","","0"),
("5841","meanShift","","","0"),
("5842","meanStdDev","","","0"),
("5843","medianBlur","","","0"),
("5844","merge","","","0"),
("5845","min","","","0");
INSERT INTO function VALUES
("5846","minAreaRect","","","0"),
("5847","minEnclosingCircle","","","0"),
("5848","minEnclosingTriangle","","","0"),
("5849","minMaxLoc","","","0"),
("5850","mixChannels","","","0"),
("5851","ml","","","0"),
("5852","moments","","","0"),
("5853","morphologyEx","","","0"),
("5854","moveWindow","","","0"),
("5855","mulSpectrums","","","0"),
("5856","mulTransposed","","","0"),
("5857","multiply","","","0"),
("5858","namedWindow","","","0"),
("5859","norm","","","0"),
("5860","normalize","","","0"),
("5861","ocl","","","0"),
("5862","ogl","","","0"),
("5863","os","","","0"),
("5864","patchNaNs","","","0"),
("5865","pencilSketch","","","0"),
("5866","perspectiveTransform","","","0"),
("5867","phase","","","0"),
("5868","phaseCorrelate","","","0"),
("5869","pointPolygonTest","","","0"),
("5870","polarToCart","","","0"),
("5871","polylines","<p>polylines(...)<br />\n&nbsp; &nbsp; polylines(img, pts, isClosed, color[, thickness[, lineType[, shift]]]) -&gt; img<br />\n&nbsp; &nbsp; . &nbsp; @brief Draws several polygonal curves.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param img Image.<br />\n&nbsp; &nbsp; . &nbsp; @param pts Array of polygonal curves.<br />\n&nbsp; &nbsp; . &nbsp; @param isClosed Flag indicating whether the drawn polylines are closed or not. If they are closed,<br />\n&nbsp; &nbsp; . &nbsp; the function draws a line from the last vertex of each curve to its first vertex.<br />\n&nbsp; &nbsp; . &nbsp; @param color Polyline color.<br />\n&nbsp; &nbsp; . &nbsp; @param thickness Thickness of the polyline edges.<br />\n&nbsp; &nbsp; . &nbsp; @param lineType Type of the line segments. See the line description.<br />\n&nbsp; &nbsp; . &nbsp; @param shift Number of fractional bits in the vertex coordinates.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function polylines draws one or more polygonal curves.</p>\n","<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)</p>\n\n<p>pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)&nbsp;<br />\ncv2.polylines(img, [pts], True, (0,255,255), 3) # (image, [punkty], True -&gt; czyli poÅ‚Ä…cz pierwszy punkt z ostanim liniÄ…, thickness)</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/polylines.jpg\" style=\"height:427px; width:800px\" /></p>\n","0"),
("5872","pow","","","0"),
("5873","preCornerDetect","","","0"),
("5874","projectPoints","","","0"),
("5875","putText","<p>putText(...)<br />\n&nbsp; &nbsp; putText(img, text, org, fontFace, fontScale, color[, thickness[, lineType[, bottomLeftOrigin]]]) -&gt; img<br />\n&nbsp; &nbsp; . &nbsp; @brief Draws a text string.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function putText renders the specified text string in the image. Symbols that cannot be rendered<br />\n&nbsp; &nbsp; . &nbsp; using the specified font are replaced by question marks. See getTextSize for a text rendering code<br />\n&nbsp; &nbsp; . &nbsp; example.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param img Image.<br />\n&nbsp; &nbsp; . &nbsp; @param text Text string to be drawn.<br />\n&nbsp; &nbsp; . &nbsp; @param org Bottom-left corner of the text string in the image.<br />\n&nbsp; &nbsp; . &nbsp; @param fontFace Font type, see cv::HersheyFonts.<br />\n&nbsp; &nbsp; . &nbsp; @param fontScale Font scale factor that is multiplied by the font-specific base size.<br />\n&nbsp; &nbsp; . &nbsp; @param color Text color.<br />\n&nbsp; &nbsp; . &nbsp; @param thickness Thickness of the lines used to draw a text.<br />\n&nbsp; &nbsp; . &nbsp; @param lineType Line type. See the line for details.<br />\n&nbsp; &nbsp; . &nbsp; @param bottomLeftOrigin When true, the image data origin is at the bottom-left corner. Otherwise,<br />\n&nbsp; &nbsp; . &nbsp; it is at the top-left corner.</p>\n","<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)</p>\n\n<p>font = cv2.FONT_HERSHEY_SIMPLEX<br />\ncv2.putText(img, &#39;OpenCV Tuts!&#39;, (0,130), font, 5, (200,255,255), 2, cv2.LINE_AA) # image -&gt; czyli gdzie wstawiÄ‡ napis, (start), font, size, (color), &nbsp;thickness, antyaliasing<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/putText.jpg\" style=\"height:427px; width:800px\" /></p>\n","0"),
("5876","pyrDown","","","0"),
("5877","pyrMeanShiftFiltering","","","0"),
("5878","pyrUp","","","0"),
("5879","randShuffle","","","0"),
("5880","randn","","","0"),
("5881","randu","","","0"),
("5882","recoverPose","","","0"),
("5883","rectangle","<p>rectangle(...)<br />\n&nbsp; &nbsp; rectangle(img, pt1, pt2, color[, thickness[, lineType[, shift]]]) -&gt; img<br />\n&nbsp; &nbsp; . &nbsp; @brief Draws a simple, thick, or filled up-right rectangle.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function rectangle draws a rectangle outline or a filled rectangle whose two opposite corners<br />\n&nbsp; &nbsp; . &nbsp; are pt1 and pt2.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param img Image.<br />\n&nbsp; &nbsp; . &nbsp; @param pt1 Vertex of the rectangle.<br />\n&nbsp; &nbsp; . &nbsp; @param pt2 Vertex of the rectangle opposite to pt1 .<br />\n&nbsp; &nbsp; . &nbsp; @param color Rectangle color or brightness (grayscale image).<br />\n&nbsp; &nbsp; . &nbsp; @param thickness Thickness of lines that make up the rectangle. Negative values, like CV_FILLED ,<br />\n&nbsp; &nbsp; . &nbsp; mean that the function has to draw a filled rectangle.<br />\n&nbsp; &nbsp; . &nbsp; @param lineType Type of the line. See the line description.<br />\n&nbsp; &nbsp; . &nbsp; @param shift Number of fractional bits in the point coordinates.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/rectangle.jpg\" style=\"height:427px; width:800px\" /></p>\n","<p>import numpy as np<br />\nimport cv2</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;, cv2.IMREAD_COLOR)<br />\n&nbsp;<br />\ncv2.line(img,(0,0),(150,150),(255,255,255),15)</p>\n\n<p>cv2.rectangle(img, (15,25), (200,150), (0,255,0), 5)</p>\n\n<p>cv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(0)<br />\ncv2.destroyAllWindows()</p>\n","0"),
("5884","rectify3Collinear","","","0"),
("5885","reduce","","","0"),
("5886","remap","","","0"),
("5887","repeat","","","0"),
("5888","reprojectImageTo3D","","","0"),
("5889","resize","","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;simon.jpg&#39;)</p>\n\n<p>height, width, channels = img.shape<br />\nprint(height, width, channels) # 1600 1200 3</p>\n\n<p>imgresize = cv2.resize(img,(600,800))&nbsp; #&nbsp;imgresize = cv2.resize(img,(round(width*0.5),round(height*0.5)))</p>\n\n<p>cv2.imshow(&#39;image&#39;,imgresize)<br />\ncv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/resize.jpg\" style=\"height:834px; width:598px\" /></p>\n","0"),
("5890","resizeWindow","","","0"),
("5891","rotate","","","0"),
("5892","rotatedRectangleIntersection","","","0"),
("5893","sampsonDistance","","","0"),
("5894","scaleAdd","","","0"),
("5895","seamlessClone","","","0"),
("5896","selectROI","","","0"),
("5897","selectROIs","","","0"),
("5898","sepFilter2D","","","0"),
("5899","setIdentity","","","0"),
("5900","setMouseCallback","","","0"),
("5901","setNumThreads","","","0"),
("5902","setRNGSeed","","","0"),
("5903","setTrackbarMax","","","0"),
("5904","setTrackbarMin","","","0"),
("5905","setTrackbarPos","","","0"),
("5906","setUseOpenVX","","","0"),
("5907","setUseOptimized","","","0"),
("5908","setWindowProperty","","","0"),
("5909","setWindowTitle","","","0"),
("5910","solve","","","0"),
("5911","solveCubic","","","0"),
("5912","solveLP","","","0"),
("5913","solveP3P","","","0"),
("5914","solvePnP","","","0"),
("5915","solvePnPRansac","","","0"),
("5916","solvePoly","","","0"),
("5917","sort","","","0"),
("5918","sortIdx","","","0"),
("5919","spatialGradient","","","0"),
("5920","split","","","0"),
("5921","sqrBoxFilter","","","0"),
("5922","sqrt","","","0"),
("5923","startWindowThread","","","0"),
("5924","stereoCalibrate","","","0"),
("5925","stereoRectify","","","0"),
("5926","stereoRectifyUncalibrated","","","0"),
("5927","stylization","","","0"),
("5928","subtract","","","0"),
("5929","sumElems","","","0"),
("5930","sys","","","0"),
("5931","textureFlattening","","","0"),
("5932","threshold","<p>threshold(...)<br />\n&nbsp; &nbsp; threshold(src, thresh, maxval, type[, dst]) -&gt; retval, dst<br />\n&nbsp; &nbsp; . &nbsp; @brief Applies a fixed-level threshold to each array element.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function applies fixed-level thresholding to a multiple-channel array. The function is typically<br />\n&nbsp; &nbsp; . &nbsp; used to get a bi-level (binary) image out of a grayscale image ( cv::compare could be also used for<br />\n&nbsp; &nbsp; . &nbsp; this purpose) or for removing a noise, that is, filtering out pixels with too small or too large<br />\n&nbsp; &nbsp; . &nbsp; values. There are several types of thresholding supported by the function. They are determined by<br />\n&nbsp; &nbsp; . &nbsp; type parameter.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; Also, the special values cv::THRESH_OTSU or cv::THRESH_TRIANGLE may be combined with one of the<br />\n&nbsp; &nbsp; . &nbsp; above values. In these cases, the function determines the optimal threshold value using the Otsu&#39;s<br />\n&nbsp; &nbsp; . &nbsp; or Triangle algorithm and uses it instead of the specified thresh . The function returns the<br />\n&nbsp; &nbsp; . &nbsp; computed threshold value. Currently, the Otsu&#39;s and Triangle methods are implemented only for 8-bit<br />\n&nbsp; &nbsp; . &nbsp; images.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @note Input image should be single channel only in case of CV_THRESH_OTSU or CV_THRESH_TRIANGLE flags<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param src input array (multiple-channel, 8-bit or 32-bit floating point).<br />\n&nbsp; &nbsp; . &nbsp; @param dst output array of the same size &nbsp;and type and the same number of channels as src.<br />\n&nbsp; &nbsp; . &nbsp; @param thresh threshold value.<br />\n&nbsp; &nbsp; . &nbsp; @param maxval maximum value to use with the THRESH_BINARY and THRESH_BINARY_INV thresholding<br />\n&nbsp; &nbsp; . &nbsp; types.<br />\n&nbsp; &nbsp; . &nbsp; @param type thresholding type (see the cv::ThresholdTypes).<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @sa &nbsp;adaptiveThreshold, findContours, compare, min, max</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nimg&nbsp;= cv2.imread(&#39;logo.png&#39;)&nbsp;</p>\n\n<p>img2gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)<br />\nret, mask = cv2.threshold(img2gray, 220, 255, cv2.THRESH_BINARY_INV) # jeÅ¼eli powyÅ¼ej 220 przekonwertuj na 255 czyli pixele czarne w pewnym stopniu przekonwertuje na caÅ‚kiem biaÅ‚e</p>\n\n<p>cv2.imshow(&#39;mask&#39;,mask)<br />\nprint(ret) # 220.0</p>\n\n<p>cv2.waitKey(0) # wait for any key<br />\ncv2.destroyAllWindows()<br />\n<br />\n<img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/threshold.jpg\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/OpenCV/treshold2image.jpg\" style=\"height:557px; width:800px\" />&nbsp;cv2.threshold(img2gray, 0, 0, cv2.THRESH_BINARY_INV)</p>\n","0"),
("5933","trace","","","0"),
("5934","transform","","","0"),
("5935","transpose","","","0"),
("5936","triangulatePoints","","","0"),
("5937","undistort","","","0"),
("5938","undistortPoints","","","0"),
("5939","useOpenVX","","","0"),
("5940","useOptimized","","","0"),
("5941","validateDisparity","","","0"),
("5942","vconcat","","","0"),
("5943","videostab","","","0"),
("5944","waitKey","<p>waitKey(...)<br />\n&nbsp; &nbsp; waitKey([, delay]) -&gt; retval<br />\n&nbsp; &nbsp; . &nbsp; @brief Waits for a pressed key.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function waitKey waits for a key event infinitely (when f$ exttt{delay}leq 0f$ ) or for delay<br />\n&nbsp; &nbsp; . &nbsp; milliseconds, when it is positive. Since the OS has a minimum time between switching threads, the<br />\n&nbsp; &nbsp; . &nbsp; function will not wait exactly delay ms, it will wait at least delay ms, depending on what else is<br />\n&nbsp; &nbsp; . &nbsp; running on your computer at that time. It returns the code of the pressed key or -1 if no key was<br />\n&nbsp; &nbsp; . &nbsp; pressed before the specified time had elapsed.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @note<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; This function is the only method in HighGUI that can fetch and handle events, so it needs to be<br />\n&nbsp; &nbsp; . &nbsp; called periodically for normal event processing unless HighGUI is used within an environment that<br />\n&nbsp; &nbsp; . &nbsp; takes care of event processing.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @note<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; The function only works if there is at least one HighGUI window created and the window is active.<br />\n&nbsp; &nbsp; . &nbsp; If there are several HighGUI windows, any of them can be active.<br />\n&nbsp; &nbsp; .<br />\n&nbsp; &nbsp; . &nbsp; @param delay <strong>Delay in milliseconds. 0 is the special value that means &quot;forever&quot;</strong>.</p>\n","<p>import cv2<br />\nimport numpy as np<br />\nfrom matplotlib import pyplot as plt</p>\n\n<p>img = cv2.imread(&#39;clouds.jpg&#39;,cv2.IMREAD_REDUCED_COLOR_4)<br />\ncv2.imshow(&#39;image&#39;,img)<br />\ncv2.waitKey(30) # czekaj na naciÅ›niÄ™cie dowolnego klawisza 30 sekund 0 oznacza czekanie w nieskoÅ„czonoÅ›Ä‡<br />\ncv2.destroyAllWindows()</p>\n","0"),
("5945","waitKeyEx","","","0");
INSERT INTO function VALUES
("5946","warpAffine","","","0"),
("5947","warpPerspective","","","0"),
("5948","watershed","","","0"),
("5966","Wave_write.setnchannels(n)","","","0"),
("5965","Wave_write.close()","","","0"),
("5964","Wave_read.tell()","<p>Return current file pointer position</p>\n","","0"),
("5963","Wave_read.setpos(pos)","<p>Set the file pointer to the specified position</p>\n","","0"),
("5962","Wave_read.getmark(id)","","","0"),
("5961","Wave_read.getmarkers()","","","0"),
("5960","Wave_read.rewind()","<p>Rewind the file pointer to the beginning of the audio stream</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.tell() # 0</p>\n\n<p>file.setpos(5)<br />\nfile.tell() # 5</p>\n\n<p>file.rewind()</p>\n\n<p>file.tell() # 0</p>\n","0"),
("5959","Wave_read.readframes(n)","<p>Reads and returns at most&nbsp;<em>n</em>&nbsp;frames of audio, as a&nbsp;<a href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"bytes\"><code>bytes</code></a>&nbsp;object</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.readframes(0) # b&#39;&#39;</p>\n\n<p>file.readframes(1) # b&#39;x00x00x00x00&#39;</p>\n\n<p>file.readframes(2) # b&#39;x00x00x00x00x00x00x00x00&#39;</p>\n","0"),
("5958","Wave_read.getparams()","<p>Returns a&nbsp;<a href=\"https://docs.python.org/3/library/collections.html#collections.namedtuple\" title=\"collections.namedtuple\"><code>namedtuple()</code></a>&nbsp;<code>(nchannels,&nbsp;sampwidth,&nbsp;framerate,&nbsp;nframes,&nbsp;comptype,&nbsp;compname)</code>, equivalent to output of the&nbsp;<code>get*()</code>&nbsp;methods</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getparams() # _wave_params(nchannels=2, sampwidth=2, framerate=44100, nframes=7835904, comptype=&#39;NONE&#39;, compname=&#39;not compressed&#39;)</p>\n","0"),
("5957","Wave_read.getcompname()","<p>Human-readable version of&nbsp;<a href=\"https://docs.python.org/3/library/wave.html#wave.Wave_read.getcomptype\" title=\"wave.Wave_read.getcomptype\"><code>getcomptype()</code></a>. Usually&nbsp;<code>&#39;not&nbsp;compressed&#39;</code>&nbsp;parallels&nbsp;<code>&#39;NONE&#39;</code></p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getcompname() # &#39;not compressed&#39;</p>\n","0"),
("5956","Wave_read.getcomptype()","<p>Returns compression type (<code>&#39;NONE&#39;</code>&nbsp;is the only supported type).</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getcomptype() # &#39;NONE&#39;</p>\n","0"),
("5955","Wave_read.getnframes()","<p>Returns number of audio frames</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getnframes() # 7835904</p>\n","0"),
("5954","Wave_read.getframerate()","<p>Returns sampling frequency</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getframerate() # 44100</p>\n","0"),
("5953","Wave_read.getsampwidth()","<p>Returns sample width in bytes</p>\n","<p>import wave</p>\n\n<p>file = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getsampwidth() # 2</p>\n","0"),
("5952","Wave_read.getnchannels()","<p>Returns number of audio channels (<code>1</code>&nbsp;for mono,&nbsp;<code>2</code>&nbsp;for stereo</p>\n","<p>import wave<br />\nfile = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.getnchannels() # 2</p>\n\n<p>file.close()</p>\n","0"),
("5951","Wave_read.close()","<p>Close the stream if it was opened by&nbsp;<a href=\"https://docs.python.org/3/library/wave.html#module-wave\" title=\"wave: Provide an interface to the WAV sound format.\"><code>wave</code></a>, and make the instance unusable. This is called automatically on object collection</p>\n","<p>import wave<br />\nfile = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n\n<p>file.close()</p>\n","0"),
("5950","wave.openfp(file, mode)","","","0"),
("5949","wave.open(file[, mode])","<p>If&nbsp;<em>file</em>&nbsp;is a string, open the file by that name, otherwise treat it as a file-like object.&nbsp;<em>mode</em>&nbsp;can be:</p>\n\n<p><code>&#39;rb&#39;</code></p>\n\n<p>Read only mode.</p>\n\n<p><code>&#39;wb&#39;</code></p>\n\n<p>Write only mode.</p>\n","<p>import wave<br />\nfile = wave.open(&#39;example.wav&#39;, mode=&#39;rb&#39;)</p>\n","0"),
("5967","Wave_write.setsampwidth(n)","","","0"),
("5968","Wave_write.setframerate(n)","","","0"),
("5969","Wave_write.setnframes(n)","","","0"),
("5970","Wave_write.setcomptype(type, name)","","","0"),
("5971","Wave_write.setparams(tuple)","","","0"),
("5972","Wave_write.tell()","","","0"),
("5973","Wave_write.writeframesraw(data)","","","0"),
("5974","Wave_write.writeframes(data)","","","0"),
("5975","AudioSegment","<p>&nbsp;| &nbsp;AudioSegments are *immutable* objects representing segments of audio<br />\n&nbsp;| &nbsp;that can be manipulated using python code.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;AudioSegments are slicable using milliseconds.<br />\n&nbsp;| &nbsp;for example:<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;a = AudioSegment.from_mp3(mp3file)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;first_second = a[:1000] # get the first second of an mp3<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;slice = a[5000:10000] # get a slice from 5 to 10 seconds of an mp3</p>\n","<p>miusic = r&#39;C:UsersUserDocuments\\_Skryptyexample.mp3&#39;</p>\n\n<p>from pydub import AudioSegment<br />\nfrom pydub.playback import play</p>\n\n<p>song = AudioSegment.from_mp3(miusic)</p>\n\n<p># boost volume by 6dB<br />\nlouder_song = song + 6</p>\n\n<p># reduce volume by 3dB<br />\nquieter_song = song - 3</p>\n\n<p>#Play song<br />\nplay(louder_song)</p>\n\n<p>#save louder song&nbsp;<br />\nlouder_song.export(&quot;louder_song.mp3&quot;, format=&#39;mp3&#39;)</p>\n","0"),
("5976","PageRange","","","0"),
("5977","PdfFileMerger","<p>class PdfFileMerger(builtins.object)<br />\n&nbsp;| &nbsp;Initializes a PdfFileMerger object. PdfFileMerger merges multiple PDFs<br />\n&nbsp;| &nbsp;into a single PDF. It can concatenate, slice, insert, or any combination<br />\n&nbsp;| &nbsp;of the above.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;See the functions :meth:`merge()&lt;merge&gt;` (or :meth:`append()&lt;append&gt;`)<br />\n&nbsp;| &nbsp;and :meth:`write()&lt;write&gt;` for usage information.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;:param bool strict: Determines whether user should be warned of all<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;problems and also causes some correctable problems to be fatal.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Defaults to ``True``.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;Methods defined here:<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;__init__(self, strict=True)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Initialize self. &nbsp;See help(type(self)) for accurate signature.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;addBookmark(self, title, pagenum, parent=None)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Add a bookmark to this PDF file.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str title: Title to use for this bookmark.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param int pagenum: Page number this bookmark will point to.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param parent: A reference to a parent bookmark to create nested<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bookmarks.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;addMetadata(self, infos)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Add custom metadata to the output.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param dict infos: a Python dictionary where each key is a field<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and each value is your new metadata.<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Example: ``{u&#39;/Title&#39;: u&#39;My title&#39;}``<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;addNamedDestination(self, title, pagenum)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Add a destination to the output.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str title: Title to use<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param int pagenum: Page number this destination points at.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;append(self, fileobj, bookmark=None, pages=None, import_bookmarks=True)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Identical to the :meth:`merge()&lt;merge&gt;` method, but assumes you want to concatenate<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;all pages onto the end of the file instead of specifying a position.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param fileobj: A File Object or an object that supports the standard read<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and seek methods similar to a File Object. Could also be a<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;string representing a path to a PDF file.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str bookmark: Optionally, you may specify a bookmark to be applied at<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the beginning of the included file by supplying the text of the bookmark.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param pages: can be a :ref:`Page Range &lt;page-range&gt;` or a ``(start, stop[, step])`` tuple<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;to merge only the specified range of pages from the source<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;document into the output document.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param bool import_bookmarks: You may prevent the source document&#39;s bookmarks<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from being imported by specifying this as ``False``.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;close(self)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Shuts all file descriptors (input and output) and clears all memory<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;usage.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;findBookmark(self, bookmark, root=None)<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;merge(self, position, fileobj, bookmark=None, pages=None, import_bookmarks=True)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Merges the pages from the given file into the output file at the<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;specified page number.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param int position: The *page number* to insert this file. File will<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;be inserted after the given number.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param fileobj: A File Object or an object that supports the standard read<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and seek methods similar to a File Object. Could also be a<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;string representing a path to a PDF file.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str bookmark: Optionally, you may specify a bookmark to be applied at<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the beginning of the included file by supplying the text of the bookmark.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param pages: can be a :ref:`Page Range &lt;page-range&gt;` or a ``(start, stop[, step])`` tuple<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;to merge only the specified range of pages from the source<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;document into the output document.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param bool import_bookmarks: You may prevent the source document&#39;s bookmarks<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from being imported by specifying this as ``False``.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;setPageLayout(self, layout)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Set the page layout<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str layout: The page layout to be used<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Valid layouts are:<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /NoLayout &nbsp; &nbsp; &nbsp; &nbsp;Layout explicitly not specified<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /SinglePage &nbsp; &nbsp; &nbsp;Show one page at a time<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /OneColumn &nbsp; &nbsp; &nbsp; Show one column at a time<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /TwoColumnLeft &nbsp; Show pages in two columns, odd-numbered pages on the left<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /TwoColumnRight &nbsp;Show pages in two columns, odd-numbered pages on the right<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /TwoPageLeft &nbsp; &nbsp; Show two pages at a time, odd-numbered pages on the left<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /TwoPageRight &nbsp; &nbsp;Show two pages at a time, odd-numbered pages on the right<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;setPageMode(self, mode)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Set the page mode.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param str mode: The page mode to use.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Valid modes are:<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/UseNone &nbsp; &nbsp; &nbsp; &nbsp; Do not show outlines or thumbnails panels<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/UseOutlines &nbsp; &nbsp; Show outlines (aka bookmarks) panel<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/UseThumbs &nbsp; &nbsp; &nbsp; Show page thumbnails panel<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/FullScreen &nbsp; &nbsp; &nbsp;Fullscreen view<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/UseOC &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Show Optional Content Group (OCG) panel<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/UseAttachments &nbsp;Show attachments panel<br />\n&nbsp;|<br />\n&nbsp;| &nbsp;write(self, fileobj)<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;Writes all data that has been merged to the given output file.<br />\n&nbsp;|<br />\n&nbsp;| &nbsp; &nbsp; &nbsp;:param fileobj: Output file. Can be a filename or any kind of<br />\n&nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;file-like object.</p>\n","<p>from PyPDF2 import PdfFileMerger</p>\n\n<p>pdfs = [&#39;1.pdf&#39;, &#39;2.pdf&#39;, &#39;3.pdf&#39;, &#39;4.pdf&#39;, &#39;5.pdf&#39;]</p>\n\n<p>merger = PdfFileMerger()</p>\n\n<p>for pdf in pdfs:<br />\n&nbsp; &nbsp; merger.append(pdf)</p>\n\n<p>merger.write(&quot;result.pdf&quot;)</p>\n","0"),
("5978","PdfFileReader","","","0"),
("5979","PdfFileWriter","","","0"),
("5980","filters","","","0"),
("5981","generic","","","0"),
("5982","merger","","","0"),
("5983","pagerange","","","0"),
("5984","parse_filename_page_ranges","","","0"),
("5985","pdf","","","0"),
("5986","utils","","","0"),
("5988","barcode.PROVIDED_BARCODES","<p>List of all suported barcodes</p>\n","<p>import barcode</p>\n\n<p>barcode.PROVIDED_BARCODES # [&#39;code39&#39;, &#39;ean&#39;, &#39;ean13&#39;, &#39;ean8&#39;, &#39;gs1&#39;, &#39;gtin&#39;, &#39;isbn&#39;, &#39;isbn10&#39;, &#39;isbn13&#39;, &#39;issn&#39;, &#39;jan&#39;, &#39;pzn&#39;, &#39;upc&#39;, &#39;upca&#39;]</p>\n","0"),
("5989","get_barcode_class","<p>Get&nbsp;barcode class</p>\n","<p>import barcode</p>\n\n<p>[&#39;code39&#39;, &#39;ean&#39;, &#39;ean13&#39;, &#39;ean8&#39;, &#39;gs1&#39;, &#39;gtin&#39;, &#39;isbn&#39;, &#39;isbn10&#39;, &#39;isbn13&#39;, &#39;issn&#39;, &#39;jan&#39;, &#39;pzn&#39;, &#39;upc&#39;, &#39;upca&#39;]</p>\n\n<p>code39 = barcode.get_barcode_class(&#39;code39&#39;) #&nbsp;&lt;class &#39;barcode.codex.Code39&#39;&gt;</p>\n\n<p>ean = barcode.get_barcode_class(&#39;ean&#39;) #&nbsp;&lt;class &#39;barcode.ean.EuropeanArticleNumber13&#39;&gt;</p>\n\n<p>ean13 = barcode.get_barcode_class(&#39;ean13&#39;) #&nbsp;&lt;class &#39;barcode.ean.EuropeanArticleNumber13&#39;&gt;</p>\n\n<p>ean8 = barcode.get_barcode_class(&#39;ean8&#39;) #&nbsp;&lt;class &#39;barcode.ean.EuropeanArticleNumber8&#39;&gt;</p>\n\n<p>gs1 = barcode.get_barcode_class(&#39;gs1&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardBookNumber13&#39;&gt;</p>\n\n<p>gtin = barcode.get_barcode_class(&#39;gtin&#39;) #&nbsp;&lt;class &#39;barcode.ean.EuropeanArticleNumber13&#39;&gt;</p>\n\n<p>isbn = barcode.get_barcode_class(&#39;isbn&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardBookNumber13&#39;&gt;</p>\n\n<p>isbn10 = barcode.get_barcode_class(&#39;isbn10&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardBookNumber10&#39;&gt;</p>\n\n<p>isbn13 = barcode.get_barcode_class(&#39;isbn13&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardBookNumber13&#39;&gt;</p>\n\n<p>isbn13 = barcode.get_barcode_class(&#39;isbn13&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardSerialNumber&#39;&gt;</p>\n\n<p>&nbsp;issn = barcode.get_barcode_class(&#39;issn&#39;) #&nbsp;&lt;class &#39;barcode.isxn.InternationalStandardSerialNumber&#39;&gt;</p>\n\n<p>jan = barcode.get_barcode_class(&#39;jan&#39;) #&nbsp;&lt;class &#39;barcode.ean.JapanArticleNumber&#39;&gt;</p>\n\n<p>pzn = barcode.get_barcode_class(&#39;pzn&#39;) #&nbsp;&lt;class &#39;barcode.codex.PZN&#39;&gt;</p>\n\n<p>upc = barcode.get_barcode_class(&#39;upc&#39;) #&nbsp;&lt;class &#39;barcode.upc.UniversalProductCodeA&#39;&gt;</p>\n\n<p>upca = barcode.get_barcode_class(&#39;upca&#39;) #&nbsp;&lt;class &#39;barcode.upc.UniversalProductCodeA&#39;&gt;</p>\n","0"),
("5990","save","","<p>import barcode</p>\n\n<p>EAN = barcode.get_barcode_class(&#39;ean13&#39;)</p>\n\n<p>ean = EAN(u&#39;5901234123457&#39;)</p>\n\n<p>fullname = ean.save(&#39;ean13_barcode&#39;)</p>\n\n<p>print(fullname) #&nbsp;&#39;ean13_barcode.svg&#39;&nbsp;</p>\n\n<h1><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/barcode/ean13_barcode.png\" style=\"height:280px; width:523px\" /></h1>\n\n<p>&nbsp;</p>\n","0"),
("5991","ImageWriter","","<p>import barcode</p>\n\n<p>from barcode.writer import ImageWriter</p>\n\n<p>EAN = barcode.get_barcode_class(&#39;ean13&#39;)</p>\n\n<p>ean = EAN(u&#39;5901234123457&#39;, writer=ImageWriter())</p>\n\n<p>fullname = ean.save(&#39;ean13_barcode&#39;)</p>\n","0"),
("5992","pydrive.auth.AuthError","","","0"),
("5993","pydrive.auth.AuthenticationError","","","0"),
("5994","pydrive.auth.AuthenticationRejected","","","0"),
("5995","pydrive.auth.CheckAuth","","","0"),
("5996","pydrive.auth.CheckServiceAuth","","","0"),
("5997","pydrive.auth.GoogleAuth","<p>Loads all settings and credentials</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Google/pydrive/google.jpg\" style=\"height:446px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Google/pydrive/drive_autherisation.jpg\" style=\"height:724px; width:617px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Google/pydrive/drive_autherisation2.jpg\" style=\"height:443px; width:800px\" /></p>\n","<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p><strong>client_secrets.json</strong></p>\n\n<p>{&quot;web&quot;:{&quot;client_id&quot;:&quot;780964583162-c403tv0du5ac26edmp1dmp3histh94b7.apps.googleusercontent.com&quot;,&quot;project_id&quot;:&quot;my-project-1506257451393&quot;,&quot;auth_uri&quot;:&quot;https://accounts.google.com/o/oauth2/auth&quot;,&quot;token_uri&quot;:&quot;https://accounts.google.com/o/oauth2/token&quot;,&quot;auth_provider_x509_cert_url&quot;:&quot;https://www.googleapis.com/oauth2/v1/certs&quot;,&quot;client_secret&quot;:&quot;FnsQsMv9FcoryQSh60GAC6XS&quot;,&quot;redirect_uris&quot;:[&quot;http://localhost:8080/&quot;],&quot;javascript_origins&quot;:[&quot;http://localhost:8080&quot;]}}</p>\n\n<p>&nbsp;</p>\n\n<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>print(gauth.GetAuthUrl()) # https://accounts.google.com/o/oauth2/auth?client_id=780964583162-c403tv0du5ac26edmp1dmp3histh94b7.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2Flocalhost%3A8080%2F&amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive&amp;access_type=offline&amp;response_type=code</p>\n\n<p>#&nbsp;Creates authentication url where user visits to grant access<br />\nprint(gauth.GetFlow()) # None<br />\nprint(gauth.Get_Http_Object()) #<br />\nprint(gauth.flow) #<br />\nprint(gauth.http) #<br />\nprint(gauth.service) #<br />\nprint(gauth.settings) # {&#39;client_config_backend&#39;: &#39;file&#39;, &#39;client_config_file&#39;: &#39;client_secrets.json&#39;, &#39;save_credentials&#39;: False, &#39;oauth_scope&#39;: [&#39;https://www.googleapis.com/auth/drive&#39;]}</p>\n","0"),
("5998","pydrive.auth.InvalidCredentialsError","","","0"),
("5999","pydrive.auth.LoadAuth","","","0"),
("6000","pydrive.auth.RefreshError","","","0"),
("6001","pydrive.drive.GoogleDrive","<p>Main Google Drive class</p>\n","<p>import os, pprint<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file_list = drive.ListFile({&#39;q&#39;: &quot;&#39;root&#39; in parents and trashed=false&quot;}).GetList()<br />\nfor file1 in file_list:<br />\n&nbsp; print(&#39;title: %s, id: %s&#39; % (file1[&#39;title&#39;], file1[&#39;id&#39;]))</p>\n\n<p>&#39;&#39;&#39;<br />\ntitle: Pomieszane, id: 0B-V4H-BsFb3td0dwT3dKbzFsblE<br />\ntitle: Programming Lectures, id: 0B-V4H-BsFb3tQWN3U054UVN4dVE<br />\ntitle: _Notes, id: 0B-V4H-BsFb3tWUZlUVQ5VW5lbHc<br />\ntitle: zak, id: 0B-V4H-BsFb3tWnhZTEVUeENYZ1k<br />\n&#39;&#39;&#39;</p>\n\n<p>file_list = drive.ListFile({&#39;q&#39;: &quot;&#39;0B-V4H-BsFb3tWnhZTEVUeENYZ1k&#39; in parents and trashed=false&quot;}).GetList()<br />\nfor file1 in file_list:<br />\n&nbsp; print(&#39;title: %s, id: %s&#39; % (file1[&#39;title&#39;], file1[&#39;id&#39;]))</p>\n\n<p>&#39;&#39;&#39;<br />\ntitle: 19.11.2016.docx, id: 1WIXVwD8u_0XOoB2QPisfO5dvXIubIgoseJu-259ootE<br />\ntitle: Nowy folder (2), id: 0B-V4H-BsFb3tRGt6ZFdaSFNDVzA<br />\ntitle: szablon.php, id: 0B-V4H-BsFb3tcFFQTFVkYXFiLXM<br />\ntitle: sklep3.sql, id: 0B-V4H-BsFb3tdTRTZVVaZ09oblk<br />\ntitle: kontakt.php, id: 0B-V4H-BsFb3tc0x4QVd0MHg2dk0<br />\ntitle: stopka.php, id: 0B-V4H-BsFb3tYmFneTl0XzV0ZFU<br />\ntitle: index.php, id: 0B-V4H-BsFb3tTmN0RlhQU1RzOXc<br />\ntitle: menu.php, id: 0B-V4H-BsFb3tR1NCbzZ2S2cyTlU<br />\ntitle: ankieta.php, id: 0B-V4H-BsFb3tRWFWLXdtaXRiNjA<br />\ntitle: naglowek.php, id: 0B-V4H-BsFb3tQ0FnMTBIcXh5Mmc<br />\ntitle: funkcja.php, id: 0B-V4H-BsFb3tOXdYSDd6S0JxQ2c<br />\ntitle: oferta.php, id: 0B-V4H-BsFb3tMjg1VlJkR25JZTg<br />\ntitle: 19.11.2016.docx, id: 0B-V4H-BsFb3tNlVYb09mZnBIN28<br />\ntitle: html, id: 0B-V4H-BsFb3tWm55b2hPdEg0Znc<br />\ntitle: notes, id: 0B-V4H-BsFb3tTGRfSjNzNGdjWkU<br />\n&#39;&#39;&#39;</p>\n\n<p>file = drive.CreateFile({&#39;title&#39;: &#39;Hello.txt&#39;})<br />\nfile.SetContentString(&#39;Hello&#39;)<br />\nfile.Upload() # Files.insert()</p>\n\n<p>pprint.pprint(drive.GetAbout())<br />\n&#39;&#39;&#39;<br />\n{&#39;additionalRoleInfo&#39;: [{&#39;roleSets&#39;: [{&#39;additionalRoles&#39;: [&#39;commenter&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;primaryRole&#39;: &#39;reader&#39;}],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.drawing&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;roleSets&#39;: [{&#39;additionalRoles&#39;: [&#39;commenter&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;primaryRole&#39;: &#39;reader&#39;}],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.document&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;roleSets&#39;: [{&#39;additionalRoles&#39;: [&#39;commenter&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;primaryRole&#39;: &#39;reader&#39;}],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.presentation&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;roleSets&#39;: [{&#39;additionalRoles&#39;: [&#39;commenter&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;primaryRole&#39;: &#39;reader&#39;}],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;*&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;roleSets&#39;: [{&#39;additionalRoles&#39;: [&#39;commenter&#39;],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;primaryRole&#39;: &#39;reader&#39;}],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.spreadsheet&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;roleSets&#39;: [],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.*&#39;}],<br />\n&nbsp;&#39;domainSharingPolicy&#39;: &#39;allowed&#39;,<br />\n&nbsp;&#39;etag&#39;: &#39;&quot;ce1d1e76e672d46e81c6591f86749b18&quot;&#39;,<br />\n&nbsp;&#39;exportFormats&#39;: [{&#39;source&#39;: &#39;application/vnd.google-apps.form&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/zip&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.document&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/rtf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/vnd.oasis.opendocument.text&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;text/html&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/pdf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/epub+zip&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/zip&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/vnd.openxmlformats-officedocument.wordprocessingml.document&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;text/plain&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.drawing&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;image/svg+xml&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;image/png&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/pdf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;image/jpeg&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.spreadsheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/x-vnd.oasis.opendocument.spreadsheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;text/tab-separated-values&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/pdf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;text/csv&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/zip&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/vnd.oasis.opendocument.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.script&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.script+json&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.oasis.opendocument.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/pdf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;application/vnd.openxmlformats-officedocument.presentationml.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;text/plain&#39;]}],<br />\n&nbsp;&#39;features&#39;: [{&#39;featureName&#39;: &#39;ocr&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;featureName&#39;: &#39;translation&#39;, &#39;featureRate&#39;: 2.0}],<br />\n&nbsp;&#39;folderColorPalette&#39;: [&#39;#ac725e&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#d06b64&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#f83a22&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#fa573c&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#ff7537&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#ffad46&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#fad165&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#fbe983&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#b3dc6c&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#7bd148&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#16a765&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#42d692&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#92e1c0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#9fe1e7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#9fc6e7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#4986e7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#9a9cff&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#b99aff&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#a47ae2&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#cd74e6&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#f691b2&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#cca6ac&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#cabdbf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;#8f8f8f&#39;],<br />\n&nbsp;&#39;importFormats&#39;: [{&#39;source&#39;: &#39;text/tab-separated-values&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/x-vnd.oasis.opendocument.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/jpeg&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/bmp&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/gif&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-excel.sheet.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.wordprocessingml.template&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-powerpoint.presentation.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-word.template.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.wordprocessingml.document&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/pjpeg&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.script+text/plain&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.script&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-excel&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.sun.xml.writer&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-word.document.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-powerpoint.slideshow.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;text/rtf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;text/plain&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.oasis.opendocument.spreadsheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/x-vnd.oasis.opendocument.spreadsheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/png&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/x-vnd.oasis.opendocument.text&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/msword&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/pdf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/json&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.script&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/x-msmetafile&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.drawing&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.spreadsheetml.template&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-powerpoint&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-excel.template.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/x-bmp&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/rtf&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.presentationml.template&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/x-png&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;text/html&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.oasis.opendocument.text&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.presentationml.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.google-apps.script+json&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.script&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.openxmlformats-officedocument.presentationml.slideshow&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.ms-powerpoint.template.macroenabled.12&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;text/csv&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.spreadsheet&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;application/vnd.oasis.opendocument.presentation&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.presentation&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;image/jpg&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;source&#39;: &#39;text/richtext&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;targets&#39;: [&#39;application/vnd.google-apps.document&#39;]}],<br />\n&nbsp;&#39;isCurrentAppInstalled&#39;: True,<br />\n&nbsp;&#39;kind&#39;: &#39;drive#about&#39;,<br />\n&nbsp;&#39;languageCode&#39;: &#39;pl&#39;,<br />\n&nbsp;&#39;largestChangeId&#39;: &#39;826816&#39;,<br />\n&nbsp;&#39;maxUploadSizes&#39;: [{&#39;size&#39;: &#39;10485760&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.document&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;size&#39;: &#39;104857600&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.spreadsheet&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;size&#39;: &#39;104857600&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.presentation&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;size&#39;: &#39;2097152&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;type&#39;: &#39;application/vnd.google-apps.drawing&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;size&#39;: &#39;5242880000000&#39;, &#39;type&#39;: &#39;application/pdf&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&#39;size&#39;: &#39;5242880000000&#39;, &#39;type&#39;: &#39;*&#39;}],<br />\n&nbsp;&#39;name&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n&nbsp;&#39;permissionId&#39;: &#39;09490418135191596166&#39;,<br />\n&nbsp;&#39;quotaBytesByService&#39;: [{&#39;bytesUsed&#39;: &#39;39236315545&#39;, &#39;serviceName&#39;: &#39;DRIVE&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;bytesUsed&#39;: &#39;108611425&#39;, &#39;serviceName&#39;: &#39;GMAIL&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;bytesUsed&#39;: &#39;0&#39;, &#39;serviceName&#39;: &#39;PHOTOS&#39;}],<br />\n&nbsp;&#39;quotaBytesTotal&#39;: &#39;107374182400&#39;,<br />\n&nbsp;&#39;quotaBytesUsed&#39;: &#39;39236315557&#39;,<br />\n&nbsp;&#39;quotaBytesUsedAggregate&#39;: &#39;39344926982&#39;,<br />\n&nbsp;&#39;quotaBytesUsedInTrash&#39;: &#39;15904478052&#39;,<br />\n&nbsp;&#39;quotaType&#39;: &#39;LIMITED&#39;,<br />\n&nbsp;&#39;rootFolderId&#39;: &#39;0AOV4H-BsFb3tUk9PVA&#39;,<br />\n&nbsp;&#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/about&#39;,<br />\n&nbsp;&#39;teamDriveThemes&#39;: [{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/Z5KeSUwxyWmRT9HGiVoXxqEp-KcWLSAkEgs3EgSHghCRi1_xPNFwdXbll6ivkDDqhtKabFeH1hw5fT3uDEmYDRVH3cNUXklNfZ0M8yuJ5Bwgu4w-vg=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#ea6100&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;abacus&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh3.googleusercontent.com/proxy/UjEpDwYsn-r3TcmSB4k58Z-cKBa_KWgNy5F9sx-O2KGGTJXNXODqmxLJY999NCZG80WDFvs93nF3ISv_qGEiI5slt5eyoFxBCWKuFm873RZEqPy-E6GN4a8=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#4285f4&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;blueprints&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/xVkWcsvjuebP-UnWCIJp6fEqRUHwIJObjK5KawhB-ReWImKOVk5FnbhqnirdhAuZLS3VWAqnks3-3SDjhQMePR15YYfuF7stMy1R14jdcd2WyhSLex00=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#689f38&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;bok_choy&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/6Ok-qHt6muyfFg1x3Nd3y9M_iRUH5_aJRXq9JlTE6Z3a67qUFeVTdpLG80OBKpOtMXXffAPXtHMRkAMbzR-Q1e_dCqCntJAkV_q3U4VftNYC3k_V=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#4285f4&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;books&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh3.googleusercontent.com/proxy/laR76MvgkpxgcFyKbLRlDHThRQ4PLNNwbzuHzSr_uQAOzxCdGhLFBsdMHk_jVWlFBlLSyqODOoLkCaO_lhmu_9zB1_z81r7fPVDjVL007HcvxXHc=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#ef6c00&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;bread&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/E3mV_x9XxkOnITzjKrPB0k8U1Cl6I_gqIff5aswwKAAnd7XtXCDQXgu_CMnLI8kbaPqoiqF695_eSyrp5d2Fp-OGeK-_WtpNU3LQAZNCQjYHzd1I1V-uw_Zmkco=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#f06292&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;bubbles_color&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh3.googleusercontent.com/proxy/d_WN5RlW-1zH2gW_Kxj7hHqITZtlM7Zv-WlmBhdq6_43BeEHVxwCIhsqdxdWtCn2FYLH3bdPf0GeR3UCa9B2uXDrfwMOhnOaGwmJxAHLbC9K9Yp0VOg=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#039be5&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;circuit&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/LlctuQjxc_XPvwI_INV2KqcfflGjEreBmM2mFXp_5q24UUblES7O1yMNJYYtyMrpcvkziHO8Pyqd0OcvQyRBmNgQE3QI4vD88GMuCHPrd5E1NNl3=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#e91e63&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;clams&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/29RzK7cLA_mP_eh3Z0oAgElcC2DstGo9ujJNHecUyeoUIRbJ1npk_KhoNRtvBb5ZPVuv8dU5C5D0Ei18I_IPu_12ptLNoOioOvTAp_G9p0omV8gfHBg=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#689f38&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;clovers&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/qVcF-uCcRs4eNsZFZHKDIiN_qdO20ifgGhQpi1t94SFzROGTb-1Kik2dbJ9_gk9G-QMawqhVQ_OVBE_5ZRAiqjhImQyfGSnnND7BEK1SiQYzRi_LpVfZnQ=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#db4437&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;cocktails&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/4rVgd0sxbyBKn2AF41Xn5alyAxc0nOgDAb6y1T3FnX6vntT6QQ0m8QgUlpr2J5rYLfCF9xh2cuGV7QxRSC13Ws2kgaDuf0Iopac-ZCBF6kgg40KXyCQ=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#ef6c00&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;concert&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/UzcLkepaZHw5GeAzjagJdp7-2DGaBMcj-9TU-X3o4PD1x_kQByZO_r-RDmBxS1iLzsq_MDEq4U_3w_qpTY_6VThyMPNk-Tz9lSEBUXXx-2ZclKA=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#607d8b&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;desk&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/7Vo64b_mo3aTCFRR5JrnmwVrkeigpQuVpT0mOfsBbK_kdvyNVGY3b9CsrTj0t7E7_iMMg1g3GRltFQuCIuQ7vEUUVuWgxXgycBJhYdgAkUVoQK_Y_BwE2Yh3ng=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#f06292&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;donut_coffee&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/aTqxoPupRaxlFYZDmlKz-ijfIYlHBPKk4ykKx_QO7P9r2HQzMlbKyPW6ZoslKMs7NMWeoFxi1sCcX_LLBop27LjO3Kd5H9_oa1UymAO_QtFHmHVrcxCNiIW2UA=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#78909c&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;fabric_rolls&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/D3i9Q2ZRdKAbGOFcE_zEOgRv2fX07_IDsfUdRBc4Kcwz8yBySLesQtcCM8wfdDxAlX3GqUueFwBdAU2HWuDib0uFsNgikds0N-iLhgdBEHDM3Gt9=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#009688&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;flags&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/Gq6BmAzf26j19jOlJSFuQmFUobewCcVkInfjlXCVOCU1Sp-GuieGumKHiaK9oAOpD-NICfQJukjbqNzlCG90O0XKj0VnDR0abL2N7KCy6wIJIoIvOoqgvzCaww=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#e06055&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;flower_field&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh3.googleusercontent.com/proxy/u56F0E7fTV972JarM1Q-rXAOOy-Zg-v5-Cm27-sKiV2hGdA3eeA1T9O1id4BfcuRdq46vXBbZT_tTl0JZNL4Ut0OMyh8op3IxOBGzKJpff9F7rVRCxw=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#689f38&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;flowers&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/VPVLsbZj78Z8xpPMbAWjSF56mJZNw1Kyg7kN9LQ_pH6OA9z2v76rxC_8phHUXRst25qqFBRx14KxHwCDojH9ibzK3didVAx0g-uJqlb5s8-oz3ms=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#0f9d58&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;glass&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/Pwl1rZFnKYnNRcSnIMnc_TsHX0E3OqbDuNT-yy3Ms9uUUjDGgGL21EQEYhoTdCN97pTSFRB086aNass2Kfk0mYOn0lnz-Vk2MrNJ1XrDkvwLmHCnliA-nL4=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#4285f4&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;lighthouse&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/L8IbQigKrftSXEMsch8rXdBtZvlUiRZBfxIYiWbpp7S6oze0HZZ_QRcYP_EbEfkgZDU1QxGsVZffBzCRvhpPkgHhG53wVgj7M_nRxVZmOk-Lni0=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#8d6e63&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;maps&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/1EIk6eaGyGTBI-Uug-G3KCwS_kE9esUIergJ2ohfcq5fmlMIYCDLtDbJgNSbAzQ6xB8VAKiE5w5jAYk3BofnuOpz5ccrcuuHwsamC2F34WOBg2_U9CJJwg=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#5c6bc0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;mountains&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/iUd07dcNVNr6BO13gIGLhyorUezYWoxRf6nSJhT6nRK_NVvP3ABZAWS7vtXSZ6Th25OJ6q-mcYcHVE8pg4WrA9fZE8oVevnyuwLEOzOVHcH4IGac0Vto=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#689f38&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;notebook&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/crERnz0f_KJZ7mN9iBmz5_AQiLGyaGNQfmu_kOocXzLChlK84r2aPp6AodqrG42sRv1yk_Og_DEuBIumug6wC6j9EcrZ1tqs6tTtH3SvtqDAkyK4MBbIMNBPAKs=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#9c27b0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;paper_colored&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/joaq8StlNK7Cp-apow03w_sP5HukbIrAHbZQRZJqpBhERCGYrixxXinALZ26nQ8N2o7NrR2reO4cGNJtfFnRQ9CtSnvXEjI3qM7uygrLlG3v573k71k=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#0097a7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;pencils&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh6.googleusercontent.com/proxy/pP_tp2yMg1wR-SzCbN9_w-mKyNXyquaaYakAvjv9hFGHGFJ6JLCvZYlpVabm-kXAaEUgg2odQ-GTZ4HyAaTOaEfPmxjYTqWyrAnGnSQ1RPMlOT2y3rtmsPF2FF0=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#039be5&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;roofing_metal&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/UQ3zURt8as-FSzUcbkQQno8Dtk1oHeh38CyecfxIhSZArj6OIQ_ZTFR4sblspJxgHCKJKs4DSZB35UR4ReFEkN2SPo7OWqDRnMaz_MsMaVBXv0lw8kC_PTqfuQ=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#0097a7&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;sticky_notes&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh5.googleusercontent.com/proxy/0A5qGh2DnHThdgzOJuZymFC7vt5aYKky-QWAuFjVROgK2Bxe47CT1sz72FhocQp0L-Lro5fK5kXKW5-uyVE7f-LhgokET-_Ndhe8BRQaGKzMhgms=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#8d6e63&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;table&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/eM-1oz45F6dCfOFQ2Yxr3ONAO7a549babd4jdMsBTqMErAeJ7fsk8EGPkDWi3IWoXxOA-cbftgzIDm0W7UCkepfhrONB_si1f8JfD3I0tt8IDT5hdA=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#039be5&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;travel&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/SgwpfgisZXynN5lW3dPEEGAwdJGMZOF5eh-zBP-qkreIr8TlDRRUKUhmzUX0gRD49abGWMYVzYdIzgGc57-wEMDf6TdoFIdxFrdaG56NBaUOtA85RwaolvY=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#009688&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;upholstery&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/MZfhMLHMVQQCU6ynMhZ_G_Byd4Yk2-zzKFADDpRM33LnFr9nRha-K3Iyk07IUOaQyuOPtMPVHkQ9-q13e2tXQMaDcF6DsTCnSxJBimZAQ5thT3lU=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#ff5722&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;waves&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh3.googleusercontent.com/proxy/3culsw3bJyewo0Ql3IiKWm3HNeT54oEzDTVgNasW_V4L0FBZ-hazADPgfmLs06VL2p8b0vSyq9JFbtChXgRBAVX3iSZJeuRF19HYMwrOakDqL3GQMl_lZZ0=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#5c6bc0&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;waves_blue&#39;},<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&#39;backgroundImageLink&#39;: &#39;https://lh4.googleusercontent.com/proxy/FzzFqxrPJvhI24W_ZIbk7TNz3AYOArCU2m0UG4FNhc_2XPXGgcoF9B8FBIz6PsIctYn8aI5NKnU1NlsjHQEpu0DsMnEG8SDNopZZnwVzcFuQ3X4=w1920-h216-n&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;colorRgb&#39;: &#39;#8d6e63&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;wood&#39;}],<br />\n&nbsp;&#39;user&#39;: {&#39;displayName&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;isAuthenticatedUser&#39;: True,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;kind&#39;: &#39;drive#user&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;permissionId&#39;: &#39;09490418135191596166&#39;}}<br />\n&#39;&#39;&#39;</p>\n","0"),
("6002","Delete","<p>Hard-delete a file</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>file.Delete()</p>\n","0"),
("6003","DeletePermission","","","0"),
("6004","FetchContent","","","0"),
("6005","FetchMetadata","<p>Nie dziaÅ‚a ale moÅ¼na zdobyÄ‡ informacje inaczej</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;}) # root/adres.txt</p>\n\n<p>print(file[&#39;labels&#39;]) # A group of labels for the file | {&#39;starred&#39;: False, &#39;hidden&#39;: False, &#39;trashed&#39;: False, &#39;restricted&#39;: False, &#39;viewed&#39;: True}<br />\nprint(file[&#39;kind&#39;]) # This is always drive#user | drive#file&nbsp;&nbsp; &nbsp;<br />\nprint(file[&#39;id&#39;]) # The ID of the file | 0B-V4H-BsFb3tbDNLZ19uNVlNeVE<br />\nprint(file[&#39;etag&#39;]) # ETag of the file | &quot;DOb_gvjevy1ZTSMr1FXDSJnOzac/MTUwNzQ5MzI2NDY4Ng&quot;<br />\nprint(file[&#39;selfLink&#39;]) # A link back to this file | https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE<br />\nprint(file[&#39;webContentLink&#39;]) # A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials. | https://drive.google.com/uc?id=0B-V4H-BsFb3tbDNLZ19uNVlNeVE&amp;export=download<br />\nprint(file[&#39;alternateLink&#39;]) # A link for opening the file in a relevant Google editor or viewer. | https://drive.google.com/file/d/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/view?usp=drivesdk<br />\nprint(file[&#39;embedLink&#39;]) # A link for embedding the file. | https://drive.google.com/file/d/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/preview?usp=drivesdk<br />\nprint(file[&#39;iconLink&#39;]) # A link to the file&#39;s icon | https://drive-thirdparty.googleusercontent.com/16/type/text/plain<br />\nprint(file[&#39;thumbnailLink&#39;]) # A short-lived link to the file&#39;s thumbnail. Typically lasts on the order of hours. Only populated when the requesting app can access the file&#39;s content. | https://lh3.googleusercontent.com/hmX7WxXQnbEvNpegnhhRhWjv4MDliNlM7bwsf6y0MczLPj4D9Iw10wE5m8c2i6sgRGQU-A=s220<br />\nprint(file[&#39;mimeType&#39;]) # The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content&#39;s MIME type | text/plain<br />\nprint(file[&#39;title&#39;]) # The title of this file. Note that for immutable items such as the top level folders of Team Drives, My Drive root folder, and Application Data folder the title is constant | adresy.txt<br />\nprint(file[&#39;labels&#39;]) # A group of labels for the file. | {&#39;starred&#39;: False, &#39;hidden&#39;: False, &#39;trashed&#39;: False, &#39;restricted&#39;: False, &#39;viewed&#39;: True}<br />\nprint(file[&#39;createdDate&#39;]) # Create time for this file (formatted RFC 3339 timestamp) | 2017-10-08T19:40:05.490Z<br />\nprint(file[&#39;modifiedDate&#39;]) # Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set. | 2017-10-08T20:07:44.686Z<br />\nprint(file[&#39;modifiedByMeDate&#39;]) # Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date | 2017-10-08T20:07:44.686Z<br />\nprint(file[&#39;lastViewedByMeDate&#39;]) # Last time this file was viewed by the user (formatted RFC 3339 timestamp). | 2017-10-08T20:07:44.686Z<br />\nprint(file[&#39;version&#39;]) # A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user. | 27<br />\nprint(file[&#39;parents&#39;]) # Collection of parent folders which contain this file. Setting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder | [{&#39;kind&#39;: &#39;drive#parentReference&#39;, &#39;id&#39;: &#39;0AOV4H-BsFb3tUk9PVA&#39;, &#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/parents/0AOV4H-BsFb3tUk9PVA&#39;, &#39;parentLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0AOV4H-BsFb3tUk9PVA&#39;, &#39;isRoot&#39;: True}]<br />\nprint(file[&#39;downloadUrl&#39;]) # &nbsp;| https://doc-0k-40-docs.googleusercontent.com/docs/securesc/1lj72egboao4c7dr5u2bjvlmdatu136q/5pn5t7o0f6i3h4nikh6pfjmv80kalfr4/1507500000000/09490418135191596166/09490418135191596166/0B-V4H-BsFb3tbDNLZ19uNVlNeVE?e=download&amp;gd=true<br />\nprint(file[&#39;userPermission&#39;]) # The permissions for the authenticated user on this file. | {&#39;kind&#39;: &#39;drive#permission&#39;, &#39;etag&#39;: &#39;&quot;DOb_gvjevy1ZTSMr1FXDSJnOzac/4TpisMKTQllPTn64I5y07d75Omg&quot;&#39;, &#39;id&#39;: &#39;me&#39;, &#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/permissions/me&#39;, &#39;role&#39;: &#39;owner&#39;, &#39;type&#39;: &#39;user&#39;}<br />\nprint(file[&#39;originalFilename&#39;]) # The original filename of the uploaded content if available, or else the original value of the title field. This is only available for files with binary content in Drive | adresy.txt<br />\nprint(file[&#39;fileExtension&#39;]) # The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files | txt<br />\nprint(file[&#39;md5Checksum&#39;]) # An MD5 checksum for the content of this file. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files. | 1a79a4d60de6718e8e5b326e338ae533<br />\nprint(file[&#39;fileSize&#39;]) # The size of the file in bytes. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files. | 7<br />\nprint(file[&#39;quotaBytesUsed&#39;]) # The number of quota bytes used by this file | 180<br />\nprint(file[&#39;ownerNames&#39;]) # Name(s) of the owner(s) of this file. Not populated for Team Drive files | [&#39;Szymon OtrÄ™ba&#39;]<br />\nprint(file[&#39;owners&#39;]) # The owner(s) of this file. Not populated for Team Drive files. | [{&#39;kind&#39;: &#39;drive#user&#39;, &#39;displayName&#39;: &#39;Szymon OtrÄ™ba&#39;, &#39;isAuthenticatedUser&#39;: True, &#39;permissionId&#39;: &#39;09490418135191596166&#39;, &#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;}]<br />\nprint(file[&#39;lastModifyingUserName&#39;]) # Name of the last user to modify this file. | Szymon OtrÄ™ba<br />\nprint(file[&#39;lastModifyingUser&#39;]) # The last user to modify this file. | {&#39;kind&#39;: &#39;drive#user&#39;, &#39;displayName&#39;: &#39;Szymon OtrÄ™ba&#39;, &#39;isAuthenticatedUser&#39;: True, &#39;permissionId&#39;: &#39;09490418135191596166&#39;, &#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;}<br />\nprint(file[&#39;capabilities&#39;]) # | {&#39;canCopy&#39;: True, &#39;canEdit&#39;: True}<br />\nprint(file[&#39;editable&#39;]) # Deprecated: use capabilities/canEdit | True<br />\nprint(file[&#39;copyable&#39;]) # Deprecated: use capabilities/canCopy | True<br />\nprint(file[&#39;writersCanShare&#39;]) # Whether writers can share the document with other users. Not populated for Team Drive files| True<br />\nprint(file[&#39;shared&#39;]) # Whether the file has been shared. Not populated for Team Drive files | False<br />\nprint(file[&#39;explicitlyTrashed&#39;]) # Whether this file has been explicitly trashed, as opposed to recursively trashed | False<br />\nprint(file[&#39;appDataContents&#39;]) # Whether this file is in the Application Data folder | False<br />\nprint(file[&#39;headRevisionId&#39;]) # The ID of the file&#39;s head revision. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files. | 0B-V4H-BsFb3tZUVLeVprQmlDRVloSzI1UHpMQXNJdWpqOGlZPQ<br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tTmN0RlhQU1RzOXc&#39;}) # root/zak/index.php</p>\n\n<p>print(file[&#39;parents&#39;])</p>\n\n<p>&#39;&#39;&#39;<br />\n[{&#39;kind&#39;: &#39;drive#parentReference&#39;,<br />\n&nbsp; &#39;id&#39;: &#39;0B-V4H-BsFb3tWnhZTEVUeENYZ1k&#39;,<br />\n&nbsp; &#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tTmN0RlhQU1RzOXc/parents/0B-V4H-BsFb3tWnhZTEVUeENYZ1k&#39;,<br />\n&nbsp; &#39;parentLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tWnhZTEVUeENYZ1k&#39;,<br />\n&nbsp; &#39;isRoot&#39;: False}]</p>\n\n<p>&#39;&#39;&#39;</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/connectors/php/filemanager.php?mode=preview&amp;path=%2Fckeditor%2Fplugins%2FFilemanager-master%2Fuserfiles%2Fszymonotreba%40interia.pl%2FPrograming%2FPython%2FGoogle%2Fpydrive%2Fgoogle_drive-parents.jpg&amp;1507539778\" style=\"height:822px; width:800px\" /></p>\n","0"),
("6006","GetContentFile","<p>Save content of this file as a local file</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>file.GetContentFile(&#39;example.txt&#39;)</p>\n","0"),
("6007","GetContentString","<p>Get content of this file as a string</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>content = file.GetContentString()<br />\nprint(content) # example text</p>\n","0"),
("6008","GetPermissions","<p>Downloads all permissions from Google Drive, as this information is not downloaded by FetchMetadata by default</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>permissions = file.GetPermissions()<br />\npprint.pprint(permissions)</p>\n\n<p>#[{&#39;deleted&#39;: False,<br />\n# &nbsp;&#39;domain&#39;: &#39;gmail.com&#39;,<br />\n# &nbsp;&#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;,<br />\n# &nbsp;&#39;etag&#39;: &#39;&quot;DOb_gvjevy1ZTSMr1FXDSJnOzac/XLSi9pqKVhOLikQIJSt9LzrbjBk&quot;&#39;,<br />\n# &nbsp;&#39;id&#39;: &#39;09490418135191596166&#39;,<br />\n# &nbsp;&#39;kind&#39;: &#39;drive#permission&#39;,<br />\n# &nbsp;&#39;name&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n# &nbsp;&#39;role&#39;: &#39;owner&#39;,<br />\n# &nbsp;&#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/permissions/09490418135191596166&#39;,<br />\n# &nbsp;&#39;type&#39;: &#39;user&#39;}]</p>\n","0"),
("6009","InsertPermission","","","0"),
("6010","SetContentFile","<p>Set content of this file from a file.</p>\n\n<p>Opens the file specified by this method. Will be read, uploaded, and closed by Upload() method. Sets metadata &lsquo;title&rsquo; and &lsquo;mimeType&rsquo; automatically if not specified</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&quot;parents&quot;: [{&quot;kind&quot;: &quot;drive#fileLink&quot;,&quot;id&quot;: &#39;0B-V4H-BsFb3tWnhZTEVUeENYZ1k&#39;}]}) # WysÅ‚ane zostanie do folderu o id 0B-V4H-BsFb3tWnhZTEVUeENYZ1k<br />\nfile.SetContentFile(&#39;image.jpg&#39;)<br />\nfile.Upload()</p>\n\n<p>file = drive.CreateFile() # WysÅ‚ane zostanie do root folder<br />\nfile.SetContentFile(&#39;image.jpg&#39;)<br />\nfile.Upload()</p>\n","0"),
("6011","SetContentString","<p>Set content of this file to be a string</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>file.SetContentString(&#39;example&#39;)</p>\n\n<p>file.Upload() # Files.update()</p>\n","0"),
("6012","Trash","<p>Move a file to the trash</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>file.Trash()</p>\n","0"),
("6013","UnTrash","<p>Move a file out of the trash</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>file.UnTrash()</p>\n","0"),
("6014","Upload","","","0"),
("6015","content","<p>A data descriptor that sets and returns values</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>print(file.content) # None</p>\n\n<p>file.SetContentString(&#39;example&#39;)<br />\nfile.Upload() # Files.update()</p>\n\n<p>print(file.content) # &lt;_io.BytesIO object at 0x034D42A0&gt;</p>\n","0"),
("6016","metadata","<p>A data descriptor that sets and returns values.</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>print(file.metadata) # {}</p>\n\n<p>file.SetContentString(&#39;example&#39;)<br />\nfile.Upload() # Files.update()</p>\n\n<p><br />\npprint.pprint(file.metadata)<br />\n&#39;&#39;&#39;<br />\n{&#39;alternateLink&#39;: &#39;https://drive.google.com/file/d/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/view?usp=drivesdk&#39;,<br />\n&nbsp;&#39;appDataContents&#39;: False,<br />\n&nbsp;&#39;capabilities&#39;: {&#39;canCopy&#39;: True, &#39;canEdit&#39;: True},<br />\n&nbsp;&#39;copyable&#39;: True,<br />\n&nbsp;&#39;createdDate&#39;: &#39;2017-10-08T19:40:05.490Z&#39;,<br />\n&nbsp;&#39;downloadUrl&#39;: &#39;https://doc-0k-40-docs.googleusercontent.com/docs/securesc/1lj72egboao4c7dr5u2bjvlmdatu136q/si7u2imh88v2sj1rqcka9bd97h447eus/1507492800000/09490418135191596166/09490418135191596166/0B-V4H-BsFb3tbDNLZ19uNVlNeVE?e=download&amp;gd=true&#39;,<br />\n&nbsp;&#39;editable&#39;: True,<br />\n&nbsp;&#39;embedLink&#39;: &#39;https://drive.google.com/file/d/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/preview?usp=drivesdk&#39;,<br />\n&nbsp;&#39;etag&#39;: &#39;&quot;DOb_gvjevy1ZTSMr1FXDSJnOzac/MTUwNzQ5MzI2NDY4Ng&quot;&#39;,<br />\n&nbsp;&#39;explicitlyTrashed&#39;: False,<br />\n&nbsp;&#39;fileExtension&#39;: &#39;txt&#39;,<br />\n&nbsp;&#39;fileSize&#39;: &#39;7&#39;,<br />\n&nbsp;&#39;headRevisionId&#39;: &#39;0B-V4H-BsFb3tZUVLeVprQmlDRVloSzI1UHpMQXNJdWpqOGlZPQ&#39;,<br />\n&nbsp;&#39;iconLink&#39;: &#39;https://drive-thirdparty.googleusercontent.com/16/type/text/plain&#39;,<br />\n&nbsp;&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;,<br />\n&nbsp;&#39;kind&#39;: &#39;drive#file&#39;,<br />\n&nbsp;&#39;labels&#39;: {&#39;hidden&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;restricted&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;starred&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;trashed&#39;: False,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;viewed&#39;: True},<br />\n&nbsp;&#39;lastModifyingUser&#39;: {&#39;displayName&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;isAuthenticatedUser&#39;: True,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;kind&#39;: &#39;drive#user&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;permissionId&#39;: &#39;09490418135191596166&#39;},<br />\n&nbsp;&#39;lastModifyingUserName&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n&nbsp;&#39;lastViewedByMeDate&#39;: &#39;2017-10-08T20:07:44.686Z&#39;,<br />\n&nbsp;&#39;markedViewedByMeDate&#39;: &#39;1970-01-01T00:00:00.000Z&#39;,<br />\n&nbsp;&#39;md5Checksum&#39;: &#39;1a79a4d60de6718e8e5b326e338ae533&#39;,<br />\n&nbsp;&#39;mimeType&#39;: &#39;text/plain&#39;,<br />\n&nbsp;&#39;modifiedByMeDate&#39;: &#39;2017-10-08T20:07:44.686Z&#39;,<br />\n&nbsp;&#39;modifiedDate&#39;: &#39;2017-10-08T20:07:44.686Z&#39;,<br />\n&nbsp;&#39;originalFilename&#39;: &#39;adresy.txt&#39;,<br />\n&nbsp;&#39;ownerNames&#39;: [&#39;Szymon OtrÄ™ba&#39;],<br />\n&nbsp;&#39;owners&#39;: [{&#39;displayName&#39;: &#39;Szymon OtrÄ™ba&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;emailAddress&#39;: &#39;gerobss@gmail.com&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;isAuthenticatedUser&#39;: True,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;kind&#39;: &#39;drive#user&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;permissionId&#39;: &#39;09490418135191596166&#39;}],<br />\n&nbsp;&#39;parents&#39;: [{&#39;id&#39;: &#39;0AOV4H-BsFb3tUk9PVA&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;isRoot&#39;: True,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;kind&#39;: &#39;drive#parentReference&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;parentLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0AOV4H-BsFb3tUk9PVA&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/parents/0AOV4H-BsFb3tUk9PVA&#39;}],<br />\n&nbsp;&#39;quotaBytesUsed&#39;: &#39;180&#39;,<br />\n&nbsp;&#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;,<br />\n&nbsp;&#39;shared&#39;: False,<br />\n&nbsp;&#39;spaces&#39;: [&#39;drive&#39;],<br />\n&nbsp;&#39;thumbnailLink&#39;: &#39;https://lh4.googleusercontent.com/S6IjHJyVFLovG9OP1WF01FzuOsIL38vLFyialsT2OpaAxzEulw0ByHtqCmmRCXC63s_v1w=s220&#39;,<br />\n&nbsp;&#39;title&#39;: &#39;adresy.txt&#39;,<br />\n&nbsp;&#39;userPermission&#39;: {&#39;etag&#39;: &#39;&quot;DOb_gvjevy1ZTSMr1FXDSJnOzac/4TpisMKTQllPTn64I5y07d75Omg&quot;&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;id&#39;: &#39;me&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;kind&#39;: &#39;drive#permission&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;role&#39;: &#39;owner&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;selfLink&#39;: &#39;https://www.googleapis.com/drive/v2/files/0B-V4H-BsFb3tbDNLZ19uNVlNeVE/permissions/me&#39;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;type&#39;: &#39;user&#39;},<br />\n&nbsp;&#39;version&#39;: &#39;26&#39;,<br />\n&nbsp;&#39;webContentLink&#39;: &#39;https://drive.google.com/uc?id=0B-V4H-BsFb3tbDNLZ19uNVlNeVE&amp;export=download&#39;,<br />\n&nbsp;&#39;writersCanShare&#39;: True}<br />\n&#39;&#39;&#39;</p>\n","0"),
("6017","uploaded","<p>A data descriptor that sets and returns values.</p>\n","<p>from pydrive.auth import GoogleAuth</p>\n\n<p>gauth = GoogleAuth()<br />\ngauth.LocalWebserverAuth() # Creates local webserver and auto handles authentication.</p>\n\n<p>from pydrive.drive import GoogleDrive</p>\n\n<p>drive = GoogleDrive(gauth)</p>\n\n<p>file = drive.CreateFile({&#39;id&#39;: &#39;0B-V4H-BsFb3tbDNLZ19uNVlNeVE&#39;})</p>\n\n<p>print(file.uploaded) # False</p>\n\n<p>file.SetContentString(&#39;example&#39;)<br />\nfile.Upload() # Files.update()<br />\nprint(file.uploaded) # True</p>\n","0"),
("6018","tqdm","<p>Instantly make your loops show a smart progress meter - just wrap any iterable with&nbsp;<tt>tqdm(iterable)</tt>, and you&rsquo;re done</p>\n","<p>import time<br />\nfrom tqdm import tqdm<br />\nfor i in tqdm(range(100)):<br />\n&nbsp; time.sleep(1)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/tqdm/tqdm.jpg\" style=\"height:462px; width:800px\" /></p>\n","0"),
("6019","time.altzone()","<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli strefÄ™ czasowÄ… DST #&nbsp;-7200</p>","<p>import time</p>  <p>time.altzone #&nbsp;-7200</p>","0"),
("6020","time.asctime([t])","<p>UÅ¼yj funkcji kt&oacute;ra wypisze&nbsp;dzieÅ„ miesiÄ…c godzinÄ™ i&nbsp;rok</p>","<p>import time</p>  <p>time.asctime()</p>  <p>&#39;Thu Mar &nbsp;2 17:43:04 2017&#39; # Thursday March 17:43:04 2017 # Czwartek Marzec&nbsp;17:43:04 2017 # dzieÅ„ miesiÄ…c godzina rok</p>","0"),
("6021","time.clock()","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e ile sekund mineÅ‚o od czasu pierwszego uÅ¼ycia tej funkcji (pierwszy wynik jest dziwaczny i nic nie daje) #&nbsp;60.024328086551876</p>","<p>import time</p>  <p>time.clock() #&nbsp;1.0265665148374792e-06</p>  <p># po miniÄ™ciu okoÅ‚a minuty</p>  <p>time.clock() #&nbsp;60.024328086551876</p>  <p># robi to samo co funkcja&nbsp;<code>time.</code><code>perf_counter</code>()</p>","0"),
("6022","time.clock_getres(clk_id) Unix","","","0"),
("6023","time.clock_gettime(clk_id) Unix","","","0"),
("6024","time.clock_settime(clk_id, time) Unix","","","0"),
("6025","time.CLOCK_HIGHRES Solaris","","","0"),
("6026","time.CLOCK_MONOTONIC Unix","","","0"),
("6027","time.CLOCK_MONOTONIC_RAW","","","0"),
("6028","time.CLOCK_PROCESS_CPUTIME_ID Unix","","","0"),
("6029","time.CLOCK_REALTIME Unix","","","0"),
("6030","time.ctime([secs])","<p>UÅ¼yj funkcji kt&oacute;ra wypisze dzisiejszy dzieÅ„ (poniedziaÅ‚ek ,wtorek itd.) miesiÄ…c dzieÅ„ ( 1, 2,3 itd.) godzina i rok jeÅ¼eli nie poda siÄ™ Å¼adnego argumentu w funkcji naprzykÅ‚ad zostanie wyswietlone to &#39;Fri Mar &nbsp;3 17:53:18 2017&#39;. W przypadku w kt&oacute;rym podamy argument to w zaleznoÅ›ci jakÄ… liczbÄ™ tam wpiszemy zostanie doliczone do czasu&nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; podana iloÅ›Ä‡ sekund.</p>  <p>PrzykÅ‚ady:</p>  <p>40 -&gt; &#39;Thu Jan &nbsp;1 01:00:40 1970&#39;</p>  <p>&nbsp;</p>","<p>import time</p>  <p>time.ctime(40) #&nbsp;&#39;Thu Jan &nbsp;1 01:00:40 1970&#39;</p>\",\"","0"),
("6031","time.daylight","<p>UÅ¼yj funkcji kt&oacute;ra wypisze 1 jeÅ¼eli&nbsp;<em>Daylight Saving Time jest zdefiniowany.</em></p>","<p>import time</p>  <p>time.daylight # 1</p>","0"),
("6032","time.get_clock_info(name)",")\",\"<p>UÅ¼yj funkcji kt&oacute;ra wyÅ›wietli informacje o niekt&oacute;rych funkcjach w bibliotece time.</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;GetTickCount64()&#39;, monotonic=True, resolution=0.015625)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>#&nbsp;namespace(adjustable=False, implementation=&#39;GetProcessTimes()&#39;, monotonic=True, resolution=1e-07)</p>  <p>#&nbsp;namespace(adjustable=True, implementation=&#39;GetSystemTimeAsFileTime()&#39;, monotonic=False, resolution=0.015625)</p>",">\",\"<p>time.get_clock_info(&#39;clock&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>time.get_clock_info(&#39;monotonic&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;GetTickCount64()&#39;, monotonic=True, resolution=0.015625)</p>  <p>time.get_clock_info(&#39;perf_counter&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;QueryPerformanceCounter()&#39;, monotonic=True, resolution=5.132832574187396e-07)</p>  <p>time.get_clock_info(&#39;process_time&#39;) #&nbsp;namespace(adjustable=False, implementation=&#39;GetProcessTimes()&#39;, monotonic=True, resolution=1e-07)</p>  <p>time.get_clock_info(&#39;time&#39;) #&nbsp;namespace(adjustable=True, implementation=&#39;GetSystemTimeAsFileTime()&#39;, monotonic=False, resolution=0.015625)</p>","0"),
("6033","time.gmtime([secs])","<p>Uzyj funkcji kt&oacute;ra wypisze na podstawie daty &nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; nowÄ… datÄ™ dodajÄ…c iloÅ›Ä‡ sekund wpisanych w argumencie funkcji do tej daty. W przypadku nie wpisania nic w argumencie funkcji nic nie zostanie zwr&oacute;cone.</p>  <p>PrzykÅ‚ady:</p>  <p>60 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=1, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>1 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>","\",\"<p>import time</p>  <p>time.gmtime(60) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=1, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.gmtime(1) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.gmtime() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=3, tm_hour=17, tm_min=56, tm_sec=37, tm_wday=4, tm_yday=62, tm_isdst=0)</p>","0"),
("6034","time.localtime([secs])","<p>Uzyj funkcji kt&oacute;ra wypisze na podstawie daty &nbsp;&#39;Thu Jan &nbsp;1 01:00:00 1970&#39; nowÄ… datÄ™ lokalnÄ… dodajÄ…c iloÅ›Ä‡ sekund wpisanych w argumencie funkcji do tej daty. W przypadku nie wpisania nic w argumencie funkcji nic nie zostanie zwr&oacute;cone.</p>  <p>PrzykÅ‚ady:</p>  <p>1 -&gt; time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>40 -&gt;&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=40, tm_wday=3, tm_yday=1, tm_isdst=0)</p>","<p>import time</p>  <p>time.localtime(1) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=1, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.localtime(40) #&nbsp;time.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=1, tm_min=0, tm_sec=40, tm_wday=3, tm_yday=1, tm_isdst=0)</p>  <p>time.localtime() #&nbsp;time.struct_time(tm_year=2017, tm_mon=3, tm_mday=3, tm_hour=18, tm_min=59, tm_sec=15, tm_wday=4, tm_yday=62, tm_isdst=0)</p>","0"),
("6035","time.mktime(t)","","","0"),
("6036","time.monotonic()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ile czasu mineÅ‚o od nieokreÅ›lonego zdaÅ¼enia w przeszÅ‚oÅ›ci, ta funkcja nie jest zaleÅ¼na od tego czy zmieni siÄ™ rÄ™cznie czas w systemie operacyjnym.</p>  <p>#&nbsp;435737.671</p>","<p>import time</p>  <p>time.monotonic() #&nbsp;435737.671</p>","0"),
("6037","time.perf_counter()","<p>UÅ¼yj funkcji kt&oacute;ra pokaÅ¼e ile sekund mineÅ‚o od czasu pierwszego uÅ¼ycia tej funkcji (pierwszy wynik jest dziwaczny i nic nie daje) #&nbsp;60.024328086551876<br /> &nbsp;</p>","<p>import time</p>  <p>time.perf_counter() #&nbsp;1.0265665148374792e-06</p>  <p># po miniÄ™ciu okoÅ‚a minuty</p>  <p>time.perf_counter() #&nbsp;60.024328086551876</p>  <p># robi to samo co&nbsp;time.clock()</p>","0"),
("6038","time.process_time()","<p>UÅ¼yj funkcji kt&oacute;ra wypisze ile czasu zajmuje CPU przetwoÅ¼enie kodu.</p>","<p>import time</p>  <p>time.process_time() #&nbsp;0.109375</p>","0"),
("6039","time.sleep(secs)","<p>UÅ¼yj funkcji zawiesi dziaÅ‚anie programu na okreÅ›lonÄ… iloÅ›Ä‡ sekund.</p>  <p>60 -&gt; czas wykonywania skryptu zawieszony na 60 sekund</p>","<p>import time</p>  <p><code>time.</code><code>sleep</code>(<em>60</em>)</p>","0"),
("6040","time.strftime(format[, t])","<p># Dzisiejsza data - 2017-03-03 20:44&nbsp;czyli piÄ…tek</p>  <p>time.strftime(&#39;%a&#39;) #&nbsp;&#39;Fri&#39;</p>  <p>time.strftime(&#39;%A&#39;) #&nbsp;&#39;Friday&#39;</p>  <p>time.strftime(&#39;%b&#39;) #&nbsp;&#39;Mar&#39;</p>  <p>time.strftime(&#39;%B&#39;) #&nbsp;&#39;March&#39;</p>  <p>time.strftime(&#39;%c&#39;) #&nbsp;&#39;Fri Mar &nbsp;3 20:44:02 2017&#39;</p>  <p>time.strftime(&#39;%d&#39;) # &#39;03&#39;</p>  <p>time.strftime(&#39;%H&#39;) # 20&nbsp;</p>  <p>time.strftime(&#39;%I&#39;) &nbsp;# &#39;08&#39;</p>  <p>time.strftime(&#39;%j&#39;) #&nbsp;&#39;062&#39;</p>  <p>time.strftime(&#39;%m&#39;) #&nbsp;&#39;03&#39;</p>  <p>time.strftime(&#39;%M&#39;) # &nbsp;&#39;45&#39;</p>  <p>time.strftime(&#39;%p&#39;) #&nbsp;&#39;PM&#39;</p>  <p>time.strftime(&#39;%S&#39;) #&nbsp;&#39;25&#39;</p>  <p>time.strftime(&#39;%U&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%w&#39;) #&nbsp;&#39;5&#39;</p>  <p>time.strftime(&#39;%W&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%x&#39;) #&nbsp;&#39;03/03/17&#39;</p>  <p>UÅ¼yj funckji kt&oacute;ra w zaleÅ¼no,Å›ci od podanych arhument&oacute;w funkcji wypisze:</p>  <p>godzinÄ™ #&nbsp;&#39;20:45:59&#39;</p>  <p>rok tylko 2 ostatnie liczby&nbsp;#&nbsp;&#39;17&#39;</p>  <p>peÅ‚ny rok #&nbsp;&#39;2017&#39;</p>  <p>strefa czasowa &nbsp;</p>  <p>Polska znajduje siÄ™ w strefach czasowych: UTC+01:00 (czas Å›rodkowoeuropejski (CET), w okresie zimowym) oraz UTC+02:00 (czas Å›rodkowoeuropejski letni (CEST), w okresie letnim). #&nbsp;&#39;+0100&#39;&#39;</p>  <p>strefa czasowa #&nbsp;&#39;Srodkowoeuropejski czas stand.&#39;&nbsp;</p>  <p>znak % #&nbsp;&#39;%&#39;</p>","<p># Dzisiejsza data - 2017-03-03 20:44&nbsp;czyli piÄ…tek</p>  <p>time.strftime(&#39;%a&#39;) #&nbsp;&#39;Fri&#39;</p>  <p>time.strftime(&#39;%A&#39;) #&nbsp;&#39;Friday&#39;</p>  <p>time.strftime(&#39;%b&#39;) #&nbsp;&#39;Mar&#39;</p>  <p>time.strftime(&#39;%B&#39;) #&nbsp;&#39;March&#39;</p>  <p>time.strftime(&#39;%c&#39;) #&nbsp;&#39;Fri Mar &nbsp;3 20:44:02 2017&#39;</p>  <p>time.strftime(&#39;%d&#39;) # &#39;03&#39;</p>  <p>time.strftime(&#39;%H&#39;) # 20&nbsp;</p>  <p>time.strftime(&#39;%I&#39;) &nbsp;# &#39;08&#39;</p>  <p>time.strftime(&#39;%j&#39;) #&nbsp;&#39;062&#39;</p>  <p>time.strftime(&#39;%m&#39;) #&nbsp;&#39;03&#39;</p>  <p>time.strftime(&#39;%M&#39;) # &nbsp;&#39;45&#39;</p>  <p>time.strftime(&#39;%p&#39;) #&nbsp;&#39;PM&#39;</p>  <p>time.strftime(&#39;%S&#39;) #&nbsp;&#39;25&#39;</p>  <p>time.strftime(&#39;%U&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%w&#39;) #&nbsp;&#39;5&#39;</p>  <p>time.strftime(&#39;%W&#39;) #&nbsp;&#39;09&#39;</p>  <p>time.strftime(&#39;%x&#39;) #&nbsp;&#39;03/03/17&#39;</p>  <p>time.strftime(&#39;%X&#39;) #&nbsp;&#39;20:45:59&#39;</p>  <p>time.strftime(&#39;%y&#39;) #&nbsp;&#39;17&#39;</p>  <p>time.strftime(&#39;%Y&#39;) #&nbsp;&#39;2017&#39;</p>  <p>time.strftime(&#39;%z&#39;) #&nbsp;&#39;+0100&#39;&#39;</p>  <p>time.strftime(&#39;%Z&#39;) #&nbsp;&#39;Srodkowoeuropejski czas stand.&#39;</p>  <p>time.strftime(&#39;%%&#39;) #&nbsp;&#39;%&#39;</p>","0"),
("6041","time.strptime(string[, format])","<p>UÅ¼yj funkcji kt&oacute;ra po podaniu daty i formatu w jakim ta data jest zapisana wypiszÄ™ listÄ™ zawierajÄ…cÄ…&nbsp;rok, miesiÄ…c, dzieÅ„, godzinÄ™, minutÄ™, sekundÄ™, numer dnia tygodnia, numer dnia roku i znacznik czasu letniego.</p>  <p>PrzykÅ‚ady:</p>  <p>30 Nov 00 -&gt;&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>00 Nov 30 -&gt;&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>&nbsp;</p>	","<p>import time</p>  <p>time.strptime(&quot;30 Nov 00&quot;, &quot;%d %b %y&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>  <p>time.strptime(&quot;00 Nov 30&quot;, &quot;%y %b %d&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>","0"),
("6042","time.struct_time","<p>UÅ¼yj funkcji kt&oacute;ra wypisze atrybuty&nbsp;<code>time.</code><code>struct_time</code></p>","<p>import time</p>  <p>time.strptime(&quot;30 Nov 00&quot;, &quot;%d %b %y&quot;) #&nbsp;time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)</p>","0"),
("6043","time.time()","<p>UÅ¼yj funckji kt&oacute;ra wypisze ile sekund upÅ‚yneÅ‚o od &#39;tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=0 tm_wday=3, tm_yday=1, tm_isdst=0&#39;</p>","<p>import time</p>  <p>time.time() #&nbsp;1488572042.5798314</p>  <p>&nbsp;</p>","0"),
("6044","time.timezone","<p>UÅ¼yj funkcji kt&oacute;ra wypisze strefÄ™ czasowÄ…</p>  <p>#&nbsp;-3600</p>","<p>import time</p>  <p>time.timezone # -3600</p>","0"),
("6045","time.tzname","<p>UÅ¼yj funkcji kt&oacute;ra wypisze lokalny DST #&nbsp;(&#39;Srodkowoeuropejski czas stand.&#39;, &#39;Srodkowoeuropejski czas letni&#39;)</p>","<p>import time</p>  <p>time.tzname #&nbsp;(&#39;Srodkowoeuropejski czas stand.&#39;, &#39;Srodkowoeuropejski czas letni&#39;)</p>","0"),
("6046","time.tzset()","","","0");
INSERT INTO function VALUES
("6047","bitbucket","","","0"),
("6048","using_phantomjs","<p>phantomjs</p>\n","<p>target = &quot;https://docs.python.org/2/library/wave.html&quot;<br />\nmodule_id = 198<br />\ndepartment_id = 1</p>\n\n<p>import selenium<br />\nfrom selenium import webdriver<br />\nimport time<br />\n#path_chromedrive=r&quot;C:UsersUserAppDataLocalProgramsPythonPython36-32seleniumchromedriver.exe&quot;<br />\npath_phantomjs=r&quot;C:UsersUserDocuments\\_Skryptyphantomjsinphantomjs.exe&quot;<br />\ndriver = webdriver.PhantomJS(path_phantomjs)</p>\n\n<p>driver.get(target)</p>\n\n<p>a = []</p>\n\n<p>content = driver.find_elements_by_tag_name(&quot;dt&quot;)<br />\nfor x in content:<br />\n&nbsp; &nbsp; print(x.text)<br />\n&nbsp; &nbsp; a.append(x.text)<br />\nprint(len(a))</p>\n","0"),
("6049","core","<p>The main USB module</p>\n","<p>import usb.core<br />\nimport usb.backend.libusb1<br />\npath = r&#39;C:UsersUserDownloads\\__NowygraMS32dlllibusb-1.0.dll&#39;<br />\nbackend = usb.backend.libusb1.get_backend(find_library=lambda x: path)<br />\ndev = usb.core.find(..., backend=backend)<br />\nlist(dev)</p>\n\n<p>NaleÅ¼y uruchomiÄ‡ jako administator&nbsp;devcon_x86.exe</p>\n\n<p>C:WINDOWSsystem32&gt;C:UsersUserDownloadsPortable-VirtualBoxdata oolsdevcon_x86.exe hwids =usb</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/pyUSB/device_list.jpg\" style=\"height:273px; width:800px\" /></p>\n\n<p>VID = 0x04f9<br />\nPID = 0x02fd<br />\ndev = usb.core.find(idVendor=VID,idProduct=PID)<br />\nlist(dev) # CONFIGURATION 1: 2 mA<br />\ndev = usb.core.find(...,idVendor=VID,idProduct=PID)<br />\nlist(dev) #&nbsp;DEVICE ID 04f9:02fd on Bus 001 Address 005</p>\n\n<p>&nbsp;</p>\n\n<p>import usb.core<br />\nimport usb.backend.libusb1</p>\n\n<p>path = r&#39;C:UsersUserDownloads\\__NowygraMS32dlllibusb-1.0.dll&#39;<br />\nbackend = usb.backend.libusb1.get_backend(find_library=lambda x: path)</p>\n\n<p><br />\nVID = 0x04f9<br />\nPID = 0x02fd<br />\ndev = usb.core.find(idVendor=VID,idProduct=PID)</p>\n\n<p>print(&quot;Class Code (Assigned by USB Org)&quot;,dev.bDeviceClass)<br />\nprint(&quot;Subclass Code (Assigned by USB Org)&quot;,dev.bDeviceSubClass)<br />\nprint(&quot;Device Release Number&quot;,dev.bcdDevice)<br />\nprint(dev.iSerialNumber)<br />\nprint(dev.iManufacturer)<br />\nprint(dev.iProduct)</p>\n\n<p>&#39;&#39;&#39;<br />\nClass Code (Assigned by USB Org) 0<br />\nSubclass Code (Assigned by USB Org) 0<br />\nDevice Release Number 256<br />\n3<br />\n1<br />\n2<br />\n&#39;&#39;&#39;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<table border=\"1\" cellspacing=\"0\">\n	<tbody>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p><strong>Base Class</strong></p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p><strong>Descriptor Usage</strong></p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><strong>Description</strong></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>00h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Device</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass00h\" style=\"color:purple; text-decoration:underline\">Use class information in the Interface Descriptors</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>01h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass01h\" style=\"color:purple; text-decoration:underline\">Audio&nbsp;</a>&nbsp;</p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>02h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Both</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass02h\" style=\"color:purple; text-decoration:underline\">Communications and CDC Control</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>03h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass03h\" style=\"color:purple; text-decoration:underline\">HID (Human Interface Device)</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>05h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass05h\" style=\"color:purple; text-decoration:underline\">Physical</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>06h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass06h\" style=\"color:purple; text-decoration:underline\">Image</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>07h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass07h\" style=\"color:purple; text-decoration:underline\">Printer</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>08h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass08h\" style=\"color:purple; text-decoration:underline\">Mass Storage</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>09h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Device</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass09h\" style=\"color:purple; text-decoration:underline\">Hub</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>0Ah</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass0Ah\" style=\"color:purple; text-decoration:underline\">CDC-Data</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>0Bh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass0Bh\" style=\"color:purple; text-decoration:underline\">Smart Card</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>0Dh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass0Dh\" style=\"color:purple; text-decoration:underline\">Content Security</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>0Eh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass0Eh\" style=\"color:purple; text-decoration:underline\">Video</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>0Fh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><u><a href=\"http://www.usb.org/developers/defined_class/#BaseClass0Fh\" style=\"color:purple; text-decoration:underline\">Personal Healthcare</a></u></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>10h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><u><a href=\"http://www.usb.org/developers/defined_class/#BaseClass10h\" style=\"color:purple; text-decoration:underline\">Audio/Video Devices</a></u></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>11h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Device</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass11h\" style=\"color:purple; text-decoration:underline\">Billboard Device Class</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>12h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClass12h\" style=\"color:purple; text-decoration:underline\">USB Type-C Bridge Class</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>DCh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Both</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClassDCh\" style=\"color:purple; text-decoration:underline\">Diagnostic Device</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>E0h</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClassE0h\" style=\"color:purple; text-decoration:underline\">Wireless Controller</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>EFh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Both</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClassEFh\" style=\"color:purple; text-decoration:underline\">Miscellaneous</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>FEh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Interface</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClassFEh\" style=\"color:purple; text-decoration:underline\">Application Specific</a></p>\n			</td>\n		</tr>\n		<tr>\n			<td style=\"width:59.4pt\">\n			<p>FFh</p>\n			</td>\n			<td style=\"width:1.25in\">\n			<p>Both</p>\n			</td>\n			<td style=\"width:293.4pt\">\n			<p><a href=\"http://www.usb.org/developers/defined_class/#BaseClassFFh\" style=\"color:purple; text-decoration:underline\">Vendor Specific</a></p>\n			</td>\n		</tr>\n	</tbody>\n</table>\n","0"),
("6050","util","","","0"),
("6051","control","","","0"),
("6052","legacy","","","0"),
("6053","backend","","","0"),
("6054","MPI","","","0"),
("6066","boot_time","<p>Return the system boot time expressed in seconds since the epoch</p>\n","<p>import&nbsp;psutil</p>\n\n<p>psutil.boot_time() # 1509038608.0</p>\n","0"),
("6067","callable","","","0"),
("6068","collections","","","0"),
("6069","contextlib","","","0"),
("6070","cpu_count","<p>cpu_count(logical=True)<br />\n&nbsp; &nbsp; Return the number of logical CPUs in the system (same as<br />\n&nbsp; &nbsp; os.cpu_count() in Python 3.4).</p>\n\n<p>&nbsp; &nbsp; If *logical* is False return the number of physical cores only<br />\n&nbsp; &nbsp; (e.g. hyper thread CPUs are excluded).</p>\n\n<p>&nbsp; &nbsp; Return None if undetermined.</p>\n\n<p>&nbsp; &nbsp; The return value is cached after first call.<br />\n&nbsp; &nbsp; If desired cache can be cleared like this:</p>\n\n<p>&nbsp; &nbsp; &gt;&gt;&gt; psutil.cpu_count.cache_clear()</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/psutil/CPU.jpg\" style=\"height:491px; width:800px\" /></p>\n","<p>import&nbsp;psutil</p>\n\n<p>psutil.cpu_count(logical=True) # 2<br />\npsutil.cpu_count() # 2<br />\npsutil.cpu_count(logical=False) # 2</p>\n","0"),
("6071","cpu_freq","<p>cpu_freq(percpu=False)<br />\n&nbsp; &nbsp; Return CPU frequency as a nameduple including current,<br />\n&nbsp; &nbsp; min and max frequency expressed in Mhz.</p>\n\n<p>&nbsp; &nbsp; If *percpu* is True and the system supports per-cpu frequency<br />\n&nbsp; &nbsp; retrieval (Linux only) a list of frequencies is returned for<br />\n&nbsp; &nbsp; each CPU. If not a list with one element is returned.</p>\n","<p>psutil.cpu_freq() # scpufreq(current=1999.0, min=0.0, max=1999.0)</p>\n","0"),
("6072","cpu_percent","<p>cpu_percent(interval=None, percpu=False)<br />\n&nbsp; &nbsp; Return a float representing the current system-wide CPU<br />\n&nbsp; &nbsp; utilization as a percentage.</p>\n\n<p>&nbsp; &nbsp; When *interval* is &gt; 0.0 compares system CPU times elapsed before<br />\n&nbsp; &nbsp; and after the interval (blocking).</p>\n\n<p>&nbsp; &nbsp; When *interval* is 0.0 or None compares system CPU times elapsed<br />\n&nbsp; &nbsp; since last call or module import, returning immediately (non<br />\n&nbsp; &nbsp; blocking). That means the first time this is called it will<br />\n&nbsp; &nbsp; return a meaningless 0.0 value which you should ignore.<br />\n&nbsp; &nbsp; In this case is recommended for accuracy that this function be<br />\n&nbsp; &nbsp; called with at least 0.1 seconds between calls.</p>\n\n<p>&nbsp; &nbsp; When *percpu* is True returns a list of floats representing the<br />\n&nbsp; &nbsp; utilization as a percentage for each CPU.<br />\n&nbsp; &nbsp; First element of the list refers to first CPU, second element<br />\n&nbsp; &nbsp; to second CPU and so on.<br />\n&nbsp; &nbsp; The order of the list is consistent across calls.</p>\n","<p>psutil.cpu_percent() # 14.2<br />\npsutil.cpu_percent(percpu=True) # [14.9, 13.5]</p>\n","0"),
("6073","cpu_stats","<p>cpu_stats()<br />\n&nbsp; &nbsp; Return CPU statistics.</p>\n","<p>psutil.cpu_stats() # scpustats(ctx_switches=222775686, interrupts=334371729, soft_interrupts=0, syscalls=281722546)</p>\n","0"),
("6074","cpu_times","<p>cpu_times(percpu=False)<br />\n&nbsp; &nbsp; Return system-wide CPU times as a namedtuple.<br />\n&nbsp; &nbsp; Every CPU time represents the seconds the CPU has spent in the<br />\n&nbsp; &nbsp; given mode. The namedtuple&#39;s fields availability varies depending on the<br />\n&nbsp; &nbsp; platform:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- user<br />\n&nbsp; &nbsp; &nbsp;- system<br />\n&nbsp; &nbsp; &nbsp;- idle<br />\n&nbsp; &nbsp; &nbsp;- nice (UNIX)<br />\n&nbsp; &nbsp; &nbsp;- iowait (Linux)<br />\n&nbsp; &nbsp; &nbsp;- irq (Linux, FreeBSD)<br />\n&nbsp; &nbsp; &nbsp;- softirq (Linux)<br />\n&nbsp; &nbsp; &nbsp;- steal (Linux &gt;= 2.6.11)<br />\n&nbsp; &nbsp; &nbsp;- guest (Linux &gt;= 2.6.24)<br />\n&nbsp; &nbsp; &nbsp;- guest_nice (Linux &gt;= 3.2.0)</p>\n\n<p>&nbsp; &nbsp; When *percpu* is True return a list of namedtuples for each CPU.<br />\n&nbsp; &nbsp; First element of the list refers to first CPU, second element<br />\n&nbsp; &nbsp; to second CPU and so on.<br />\n&nbsp; &nbsp; The order of the list is consistent across calls.</p>\n","<p>psutil.cpu_times() # scputimes(user=159613.546875, system=93158.875, idle=1425058.5, interrupt=4189.125, dpc=3040.0625)</p>\n","0"),
("6075","cpu_times_percent","<p>cpu_times_percent(interval=None, percpu=False)<br />\n&nbsp; &nbsp; Same as cpu_percent() but provides utilization percentages<br />\n&nbsp; &nbsp; for each specific CPU time as is returned by cpu_times().<br />\n&nbsp; &nbsp; For instance, on Linux we&#39;ll get:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &gt;&gt;&gt; cpu_times_percent()<br />\n&nbsp; &nbsp; &nbsp; cpupercent(user=4.8, nice=0.0, system=4.8, idle=90.5, iowait=0.0,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;irq=0.0, softirq=0.0, steal=0.0, guest=0.0, guest_nice=0.0)<br />\n&nbsp; &nbsp; &nbsp; &gt;&gt;&gt;</p>\n\n<p>&nbsp; &nbsp; *interval* and *percpu* arguments have the same meaning as in<br />\n&nbsp; &nbsp; cpu_percent().</p>\n","<p>psutil.cpu_times_percent() # scputimes(user=7.8, system=6.2, idle=85.5, interrupt=0.3, dpc=0.2)</p>\n","0"),
("6076","disk_io_counters","<p>disk_io_counters(perdisk=False, nowrap=True)<br />\n&nbsp; &nbsp; Return system disk I/O statistics as a namedtuple including<br />\n&nbsp; &nbsp; the following fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- read_count: &nbsp;number of reads<br />\n&nbsp; &nbsp; &nbsp;- write_count: number of writes<br />\n&nbsp; &nbsp; &nbsp;- read_bytes: &nbsp;number of bytes read<br />\n&nbsp; &nbsp; &nbsp;- write_bytes: number of bytes written<br />\n&nbsp; &nbsp; &nbsp;- read_time: &nbsp; time spent reading from disk (in ms)<br />\n&nbsp; &nbsp; &nbsp;- write_time: &nbsp;time spent writing to disk (in ms)</p>\n\n<p>&nbsp; &nbsp; Platform specific:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- busy_time: (Linux, FreeBSD) time spent doing actual I/Os (in ms)<br />\n&nbsp; &nbsp; &nbsp;- read_merged_count (Linux): number of merged reads<br />\n&nbsp; &nbsp; &nbsp;- write_merged_count (Linux): number of merged writes</p>\n\n<p>&nbsp; &nbsp; If *perdisk* is True return the same information for every<br />\n&nbsp; &nbsp; physical disk installed on the system as a dictionary<br />\n&nbsp; &nbsp; with partition names as the keys and the namedtuple<br />\n&nbsp; &nbsp; described above as the values.</p>\n\n<p>&nbsp; &nbsp; If *nowrap* is True it detects and adjust the numbers which overflow<br />\n&nbsp; &nbsp; and wrap (restart from 0) and add &quot;old value&quot; to &quot;new value&quot; so that<br />\n&nbsp; &nbsp; the returned numbers will always be increasing or remain the same,<br />\n&nbsp; &nbsp; but never decrease.<br />\n&nbsp; &nbsp; &quot;disk_io_counters.cache_clear()&quot; can be used to invalidate the<br />\n&nbsp; &nbsp; cache.</p>\n\n<p>&nbsp; &nbsp; On recent Windows versions &#39;diskperf -y&#39; command may need to be<br />\n&nbsp; &nbsp; executed first otherwise this function won&#39;t find any disk.</p>\n","<p>psutil.disk_io_counters() # sdiskio(read_count=9435116, write_count=5230146, read_bytes=343793067008, write_bytes=237996396544, read_time=348264, write_time=94079)</p>\n","0"),
("6077","disk_partitions","<p>disk_partitions(all=False)<br />\n&nbsp; &nbsp; Return mounted partitions as a list of<br />\n&nbsp; &nbsp; (device, mountpoint, fstype, opts) namedtuple.<br />\n&nbsp; &nbsp; &#39;opts&#39; field is a raw string separated by commas indicating mount<br />\n&nbsp; &nbsp; options which may vary depending on the platform.</p>\n\n<p>&nbsp; &nbsp; If *all* parameter is False return physical devices only and ignore<br />\n&nbsp; &nbsp; all others.</p>\n","<p>psutil.disk_partitions()</p>\n\n<p>[sdiskpart(device=&#39;C:\\&#39;, mountpoint=&#39;C:\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;),<br />\n&nbsp;sdiskpart(device=&#39;D:\\&#39;, mountpoint=&#39;D:\\&#39;, fstype=&#39;&#39;, opts=&#39;cdrom&#39;),<br />\n&nbsp;sdiskpart(device=&#39;E:\\&#39;, mountpoint=&#39;E:\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;),<br />\n&nbsp;sdiskpart(device=&#39;G:\\&#39;, mountpoint=&#39;G:\\&#39;, fstype=&#39;&#39;, opts=&#39;cdrom&#39;),<br />\n&nbsp;sdiskpart(device=&#39;H:\\&#39;, mountpoint=&#39;H:\\&#39;, fstype=&#39;CDFS&#39;, opts=&#39;ro,cdrom&#39;),<br />\n&nbsp;sdiskpart(device=&#39;I:\\&#39;, mountpoint=&#39;I:\\&#39;, fstype=&#39;&#39;, opts=&#39;cdrom&#39;),<br />\n&nbsp;sdiskpart(device=&#39;J:\\&#39;, mountpoint=&#39;J:\\&#39;, fstype=&#39;&#39;, opts=&#39;cdrom&#39;)]</p>\n","0"),
("6078","disk_usage","<p>disk_usage(path)<br />\n&nbsp; &nbsp; Return disk usage statistics about the given *path* as a<br />\n&nbsp; &nbsp; namedtuple including total, used and free space expressed in bytes<br />\n&nbsp; &nbsp; plus the percentage usage.</p>\n","<p>psutil.disk_usage(r&#39;C:\\&#39;) # sdiskusage(total=394355965952, used=359798124544, free=34557841408, percent=91.2)</p>\n","0"),
("6079","errno","","","0"),
("6080","functools","","","0"),
("6081","long","","","0"),
("6082","net_connections","<p>net_connections(kind=&#39;inet&#39;)<br />\n&nbsp; &nbsp; Return system-wide socket connections as a list of<br />\n&nbsp; &nbsp; (fd, family, type, laddr, raddr, status, pid) namedtuples.<br />\n&nbsp; &nbsp; In case of limited privileges &#39;fd&#39; and &#39;pid&#39; may be set to -1<br />\n&nbsp; &nbsp; and None respectively.<br />\n&nbsp; &nbsp; The *kind* parameter filters for connections that fit the<br />\n&nbsp; &nbsp; following criteria:</p>\n\n<p>&nbsp; &nbsp; +------------+----------------------------------------------------+<br />\n&nbsp; &nbsp; | Kind Value | Connections using &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; +------------+----------------------------------------------------+<br />\n&nbsp; &nbsp; | inet &nbsp; &nbsp; &nbsp; | IPv4 and IPv6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | inet4 &nbsp; &nbsp; &nbsp;| IPv4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />\n&nbsp; &nbsp; | inet6 &nbsp; &nbsp; &nbsp;| IPv6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />\n&nbsp; &nbsp; | tcp &nbsp; &nbsp; &nbsp; &nbsp;| TCP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | tcp4 &nbsp; &nbsp; &nbsp; | TCP over IPv4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | tcp6 &nbsp; &nbsp; &nbsp; | TCP over IPv6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | udp &nbsp; &nbsp; &nbsp; &nbsp;| UDP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | udp4 &nbsp; &nbsp; &nbsp; | UDP over IPv4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | udp6 &nbsp; &nbsp; &nbsp; | UDP over IPv6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />\n&nbsp; &nbsp; | unix &nbsp; &nbsp; &nbsp; | UNIX socket (both UDP and TCP protocols) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />\n&nbsp; &nbsp; | all &nbsp; &nbsp; &nbsp; &nbsp;| the sum of all the possible families and protocols |<br />\n&nbsp; &nbsp; +------------+----------------------------------------------------+</p>\n\n<p>&nbsp; &nbsp; On OSX this function requires root privileges.</p>\n","<p>psutil.net_connections()</p>\n\n<p>[sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;0.0.0.0&#39;, port=135), raddr=(), status=&#39;LISTEN&#39;, pid=1192),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=1, laddr=addr(ip=&#39;::&#39;, port=5357), raddr=(), status=&#39;LISTEN&#39;, pid=4),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;0.0.0.0&#39;, port=5357), raddr=(), status=&#39;LISTEN&#39;, pid=4),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=2, laddr=addr(ip=&#39;::1&#39;, port=5353), raddr=(), status=&#39;NONE&#39;, pid=3656),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;192.168.1.35&#39;, port=7034), raddr=addr(ip=&#39;5.45.62.116&#39;, port=80), status=&#39;ESTABLISHED&#39;, pid=6712),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=1, laddr=addr(ip=&#39;::&#39;, port=445), raddr=(), status=&#39;LISTEN&#39;, pid=4),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;192.168.1.35&#39;, port=35353), raddr=addr(ip=&#39;37.187.114.172&#39;, port=80), status=&#39;CLOSE_WAIT&#39;, pid=10132),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;0.0.0.0&#39;, port=80), raddr=(), status=&#39;LISTEN&#39;, pid=4),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;0.0.0.0&#39;, port=1537), raddr=(), status=&#39;LISTEN&#39;, pid=1492),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=2, laddr=addr(ip=&#39;0.0.0.0&#39;, port=53518), raddr=(), status=&#39;NONE&#39;, pid=2900),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=2, laddr=addr(ip=&#39;::&#39;, port=5353), raddr=(), status=&#39;NONE&#39;, pid=10328),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=2, laddr=addr(ip=&#39;0.0.0.0&#39;, port=123), raddr=(), status=&#39;NONE&#39;, pid=1560),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=1, laddr=addr(ip=&#39;::&#39;, port=5432), raddr=(), status=&#39;LISTEN&#39;, pid=4388),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=2, laddr=addr(ip=&#39;127.0.0.1&#39;, port=1900), raddr=(), status=&#39;NONE&#39;, pid=2900),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET6: 23&gt;, type=1, laddr=addr(ip=&#39;::&#39;, port=1538), raddr=(), status=&#39;LISTEN&#39;, pid=1360),<br />\n&nbsp;sconn(fd=-1, family=&lt;AddressFamily.AF_INET: 2&gt;, type=1, laddr=addr(ip=&#39;0.0.0.0&#39;, port=2107), raddr=(), status=&#39;LISTEN&#39;, pid=2728),</p>\n","0"),
("6083","net_if_addrs","<p>net_if_addrs()<br />\n&nbsp; &nbsp; Return the addresses associated to each NIC (network interface<br />\n&nbsp; &nbsp; card) installed on the system as a dictionary whose keys are the<br />\n&nbsp; &nbsp; NIC names and value is a list of namedtuples for each address<br />\n&nbsp; &nbsp; assigned to the NIC. Each namedtuple includes 5 fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- family: can be either socket.AF_INET, socket.AF_INET6 or<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;psutil.AF_LINK, which refers to a MAC address.<br />\n&nbsp; &nbsp; &nbsp;- address: is the primary address and it is always set.<br />\n&nbsp; &nbsp; &nbsp;- netmask: and &#39;broadcast&#39; and &#39;ptp&#39; may be None.<br />\n&nbsp; &nbsp; &nbsp;- ptp: stands for &quot;point to point&quot; and references the<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; destination address on a point to point interface<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (typically a VPN).<br />\n&nbsp; &nbsp; &nbsp;- broadcast: and *ptp* are mutually exclusive.</p>\n\n<p>&nbsp; &nbsp; Note: you can have more than one address of the same family<br />\n&nbsp; &nbsp; associated with each interface.</p>\n","<p>pprint.pprint(psutil.net_if_addrs())<br />\n{&#39;Ethernet&#39;: [snic(family=, address=&#39;88-AE-1D-7F-1B-6E&#39;, netmask=None, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;169.254.132.116&#39;, netmask=&#39;255.255.0.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;fe80::697f:519:3eaa:8474&#39;, netmask=None, broadcast=None, ptp=None)],<br />\n&nbsp;&#39;Ethernet 2&#39;: [snic(family=, address=&#39;00-FF-0C-C6-BD-2C&#39;, netmask=None, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;169.254.17.110&#39;, netmask=&#39;255.255.0.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;fe80::ed07:879c:1078:116e&#39;, netmask=None, broadcast=None, ptp=None)],<br />\n&nbsp;&#39;Local Area Connection* 3&#39;: [snic(family=, address=&#39;5E-AC-4C-1C-42-63&#39;, netmask=None, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;169.254.211.21&#39;, netmask=&#39;255.255.0.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;fe80::9cd8:3708:4a24:d315&#39;, netmask=None, broadcast=None, ptp=None)],<br />\n&nbsp;&#39;Local Area Connection* 4&#39;: [snic(family=, address=&#39;1E-AC-4C-1C-42-63&#39;, netmask=None, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;169.254.46.88&#39;, netmask=&#39;255.255.0.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snic(family=, address=&#39;fe80::e44f:4aec:d7ec:2e58&#39;, netmask=None, broadcast=None, ptp=None)],<br />\n&nbsp;&#39;Loopback Pseudo-Interface 1&#39;: [snic(family=, address=&#39;127.0.0.1&#39;, netmask=&#39;255.0.0.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snic(family=, address=&#39;::1&#39;, netmask=None, broadcast=None, ptp=None)],<br />\n&nbsp;&#39;Wireless Network Connection&#39;: [snic(family=, address=&#39;5C-AC-4C-1C-42-63&#39;, netmask=None, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snic(family=, address=&#39;192.168.1.35&#39;, netmask=&#39;255.255.255.0&#39;, broadcast=None, ptp=None),<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snic(family=, address=&#39;fe80::4019:f14:99be:6a66&#39;, netmask=None, broadcast=None, ptp=None)]}</p>\n","0"),
("6084","net_if_stats","<p>&nbsp; &nbsp; Return information about each NIC (network interface card)<br />\n&nbsp; &nbsp; installed on the system as a dictionary whose keys are the<br />\n&nbsp; &nbsp; NIC names and value is a namedtuple with the following fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- isup: whether the interface is up (bool)<br />\n&nbsp; &nbsp; &nbsp;- duplex: can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;NIC_DUPLEX_UNKNOWN<br />\n&nbsp; &nbsp; &nbsp;- speed: the NIC speed expressed in mega bits (MB); if it can&#39;t<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; be determined (e.g. &#39;localhost&#39;) it will be set to 0.<br />\n&nbsp; &nbsp; &nbsp;- mtu: the maximum transmission unit expressed in bytes.</p>\n","<p>pprint.pprint(psutil.net_if_stats())<br />\n{&#39;Ethernet&#39;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=0, mtu=1500),<br />\n&nbsp;&#39;Ethernet 2&#39;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=10, mtu=1500),<br />\n&nbsp;&#39;Local Area Connection* 3&#39;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=0, mtu=1500),<br />\n&nbsp;&#39;Local Area Connection* 4&#39;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=0, mtu=1500),<br />\n&nbsp;&#39;Loopback Pseudo-Interface 1&#39;: snicstats(isup=True, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=1073, mtu=1500),<br />\n&nbsp;&#39;Wireless Network Connection&#39;: snicstats(isup=True, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=300, mtu=1500)}</p>\n","0"),
("6085","net_io_counters","<p>net_io_counters(pernic=False, nowrap=True)<br />\n&nbsp; &nbsp; Return network I/O statistics as a namedtuple including<br />\n&nbsp; &nbsp; the following fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- bytes_sent: &nbsp; number of bytes sent<br />\n&nbsp; &nbsp; &nbsp;- bytes_recv: &nbsp; number of bytes received<br />\n&nbsp; &nbsp; &nbsp;- packets_sent: number of packets sent<br />\n&nbsp; &nbsp; &nbsp;- packets_recv: number of packets received<br />\n&nbsp; &nbsp; &nbsp;- errin: &nbsp; &nbsp; &nbsp; &nbsp;total number of errors while receiving<br />\n&nbsp; &nbsp; &nbsp;- errout: &nbsp; &nbsp; &nbsp; total number of errors while sending<br />\n&nbsp; &nbsp; &nbsp;- dropin: &nbsp; &nbsp; &nbsp; total number of incoming packets which were dropped<br />\n&nbsp; &nbsp; &nbsp;- dropout: &nbsp; &nbsp; &nbsp;total number of outgoing packets which were dropped<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(always 0 on OSX and BSD)</p>\n\n<p>&nbsp; &nbsp; If *pernic* is True return the same information for every<br />\n&nbsp; &nbsp; network interface installed on the system as a dictionary<br />\n&nbsp; &nbsp; with network interface names as the keys and the namedtuple<br />\n&nbsp; &nbsp; described above as the values.</p>\n\n<p>&nbsp; &nbsp; If *nowrap* is True it detects and adjust the numbers which overflow<br />\n&nbsp; &nbsp; and wrap (restart from 0) and add &quot;old value&quot; to &quot;new value&quot; so that<br />\n&nbsp; &nbsp; the returned numbers will always be increasing or remain the same,<br />\n&nbsp; &nbsp; but never decrease.<br />\n&nbsp; &nbsp; &quot;disk_io_counters.cache_clear()&quot; can be used to invalidate the<br />\n&nbsp; &nbsp; cache.</p>\n","<p>psutil.net_io_counters() # snetio(bytes_sent=2679156382, bytes_recv=12385999600, packets_sent=5902825, packets_recv=10001584, errin=0, errout=0, dropin=0, dropout=0)</p>\n","0"),
("6086","pid_exists","<p>pid_exists(pid)<br />\n&nbsp; &nbsp; Return True if given PID exists in the current process list.<br />\n&nbsp; &nbsp; This is faster than doing &quot;pid in psutil.pids()&quot; and<br />\n&nbsp; &nbsp; should be preferred.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/psutil/PID.jpg\" style=\"height:489px; width:800px\" /></p>\n","<p>psutil.pid_exists(8028) # True<br />\npsutil.pid_exists(8020) # False</p>\n","0"),
("6087","pids","<p>pids()<br />\n&nbsp; &nbsp; Return a list of current running PIDs.</p>\n","<p>psutil.pids()<br />\n[0, 4, 500, 700, 780, 788, 876, 988, 996, 1084, 1104, 1108, 1192, 1360, 1388, 1492, 1560, 1644, 1664, 1792, 612, 976, 948, 2060, 2192, 2328, 2340, 2384, 2392, 2680, 2728, 2844, 2864, 2900, 3072, 3120, 3128, 3144, 3180, 3228, 3300, 3336, 3456, 3656, 3804, 4388, 4396, 4600, 6028, 6036, 6044, 1972, 2700, 5116, 5692, 5896, 2952, 4340, 3684, 4380, 4060, 1672, 1020, 1396, 2208, 5784, 1984, 6276, 6468, 6668, 6772, 6240, 4808, 8216, 8244, 8280, 8288, 9064, 8536, 10132, 8664, 6392, 5204, 8028, 7792, 10476, 8716, 6712, 4716, 8348, 10556, 9744, 10328, 12052, 16376, 14912, 9784, 5728, 14572, 632, 12612, 10416, 15064, 14744, 5880, 10316, 18068, 16140, 17008, 18736, 13852, 11484, 2588, 17228, 18720, 20192, 11840, 10096, 12180]</p>\n","0"),
("6088","process_iter","<p>process_iter(attrs=None, ad_value=None)<br />\n&nbsp; &nbsp; Return a generator yielding a Process instance for all<br />\n&nbsp; &nbsp; running processes.</p>\n\n<p>&nbsp; &nbsp; Every new Process instance is only created once and then cached<br />\n&nbsp; &nbsp; into an internal table which is updated every time this is used.</p>\n\n<p>&nbsp; &nbsp; Cached Process instances are checked for identity so that you&#39;re<br />\n&nbsp; &nbsp; safe in case a PID has been reused by another process, in which<br />\n&nbsp; &nbsp; case the cached instance is updated.</p>\n\n<p>&nbsp; &nbsp; The sorting order in which processes are yielded is based on<br />\n&nbsp; &nbsp; their PIDs.</p>\n\n<p>&nbsp; &nbsp; *attrs* and *ad_value* have the same meaning as in<br />\n&nbsp; &nbsp; Process.as_dict(). If *attrs* is specified as_dict() is called<br />\n&nbsp; &nbsp; and the resulting dict is stored as a &#39;info&#39; attribute attached<br />\n&nbsp; &nbsp; to returned Process instance.<br />\n&nbsp; &nbsp; If *attrs* is an empty list it will retrieve all process info<br />\n&nbsp; &nbsp; (slow).</p>\n","<p>psutil.process_iter() #&nbsp;generator object process_iter at 0x00EFE5A0<br />\nlist(psutil.process_iter())</p>\n\n<p><img alt=\"\" src=\"process_iter\" /><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/psutil/process_iter.jpg\" style=\"height:302px; width:800px\" /></p>\n","0"),
("6089","pwd","","","0"),
("6090","sensors_battery","<p>sensors_battery()<br />\n&nbsp; &nbsp; Return battery information. If no battery is installed<br />\n&nbsp; &nbsp; returns None.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- percent: battery power left as a percentage.<br />\n&nbsp; &nbsp; &nbsp;- secsleft: a rough approximation of how many seconds are left<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;before the battery runs out of power. May be<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;POWER_TIME_UNLIMITED or POWER_TIME_UNLIMITED.<br />\n&nbsp; &nbsp; &nbsp;- power_plugged: True if the AC power cable is connected.</p>\n","<p>psutil.sensors_battery() # sbattery(percent=98, secsleft=&lt;BatteryTime.POWER_TIME_UNLIMITED: -2&gt;, power_plugged=True)</p>\n","0"),
("6091","signal","","","0"),
("6092","subprocess","","","0"),
("6093","swap_memory","<p>swap_memory()<br />\n&nbsp; &nbsp; Return system swap memory statistics as a namedtuple including<br />\n&nbsp; &nbsp; the following fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- total: &nbsp; total swap memory in bytes<br />\n&nbsp; &nbsp; &nbsp;- used: &nbsp; &nbsp;used swap memory in bytes<br />\n&nbsp; &nbsp; &nbsp;- free: &nbsp; &nbsp;free swap memory in bytes<br />\n&nbsp; &nbsp; &nbsp;- percent: the percentage usage<br />\n&nbsp; &nbsp; &nbsp;- sin: &nbsp; &nbsp; no. of bytes the system has swapped in from disk (cumulative)<br />\n&nbsp; &nbsp; &nbsp;- sout: &nbsp; &nbsp;no. of bytes the system has swapped out from disk (cumulative)</p>\n\n<p>&nbsp; &nbsp; &#39;sin&#39; and &#39;sout&#39; on Windows are meaningless and always set to 0.</p>\n","<p>psutil.swap_memory() # sswap(total=5144903680, used=3798556672, free=1346347008, percent=73.8, sin=0, sout=0)</p>\n","0"),
("6094","users","<p>users()<br />\n&nbsp; &nbsp; Return users currently connected on the system as a list of<br />\n&nbsp; &nbsp; namedtuples including the following fields.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- user: the name of the user<br />\n&nbsp; &nbsp; &nbsp;- terminal: the tty or pseudo-tty associated with the user, if any.<br />\n&nbsp; &nbsp; &nbsp;- host: the host name associated with the entry, if any.<br />\n&nbsp; &nbsp; &nbsp;- started: the creation time as a floating point number expressed in<br />\n&nbsp; &nbsp; &nbsp; &nbsp;seconds since the epoch.</p>\n","<p>psutil.users() # [suser(name=&#39;User&#39;, terminal=None, host=&#39;0.0.0.0&#39;, started=1509038647.0, pid=None)]</p>\n","0"),
("6095","version_info","","","0"),
("6096","virtual_memory","<p>virtual_memory()<br />\n&nbsp; &nbsp; Return statistics about system memory usage as a namedtuple<br />\n&nbsp; &nbsp; including the following fields, expressed in bytes:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- total:<br />\n&nbsp; &nbsp; &nbsp; &nbsp;total physical memory available.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- available:<br />\n&nbsp; &nbsp; &nbsp; &nbsp;the memory that can be given instantly to processes without the<br />\n&nbsp; &nbsp; &nbsp; &nbsp;system going into swap.<br />\n&nbsp; &nbsp; &nbsp; &nbsp;This is calculated by summing different memory values depending<br />\n&nbsp; &nbsp; &nbsp; &nbsp;on the platform and it is supposed to be used to monitor actual<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory usage in a cross platform fashion.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- percent:<br />\n&nbsp; &nbsp; &nbsp; &nbsp;the percentage usage calculated as (total - available) / total * 100</p>\n\n<p>&nbsp; &nbsp; &nbsp;- used:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; memory used, calculated differently depending on the platform and<br />\n&nbsp; &nbsp; &nbsp; &nbsp; designed for informational purposes only:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; OSX: active + inactive + wired<br />\n&nbsp; &nbsp; &nbsp; &nbsp; BSD: active + wired + cached<br />\n&nbsp; &nbsp; &nbsp; &nbsp; LINUX: total - free</p>\n\n<p>&nbsp; &nbsp; &nbsp;- free:<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory not being used at all (zeroed) that is readily available;<br />\n&nbsp; &nbsp; &nbsp; &nbsp;note that this doesn&#39;t reflect the actual memory available<br />\n&nbsp; &nbsp; &nbsp; &nbsp;(use &#39;available&#39; instead)</p>\n\n<p>&nbsp; &nbsp; Platform-specific fields:</p>\n\n<p>&nbsp; &nbsp; &nbsp;- active (UNIX):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory currently in use or very recently used, and so it is in RAM.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- inactive (UNIX):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory that is marked as not used.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- buffers (BSD, Linux):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;cache for things like file system metadata.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- cached (BSD, OSX):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;cache for various things.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- wired (OSX, BSD):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory that is marked to always stay in RAM. It is never moved to disk.</p>\n\n<p>&nbsp; &nbsp; &nbsp;- shared (BSD):<br />\n&nbsp; &nbsp; &nbsp; &nbsp;memory that may be simultaneously accessed by multiple processes.</p>\n\n<p>&nbsp; &nbsp; The sum of &#39;used&#39; and &#39;available&#39; does not necessarily equal total.<br />\n&nbsp; &nbsp; On Windows &#39;available&#39; and &#39;free&#39; are the same.</p>\n","<p>psutil.virtual_memory() # svmem(total=1869357056, available=424755200, percent=77.3, used=1444601856, free=424755200)</p>\n","0"),
("6097","wait_procs","","","0"),
("6098","win_service_get","<p>win_service_get(name)<br />\n&nbsp; &nbsp; Get a Windows service by *name*.<br />\n&nbsp; &nbsp; Raise NoSuchProcess if no service with such name exists.</p>\n","<p>psutil.win_service_get(&#39;AdobeARMservice&#39;) # WindowsService(name=&#39;AdobeARMservice&#39;, display_name=&#39;Adobe Acrobat Update Service&#39;) at 15945136</p>\n","0"),
("6099","win_service_iter","<p>win_service_iter()<br />\n&nbsp; &nbsp; Return a generator yielding a WindowsService instance for all<br />\n&nbsp; &nbsp; Windows services installed.</p>\n","<p>list(psutil.win_service_iter())</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Small_modules/psutil/win_service_iter.jpg\" /></p>\n","0"),
("6100","configuration","<p>configuration(**kwargs)<br />\n&nbsp; &nbsp; Constructs and returns a :class:`Configuration` with given options</p>\n\n<p>&nbsp; &nbsp; :param wkhtmltopdf: path to binary<br />\n&nbsp; &nbsp; :param meta_tag_prefix: the prefix for ``pdfkit`` specific meta tags</p>\n","<p>import pdfkit</p>\n\n<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>config = pdfkit.configuration(wkhtmltopdf=r&#39;C:Program Fileswkhtmltopdfinwkhtmltopdf.exe&#39;)</p>\n\n<p>pdfkit.from_url(&#39;http://google.com&#39;, &#39;out.pdf&#39;, configuration=config)</p>\n","0"),
("6101","from_file","","","0"),
("6102","from_string","","","0"),
("6103","from_url","<p>from_url(url, output_path, options=None, toc=None, cover=None, configuration=None, cover_first=False)<br />\n&nbsp; &nbsp; Convert file of files from URLs to PDF document</p>\n\n<p>&nbsp; &nbsp; :param url: URL or list of URLs to be saved<br />\n&nbsp; &nbsp; :param output_path: path to output PDF file. False means file will be returned as string.<br />\n&nbsp; &nbsp; :param options: (optional) dict with wkhtmltopdf global and page options, with or w/o &#39;--&#39;<br />\n&nbsp; &nbsp; :param toc: (optional) dict with toc-specific wkhtmltopdf options, with or w/o &#39;--&#39;<br />\n&nbsp; &nbsp; :param cover: (optional) string with url/filename with a cover html page<br />\n&nbsp; &nbsp; :param configuration: (optional) instance of pdfkit.configuration.Configuration()<br />\n&nbsp; &nbsp; :param configuration_first: (optional) if True, cover always precedes TOC</p>\n\n<p>&nbsp; &nbsp; Returns: True on success</p>\n","<p>import pdfkit</p>\n\n<p>import os<br />\nos.chdir(r&#39;C:UsersUserDocuments\\_Skrypty&#39;)</p>\n\n<p>config = pdfkit.configuration(wkhtmltopdf=r&#39;C:Program Fileswkhtmltopdfinwkhtmltopdf.exe&#39;)</p>\n\n<p>pdfkit.from_url(&#39;http://google.com&#39;, &#39;out.pdf&#39;, configuration=config)</p>\n\n<pre>\npdfkit.from_url([&#39;google.com&#39;, &#39;yandex.ru&#39;, &#39;makingnotes.ovh&#39;], &#39;out.pdf&#39;)</pre>\n","0"),
("6105","Visibility","<p>The&nbsp;<em>Visibility Actuator</em>&nbsp;allows the user to change the visibility of objects during runtime.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Visibility.jpg\" style=\"height:135px; width:537px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Visibility1.jpg\" style=\"height:388px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Visibility2.jpg\" style=\"height:398px; width:1280px\" /></p>\n","0"),
("6106","State","<p>The&nbsp;<em>State Actuator</em>&nbsp;allows the user to create complex logic, while retaining a clear user interface. It does this by having different states, and performing operations upon them.</p>\n\n<p>With the state actuator, you can create tiers of logic, without the need for hundreds of properties. Use it well, and you benefit greatly, but often problems may be circumvented by Python.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/State.jpg\" style=\"height:136px; width:528px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/State1.jpg\" style=\"height:675px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/State2.jpg\" style=\"height:623px; width:800px\" /></p>\n","0"),
("6107","Sound","<p>The&nbsp;<em>Sound Actuator</em>&nbsp;allows the user to play sound files in the game engine</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sound.jpg\" style=\"height:164px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sound1.jpg\" style=\"height:554px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sound2.jpg\" style=\"height:504px; width:800px\" /></p>\n","0"),
("6108","Steering","<p>The&nbsp;<em>Steering Actuator</em>&nbsp;moves an object towards a target object, with options to seek, flee, or follow a path. This actuator will not actually try to avoid obstacles by deviating the objects course.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering.jpg\" style=\"height:359px; width:451px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering1.jpg\" style=\"height:691px; width:784px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering2.jpg\" style=\"height:669px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering3.jpg\" style=\"height:286px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering4.jpg\" style=\"height:402px; width:542px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Steering5.jpg\" style=\"height:327px; width:542px\" /></p>\n","0"),
("6109","Scene","<p>The&nbsp;<em>Scene Actuator</em>&nbsp;manages the scenes in the user&rsquo;s blend-file, these can be used as levels or for UI and background</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Scene.jpg\" style=\"height:128px; width:535px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Scene1.jpg\" style=\"height:434px; width:788px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Scene2.jpg\" style=\"height:503px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Scene3.jpg\" style=\"height:213px; width:790px\" /></p>\n","0"),
("6110","Random","<p>The&nbsp;<em>Random Actuator</em>&nbsp;sets a random value into a property of the object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Random.jpg\" style=\"height:204px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Random1.jpg\" style=\"height:501px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Random2.jpg\" style=\"height:556px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Random3.jpg\" style=\"height:297px; width:800px\" /></p>\n","0"),
("6111","Property","<p>The&nbsp;<em>Property Actuator</em>&nbsp;changes the value of a given property once the actuator itself is activated</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Property.jpg\" style=\"height:210px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Property1.jpg\" style=\"height:492px; width:800px\" /></p>\n","0"),
("6112","Parent","<p>The&nbsp;<em>Parent Actuator</em>&nbsp;enables the user to change the parent relationships of the current object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Parent.jpg\" style=\"height:211px; width:523px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Parent1.jpg\" style=\"height:626px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Parent2.jpg\" style=\"height:407px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Parent3.jpg\" style=\"height:373px; width:688px\" /></p>\n","0"),
("6113","Motion","<p>The&nbsp;<em>Motion Actuator</em>&nbsp;sets an object into motion. There are two modes of operation, Simple or Servo, in which the object can either teleport &amp; rotate, or dynamically move</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Motion.jpg\" style=\"height:206px; width:523px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Motion1.jpg\" style=\"height:238px; width:800px\" /></p>\n","0"),
("6114","Mouse","<p>The&nbsp;<em>Mouse Actuator</em>&nbsp;allows two modes of operation, to show/hide the mouse cursor or to control object rotation with the mouse. The mouse rotation is flexible enough to allow any type of mouse look as well as banking for flight controls</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Mouse.jpg\" style=\"height:172px; width:522px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Mouse1.jpg\" style=\"height:727px; width:908px\" /></p>\n","0"),
("6115","Message","<p>The&nbsp;<em>Message Actuator</em>&nbsp;allows the user to send data across a scene, and between scenes themselves</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message.jpg\" style=\"height:205px; width:526px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message1.jpg\" style=\"height:420px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message2.jpg\" style=\"height:442px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message3.jpg\" style=\"height:532px; width:800px\" /></p>\n","0"),
("6116","Game","<p>The&nbsp;<em>Game Actuator</em>&nbsp;allows the user to perform Game-specific functions, such as Restart Game, Quit Game, and Load Game</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Game.jpg\" style=\"height:156px; width:527px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Game1.jpg\" style=\"height:231px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Game2.jpg\" style=\"height:272px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Game3.jpg\" style=\"height:183px; width:800px\" /></p>\n","0"),
("6117","Filter 2D","<p>The&nbsp;<em>Filter 2D Actuator</em>&nbsp;adds image filters, that apply on final render of objects. There are several 2D filters each listed below. Most are self explanatory, however, some are special and will be described in detail later</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Filter_2D.jpg\" style=\"height:167px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Filter_2D1.jpg\" style=\"height:731px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Filter_2D2.jpg\" style=\"height:392px; width:808px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Filter_2D3.jpg\" style=\"height:374px; width:833px\" /></p>\n","0"),
("6118","Edit Object","<p>The&nbsp;<em>Edit Object Actuator</em>&nbsp;allows the user to edit settings of objects in game</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Edit_Object.jpg\" style=\"height:248px; width:523px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Edit_Object1.jpg\" style=\"height:485px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Edit_Object2.jpg\" style=\"height:223px; width:255px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Edit_Object3.jpg\" style=\"height:498px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Edit_Object4.jpg\" style=\"height:332px; width:800px\" /></p>\n","0"),
("6119","Constraint","<p>The&nbsp;<em>Constraints Actuator</em>&nbsp;adds a constraint to the location or orientation of an object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Constraint.jpg\" style=\"height:245px; width:526px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Constraint1.jpg\" style=\"height:579px; width:800px\" /></p>\n","0"),
("6120","Camera","<p>The&nbsp;<em>Camera Actuator</em>&nbsp;makes the camera follow or track an object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Camera.jpg\" style=\"height:256px; width:526px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Camera1.jpg\" style=\"height:508px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Camera2.jpg\" style=\"height:536px; width:800px\" /></p>\n","0"),
("6121","Action","<p>The&nbsp;<em>Action Actuator</em>&nbsp;controls animation actions, and sets the playback method. The&nbsp;<em>Action Actuator</em>&nbsp;is only visible when an armature is selected, because actions are stored in the armature</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Action.jpg\" style=\"height:337px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Action1.jpg\" style=\"height:476px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Action2.jpg\" style=\"height:720px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Action3.jpg\" style=\"height:589px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Action4.jpg\" style=\"height:566px; width:800px\" /></p>\n","0"),
("6122","Actuator","<p>The&nbsp;<em>Actuator Sensor</em>&nbsp;detects when a particular actuator receives an activation pulse. The&nbsp;<em>Actuator</em>sensor sends a TRUE pulse when the specified actuator is activated. The sensor also sends a FALSE pulse when the specified actuator is deactivated</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Actuator.jpg\" style=\"height:177px; width:529px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Actulator1.jpg\" style=\"height:558px; width:800px\" /></p>\n","0"),
("6123","Always","<p>The&nbsp;<em>Always Sensor</em>&nbsp;is used for things that need to be done every logic tick, or at every&nbsp;<em>x</em>&nbsp;logic tick (with non-null&nbsp;<em>f</em>), or at start-up (with&nbsp;<em>Tap</em>)</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Always.jpg\" style=\"height:141px; width:528px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Always1.jpg\" style=\"height:319px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Always2.jpg\" style=\"height:322px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Always3.jpg\" style=\"height:192px; width:689px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Always4.jpg\" style=\"height:153px; width:800px\" /></p>\n","0"),
("6124","Collision","<p>A&nbsp;<em>Collision Sensor</em>&nbsp;works like a &ldquo;touch sensor&rdquo; but can also filter by property or material. Only objects with the property/material with that name will generate a positive pulse upon collision. Leave blank for collision with any object</p>\n\n<p>The&nbsp;<em>Collision</em>&nbsp;sensor cannot detect collisions with soft bodies. This is a limitation in Bullet, the physics library used by the Game Engine</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision.jpg\" style=\"height:170px; width:530px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision1.jpg\" style=\"height:819px; width:773px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision2.jpg\" style=\"height:321px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision3.jpg\" style=\"height:247px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision4.jpg\" style=\"height:310px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Collision5.jpg\" style=\"height:596px; width:800px\" /></p>\n","0"),
("6125","Delay","<p>The&nbsp;<em>Delay Sensor</em>&nbsp;is designed for delaying reactions a number of logic ticks. This is useful if an other action has to be done first or to time events</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Delay.jpg\" style=\"height:171px; width:528px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Delay1.jpg\" style=\"height:589px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Delay2.jpg\" style=\"height:461px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Delay3.jpg\" style=\"height:508px; width:800px\" /></p>\n","0"),
("6126","Joystick","<p>The&nbsp;<em>Joystick Sensor</em>&nbsp;triggers whenever the joystick moves. It also detects events on a range of ancillary controls on the joystick device (hat, buttons, etc.). More than one joystick may be used (see &ldquo;Index&rdquo;). The exact layout of the joystick controls will depend on the make and model of joystick used.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Joystick.jpg\" style=\"height:303px; width:527px\" /></p>\n","","0"),
("6127","Keyboard","<p>The&nbsp;<em>Keyboard</em>&nbsp;sensor is for detecting keyboard input. It can also save keyboard input to a&nbsp;<a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/properties.html#game-engine-property-types\">String&nbsp;</a></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Keyboard.jpg\" style=\"height:357px; width:530px\" /></p>\n\n<p>&nbsp;</p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Keyboard1.jpg\" style=\"height:346px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Keyboard2.jpg\" style=\"height:371px; width:800px\" /></p>\n","0"),
("6128","Message","<p>The&nbsp;<em>Message Sensor</em>&nbsp;can be used to detect either text messages or property values. The sensor sends a positive pulse once an appropriate message is sent from anywhere in the engine. It can be set up to only send a pulse upon a message with a specific subject</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Message.jpg\" style=\"height:174px; width:535px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message1.jpg\" style=\"height:420px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message2.jpg\" style=\"height:442px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Message3.jpg\" style=\"height:532px; width:800px\" /></p>\n","0"),
("6129","Mouse","<p>The&nbsp;<em>Mouse Sensor</em>&nbsp;is for detecting mouse events</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Mouse.jpg\" style=\"height:177px; width:527px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Mouse1.jpg\" style=\"height:641px; width:800px\" /></p>\n","0"),
("6130","Near","<p>A&nbsp;<em>Near Sensor</em>&nbsp;detects objects that move to within a specific distance of themselves. It can filter objects with properties, like the&nbsp;<a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/sensors/types/collision.html\">Collision sensor</a>.</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Near.jpg\" style=\"height:234px; width:533px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Near1.jpg\" style=\"height:389px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Near2.jpg\" style=\"height:282px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Near3.jpg\" style=\"height:450px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Near4.jpg\" style=\"height:318px; width:800px\" /></p>\n","0"),
("6131","Property","<p>The&nbsp;<em>Property Sensor</em>&nbsp;detects changes in the properties of its owner object</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Property.jpg\" style=\"height:256px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Property1.jpg\" style=\"height:463px; width:800px\" /></p>\n","0"),
("6132","Radar","<p>The&nbsp;<em>Radar Sensor</em>&nbsp;works much like the&nbsp;<a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/sensors/types/near.html\">Near sensor</a>, but only within an angle from an axis, forming an invisible cone with the top in the objects&rsquo; center and base at a distance on an axis. This sensor is useful for giving bots sight only in front of them, for example</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Radar.jpg\" style=\"height:252px; width:530px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Radar1.jpg\" style=\"height:492px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Radar2.jpg\" style=\"height:341px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Radar3.jpg\" style=\"height:322px; width:800px\" /></p>\n","0"),
("6133","Random","<p>The&nbsp;<em>Random Sensor</em>&nbsp;generates random pulses</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Random.jpg\" style=\"height:171px; width:525px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Random1.jpg\" style=\"height:462px; width:800px\" /></p>\n","0"),
("6134","Ray","<p>The&nbsp;<em>Ray Sensor</em>&nbsp;shoots a ray in the direction of an axis and sends a positive pulse once it hits something. It can be filtered to only detect objects with a given material or property</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Ray.jpg\" style=\"height:225px; width:517px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Ray1.jpg\" style=\"height:431px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Ray2.jpg\" style=\"height:346px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Sensors/Ray3.jpg\" style=\"height:366px; width:800px\" /></p>\n","0"),
("6135","Controllers","<table border=\"1\">\n	<thead>\n		<tr>\n			<th>Positive sensors</th>\n			<th>Controllers</th>\n			<th>&nbsp;</th>\n			<th>&nbsp;</th>\n			<th>&nbsp;</th>\n			<th>&nbsp;</th>\n			<th>&nbsp;</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td>&nbsp;</td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/and.html\">AND</a></td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/or.html\">OR</a></td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/xor.html\">XOR</a></td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/nand.html\">NAND</a></td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/nor.html\">NOR</a></td>\n			<td><a href=\"https://docs.blender.org/manual/en/dev/game_engine/logic/controllers/types/xnor.html\">XNOR</a></td>\n		</tr>\n		<tr>\n			<td>None</td>\n			<td>False</td>\n			<td>False</td>\n			<td>False</td>\n			<td>True</td>\n			<td>True</td>\n			<td>True</td>\n		</tr>\n		<tr>\n			<td>One</td>\n			<td>False</td>\n			<td>True</td>\n			<td>True</td>\n			<td>True</td>\n			<td>False</td>\n			<td>False</td>\n		</tr>\n		<tr>\n			<td>Multiple, not all</td>\n			<td>False</td>\n			<td>True</td>\n			<td>False</td>\n			<td>True</td>\n			<td>False</td>\n			<td>True</td>\n		</tr>\n		<tr>\n			<td>All</td>\n			<td>True</td>\n			<td>True</td>\n			<td>False</td>\n			<td>False</td>\n			<td>False</td>\n			<td>\n			<p>True</p>\n			</td>\n		</tr>\n	</tbody>\n</table>\n\n<p>This controller evaluates a user written expression, and gives a positive (TRUE) output when The result of the expression is TRUE, and The object is in the designated State. For all other conditions the controller gives a negative (FALSE) output</p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Controllers/Expression.jpg\" style=\"height:90px; width:323px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Controllers/Python.jpg\" style=\"height:130px; width:336px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Controllers/Expression1.jpg\" style=\"height:301px; width:800px\" /></p>\n","","0"),
("6136","augmented reality","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/Dancing_Skeleton.jpg\" style=\"height:449px; width:800px\" /></p>\n","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/ar.jpg\" style=\"height:518px; width:796px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/ar2.jpg\" style=\"height:338px; width:800px\" /></p>\n\n<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/ar3.jpg\" style=\"height:438px; width:800px\" /></p>\n","0"),
("6137","object","","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/object.jpg\" style=\"height:300px; width:800px\" /></p>\n","0"),
("6138","state","","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/state.jpg\" style=\"height:450px; width:800px\" /></p>\n","0"),
("6139","removing node conetcions","","<p><img alt=\"\" src=\"http://python-nauka.cba.pl/ckeditor/plugins/Filemanager-master/userfiles/szymonotreba@interia.pl/Programing/Python/Blender_Game/Basic_game/removing_node_connections.jpg\" /></p>\n","0");




CREATE TABLE `function_atachment` (
  `function_id` int(11) NOT NULL,
  `atachment_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO function_atachment VALUES
("304","3"),
("310","2"),
("311","4"),
("309","1"),
("312","5"),
("313","6"),
("315","7"),
("316","8"),
("317","9"),
("318","10"),
("319","11"),
("320","12"),
("321","13"),
("322","14"),
("323","15"),
("324","16"),
("325","17"),
("326","18"),
("537","157"),
("537","20"),
("327","21"),
("328","22"),
("329","23"),
("330","24"),
("331","25"),
("332","26"),
("333","27"),
("334","28"),
("335","29"),
("336","30"),
("337","31"),
("338","32"),
("339","33"),
("340","34"),
("341","35"),
("342","36"),
("344","37"),
("345","38"),
("346","39"),
("347","40"),
("348","41"),
("349","42"),
("351","43"),
("352","44"),
("353","45"),
("354","46"),
("355","47"),
("356","48"),
("357","49"),
("358","50"),
("359","51"),
("360","52"),
("361","53"),
("362","54"),
("363","55"),
("364","56"),
("365","57"),
("366","58"),
("367","59"),
("368","60"),
("374","61"),
("375","62"),
("376","63"),
("377","64"),
("384","65"),
("386","66"),
("387","67"),
("388","68"),
("388","69"),
("389","70"),
("390","71"),
("391","72"),
("392","73"),
("393","74"),
("394","75"),
("395","76"),
("396","77"),
("397","78"),
("398","79"),
("399","80"),
("400","81"),
("401","82"),
("402","83"),
("403","84"),
("404","85"),
("405","86"),
("406","87"),
("407","88"),
("408","89"),
("409","90"),
("410","91"),
("411","92"),
("412","93"),
("413","94"),
("414","95"),
("415","96"),
("416","97"),
("417","98"),
("418","99"),
("419","100");
INSERT INTO function_atachment VALUES
("420","101"),
("421","102"),
("422","103"),
("423","104"),
("538","105"),
("557","106"),
("539","107"),
("541","108"),
("542","109"),
("543","110"),
("544","111"),
("545","112"),
("546","113"),
("547","114"),
("548","115"),
("549","116"),
("550","117"),
("551","118"),
("552","119"),
("553","120"),
("554","121"),
("555","122"),
("556","123"),
("561","124"),
("562","125"),
("563","126"),
("564","127"),
("565","128"),
("566","129"),
("567","130"),
("597","131"),
("568","132"),
("569","133"),
("570","134"),
("571","135"),
("572","136"),
("573","137"),
("576","138"),
("577","139"),
("578","140"),
("579","141"),
("581","142"),
("582","143"),
("583","144"),
("584","145"),
("585","146"),
("586","147"),
("600","148"),
("598","149"),
("859","150"),
("860","151"),
("861","152"),
("862","153"),
("863","154"),
("864","155"),
("865","156"),
("867","158"),
("866","159"),
("868","160"),
("869","161"),
("870","162"),
("872","163"),
("873","164"),
("887","165"),
("894","166"),
("895","167"),
("896","168"),
("901","169"),
("901","170"),
("901","171"),
("901","172"),
("901","173"),
("904","174"),
("810","175"),
("1110","176"),
("1111","177"),
("1112","178"),
("1112","179"),
("1113","180"),
("1114","181"),
("1115","182"),
("1116","183"),
("1225","184"),
("1636","185"),
("1639","186"),
("1784","187"),
("3172","188"),
("1491","189"),
("1491","190"),
("6047","191"),
("6054","192"),
("6049","193"),
("6100","194");




CREATE TABLE `group1` (
  `group_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;


INSERT INTO group1 VALUES
("1","Programming"),
("10","Informatics College of Futher Education"),
("8","Graphic"),
("37","Western Governors University"),
("30","Other"),
("25","Khan Academy");




CREATE TABLE `module` (
  `id_module` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`id_module`)
) ENGINE=MyISAM AUTO_INCREMENT=1802 DEFAULT CHARSET=latin1;


INSERT INTO module VALUES
("1","__future__","Future statement definitions"),
("2","__main__","The environment where the top-level script is run."),
("3","_dummy_thread","Drop-in replacement for the _thread module."),
("4","_thread","Low-level threading API."),
("5","abc","Abstract base classes according to PEP 3119."),
("6","aifc","Read and write audio files in AIFF or AIFC format"),
("7","argparse","Command-line option and argument parsing library."),
("8","array","Space efficient arrays of uniformly typed numeric values."),
("9","ast","Abstract Syntax Tree classes and manipulation."),
("10","asynchat","Support for asynchronous command/response protocols."),
("11","asyncio","Asynchronous I/O, event loop, coroutines and tasks."),
("12","asyncore","A base class for developing asynchronous socket handling services."),
("13","atexit","Register and execute cleanup functions."),
("14","audioop","Manipulate raw audio data."),
("15","base64","RFC 3548: Base16, Base32, Base64 Data Encodings; Base85 and Ascii85"),
("16","bdb","Debugger framework."),
("17","binascii","Tools for converting between binary and various ASCII-encoded binary representations."),
("18","binhex","Encode and decode files in binhex4 format."),
("19","bisect","Array bisection algorithms for binary searching."),
("20","builtins","The module that provides the built-in namespace."),
("21","bz2","Interfaces for bzip2 compression and decompression."),
("22","calendar","Functions for working with calendars, including some emulation of the Unix cal program."),
("23","cgi","Helpers for running Python scripts via the Common Gateway Interface."),
("24","cgitb","Configurable traceback handler for CGI scripts."),
("25","chunk","Module to read IFF chunks."),
("26","cmath","Mathematical functions for complex numbers."),
("27","cmd","Build line-oriented command interpreters."),
("28","code","Facilities to implement read-eval-print loops."),
("29","codecs","Encode and decode data and streams."),
("30","codeop","Compile (possibly incomplete) Python code."),
("31","collections","Container datatypes"),
("32","colorsys","Conversion functions between RGB and other color systems."),
("33","compileall","Tools for byte-compiling all Python source files in a directory tree."),
("34","concurrent"," "),
("35","configparser","Configuration file parser."),
("36","contextlib","Utilities for with-statement contexts."),
("37","copy","Shallow and deep copy operations."),
("38","copyreg","Register pickle support functions."),
("39","cProfile"," "),
("40","crypt (Unix)","The crypt() function used to check Unix passwords."),
("41","csv","Write and read tabular data to and from delimited files."),
("42","ctypes","A foreign function library for Python."),
("43","curses (Unix)","An interface to the curses library, providing portable terminal handling."),
("44","datetime","Basic date and time types."),
("45","dbm","Interfaces to various Unix \"database\" formats."),
("46","decimal","Implementation of the General Decimal Arithmetic Specification."),
("47","difflib","Helpers for computing differences between objects."),
("48","dis","Disassembler for Python bytecode"),
("49","distutils","Support for building and installing Python modules into an existing Python installation."),
("50","doctest","Test pieces of code within docstrings."),
("51","dummy_threading","Drop-in replacement for the threading module."),
("52","email","Package supporting the parsing, manipulating, and generating email messages."),
("53","encodings"," "),
("54","ensurepip","Bootstrapping the \"pip\" installer into an existing Python installation or virtual environment"),
("55","enum","Implementation of an enumeration class."),
("56","errno","Standard errno system symbols."),
("57","faulthandler","Dump the Python traceback"),
("58","fcntl (Unix)","The fcntl() and ioctl() system calls."),
("59","filecmp","Compare files efficiently."),
("60","fileinput","Loop over standard input or a list of files."),
("61","fnmatch","Unix shell style filename pattern matching."),
("62","formatter","Deprecated: Generic output formatter and device interface."),
("63","fpectl (Unix)","Provide control for floating point exception handling."),
("64","fractions","Rational numbers."),
("65","ftplib","FTP protocol client (requires sockets)."),
("66","functools","Higher-order functions and operations on callable objects."),
("67","gc","Interface to the cycle-detecting garbage collector."),
("68","getopt","Portable parser for command line options; support both short and long option names."),
("69","getpass","Portable reading of passwords and retrieval of the userid."),
("70","gettext","Multilingual internationalization services."),
("71","glob","Unix shell style pathname pattern expansion."),
("72","grp (Unix)","The group database (getgrnam() and friends)."),
("73","gzip","Interfaces for gzip compression and decompression using file objects."),
("74","hashlib","Secure hash and message digest algorithms."),
("75","heapq","Heap queue algorithm (a.k.a. priority queue)."),
("76","hmac","Keyed-Hashing for Message Authentication (HMAC) implementation"),
("77","html","Helpers for manipulating HTML"),
("78","http","HTTP status codes and messages"),
("79","imaplib","IMAP4 protocol client (requires sockets)."),
("80","imghdr","Determine the type of image contained in a file or byte stream."),
("81","imp","Deprecated: Access the implementation of the import statement."),
("82","importlib","The implementation of the import machinery."),
("83","inspect","Extract information and source code from live objects."),
("84","io","Core tools for working with streams."),
("85","ipaddress","IPv4/IPv6 manipulation library."),
("86","itertools","Functions creating iterators for efficient looping."),
("87","json","Encode and decode the JSON format."),
("88","keyword","Test whether a string is a keyword in Python."),
("89","lib2to3","the 2to3 library"),
("90","linecache","This module provides random access to individual lines from text files."),
("91","locale","Internationalization services."),
("92","logging","Flexible event logging system for applications."),
("93","lzma","A Python wrapper for the liblzma compression library."),
("94","macpath","Mac OS 9 path manipulation functions."),
("95","mailbox","Manipulate mailboxes in various formats"),
("96","mailcap","Mailcap file handling."),
("97","marshal","Convert Python objects to streams of bytes and back (with different constraints)."),
("98","math","Mathematical functions (sin() etc.)."),
("99","mimetypes","Mapping of filename extensions to MIME types."),
("100","mmap","Interface to memory-mapped files for Unix and Windows.");
INSERT INTO module VALUES
("101","modulefinder","Find modules used by a script."),
("102","msilib (Windows)","Creation of Microsoft Installer files, and CAB files."),
("103","msvcrt (Windows)","Miscellaneous useful routines from the MS VC++ runtime."),
("104","multiprocessing","Process-based parallelism"),
("105","netrc","Loading of .netrc files."),
("107","nntplib","NNTP protocol client (requires sockets)."),
("108","numbers","Numeric abstract base classes (Complex, Real, Integral, etc.)."),
("109","operator","Functions corresponding to the standard operators"),
("110","optparse","Deprecated: Command-line option parsing library."),
("111","os","Miscellaneous operating system interfaces"),
("112","ossaudiodev (Linux, FreeBSD)","Access to OSS-compatible audio devices"),
("113","parser","Access parse trees for Python source code."),
("114","pathlib","Object-oriented filesystem paths"),
("115","pdb","The Python debugger for interactive interpreters"),
("116","pickle","Convert Python objects to streams of bytes and back."),
("117","pickletools","Contains extensive comments about the pickle protocols and pickle-machine opcodes, as well as some useful functions."),
("118","pipes (Unix)","A Python interface to Unix shell pipelines."),
("119","pkgutil","Utilities for the import system."),
("120","platform","Retrieves as much platform identifying data as possible."),
("121","plistlib","Generate and parse Mac OS X plist files."),
("122","poplib","POP3 protocol client (requires sockets)."),
("123","posix (Unix)","The most common POSIX system calls (normally used via module os)."),
("124","pprint","Data pretty printer."),
("125","profile","Python source profiler."),
("126","pstats","Statistics object for use with the profiler."),
("127","pty (Linux)","Pseudo-Terminal Handling for Linux."),
("128","pwd (Unix)","The password database (getpwnam() and friends)."),
("129","py_compile","Generate byte-code files from Python source files."),
("130","pyclbr","Supports information extraction for a Python class browser."),
("131","pydoc","Documentation generator and online help system."),
("132","queue","A synchronized queue class."),
("133","quopri","Encode and decode files using the MIME quoted-printable encoding."),
("134","random","Generate pseudo-random numbers with various common distributions."),
("135","re","Regular expression operations."),
("136","readline (Unix)","GNU readline support for Python."),
("137","reprlib","Alternate repr() implementation with size limits"),
("138","resource (Unix)","An interface to provide resource usage information on the current process."),
("139","rlcompleter","	Python identifier completion, suitable for the GNU readline library."),
("140","runpy","Locate and run Python modules without importing them first."),
("141","sched","General purpose event scheduler."),
("142","secrets","Generate secure random numbers for managing secrets."),
("143","select","Wait for I/O completion on multiple streams."),
("144","selectors","High-level I/O multiplexing."),
("145","shelve","Python object persistence."),
("146","shlex","Simple lexical analysis for Unix shell-like languages."),
("147","shutil","High-level file operations, including copying."),
("148","signal","Set handlers for asynchronous events."),
("149","site","Module responsible for site-specific configuration."),
("150","smtpd","A SMTP server implementation in Python."),
("151","smtplib","SMTP protocol client (requires sockets)."),
("152","sndhdr","Determine type of a sound file."),
("153","socket","Low-level networking interface."),
("154","socketserver","A framework for network servers."),
("155","spwd (Unix)","The shadow password database (getspnam() and friends)."),
("156","sqlite3","A DB-API 2.0 implementation using SQLite 3.x."),
("157","ssl","TLS/SSL wrapper for socket objects"),
("158","stat","Utilities for interpreting the results of os.stat(), os.lstat() and os.fstat()."),
("159","statistics","mathematical statistics functions"),
("160","string","Common string operations"),
("161","stringprep","String preparation, as per RFC 3453"),
("162","struct","Interpret bytes as packed binary data."),
("163","subprocess","Subprocess management."),
("164","sunau","Provide an interface to the Sun AU sound format."),
("165","symbol","Constants representing internal nodes of the parse tree."),
("167","sys","Access system-specific parameters and functions."),
("169","syslog (Unix)","An interface to the Unix syslog library routines."),
("170","tabnanny","Tool for detecting white space related problems in Python source files in a directory tree."),
("171","tarfile","Read and write tar-format archive files."),
("172","telnetlib","Telnet client class."),
("173","tempfile","Generate temporary files and directories"),
("174","termios (Unix)","POSIX style tty control"),
("790","Python lectures"," "),
("789","PHP&MySQL"," "),
("176","textwrap","Text wrapping and filling"),
("177","threading","Thread-based parallelism."),
("179","timeit","Measure the execution time of small code snippets."),
("180","tkinter","Interface to Tcl/Tk for graphical user interfaces"),
("181","token","Constants representing terminal nodes of the parse tree."),
("182","tokenize","Lexical scanner for Python source code."),
("183","trace","Trace or track Python statement execution"),
("184","traceback","Print or retrieve a stack traceback"),
("185","tracemalloc","Trace memory allocations"),
("186","tty (Unix)","Utility functions that perform common terminal control operations"),
("187","turtle","An educational framework for simple graphics applications"),
("188","turtledemo","A viewer for example turtle scripts"),
("189","types","Names for built-in types."),
("190","typing","Support for type hints (see PEP 484)."),
("191","unicodedata","Access the Unicode Database"),
("192","unittest","Unit testing framework for Python."),
("193","urllib"," "),
("194","uu","Encode and decode files in uuencode format"),
("195","uuid","UUID objects (universally unique identifiers) according to RFC 4122"),
("196","venv","Creation of virtual environments"),
("197","warnings","Issue warning messages and control their disposition"),
("198","wave","Provide an interface to the WAV sound format."),
("199","weakref","Support for weak references and weak dictionaries."),
("200","webbrowser","Easy-to-use controller for Web browsers"),
("201","winreg (Windows)","Routines and objects for manipulating the Windows registry."),
("202","winsound (Windows)","Access to the sound-playing machinery for Windows"),
("203","wsgiref","WSGI Utilities and Reference Implementation");
INSERT INTO module VALUES
("204","xdrlib","Encoders and decoders for the External Data Representation (XDR)."),
("205","xml","Package containing XML processing modules"),
("206","xmlrpc"," "),
("207","zipapp","Manage executable python zip archives"),
("208","zipfile","Read and write ZIP-format archive files"),
("209","zipimport","support for importing Python modules from ZIP archives"),
("210","zlib","Low-level interface to compression and decompression routines compatible with gzip"),
("211","ActivityResultFacade","Allows you to return results to a startActivityForResult call"),
("212","AndroidFacade","Some general purpose Android routines"),
("213","ApplicationManagerFacade","Facade for managing Applications"),
("214","BatteryManagerFacade","Exposes Batterymanager API"),
("215","BluetoothFacade","Bluetooth functions"),
("216","CameraFacade","Access Camera functions"),
("217","CommonIntentsFacade","A selection of commonly used intents"),
("218","ContactsFacade","Provides access to contacts related functionality"),
("219","EventFacade","Manage the event queue"),
("220","EyesFreeFacade","Provides Text To Speech services for API 3 or less"),
("221","LocationFacade","This facade exposes the LocationManager related functionality"),
("222","MediaPlayerFacade","This facade exposes basic mediaPlayer functionality"),
("223","MediaRecorderFacade","A facade for recording media"),
("224","PhoneFacade","Exposes TelephonyManager functionality"),
("225","PreferencesFacade","This facade allows access to the Preferences interface"),
("226","SensorManagerFacade","Exposes the SensorManager related functionality"),
("227","SettingsFacade","Exposes phone settings functionality"),
("228","SignalStrengthFacade","Exposes SignalStrength functionality"),
("229","SmsFacade","Provides access to SMS related functionality"),
("230","SpeechRecognitionFacade","A facade containing RPC implementations related to the speech-to-text functionality of Android"),
("231","TextToSpeechFacade","Provides Text To Speech services for API 4 or more"),
("232","ToneGeneratorFacade","Generate DTMF tones"),
("233","UiFacade","User Interface Facade"),
("234","WakeLockFacade	","A facade exposing some of the functionality of the PowerManager, in particular wake locks"),
("235","WebCamFacade","Manages access to camera streaming"),
("236","WifiFacade","Wifi functions"),
("237","pygame.BufferProxy","An array protocol view of surface pixels"),
("238","pygame.cdrom","How to access and control the CD audio devices"),
("239","pygame.Color","Color representation."),
("240","pygame.cursors","Loading and compiling cursor images"),
("241","pygame.display","Configure the display surface"),
("242","pygame.draw","Drawing simple shapes like lines and ellipses to surfaces"),
("243","pygame.event","Manage the incoming events from various input devices and the windowing platform"),
("244","pygame.examples","Various programs demonstrating the use of individual pygame modules"),
("245","pygame.font","Loading and rendering TrueType fonts"),
("246","pygame.freetype","Enhanced Pygame module for loading and rendering font faces."),
("247","pygame.gfxdraw","Anti-aliasing draw functions"),
("248","pygame.image","Loading, saving, and transferring of surfaces"),
("249","pygame.joystick","Manage the joystick devices."),
("250","pygame.key","Manage the keyboard device"),
("251","pygame.locals","Pygame constants"),
("252","pygame.mixer","Load and play sounds"),
("253","pygame.mouse","Manage the mouse device and display"),
("254","pygame.mixer.music","Play streaming music tracks"),
("255","pygame.Overlay","Access advanced video overlays"),
("256","pygame","Top level functions to manage Pygame"),
("257","pygame.PixelArray","Manipulate image pixel data"),
("258","pygame.Rect","Flexible container for a rectangle"),
("259","pygame.scrap","Native clipboard access"),
("260","pygame.sndarray","Manipulate sound sample data"),
("261","pygame.sprite","Higher level objects to represent game images"),
("262","pygame.Surface","Objects for images and the screen"),
("263","pygame.surfarray","Manipulate image pixel data"),
("264","pygame.tests","Test Pygame"),
("265","pygame.time","Manage timing and framerate"),
("266","pygame.transform","Resize and move images"),
("267","Image","The Image module provides a class with the same name which is used to represent a PIL image. The module also provides a number of factory functions, including functions to load images from files, and to create new images."),
("268","ImageChops","ImageChops module contains a number of arithmetical image operations, called channel operations (â€œchopsâ€). These can be used for various purposes, including special effects, image compositions, algorithmic painting, and more"),
("269","ImageColor","ImageColor module contains colour tables and converters from CSS3-style colour specifiers to RGB tuples. This module is used by Image.new and the ImageDraw module, among others"),
("270","ImageDraw","ImageDraw module provide simple 2D graphics for Image objects. You can use this module to create new images, annotate or retouch existing images, and to generate graphics on the fly for web use"),
("271","ImageEnhance","ImageEnhance module contains a number of classes that can be used for image enhancement"),
("272","ImageFile","ImageFile module provides support functions for the image open and save functions"),
("273","ImageFileIO","ImageFileIO module can be used to read an image from a socket, or any other stream device."),
("274","ImageFilter","ImageFilter module contains definitions for a pre-defined set of filters, which can be be used with the filter method of the Image class"),
("275","ImageFont","ImageFont module defines a class with the same name. Instances of this class store bitmap fonts, and are used with the text method of the ImageDraw class"),
("276","ImageGrab","ImageGrab module can be used to copy the contents of the screen or the clipboard to a PIL image memory"),
("277","ImageMath","ImageMath module can be used to evaluate â€œimage expressionsâ€. The module provides a single eval function, which takes an expression string and one or more images"),
("278","ImageOps","ImageOps module contains a number of â€˜ready-madeâ€™ image processing operations. This module is somewhat experimental, and most operators only work on L and RGB images"),
("279","ImagePalette","For now, the safest way to attach a palette to an image is to use the putpalette method with the palette data in a string"),
("280","ImagePath","ImagePath module is used to store and manipulate 2-dimensional vector data. Path objects can be passed to the methods in the ImageDraw module"),
("281","ImageSequence","ImageSequence module contains a wrapper class that lets you iterate over the frames of an image sequence"),
("282","ImageStat","ImageStat module calculates global statistics for an image, or for a region of an image"),
("283","ImageTk","ImageTk module contains support to create and modify Tkinter BitmapImage and PhotoImage objects from PIL images"),
("284","ImageWin","ImageWin module contains support to create and display images on Windows"),
("285","PSDraw","PSDraw module provides simple print support for Postscript printers. You can print text, graphics and images through this module"),
("286","GL","The OpenGL specification describes an abstract API for drawing 2D and 3D graphics"),
("287","GLU","The OpenGL Utility Library (GLU) is a computer graphics library for OpenGL."),
("288","GLUT","OpenGL Utility Toolkit (GLUT) is a library of utilities for OpenGL programs, which primarily perform system-level I/O with the host operating system"),
("289","GLE","The GLE Tubing and Extrusion Library is a graphics application programming interface (API). The library consists of a number of \"C\" language subroutines for drawing tubing and extrusions"),
("290","GLX","GLX (initialism for \"OpenGL Extension to the X Window System\") is an extension to the X Window System core protocol providing an interface between OpenGL and the X Window System as well as extensions to OpenGL itself"),
("291","django.apps"," "),
("292","django.conf.urls"," "),
("293","django.conf.urls.i18n"," "),
("298","django.contrib.auth.forms"," "),
("299","django.contrib.auth.hashers"," "),
("300","django.contrib.auth.middleware ","Authentication middleware."),
("301","django.contrib.auth.password_validation"," "),
("302","django.contrib.auth.signals"," "),
("303","django.contrib.auth.views"," "),
("304","django.contrib.contenttypes ","Provides generic interface to installed models"),
("305","django.contrib.contenttypes.admin"," "),
("306","django.contrib.contenttypes.fields"," "),
("307","django.contrib.contenttypes.forms"," ");
INSERT INTO module VALUES
("308","django.contrib.flatpages ","A framework for managing simple ?flat? HTML content in a database"),
("309","django.contrib.gis ","Geographic Information System (GIS) extensions for Django"),
("312","django.contrib.gis.db.models","GeoDjango model and field API."),
("313","django.contrib.gis.db.models.functions","Geographic Database Functions"),
("315","django.contrib.gis.forms","GeoDjango forms API."),
("321","django.contrib.gis.serializers.geojson","Serialization of GeoDjango models in the GeoJSON format."),
("323","django.contrib.gis.utils.layermapping","Spatial data import utility for GeoDjango models."),
("324","django.contrib.gis.utils.ogrinspect ","Utilities for inspecting OGR data sources."),
("325","django.contrib.gis.widgets ","GeoDjango widgets API."),
("326","django.contrib.humanize","A set of Django template filters useful for adding a \"human touch\" to data."),
("327","django.contrib.messages","Provides cookie- and session-based temporary message storage."),
("328","django.contrib.messages.middleware ","Message middleware."),
("329","django.contrib.postgres","PostgreSQL-specific fields and features"),
("330","django.contrib.postgres.aggregates","PostgreSQL specific aggregation functions"),
("331","django.contrib.postgres.indexes"," "),
("332","django.contrib.postgres.validators"," "),
("333","django.contrib.redirects","A framework for managing redirects."),
("334","django.contrib.sessions","Provides session management for Django projects."),
("335","django.contrib.sessions.middleware ","Session middleware."),
("336","django.contrib.sitemaps","A framework for generating Google sitemap XML files"),
("337","django.contrib.sites","Lets you operate multiple websites from the same database and Django project"),
("338","django.contrib.sites.middleware ","Site middleware"),
("339","django.contrib.staticfiles","An app for handling static files"),
("340","django.contrib.syndication","A framework for generating syndication feeds, in RSS and Atom, quite easily"),
("341","django.core.checks"," "),
("342","django.core.exceptions","Django core exceptions"),
("343","django.core.files ","File handling and storage"),
("344","django.core.files.storage"," "),
("345","django.core.files.uploadedfile","Classes representing uploaded files."),
("347","django.core.mail","Helpers to easily send email."),
("348","django.core.management"," "),
("349","django.core.paginator","Classes to help you easily manage paginated data"),
("350","django.core.signals ","Core signals sent by the request/response system"),
("352","django.core.validators","Validation utilities and base classes"),
("353","django.db"," "),
("354","django.db.backends","Core signals sent by the database wrapper."),
("355","django.db.backends.base.schema"," "),
("356","django.db.migrations ","Schema migration support for Django models"),
("357","django.db.migrations.operations"," "),
("358","django.db.models"," "),
("359","django.db.models.fields","Built-in field types."),
("360","django.db.models.fields.related ","Related field types"),
("361","django.db.models.functions","Database Functions"),
("362","django.db.models.functions.datetime"," "),
("363","django.db.models.indexes"," "),
("364","django.db.models.lookups","Lookups API"),
("365","django.db.models.options","Model meta-class layer"),
("366","django.db.models.signals","Signals sent by the model system."),
("367","django.db.transaction"," "),
("368","django.dispatch","Signal dispatch"),
("369","django.forms"," "),
("371","django.forms.formsets ","An abstraction for working with multiple forms on the same page."),
("372","django.forms.models ","ModelForm and ModelFormset."),
("373","django.forms.renderers ","Built-in form renderers."),
("375","django.http ","Classes dealing with HTTP requests and responses."),
("377","django.middleware.cache ","Middleware for the site-wide cache."),
("378","django.middleware.clickjacking ","Clickjacking protection"),
("379","django.middleware.common","Middleware adding \"common\" conveniences for perfectionists"),
("380","django.middleware.csrf ","Middleware adding protection against Cross Site Request Forgeries"),
("381","django.middleware.exception ","Middleware to return responses for exceptions"),
("382","django.middleware.gzip ","Middleware to serve GZipped content for performance."),
("383","django.middleware.http ","Middleware handling advanced HTTP features."),
("384","django.middleware.locale ","Middleware to enable language selection based on the request"),
("385","django.middleware.security ","Security middleware"),
("388","django.template.backends"," "),
("389","django.template.backends.django"," "),
("390","django.template.backends.jinja2"," "),
("391","django.template.loader"," "),
("392","django.template.response ","Classes dealing with lazy-rendered HTTP responses."),
("393","django.test ","Testing tools for Django applications."),
("394","django.test.signals","Signals sent during testing."),
("395","django.test.utils ","Helpers to write custom test runners."),
("396","django.urls"," "),
("398","django.utils.cache","Helper functions for controlling caching."),
("399","django.utils.dateparse","Functions to parse datetime objects."),
("400","django.utils.decorators ","Functions that help with creating decorators for views"),
("401","django.utils.encoding ","A series of helper functions to manage character encoding."),
("402","django.utils.feedgenerator ","Syndication feed generation library -- used for generating RSS, etc."),
("403","django.utils.functional ","Functional programming tools."),
("404","django.utils.html ","HTML helper functions"),
("405","django.utils.http ","HTTP helper functions. (URL encoding, cookie handling, ...)"),
("406","django.utils.log ","Logging tools for Django applications"),
("407","django.utils.module_loading ","Functions for working with Python modules."),
("408","django.utils.safestring ","Functions and classes for working with strings that can be displayed safely without further escaping in HTML"),
("409","django.utils.six"," "),
("410","django.utils.text","Text manipulation."),
("411","django.utils.timezone","Timezone support."),
("412","django.utils.translation"," "),
("414","django.views.decorators.cache"," "),
("415","django.views.decorators.csrf"," "),
("416","django.views.decorators.gzip"," "),
("417","django.views.decorators.http"," "),
("418","django.views.decorators.vary"," "),
("419","django.views.generic.dates"," "),
("420","django.views.i18n"," "),
("421","pyopencl.algorithm"," "),
("422","pyopencl.array"," "),
("423"," pyopencl.bitonic_sort"," "),
("424","pyopencl.characterize"," "),
("425","pyopencl.clmath"," ");
INSERT INTO module VALUES
("426","pyopencl.clrandom"," "),
("427","pyopencl.elementwise"," "),
("428","pyopencl.reduction"," "),
("429","pyopencl.scan"," "),
("430","pyopencl.tools"," "),
("431"," pyopencl.types"," "),
("1493","nltk.corpus.reader.ycoe"," "),
("1494","nltk.corpus.util"," "),
("1495","nltk.data"," "),
("1496","nltk.downloader"," "),
("1497","nltk.draw"," "),
("1498","nltk.draw.cfg"," "),
("1499","nltk.draw.dispersion"," "),
("1500","nltk.draw.table"," "),
("1479","nltk.corpus.reader.sentiwordnet"," "),
("1480","nltk.corpus.reader.sinica_treebank"," "),
("1481","nltk.corpus.reader.string_category"," "),
("1482","nltk.corpus.reader.switchboard"," "),
("1483","nltk.corpus.reader.tagged"," "),
("1484","nltk.corpus.reader.timit"," "),
("1485","nltk.corpus.reader.toolbox"," "),
("1486","nltk.corpus.reader.twitter"," "),
("1487","nltk.corpus.reader.udhr"," "),
("1488","nltk.corpus.reader.util"," "),
("1489","nltk.corpus.reader.verbnet"," "),
("1476","nltk.corpus.reader.rte"," "),
("1477","nltk.corpus.reader.semcor"," "),
("450","matplotlib"," "),
("451","afm"," "),
("452","animation"," "),
("453","artist"," "),
("454","Axes"," "),
("455","axis and tick"," "),
("456","backends"," "),
("457","cbook"," "),
("458","cm (colormap)"," "),
("459","colorbar"," "),
("460","colors"," "),
("461","dates"," "),
("462","dviread"," "),
("463","figure"," "),
("464","finance"," "),
("465","font_manager"," "),
("466","gridspec"," "),
("467","legend and legend_handler"," "),
("468","lines"," "),
("469","markers"," "),
("470","mathtext"," "),
("471","mlab"," "),
("472","offsetbox"," "),
("473","patches"," "),
("474","path"," "),
("475","patheffects"," "),
("476","projections"," "),
("477","pyplot"," "),
("478","rcsetup"," "),
("479","sankey"," "),
("480","scale"," "),
("481","spines"," "),
("482","style"," "),
("483","text"," "),
("484","ticker"," "),
("485","tight_layout"," "),
("486","Working with transformations"," "),
("487","triangular grids"," "),
("488","type1font"," "),
("489","units"," "),
("490","widgets"," "),
("491","numpy.ndarray","The N-dimensional array"),
("492","numpy.dtype","Data type objects"),
("493","numpy.ufunc","Universal functions"),
("494","numpy.ctypeslib","C-Types Foreign Function Interface"),
("495","numpy.dual","Optionally Scipy-accelerated routines"),
("496","numpy.emath","Mathematical functions with automatic domain"),
("497","numpy.fft","Discrete Fourier Transform"),
("498","numpy.linalg","Linear algebra"),
("499","numpy.matlib","Matrix library"),
("500","numpy.random","Random sampling"),
("501","numpy.testing","Test Support"),
("502","numpy.distutils","Packaging"),
("503","numpy"," "),
("504","Pickling"," "),
("505","Flat File"," "),
("506","Clipboard"," "),
("788","Python"," "),
("508","HDFStore: PyTables (HDF5)"," "),
("509","SAS"," "),
("510","SQL"," "),
("511","Google BigQuery"," "),
("512","STATA"," "),
("513","Data manipulations"," "),
("514","Top-level missing data"," "),
("515","Top-level conversions"," "),
("516","Top-level dealing with datetimelike"," "),
("517","Top-level evaluation"," "),
("518","Testing"," "),
("519","Constructor"," "),
("520","Attributes"," "),
("521","Conversion"," "),
("522","Indexing, iteration"," ");
INSERT INTO module VALUES
("523","Binary operator functions"," "),
("524","Function application, GroupBy & Window"," "),
("525","Computations / Descriptive Stats"," "),
("526","Reindexing / Selection / Label manipulation"," "),
("527","Missing data handling"," "),
("528","Reshaping, sorting"," "),
("529","Combining / joining / merging"," "),
("530","Time series-related"," "),
("531","Datetimelike Properties"," "),
("532","String handling"," "),
("533","Categorical"," "),
("534","Plotting"," "),
("535","Serialization / IO / Conversion"," "),
("536","Sparse methods"," "),
("537","Constructor"," "),
("538","Attributes and underlying data"," "),
("539","Conversion"," "),
("540","Indexing, iteration"," "),
("541","Binary operator functions"," "),
("542","Function application, GroupBy & Window"," "),
("543","Computations / Descriptive Stats"," "),
("544","Reindexing / Selection / Label manipulation"," "),
("545","Missing data handling"," "),
("546","Reshaping, sorting, transposing"," "),
("547","Combining / joining / merging"," "),
("548","Time series-related"," "),
("549","Plotting"," "),
("550","Serialization / IO / Conversion"," "),
("551","Constructor"," "),
("552","Attributes and underlying data"," "),
("553","Conversion"," "),
("554","Getting and setting"," "),
("555","Indexing, iteration, slicing"," "),
("556","Binary operator functions"," "),
("557","Function application, GroupBy"," "),
("558","Computations / Descriptive Stats"," "),
("559","Reindexing / Selection / Label manipulation"," "),
("560","Missing data handling"," "),
("561","Reshaping, sorting, transposing"," "),
("562","Combining / joining / merging"," "),
("563","Time series-related"," "),
("564","Serialization / IO / Conversion"," "),
("565","Constructor"," "),
("566","Serialization / IO / Conversion"," "),
("567","Attributes and underlying data"," "),
("568","Conversion"," "),
("569","Attributes"," "),
("570","Modifying and Computations"," "),
("571","Conversion"," "),
("572","Sorting"," "),
("573","Time-specific operations"," "),
("574","Combining / joining / set operations"," "),
("575","Selecting"," "),
("576","Categorical Components"," "),
("590","Conversion"," "),
("589","Time-specific operations"," "),
("588","Selecting"," "),
("587","Time/Date Components"," "),
("586","DatetimeIndex"," "),
("585","MultiIndex Components"," "),
("584","MultiIndex"," "),
("591","TimedeltaIndex"," "),
("592","Components"," "),
("593","Conversion"," "),
("594","Standard moving window functions"," "),
("595","Standard expanding window functions"," "),
("596","Exponentially-weighted moving window functions"," "),
("597","Indexing, iteration"," "),
("598","Function application"," "),
("599","Computations / Descriptive Stats"," "),
("600","Indexing, iteration"," "),
("601","Function application"," "),
("602","Upsampling"," "),
("603","Computations / Descriptive Stats"," "),
("604","Constructor"," "),
("605","Style Application"," "),
("606","Builtin Styles"," "),
("607","Style Export and Import"," "),
("608","Working with options"," "),
("609","core","Core functionality"),
("610","imgproc","Image processing"),
("611","imgcodecs","Image file reading and writing"),
("612","videoio","Media I/O"),
("613","highgui","High-level GUI"),
("614","video","Video Analysis"),
("615","calib3d","Camera Calibration and 3D Reconstruction"),
("616","features2d","2D Features Framework"),
("617","objdetect","Object Detection"),
("618","ml","Machine Learning"),
("619","flann","Clustering and Search in Multi-Dimensional Spaces"),
("620","photo"," Computational Photography"),
("621","stitching","Images stitching"),
("622","shape","Shape Distance and Matching"),
("623","superres","Super Resolution"),
("624","videostab","Video Stabilization"),
("625","viz","3D Visualizer"),
("626","aruco","ArUco Marker Detection"),
("627","bgsegm","Improved Background-Foreground Segmentation Methods"),
("628","bioinspired","Biologically inspired vision models and derivated tools"),
("629","ccalib","Custom Calibration Pattern for 3D reconstruction");
INSERT INTO module VALUES
("630","datasets","Framework for working with different datasets"),
("631","dnn","Deep Neural Network module"),
("632","dpm","Deformable Part-based Models"),
("633","face","Face Recognition"),
("634","fuzzy","Image processing based on fuzzy mathematics"),
("635","hdf","Hierarchical Data Format I/O routines"),
("636","line_descriptor","Binary descriptors for lines extracted from an image"),
("637","optflow","Optical Flow Algorithms"),
("638","plot","Plot function for Mat data"),
("639","reg","Image Registration"),
("640","rgbd","RGB-Depth Processing"),
("641","saliency","Saliency API"),
("642","sfm","Structure From Motion"),
("643","stereo","Stereo Correspondance Algorithms"),
("644","structured_light","Structured Light API"),
("645","surface_matching","Surface Matching"),
("646","text","Scene Text Detection and Recognition"),
("647","tracking","Tracking API"),
("648","xfeatures2d","Extra 2D Features Framework"),
("649","ximgproc","Extended Image Processing"),
("650","xobjdetect","Extended object detection"),
("651","xphoto","Additional photo processing algorithms"),
("652","GPIO"," "),
("653","picamera"," "),
("654","serial"," "),
("655","raspirobotboard"," "),
("657","Autoit*","Python binding for AutoItX3.dll"),
("658","selenium.common.exceptions"," "),
("659","selenium.webdriver.chrome.webdriver"," "),
("660","selenium.webdriver.common.action_chains"," "),
("661","selenium.webdriver.common.alert"," "),
("662","selenium.webdriver.common.by"," "),
("663","selenium.webdriver.common.desired_capabilities	"," "),
("664","selenium.webdriver.common.keys"," "),
("665","selenium.webdriver.common.utils"," "),
("666","driver"," "),
("667","selenium.webdriver.remote.webdriver"," "),
("668","selenium.webdriver.remote.webelement"," "),
("669","selenium.webdriver.support.color"," "),
("670","selenium.webdriver.support.expected_conditions"," "),
("671","selenium.webdriver.support.select"," "),
("672","selenium.webdriver.support.wait"," "),
("1617","nltk.test.semantics_fixt"," "),
("1615","nltk.test.runtests"," "),
("675","Basics"," "),
("676","Built-in Functions"," "),
("677",".float()"," "),
("678",".int()"," "),
("679",".str()"," "),
("680",".bytes()"," "),
("681",".byttearray()"," "),
("702","Word problems with \"more\" and \"fewer\"","Learn how to solve word problems that use the words \"more\" and \"fewer\". Numbers used are 20 or less."),
("712","Word problems with \"more\" and \"fewer\" (within 100)","Learn how to solve word problems that use the words \"more\" and \"fewer\". Numbers used are 100 or less."),
("741","Forklift truck driver","09.04.2015 - 23.04.2015"),
("742","Overhead cranes, hoist and hoisting winches and workshop fixed cranes","22.04.2015 - 7.05.2015"),
("743","Rolling access platform: slow-running","21.05.2015 â€“ 2.06.2015"),
("744","Forklift truck technician","12.10.2016"),
("745","Polish Association of Electrical Engineers (SEP) Electrician Certificate (voltage up to 1kV) "," "),
("746","CNC operator and programmer of numerically controlled machine tools","29.04.2016 â€“ 01.05.2016"),
("747","Excel","07.03.2015"),
("748","Adwance Excel","21.10.2015 â€“ 23.10.2015"),
("749"," Memory techniques part 1"," "),
("750","Memory techniques part 2"," "),
("751","Memory techniques part 3"," "),
("752"," Fast reading part 1"," "),
("753"," Fast reading part 2"," "),
("754","Survival techniques","24.05.2015 - 25.05.2015"),
("1796","osgeo","Open Source Geospatial Foundation"),
("1797","TFLearn","Deep learning library featuring a higher-level API for TensorFlow"),
("1798","Actulators","Actuators perform actions, such as move, create objects, play a sound"),
("1799","Sensors","Sensors give an output when something happens"),
("1800","Controllers ","Bricks that collect data sent by the sensors"),
("1795","basemap","Tool for creating maps using python in a simple way"),
("1794","pdfkit","Wkhtmltopdf python wrapper to convert html to pdf using the webkit rendering engine and qt"),
("1793","psutil","Library for retrieving information onrunning processes and system utilization (CPU, memory, disks, network)"),
("1792","py2exe","cx_Freeze is a set of scripts and modules for freezing Python scripts into executables"),
("1789","Python-For-Android","Export a Python script to an Android executable (.apk)"),
("1790","pyusb","Controlling USB devices with Python"),
("1791","mpi4py","Python bindings for the Message Passing Interface (MPI)"),
("1785","py-translate","A Translation Tool for Humans"),
("1786","bluetooth","bluetooth"),
("1787","bitbucket"," "),
("1788","twilio","Programmable SMS and Programmable Voice"),
("1782","test","Regression tests package containing the testing suite"),
("1783","time","Time access and conversions"),
("1784","pyvbox","A complete VirtualBox Main API implementation"),
("1780","osmapi","python class to communicate with OpenStreetMap"),
("1781","tqdm","Instantly make your loops show a smart progress meter"),
("1778","pydrive.settings"," "),
("1779","ckeditor"," "),
("1774","pydrive.apiattr"," "),
("1775","pydrive.auth"," "),
("1776","pydrive.drive"," "),
("1777","pydrive.files"," "),
("1773","SQLAlchemy","SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL"),
("1771","Multivariable calculus"," "),
("1772","barcode"," "),
("1765","Precalculus"," "),
("1766","AP Calculus BC"," "),
("1767","Linear algebra"," ");
INSERT INTO module VALUES
("1768","Pre-algebra"," "),
("1769","Algebra 2"," "),
("1770","Statistics & probability"," "),
("1764","Geometry*"," "),
("1763","Arithmetic"," "),
("1758","Early math"," "),
("1759","Algebra 1"," "),
("1760","Trigonometry"," "),
("1761","AP Calculus AB"," "),
("1762","Bifferential equations"," "),
("784","Autoit"," "),
("791","Mobile Platform Lectures"," "),
("786","Aplications"," "),
("792","Hacking Lectures"," "),
("1640","nltk.test.unit.translate.test_ibm1"," "),
("1639","nltk.test.unit.translate.test_bleu"," "),
("1638","nltk.test.unit.translate"," "),
("1637","nltk.test.unit.test_wordnet"," "),
("1636","nltk.test.unit.test_tokenize"," "),
("802","Cash registers","21.02.2015"),
("803","Bodyguard","5.01.2015 - 26.03.2015"),
("804","Forklift Driver","22.06.2015 - 30.09.2015"),
("805","Computer Network Administrator","03.11.2015 - 30.11.2015"),
("806","Assistant operator of packing line","18.01.2016 - 31.03.2016"),
("807","Junior Operator of Conventional Machines and CNC","20.05.2016 - 03.06.2016"),
("808","General operative","20.03.2017 - 9.06.2017"),
("809","Werhaus worker","04.07.2016 - 24.09.2016"),
("810","Company"," "),
("811","Other documents"," "),
("812","Elementary"," "),
("813","Junior high school"," "),
("814","High school"," "),
("815","Informatics college of futher education"," "),
("1700","anchors"," "),
("1635","nltk.test.unit.test_tgrep"," "),
("1634","nltk.test.unit.test_tag"," "),
("1633","nltk.test.unit.test_stem"," "),
("1632","nltk.test.unit.test_senna"," "),
("1631","nltk.test.unit.test_seekable_unicode_stream_reader"," "),
("1630","nltk.test.unit.test_naivebayes"," "),
("1629","nltk.test.unit.test_json2csv_corpus"," "),
("1628","nltk.test.unit.test_hmm"," "),
("1627","nltk.test.unit.test_corpus_views"," "),
("1624","nltk.test.unit.test_collocations"," "),
("1623","nltk.test.unit.test_classify"," "),
("1620","nltk.test.unit.test_2x_compat"," "),
("1619","nltk.test.unit"," "),
("1471","nltk.corpus.reader.plaintext"," "),
("1472","nltk.corpus.reader.ppattach"," "),
("1540","nltk.parse.malt"," "),
("1470","nltk.corpus.reader.pl196x"," "),
("1536","nltk.parse.earleychart"," "),
("1469","nltk.corpus.reader.panlex_lite"," "),
("1466","nltk.corpus.reader.nombank"," "),
("1467","nltk.corpus.reader.nps_chat"," "),
("1468","nltk.corpus.reader.opinion_lexicon"," "),
("1456","nltk.corpus.reader.crubadan"," "),
("1457","nltk.corpus.reader.dependency"," "),
("1458","nltk.corpus.reader.framenet"," "),
("1459","nltk.corpus.reader.ieer"," "),
("1460","nltk.corpus.reader.indian"," "),
("1375","dialogs","Easy-to-use UI Dialogs"),
("1465","nltk.corpus.reader.nkjp"," "),
("1565","nltk.sem.util"," "),
("1490","nltk.corpus.reader.wordlist"," "),
("1370","appex","Using the Pythonista Sharing Extension"),
("1515","nltk.metrics.agreement"," "),
("1516","nltk.metrics.aline"," "),
("1517","nltk.metrics.association"," "),
("1518","nltk.metrics.confusionmatrix"," "),
("1519","nltk.metrics.distance"," "),
("1509","nltk.inference.mace"," "),
("1378","keychain","Secure Password Storage"),
("1590","nltk.tag.senna"," "),
("1492","nltk.corpus.reader.xmldocs"," "),
("1371","canvas","Vector Graphics"),
("1372","cb","Connecting to Bluetooth LE Peripherals"),
("1373","clipboard*","Copy and paste"),
("1374","console","Utilities for Console Output and Various System Services"),
("932","Type"," "),
("1473","nltk.corpus.reader.propbank"," "),
("1474","nltk.corpus.reader.pros_cons"," "),
("1385","reminders","Access to the iOS Reminders Database"),
("1608","nltk.test.doctest_nose_plugin"," "),
("1611","nltk.test.inference_fixt"," "),
("1581","nltk.tag"," "),
("1606","nltk.test.corpus_fixt"," "),
("1463","nltk.corpus.reader.lin"," "),
("1501","nltk.draw.tree"," "),
("1538","nltk.parse.featurechart"," "),
("1551","nltk.sem"," "),
("1552","nltk.sem.boxer"," "),
("1553","nltk.sem.chat80"," "),
("1554","nltk.sem.cooper_storage"," "),
("1555","nltk.sem.drt"," "),
("1534","nltk.parse.corenlp"," "),
("1520","nltk.metrics.paice"," "),
("1521","nltk.metrics.scores"," "),
("1522","nltk.metrics.segmentation"," "),
("1523","nltk.metrics.spearman"," ");
INSERT INTO module VALUES
("1524","nltk.misc"," "),
("1525","nltk.misc.babelfish"," "),
("1526","nltk.misc.chomsky"," "),
("1527","nltk.misc.minimalset"," "),
("1528","nltk.misc.sort"," "),
("1529","nltk.misc.wordfinder"," "),
("1530","nltk.parse"," "),
("1531","nltk.parse.api"," "),
("1532","nltk.parse.bllip"," "),
("983","Websites"," "),
("984","Database Administration"," "),
("985","Internet Applications Programming"," "),
("986","Philosophy"," "),
("987","Desktop app"," "),
("988","Django app"," "),
("989","Equipment"," "),
("1618","nltk.test.translate_fixt"," "),
("1579","nltk.stem.util"," "),
("1599","nltk.tbl.rule"," "),
("1594","nltk.tag.util"," "),
("1626","nltk.test.unit.test_corpora"," "),
("1461","nltk.corpus.reader.ipipan"," "),
("1564","nltk.sem.skolemize"," "),
("1577","nltk.stem.rslp"," "),
("1511","nltk.inference.prover9"," "),
("1542","nltk.parse.pchart"," "),
("1598","nltk.tbl.feature"," "),
("1376","contacts","Access the iOS Contacts Database"),
("1616","nltk.test.segmentation_fixt"," "),
("1508","nltk.inference.discourse"," "),
("1541","nltk.parse.nonprojectivedependencyparser"," "),
("1600","nltk.tbl.template"," "),
("1601","nltk.test"," "),
("1602","nltk.test.all"," "),
("1603","nltk.test.childes_fixt"," "),
("1589","nltk.tag.perceptron"," "),
("1576","nltk.stem.regexp"," "),
("1514","nltk.metrics"," "),
("1572","nltk.stem.arlstem"," "),
("1573","nltk.stem.isri"," "),
("1574","nltk.stem.lancaster"," "),
("1609","nltk.test.gensim_fixt"," "),
("1586","nltk.tag.hmm"," "),
("1377","editor","Functions for scripting Pythonistaâ€™s text editor"),
("1578","nltk.stem.snowball"," "),
("1513","nltk.inference.tableau"," "),
("1510","nltk.inference.nonmonotonic"," "),
("1491","nltk.corpus.reader.wordnet"," "),
("1592","nltk.tag.stanford"," "),
("1593","nltk.tag.tnt"," "),
("1557","nltk.sem.evaluate"," "),
("1558","nltk.sem.glue"," "),
("1559","nltk.sem.hole"," "),
("1560","nltk.sem.lfg"," "),
("1561","nltk.sem.linearlogic"," "),
("1562","nltk.sem.logic"," "),
("1563","nltk.sem.relextract"," "),
("1384","photos","Photo Library Access on iOS"),
("1582","nltk.tag.api"," "),
("1543","nltk.parse.projectivedependencyparser"," "),
("1544","nltk.parse.recursivedescent"," "),
("1545","nltk.parse.shiftreduce"," "),
("1546","nltk.parse.stanford"," "),
("1547","nltk.parse.transitionparser"," "),
("1548","nltk.parse.util"," "),
("1462","nltk.corpus.reader.knbc"," "),
("1588","nltk.tag.mapping"," "),
("1575","nltk.stem.porter"," "),
("1512","nltk.inference.resolution"," "),
("1614","nltk.test.probability_fixt"," "),
("1613","nltk.test.portuguese_en_fixt"," "),
("1585","nltk.tag.crf"," "),
("1580","nltk.stem.wordnet"," "),
("1610","nltk.test.gluesemantics_malt_fixt"," "),
("1612","nltk.test.nonmonotonic_fixt"," "),
("1379","linguistictagger","Linguistic analysis"),
("1549","nltk.parse.viterbi"," "),
("1550","nltk.probability"," "),
("1539","nltk.parse.generate"," "),
("1595","nltk.tbl"," "),
("1464","nltk.corpus.reader.mte"," "),
("1380","location","Geo-Location Services on iOS"),
("1583","nltk.tag.brill"," "),
("1584","nltk.tag.brill_trainer"," "),
("1533","nltk.parse.chart"," "),
("1607","nltk.test.discourse_fixt"," "),
("1605","nltk.test.compat_fixt"," "),
("1570","nltk.stem"," "),
("1571","nltk.stem.api"," "),
("1604","nltk.test.classify_fixt"," "),
("1625","nltk.test.unit.test_corenlp"," "),
("1622","nltk.test.unit.test_chunk"," "),
("1381","motion","Motion Sensor Data on iOS"),
("1556","nltk.sem.drt_glue_demo"," "),
("1382","notification","Notifications on iOS"),
("1596","nltk.tbl.demo"," "),
("1502","nltk.draw.util"," "),
("1503","nltk.featstruct"," "),
("1504","nltk.grammar"," "),
("1505","nltk.help"," ");
INSERT INTO module VALUES
("1506","nltk.inference"," "),
("1507","nltk.inference.api"," "),
("1369","History"," "),
("1621","nltk.test.unit.test_aline"," "),
("1591","nltk.tag.sequential"," "),
("1566","nltk.sentiment"," "),
("1567","nltk.sentiment.sentiment_analyzer"," "),
("1568","nltk.sentiment.util"," "),
("1569","nltk.sentiment.vader"," "),
("1535","nltk.parse.dependencygraph"," "),
("1597","nltk.tbl.erroranalysis"," "),
("1587","nltk.tag.hunpos"," "),
("1475","nltk.corpus.reader.reviews"," "),
("1478","nltk.corpus.reader.senseval"," "),
("1383","objc_util","Utilities for bridging Objective-C APIs"),
("1178","Mobile app"," "),
("1179","Robots"," "),
("1181","Quick tips"," "),
("1182","Vacations"," "),
("1183","Python tutorials"," "),
("1184","IT tutorials"," "),
("1185","Rest"," "),
("1186","Miusic"," "),
("1187","Spy videos"," "),
("1188","USA"," "),
("1189","Drugs"," "),
("1190","Recruting materials"," "),
("1191","Fake Documents"," "),
("1192","Aplication"," "),
("1193","Personal documents"," "),
("1194","os.path","Operations on pathnames"),
("1195","pygame.math"," "),
("1537","nltk.parse.evaluate"," "),
("1386","scene","2D Games and Animations"),
("1387","sound","Sound effects and music playback"),
("1388","speech","Text-to-Speech on iOS"),
("1389","twitter","iOS Twitter Accounts and API Access"),
("1390","ui","Native GUI for iOS"),
("1391","nltk.__init__"," "),
("1392","nltk.app"," "),
("1393","nltk.app.chartparser_app"," "),
("1394","nltk.app.chunkparser_app"," "),
("1395","nltk.app.collocations_app"," "),
("1396","nltk.app.concordance_app"," "),
("1397","nltk.app.nemo_app"," "),
("1398","nltk.app.rdparser_app"," "),
("1399","nltk.app.srparser_app"," "),
("1400","nltk.app.wordfreq_app"," "),
("1401","nltk.app.wordnet_app"," "),
("1402","nltk.ccg"," "),
("1403","nltk.ccg.api"," "),
("1404","nltk.ccg.chart"," "),
("1405","nltk.ccg.combinator"," "),
("1406","nltk.ccg.lexicon"," "),
("1407","nltk.ccg.logic"," "),
("1408","nltk.chat"," "),
("1409","nltk.chat.eliza"," "),
("1410","nltk.chat.iesha"," "),
("1411","nltk.chat.rude"," "),
("1412","nltk.chat.suntsu"," "),
("1413","nltk.chat.util"," "),
("1414","nltk.chat.zen"," "),
("1415","nltk.chunk"," "),
("1416","nltk.chunk.api"," "),
("1417","nltk.chunk.named_entity"," "),
("1418","nltk.chunk.regexp"," "),
("1419","nltk.chunk.util"," "),
("1420","nltk.classify"," "),
("1421","nltk.classify.api"," "),
("1422","nltk.classify.decisiontree"," "),
("1423","nltk.classify.maxent"," "),
("1424","nltk.classify.megam"," "),
("1425","nltk.classify.naivebayes"," "),
("1426","nltk.classify.positivenaivebayes"," "),
("1427","nltk.classify.rte_classify"," "),
("1428","nltk.classify.scikitlearn"," "),
("1429","nltk.classify.senna"," "),
("1430","nltk.classify.svm"," "),
("1431","nltk.classify.tadm"," "),
("1432","nltk.classify.textcat"," "),
("1433","nltk.classify.util"," "),
("1434","nltk.classify.weka"," "),
("1435","nltk.cluster"," "),
("1436","nltk.cluster.api"," "),
("1437","nltk.cluster.em"," "),
("1438","nltk.cluster.gaac"," "),
("1439","nltk.cluster.kmeans"," "),
("1440","nltk.cluster.util"," "),
("1441","nltk.collocations"," "),
("1442","nltk.corpus"," "),
("1443","nltk.corpus.europarl_raw"," "),
("1444","nltk.corpus.reader"," "),
("1445","nltk.corpus.reader.aligned"," "),
("1446","nltk.corpus.reader.api"," "),
("1447","nltk.corpus.reader.bnc"," "),
("1448","nltk.corpus.reader.bracket_parse"," "),
("1449","nltk.corpus.reader.categorized_sents"," "),
("1450","nltk.corpus.reader.chasen"," "),
("1451","nltk.corpus.reader.childes"," "),
("1452","nltk.corpus.reader.chunked"," ");
INSERT INTO module VALUES
("1453","nltk.corpus.reader.cmudict"," "),
("1454","nltk.corpus.reader.comparative_sents"," "),
("1455","nltk.corpus.reader.conll"," "),
("1342","bge.types","Game Types"),
("1343","bge.logic","Game Logic"),
("1344","bge.render","Rasterizer"),
("1345","bge.texture","Video Texture"),
("1346","bge.events","Game Keys"),
("1347","bge.constraints","Physics Constraints"),
("1801","Game Basics"," "),
("1349","PyAutoGUI","GUI automation for human beings"),
("1350","keyboard","Hook and simulate keyboard events"),
("1351","gtts","Text To Speech"),
("1352","speech_recognition","Provides Text To Speech services"),
("1353","infi.systray","Windows system tray icon with a right-click context menu"),
("1354","chess","chess library with move generation and validation and handling of common formats"),
("1355","bottle","Bottle is a fast, simple and lightweight WSGI micro web-framework"),
("1356","easygui ","EasyGUI is a module for very simple, very easy GUI programming"),
("1357","pywebview","A cross-platform lightweight native wrapper around a web view component"),
("1358","ffmpy","A simple Python wrapper for ffmpeg"),
("1359","schedule","Python job scheduling for humans"),
("1360","pytemperature","A module that helps to convert temperature units"),
("1361","requests","Requests is the only Non-GMO HTTP library for Python, safe for human consumption"),
("1362","measurement","Easily use and manipulate unit-aware measurement objects"),
("1363","forex_python","Foreign exchange rates and currency conversion"),
("1364","pdfcrowd","Convert HTML to PDF"),
("1365","youtube_dl","download videos from youtube.com or other video platforms"),
("1366","pydub","Manipulate audio with a simple and easy high level interface"),
("1367","PyPDF2","A utility to read and write PDFs with Python"),
("1368","elasticsearch","Open Source, Distributed, RESTful Search Engine"),
("1641","nltk.test.unit.translate.test_ibm2"," "),
("1642","nltk.test.unit.translate.test_ibm3"," "),
("1643","nltk.test.unit.translate.test_ibm4"," "),
("1644","nltk.test.unit.translate.test_ibm5"," "),
("1645","nltk.test.unit.translate.test_ibm_model"," "),
("1646","nltk.test.unit.translate.test_stack_decoder"," "),
("1647","nltk.test.unit.utils"," "),
("1648","nltk.test.wordnet_fixt"," "),
("1649","nltk.text"," "),
("1650","nltk.tokenize"," "),
("1651","nltk.tokenize.api"," "),
("1652","nltk.tokenize.casual"," "),
("1653","nltk.tokenize.moses"," "),
("1654","nltk.tokenize.mwe"," "),
("1655","nltk.tokenize.punkt"," "),
("1656","nltk.tokenize.regexp"," "),
("1657","nltk.tokenize.repp"," "),
("1658","nltk.tokenize.sexpr"," "),
("1659","nltk.tokenize.simple"," "),
("1660","nltk.tokenize.stanford"," "),
("1661","nltk.tokenize.stanford_segmenter"," "),
("1662","nltk.tokenize.texttiling"," "),
("1663","nltk.tokenize.toktok"," "),
("1664","nltk.tokenize.treebank"," "),
("1665","nltk.tokenize.util"," "),
("1666","nltk.toolbox"," "),
("1667","nltk.translate"," "),
("1668","nltk.translate.api"," "),
("1669","nltk.translate.bleu_score"," "),
("1670","nltk.translate.chrf_score"," "),
("1671","nltk.translate.gale_church"," "),
("1672","nltk.translate.gdfa"," "),
("1673","nltk.translate.gleu_score"," "),
("1674","nltk.translate.ibm1"," "),
("1675","nltk.translate.ibm2"," "),
("1676","nltk.translate.ibm3"," "),
("1677","nltk.translate.ibm4"," "),
("1678","nltk.translate.ibm5"," "),
("1679","nltk.translate.ibm_model"," "),
("1680","nltk.translate.metrics"," "),
("1681","nltk.translate.nist_score"," "),
("1682","nltk.translate.phrase_based"," "),
("1683","nltk.translate.ribes_score"," "),
("1684","nltk.translate.stack_decoder"," "),
("1685","nltk.tree"," "),
("1686","nltk.treetransforms"," "),
("1687","nltk.twitter"," "),
("1688","nltk.twitter.api"," "),
("1689","nltk.twitter.common"," "),
("1690","nltk.util"," "),
("1691","nltk.wsd"," "),
("1692","tensorflow","Open-source software library for Machine Intelligence"),
("1693","CompTIA A+"," "),
("1694","CompTIA Project+"," "),
("1695","MTA: Database"," "),
("1696","CIW Site Development Associate"," "),
("1697","CIW User Interface Desinger"," "),
("1698","CIW Advanced HTML5 and CSS Specialis"," "),
("1699","Driving Licence"," "),
("1701","animation*"," "),
("1702","app"," "),
("1703","armature"," "),
("1704","assets"," "),
("1705","camera"," "),
("1706","camera_anim"," "),
("1707","config"," "),
("1708","constraints"," "),
("1709","container"," "),
("1710","controls"," "),
("1711","data"," ");
INSERT INTO module VALUES
("1712","debug"," "),
("1713","fps"," "),
("1714","geometry"," "),
("1715","gp_conf"," "),
("1716","gyroscope"," "),
("1717","hmd"," "),
("1718","hmd_conf"," "),
("1719","hud"," "),
("1720","input"," "),
("1721","lights"," "),
("1722","logic_nodes"," "),
("1723","main"," "),
("1724","mat3"," "),
("1725","mat4"," "),
("1726","material"," "),
("1727","math*"," "),
("1728","mixer"," "),
("1729","mouse"," "),
("1730","nla"," "),
("1731","npc_ai"," "),
("1732","ns_compat"," "),
("1733","objects"," "),
("1734","particles"," "),
("1735","physics"," "),
("1736","preloader"," "),
("1737","quat"," "),
("1738","rgb"," "),
("1739","rgba"," "),
("1740","scenes"," "),
("1741","screen"," "),
("1742","screenshooter"," "),
("1743","sfx"," "),
("1744","storage"," "),
("1745","textures"," "),
("1746","time*"," "),
("1747","transform"," "),
("1748","tsr"," "),
("1749","util"," "),
("1750","vec3"," "),
("1751","vec4"," "),
("1752","version"," "),
("1753","b4w"," "),
("1754","Global"," "),
("1755","JavaScript & CSS & HTML"," "),
("1756","Bootstrap"," "),
("1757","videojs"," ");




CREATE TABLE `module_category` (
  `module_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  PRIMARY KEY (`module_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO module_category VALUES
("1","1"),
("2","1"),
("3","1"),
("4","1"),
("5","1"),
("6","1"),
("7","1"),
("8","1"),
("9","1"),
("10","1"),
("11","1"),
("12","1"),
("13","1"),
("14","1"),
("15","1"),
("16","1"),
("17","1"),
("18","1"),
("19","1"),
("20","1"),
("21","1"),
("22","1"),
("23","1"),
("24","1"),
("25","1"),
("26","1"),
("27","1"),
("28","1"),
("29","1"),
("30","1"),
("31","1"),
("32","1"),
("33","1"),
("34","1"),
("35","1"),
("36","1"),
("37","1"),
("38","1"),
("39","1"),
("40","1"),
("41","1"),
("42","1"),
("43","1"),
("44","1"),
("45","1"),
("46","1"),
("47","1"),
("48","1"),
("49","1"),
("50","1"),
("51","1"),
("52","1"),
("53","1"),
("54","1"),
("55","1"),
("56","1"),
("57","1"),
("58","1"),
("59","1"),
("60","1"),
("61","1"),
("62","1"),
("63","1"),
("64","1"),
("65","1"),
("66","1"),
("67","1"),
("68","1"),
("69","1"),
("70","1"),
("71","1"),
("72","1"),
("73","1"),
("74","1"),
("75","1"),
("76","1"),
("77","1"),
("78","1"),
("79","1"),
("80","1"),
("81","1"),
("82","1"),
("83","1"),
("84","1"),
("85","1"),
("86","1"),
("87","1"),
("88","1"),
("89","1"),
("90","1"),
("91","1"),
("92","1"),
("93","1"),
("94","1"),
("95","1"),
("96","1"),
("97","1"),
("98","1"),
("99","1"),
("100","1");
INSERT INTO module_category VALUES
("101","1"),
("102","1"),
("103","1"),
("104","1"),
("105","1"),
("106","1"),
("107","1"),
("108","1"),
("109","1"),
("110","1"),
("111","1"),
("112","1"),
("113","1"),
("114","1"),
("115","1"),
("116","1"),
("117","1"),
("118","1"),
("119","1"),
("120","1"),
("121","1"),
("122","1"),
("123","1"),
("124","1"),
("125","1"),
("126","1"),
("127","1"),
("128","1"),
("129","1"),
("130","1"),
("131","1"),
("132","1"),
("133","1"),
("134","1"),
("135","1"),
("136","1"),
("137","1"),
("138","1"),
("139","1"),
("140","1"),
("141","1"),
("142","1"),
("143","1"),
("144","1"),
("145","1"),
("146","1"),
("147","1"),
("148","1"),
("149","1"),
("150","1"),
("151","1"),
("152","1"),
("153","1"),
("154","1"),
("155","1"),
("156","1"),
("157","1"),
("158","1"),
("159","1"),
("160","1"),
("161","1"),
("162","1"),
("163","1"),
("164","1"),
("165","1"),
("166","1"),
("167","1"),
("168","1"),
("169","1"),
("170","1"),
("171","1"),
("172","1"),
("173","1"),
("174","1"),
("791","790"),
("176","1"),
("177","1"),
("179","1"),
("180","1"),
("181","1"),
("182","1"),
("183","1"),
("184","1"),
("185","1"),
("186","1"),
("187","1"),
("188","1"),
("189","1"),
("190","1"),
("191","1"),
("192","1"),
("193","1"),
("194","1"),
("195","1"),
("196","1"),
("197","1"),
("198","1"),
("199","1"),
("200","1"),
("201","1");
INSERT INTO module_category VALUES
("202","1"),
("203","1"),
("204","1"),
("205","1"),
("206","1"),
("207","1"),
("208","1"),
("209","1"),
("210","1"),
("211","211"),
("212","211"),
("213","211"),
("214","211"),
("215","211"),
("216","211"),
("217","211"),
("218","211"),
("219","211"),
("220","211"),
("221","211"),
("222","211"),
("223","211"),
("224","211"),
("225","211"),
("226","211"),
("227","211"),
("228","211"),
("229","211"),
("230","211"),
("231","211"),
("232","211"),
("233","211"),
("234","211"),
("235","211"),
("236","211"),
("237","237"),
("238","237"),
("239","237"),
("240","237"),
("241","237"),
("242","237"),
("243","237"),
("244","237"),
("245","237"),
("246","237"),
("247","237"),
("248","237"),
("249","237"),
("250","237"),
("251","237"),
("252","237"),
("253","237"),
("254","237"),
("255","237"),
("256","237"),
("257","237"),
("258","237"),
("259","237"),
("260","237"),
("261","237"),
("262","237"),
("263","237"),
("264","237"),
("265","237"),
("266","237"),
("267","267"),
("268","267"),
("269","267"),
("270","267"),
("271","267"),
("272","267"),
("273","267"),
("274","267"),
("275","267"),
("276","267"),
("277","267"),
("278","267"),
("279","267"),
("280","267"),
("281","267"),
("282","267"),
("283","267"),
("284","267"),
("285","267"),
("286","286"),
("287","286"),
("288","286"),
("289","286"),
("290","286"),
("291","291"),
("292","291"),
("293","291"),
("294","291"),
("295","291"),
("296","291"),
("297","291"),
("298","291"),
("299","291"),
("300","291"),
("301","291");
INSERT INTO module_category VALUES
("302","291"),
("303","291"),
("304","291"),
("305","291"),
("306","291"),
("307","291"),
("308","291"),
("309","291"),
("310","291"),
("311","291"),
("312","291"),
("313","291"),
("314","291"),
("315","291"),
("316","291"),
("317","291"),
("318","291"),
("319","291"),
("320","291"),
("321","291"),
("322","291"),
("323","291"),
("324","291"),
("325","291"),
("326","291"),
("327","291"),
("328","291"),
("329","291"),
("330","291"),
("331","291"),
("332","291"),
("333","291"),
("334","291"),
("335","291"),
("336","291"),
("337","291"),
("338","291"),
("339","291"),
("340","291"),
("341","291"),
("342","291"),
("343","291"),
("344","291"),
("345","291"),
("346","291"),
("347","291"),
("348","291"),
("349","291"),
("350","291"),
("351","291"),
("352","291"),
("353","291"),
("354","291"),
("355","291"),
("356","291"),
("357","291"),
("358","291"),
("359","291"),
("360","291"),
("361","291"),
("362","291"),
("363","291"),
("364","291"),
("365","291"),
("366","291"),
("367","291"),
("368","291"),
("369","291"),
("370","291"),
("371","291"),
("372","291"),
("373","291"),
("374","291"),
("375","291"),
("376","291"),
("377","291"),
("378","291"),
("379","291"),
("380","291"),
("381","291"),
("382","291"),
("383","291"),
("384","291"),
("385","291"),
("386","291"),
("387","291"),
("388","291"),
("389","291"),
("390","291"),
("391","291"),
("392","291"),
("393","291"),
("394","291"),
("395","291"),
("396","291"),
("397","291"),
("398","291"),
("399","291"),
("400","291"),
("401","291");
INSERT INTO module_category VALUES
("402","291"),
("403","291"),
("404","291"),
("405","291"),
("406","291"),
("407","291"),
("408","291"),
("409","291"),
("410","291"),
("411","291"),
("412","291"),
("413","291"),
("414","291"),
("415","291"),
("416","291"),
("417","291"),
("418","291"),
("419","291"),
("420","291"),
("421","421"),
("422","421"),
("423","421"),
("424","421"),
("425","421"),
("426","421"),
("427","421"),
("428","421"),
("429","421"),
("430","421"),
("431","421"),
("1614","1391"),
("1705","1700"),
("1411","1391"),
("1652","1391"),
("1600","1391"),
("1502","1391"),
("1634","1391"),
("1750","1700"),
("1647","1391"),
("1499","1391"),
("1450","1391"),
("1533","1391"),
("1438","1391"),
("1729","1700"),
("1416","1391"),
("1405","1391"),
("1615","1391"),
("450","450"),
("451","450"),
("452","450"),
("453","450"),
("454","450"),
("455","450"),
("456","450"),
("457","450"),
("458","450"),
("459","450"),
("460","450"),
("461","450"),
("462","450"),
("463","450"),
("464","450"),
("465","450"),
("466","450"),
("467","450"),
("468","450"),
("469","450"),
("470","450"),
("471","450"),
("472","450"),
("473","450"),
("474","450"),
("475","450"),
("476","450"),
("477","450"),
("478","450"),
("479","450"),
("480","450"),
("481","450"),
("482","450"),
("483","450"),
("484","450"),
("485","450"),
("486","450"),
("487","450"),
("488","450"),
("489","450"),
("490","450"),
("491","491"),
("492","491"),
("493","491"),
("494","491"),
("495","491"),
("496","491"),
("497","491"),
("498","491"),
("499","491"),
("500","491"),
("501","491"),
("502","491");
INSERT INTO module_category VALUES
("503","491"),
("504","504"),
("505","504"),
("506","504"),
("788","788"),
("508","504"),
("509","504"),
("510","504"),
("511","504"),
("512","504"),
("513","504"),
("514","504"),
("515","504"),
("516","504"),
("517","504"),
("518","504"),
("519","504"),
("520","504"),
("521","504"),
("522","504"),
("523","504"),
("524","504"),
("525","504"),
("526","504"),
("527","504"),
("528","504"),
("529","504"),
("530","504"),
("531","504"),
("532","504"),
("533","504"),
("534","504"),
("535","504"),
("536","504"),
("537","504"),
("538","504"),
("539","504"),
("540","504"),
("541","504"),
("542","504"),
("543","504"),
("544","504"),
("545","504"),
("546","504"),
("547","504"),
("548","504"),
("549","504"),
("550","504"),
("551","504"),
("552","504"),
("553","504"),
("554","504"),
("555","504"),
("556","504"),
("557","504"),
("558","504"),
("559","504"),
("560","504"),
("561","504"),
("562","504"),
("563","504"),
("564","504"),
("565","504"),
("566","504"),
("567","504"),
("568","504"),
("569","504"),
("570","504"),
("571","504"),
("572","504"),
("573","504"),
("574","504"),
("575","504"),
("576","504"),
("577","504"),
("578","504"),
("579","504"),
("580","504"),
("581","504"),
("582","504"),
("583","504"),
("584","504"),
("585","504"),
("586","504"),
("587","504"),
("588","504"),
("589","504"),
("590","504"),
("591","504"),
("592","504"),
("593","504"),
("594","504"),
("595","504"),
("596","504"),
("597","504"),
("598","504"),
("599","504"),
("600","504"),
("601","504"),
("602","504");
INSERT INTO module_category VALUES
("603","504"),
("604","504"),
("605","504"),
("606","504"),
("607","504"),
("608","504"),
("609","609"),
("610","609"),
("611","609"),
("612","609"),
("613","609"),
("614","609"),
("615","609"),
("616","609"),
("617","609"),
("618","609"),
("619","609"),
("620","609"),
("621","609"),
("622","609"),
("623","609"),
("624","609"),
("625","609"),
("626","609"),
("627","609"),
("628","609"),
("629","609"),
("630","609"),
("631","609"),
("632","609"),
("633","609"),
("634","609"),
("635","609"),
("636","609"),
("637","609"),
("638","609"),
("639","609"),
("640","609"),
("641","609"),
("642","609"),
("643","609"),
("644","609"),
("645","609"),
("646","609"),
("647","609"),
("648","609"),
("649","609"),
("650","609"),
("651","609"),
("652","652"),
("653","652"),
("654","652"),
("655","652"),
("657","657"),
("658","658"),
("659","658"),
("660","658"),
("661","658"),
("662","658"),
("663","658"),
("664","658"),
("665","658"),
("666","658"),
("667","658"),
("668","658"),
("669","658"),
("670","658"),
("671","658"),
("672","658"),
("1727","1700"),
("1714","1700"),
("675","675"),
("676","675"),
("677","675"),
("678","675"),
("679","675"),
("680","675"),
("681","675"),
("700","682"),
("702","682"),
("712","682"),
("1800","1342"),
("1799","1342"),
("1798","1342"),
("1797","1692"),
("1796","657"),
("1795","657"),
("732","731"),
("1794","657"),
("1793","657"),
("1792","657"),
("1791","657"),
("1790","657"),
("1789","657"),
("1788","657"),
("1787","1787"),
("741","741"),
("742","741"),
("743","741"),
("744","741");
INSERT INTO module_category VALUES
("745","741"),
("746","741"),
("747","741"),
("748","741"),
("749","749"),
("750","749"),
("751","749"),
("752","749"),
("753","749"),
("754","741"),
("1786","657"),
("1785","657"),
("1784","657"),
("1782","1"),
("1783","1"),
("1781","657"),
("1780","657"),
("1779","1779"),
("1778","432"),
("1777","432"),
("1775","432"),
("1776","432"),
("1774","1774"),
("1773","657"),
("1772","657"),
("1771","1758"),
("1770","1758"),
("1769","1758"),
("1767","1758"),
("1768","1758"),
("1766","1758"),
("1765","1758"),
("1764","1758"),
("1763","1758"),
("1762","1758"),
("1761","1758"),
("1760","1758"),
("1759","1758"),
("1758","1758"),
("784","657"),
("790","790"),
("786","786"),
("789","789"),
("792","790"),
("802","741"),
("803","803"),
("804","803"),
("805","803"),
("806","803"),
("807","803"),
("808","803"),
("809","803"),
("810","810"),
("811","810"),
("812","812"),
("813","812"),
("814","812"),
("815","812"),
("1700","1700"),
("1725","1700"),
("1724","1700"),
("1492","1391"),
("1443","1391"),
("1396","1391"),
("1434","1391"),
("1695","741"),
("1498","1391"),
("1469","1391"),
("1395","1391"),
("1462","1391"),
("1549","1391"),
("1394","1391"),
("1393","1391"),
("1551","1391"),
("1721","1700"),
("1472","1391"),
("1511","1391"),
("1582","1391"),
("1542","1391"),
("1418","1391"),
("1387","1370"),
("1421","1391"),
("1473","1391"),
("1510","1391"),
("1623","1391"),
("1581","1391"),
("1422","1391"),
("1439","1391"),
("1720","1700"),
("1632","1391"),
("1373","1370"),
("1621","1391"),
("1392","1391"),
("1494","1391"),
("1557","1391"),
("1371","1370"),
("1445","1391"),
("1413","1391"),
("1370","1370"),
("1688","1391");
INSERT INTO module_category VALUES
("1650","1391"),
("1454","1391"),
("1694","741"),
("1578","1391"),
("1706","1700"),
("1481","1391"),
("1603","1391"),
("1734","1700"),
("1497","1391"),
("1441","1391"),
("1377","1370"),
("1554","1391"),
("1591","1391"),
("1425","1391"),
("1372","1370"),
("1527","1391"),
("1406","1391"),
("1577","1391"),
("932","793"),
("1403","1391"),
("1566","1391"),
("1751","1700"),
("1385","1370"),
("1628","1391"),
("1670","1391"),
("1536","1391"),
("1622","1391"),
("1726","1700"),
("1390","1370"),
("1435","1391"),
("1465","1391"),
("1376","1370"),
("1653","1391"),
("1485","1391"),
("1558","1391"),
("1505","1391"),
("1458","1391"),
("1757","1757"),
("1620","1391"),
("1455","1391"),
("1605","1391"),
("1756","1756"),
("1519","1391"),
("1671","1391"),
("1638","1391"),
("1685","1391"),
("1471","1391"),
("1559","1391"),
("1718","1700"),
("1669","1391"),
("1466","1391"),
("1716","1700"),
("1476","1391"),
("983","983"),
("984","984"),
("985","985"),
("986","986"),
("987","987"),
("988","987"),
("989","987"),
("1745","1700"),
("1528","1391"),
("1596","1391"),
("1570","1391"),
("1388","1370"),
("1540","1391"),
("1491","1391"),
("1412","1391"),
("1661","1391"),
("1517","1391"),
("1707","1700"),
("1444","1391"),
("1710","1700"),
("1477","1391"),
("1654","1391"),
("1595","1391"),
("1374","1370"),
("1719","1700"),
("1440","1391"),
("1571","1391"),
("1651","1391"),
("1475","1391"),
("1607","1391"),
("1604","1391"),
("1717","1700"),
("1626","1391"),
("1666","1391"),
("1723","1700"),
("1552","1391"),
("1507","1391"),
("1535","1391"),
("1451","1391"),
("1619","1391"),
("1504","1391"),
("1539","1391"),
("1664","1391"),
("1515","1391"),
("1563","1391"),
("1407","1391"),
("1722","1700");
INSERT INTO module_category VALUES
("1636","1391"),
("1547","1391"),
("1375","1370"),
("1749","1700"),
("1525","1391"),
("1713","1700"),
("1448","1391"),
("1442","1391"),
("1703","1700"),
("1423","1391"),
("1748","1700"),
("1568","1391"),
("1696","741"),
("1565","1391"),
("1680","1391"),
("1488","1391"),
("1509","1391"),
("1522","1391"),
("1708","1700"),
("1590","1391"),
("1657","1391"),
("1513","1391"),
("1384","1370"),
("1537","1391"),
("1478","1391"),
("1508","1391"),
("1587","1391"),
("1691","1391"),
("1630","1391"),
("1731","1700"),
("1389","1370"),
("1550","1391"),
("1572","1391"),
("1506","1391"),
("1446","1391"),
("1697","741"),
("1686","1391"),
("1733","1700"),
("1682","1391"),
("1544","1391"),
("1532","1391"),
("1660","1391"),
("1676","1391"),
("1665","1391"),
("1698","741"),
("1678","1391"),
("1378","1370"),
("1482","1391"),
("1495","1391"),
("1523","1391"),
("1493","1391"),
("1467","1391"),
("1641","1391"),
("1576","1391"),
("1391","1391"),
("1681","1391"),
("1379","1370"),
("1693","741"),
("1538","1391"),
("1546","1391"),
("1586","1391"),
("1457","1391"),
("1730","1700"),
("1683","1391"),
("1624","1391"),
("1610","1391"),
("1501","1391"),
("1640","1391"),
("1747","1700"),
("1715","1700"),
("1684","1391"),
("1608","1391"),
("1646","1391"),
("1474","1391"),
("1380","1370"),
("1613","1391"),
("1597","1391"),
("1732","1700"),
("1486","1391"),
("1662","1391"),
("1738","1700"),
("1381","1370"),
("1755","1755"),
("1583","1391"),
("1436","1391"),
("1470","1391"),
("1573","1391"),
("1468","1391"),
("1656","1391"),
("1512","1391"),
("1689","1391"),
("1645","1391"),
("1663","1391"),
("1369","675"),
("1585","1391"),
("1593","1391"),
("1383","1370"),
("1637","1391"),
("1673","1391"),
("1556","1391");
INSERT INTO module_category VALUES
("1496","1391"),
("1598","1391"),
("1618","1391"),
("1648","1391"),
("1711","1700"),
("1746","1700"),
("1668","1391"),
("1461","1391"),
("1667","1391"),
("1589","1391"),
("1728","1700"),
("1627","1391"),
("1548","1391"),
("1404","1391"),
("1744","1700"),
("1677","1391"),
("1409","1391"),
("1382","1370"),
("1178","987"),
("1179","987"),
("1193","1191"),
("1181","1181"),
("1182","1181"),
("1183","790"),
("1184","790"),
("1185","1185"),
("1186","1181"),
("1187","1181"),
("1188","987"),
("1189","1181"),
("1190","1181"),
("1191","1191"),
("1192","786"),
("1194","1"),
("1195","237"),
("1672","1391"),
("1463","1391"),
("1531","1391"),
("1432","1391"),
("1569","1391"),
("1464","1391"),
("1410","1391"),
("1592","1391"),
("1386","1370"),
("1516","1391"),
("1580","1391"),
("1639","1391"),
("1692","1692"),
("1742","1700"),
("1424","1391"),
("1518","1391"),
("1459","1391"),
("1427","1391"),
("1453","1391"),
("1743","1700"),
("1530","1391"),
("1617","1391"),
("1754","1700"),
("1579","1391"),
("1675","1391"),
("1426","1391"),
("1712","1700"),
("1599","1391"),
("1644","1391"),
("1560","1391"),
("1702","1700"),
("1447","1391"),
("1490","1391"),
("1480","1391"),
("1574","1391"),
("1415","1391"),
("1397","1391"),
("1740","1700"),
("1487","1391"),
("1739","1700"),
("1567","1391"),
("1553","1391"),
("1753","1700"),
("1687","1391"),
("1456","1391"),
("1699","741"),
("1437","1391"),
("1709","1700"),
("1701","1700"),
("1674","1391"),
("1541","1391"),
("1704","1700"),
("1737","1700"),
("1429","1391"),
("1588","1391"),
("1408","1391"),
("1430","1391"),
("1545","1391"),
("1655","1391"),
("1398","1391"),
("1594","1391"),
("1625","1391"),
("1642","1391"),
("1609","1391"),
("1555","1391");
INSERT INTO module_category VALUES
("1633","1391"),
("1631","1391"),
("1752","1700"),
("1649","1391"),
("1449","1391"),
("1658","1391"),
("1452","1391"),
("1635","1391"),
("1616","1391"),
("1431","1391"),
("1433","1391"),
("1483","1391"),
("1679","1391"),
("1736","1700"),
("1584","1391"),
("1514","1391"),
("1414","1391"),
("1601","1391"),
("1606","1391"),
("1417","1391"),
("1400","1391"),
("1564","1391"),
("1484","1391"),
("1611","1391"),
("1500","1391"),
("1526","1391"),
("1419","1391"),
("1479","1391"),
("1529","1391"),
("1428","1391"),
("1520","1391"),
("1460","1391"),
("1602","1391"),
("1690","1391"),
("1534","1391"),
("1643","1391"),
("1524","1391"),
("1543","1391"),
("1503","1391"),
("1612","1391"),
("1399","1391"),
("1741","1700"),
("1561","1391"),
("1521","1391"),
("1575","1391"),
("1420","1391"),
("1401","1391"),
("1489","1391"),
("1659","1391"),
("1735","1700"),
("1402","1391"),
("1562","1391"),
("1629","1391"),
("1342","1342"),
("1343","1342"),
("1344","1342"),
("1345","1342"),
("1346","1342"),
("1347","1342"),
("1801","1342"),
("1349","657"),
("1350","657"),
("1351","657"),
("1352","657"),
("1353","657"),
("1354","657"),
("1355","657"),
("1356","657"),
("1357","657"),
("1358","657"),
("1359","657"),
("1360","657"),
("1361","657"),
("1362","657"),
("1363","657"),
("1364","657"),
("1365","657"),
("1366","657"),
("1367","657"),
("1368","657");




CREATE TABLE `module_function` (
  `module_id` int(11) NOT NULL,
  `function_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO module_function VALUES
("675","1"),
("675","2"),
("675","3"),
("675","4"),
("675","5"),
("98","6"),
("98","7"),
("98","8"),
("98","9"),
("98","10"),
("98","11"),
("98","12"),
("98","13"),
("98","14"),
("98","15"),
("98","16"),
("98","17"),
("98","18"),
("98","19"),
("98","20"),
("98","21"),
("98","22"),
("98","23"),
("98","24"),
("98","25"),
("98","26"),
("98","27"),
("98","28"),
("98","29"),
("98","30"),
("98","31"),
("98","32"),
("98","33"),
("98","34"),
("98","35"),
("98","36"),
("98","37"),
("98","38"),
("98","39"),
("98","40"),
("98","41"),
("98","42"),
("98","43"),
("98","44"),
("98","45"),
("98","46"),
("98","47"),
("98","48"),
("98","49"),
("98","50"),
("98","51"),
("98","52"),
("98","53"),
("98","54"),
("120","55"),
("120","56"),
("120","57"),
("120","58"),
("120","59"),
("120","60"),
("120","61"),
("120","62"),
("120","63"),
("120","64"),
("120","65"),
("120","66"),
("120","67"),
("120","68"),
("120","69"),
("120","70"),
("120","71"),
("120","72"),
("120","73"),
("120","74"),
("120","75"),
("120","76"),
("120","77"),
("120","78"),
("32","79"),
("32","80"),
("32","81"),
("32","82"),
("32","83"),
("32","84"),
("8","85"),
("8","86"),
("8","87"),
("8","88"),
("8","89"),
("8","90"),
("8","91"),
("8","92"),
("8","93"),
("8","94"),
("8","95"),
("8","96"),
("8","97"),
("8","98"),
("8","99"),
("8","100");
INSERT INTO module_function VALUES
("8","101"),
("8","102"),
("8","103"),
("8","104"),
("8","105"),
("8","106"),
("8","107"),
("8","108"),
("160","109"),
("160","110"),
("160","111"),
("160","112"),
("160","113"),
("160","114"),
("160","115"),
("160","116"),
("160","117"),
("160","118"),
("160","119"),
("160","120"),
("160","121"),
("160","122"),
("160","123"),
("160","124"),
("160","125"),
("160","126"),
("160","127"),
("160","128"),
("160","129"),
("160","130"),
("160","131"),
("160","132"),
("200","133"),
("200","134"),
("200","135"),
("200","136"),
("200","137"),
("200","138"),
("200","139"),
("200","140"),
("200","141"),
("159","142"),
("159","143"),
("159","144"),
("159","145"),
("159","146"),
("159","147"),
("159","148"),
("159","149"),
("159","150"),
("159","151"),
("159","152"),
("159","153"),
("1777","6015"),
("1777","6014"),
("1777","6013"),
("1777","6012"),
("1777","6011"),
("1777","6010"),
("1777","6009"),
("1777","6008"),
("1777","6006"),
("1777","6005"),
("1777","6004"),
("1777","6003"),
("1777","6002"),
("1776","6001"),
("1775","6000"),
("1775","5999"),
("1775","5998"),
("1775","5997"),
("1775","5996"),
("1775","5995"),
("1775","5994"),
("1775","5993"),
("1775","5992"),
("1772","5991"),
("1772","5990"),
("1772","5989"),
("1772","5988"),
("1758","5987"),
("208","182"),
("208","183"),
("208","184"),
("208","185"),
("208","186"),
("208","187"),
("208","188"),
("208","189"),
("208","190"),
("208","191"),
("208","192"),
("208","193"),
("208","194"),
("208","195"),
("208","196"),
("208","197"),
("208","198"),
("208","199"),
("208","200");
INSERT INTO module_function VALUES
("208","201"),
("208","202"),
("208","203"),
("208","204"),
("208","205"),
("208","206"),
("208","207"),
("208","208"),
("208","209"),
("208","210"),
("208","211"),
("208","212"),
("208","213"),
("208","214"),
("208","215"),
("208","216"),
("208","217"),
("208","218"),
("208","219"),
("208","220"),
("208","221"),
("208","222"),
("208","223"),
("208","224"),
("208","225"),
("208","226"),
("208","227"),
("208","228"),
("208","229"),
("208","230"),
("22","231"),
("22","232"),
("22","233"),
("22","234"),
("22","235"),
("22","236"),
("22","237"),
("22","238"),
("22","239"),
("22","240"),
("22","241"),
("22","242"),
("22","243"),
("22","244"),
("22","245"),
("22","246"),
("22","247"),
("22","248"),
("22","249"),
("22","250"),
("22","251"),
("22","252"),
("22","253"),
("22","254"),
("22","255"),
("22","256"),
("22","257"),
("22","258"),
("22","259"),
("22","260"),
("22","261"),
("22","262"),
("22","263"),
("22","264"),
("22","265"),
("22","266"),
("22","267"),
("22","268"),
("22","269"),
("134","270"),
("134","271"),
("134","272"),
("134","273"),
("134","274"),
("134","275"),
("134","276"),
("134","277"),
("134","278"),
("134","279"),
("134","280"),
("134","281"),
("134","282"),
("134","283"),
("134","284"),
("134","285"),
("134","286"),
("134","287"),
("134","288"),
("134","289"),
("134","290"),
("134","291"),
("134","292"),
("134","293"),
("202","294"),
("202","295"),
("202","296"),
("202","297"),
("675","298"),
("675","299"),
("675","300");
INSERT INTO module_function VALUES
("676","301"),
("676","302"),
("676","303"),
("676","304"),
("676","305"),
("676","306"),
("676","307"),
("676","308"),
("676","309"),
("676","310"),
("676","311"),
("676","312"),
("676","313"),
("676","314"),
("676","315"),
("676","316"),
("676","317"),
("676","318"),
("676","319"),
("676","320"),
("676","321"),
("676","322"),
("676","323"),
("676","324"),
("676","325"),
("676","326"),
("676","327"),
("676","328"),
("676","329"),
("676","330"),
("676","331"),
("676","332"),
("676","333"),
("676","334"),
("676","335"),
("676","336"),
("676","337"),
("676","338"),
("676","339"),
("676","340"),
("676","341"),
("676","342"),
("676","343"),
("676","344"),
("676","345"),
("676","346"),
("676","347"),
("676","348"),
("676","349"),
("676","350"),
("676","351"),
("676","352"),
("676","353"),
("676","354"),
("676","355"),
("676","356"),
("676","357"),
("676","358"),
("676","359"),
("676","360"),
("676","361"),
("676","362"),
("676","363"),
("676","364"),
("676","365"),
("676","366"),
("676","367"),
("676","368"),
("675","369"),
("675","370"),
("675","371"),
("675","372"),
("675","373"),
("677","369"),
("677","370"),
("677","371"),
("677","372"),
("677","373"),
("677","374"),
("677","375"),
("678","376"),
("678","377"),
("678","378"),
("678","379"),
("678","380"),
("678","381"),
("678","382"),
("678","383"),
("679","384"),
("679","385"),
("679","386"),
("679","387"),
("679","388"),
("679","389"),
("679","390"),
("679","391"),
("679","392"),
("679","393"),
("679","394"),
("679","395");
INSERT INTO module_function VALUES
("679","396"),
("679","397"),
("679","398"),
("679","399"),
("679","400"),
("679","401"),
("679","402"),
("679","403"),
("679","404"),
("679","405"),
("679","406"),
("679","407"),
("679","408"),
("679","409"),
("679","410"),
("679","411"),
("679","412"),
("679","413"),
("679","414"),
("679","415"),
("679","416"),
("679","417"),
("679","418"),
("679","419"),
("679","420"),
("679","421"),
("679","422"),
("679","423"),
("679","424"),
("679","425"),
("679","426"),
("679","427"),
("680","428"),
("680","429"),
("680","430"),
("680","431"),
("680","432"),
("680","433"),
("680","434"),
("680","435"),
("680","436"),
("680","437"),
("680","438"),
("680","439"),
("680","440"),
("680","441"),
("680","442"),
("680","443"),
("680","444"),
("680","445"),
("680","446"),
("680","447"),
("680","448"),
("680","449"),
("680","450"),
("680","451"),
("680","452"),
("680","453"),
("680","454"),
("680","455"),
("680","456"),
("680","457"),
("680","458"),
("680","459"),
("680","460"),
("680","461"),
("680","462"),
("680","463"),
("680","464"),
("680","465"),
("680","466"),
("681","467"),
("681","468"),
("681","469"),
("681","470"),
("681","471"),
("681","472"),
("681","473"),
("681","474"),
("681","475"),
("681","476"),
("681","477"),
("681","478"),
("681","479"),
("681","480"),
("681","481"),
("681","482"),
("681","483"),
("681","484"),
("681","485"),
("681","486"),
("681","487"),
("681","488"),
("681","489"),
("681","490"),
("681","491"),
("681","492"),
("681","493"),
("681","494"),
("681","495");
INSERT INTO module_function VALUES
("681","496"),
("681","497"),
("681","498"),
("681","499"),
("681","500"),
("681","501"),
("681","502"),
("681","503"),
("681","504"),
("681","505"),
("681","506"),
("681","507"),
("681","508"),
("681","509"),
("681","510"),
("681","511"),
("681","512"),
("681","513"),
("1783","6039"),
("1783","6038"),
("1783","6037"),
("1783","6036"),
("1783","6035"),
("1783","6034"),
("1783","6033"),
("1783","6032"),
("1783","6031"),
("1783","6030"),
("1783","6029"),
("1783","6028"),
("1783","6027"),
("1783","6026"),
("1783","6025"),
("1783","6024"),
("1783","6023"),
("1783","6022"),
("1783","6021"),
("1783","6020"),
("1783","6019"),
("1781","6018"),
("1777","6017"),
("1777","6016"),
("741","537"),
("180","538"),
("180","539"),
("180","540"),
("180","541"),
("180","542"),
("180","543"),
("180","544"),
("180","545"),
("180","546"),
("180","547"),
("180","548"),
("180","549"),
("180","550"),
("180","551"),
("180","552"),
("180","553"),
("180","554"),
("180","555"),
("180","556"),
("180","557"),
("180","558"),
("180","559"),
("180","560"),
("250","561"),
("250","562"),
("250","563"),
("250","564"),
("250","565"),
("250","566"),
("250","567"),
("244","568"),
("244","569"),
("244","570"),
("244","571"),
("244","572"),
("244","573"),
("244","574"),
("244","575"),
("244","576"),
("244","577"),
("244","578"),
("244","579"),
("244","580"),
("244","581"),
("244","582"),
("244","583"),
("244","584"),
("244","585"),
("244","586"),
("244","587"),
("244","588"),
("244","589"),
("244","590"),
("244","591"),
("244","592"),
("244","593"),
("244","594");
INSERT INTO module_function VALUES
("244","595"),
("244","596"),
("784","597"),
("784","598"),
("98","601"),
("786","600"),
("98","601"),
("211","602"),
("211","603"),
("211","604"),
("211","605"),
("211","606"),
("211","607"),
("211","608"),
("211","609"),
("211","610"),
("211","611"),
("211","612"),
("211","613"),
("211","614"),
("211","615"),
("211","616"),
("211","617"),
("211","618"),
("211","619"),
("211","620"),
("212","621"),
("212","622"),
("212","623"),
("212","624"),
("212","625"),
("212","626"),
("212","627"),
("212","628"),
("212","629"),
("212","630"),
("212","631"),
("212","632"),
("212","633"),
("212","634"),
("212","635"),
("212","636"),
("212","637"),
("212","638"),
("212","639"),
("212","640"),
("212","641"),
("212","642"),
("213","643"),
("213","644"),
("213","645"),
("213","646"),
("215","647"),
("215","648"),
("215","649"),
("215","650"),
("215","651"),
("215","652"),
("215","653"),
("215","654"),
("215","655"),
("215","656"),
("215","657"),
("215","658"),
("215","659"),
("215","660"),
("215","661"),
("215","662"),
("215","663"),
("215","664"),
("215","665"),
("215","666"),
("215","667"),
("215","668"),
("216","669"),
("216","670"),
("214","671"),
("214","672"),
("214","673"),
("214","674"),
("214","675"),
("214","676"),
("214","677"),
("214","678"),
("214","679"),
("214","680"),
("214","681"),
("217","682"),
("217","683"),
("217","684"),
("217","685"),
("217","686"),
("217","687"),
("217","688"),
("218","689"),
("218","690"),
("218","691"),
("218","692"),
("218","693"),
("218","694");
INSERT INTO module_function VALUES
("218","695"),
("218","696"),
("218","697"),
("219","698"),
("219","699"),
("219","700"),
("219","701"),
("219","702"),
("219","703"),
("219","704"),
("219","705"),
("219","706"),
("219","707"),
("219","708"),
("219","709"),
("219","710"),
("220","711"),
("221","712"),
("221","713"),
("221","714"),
("221","715"),
("221","716"),
("221","717"),
("221","718"),
("222","719"),
("222","720"),
("222","721"),
("222","722"),
("222","723"),
("222","724"),
("222","725"),
("222","726"),
("222","727"),
("223","728"),
("223","729"),
("223","730"),
("223","731"),
("223","732"),
("224","733"),
("224","734"),
("224","735"),
("224","736"),
("224","737"),
("224","738"),
("224","739"),
("224","740"),
("224","741"),
("224","742"),
("224","743"),
("224","744"),
("224","745"),
("224","746"),
("224","747"),
("224","748"),
("224","749"),
("224","750"),
("224","751"),
("224","752"),
("224","753"),
("224","754"),
("224","755"),
("224","756"),
("224","757"),
("225","758"),
("225","759"),
("225","760"),
("226","761"),
("226","762"),
("226","763"),
("226","764"),
("226","765"),
("226","766"),
("226","767"),
("226","768"),
("226","769"),
("226","770"),
("227","771"),
("227","772"),
("227","773"),
("227","774"),
("227","775"),
("227","776"),
("227","777"),
("227","778"),
("227","779"),
("227","780"),
("227","781"),
("227","782"),
("227","783"),
("227","784"),
("227","785"),
("227","786"),
("227","787"),
("228","788"),
("228","789"),
("228","790"),
("229","791"),
("229","792"),
("229","793"),
("229","794");
INSERT INTO module_function VALUES
("229","795"),
("229","796"),
("229","797"),
("229","798"),
("230","799"),
("231","800"),
("231","801"),
("232","802"),
("233","803"),
("233","804"),
("233","805"),
("233","806"),
("233","807"),
("233","808"),
("233","809"),
("233","810"),
("233","811"),
("233","812"),
("233","813"),
("233","814"),
("233","815"),
("233","816"),
("233","817"),
("233","818"),
("233","819"),
("233","820"),
("233","821"),
("233","822"),
("233","823"),
("233","824"),
("233","825"),
("233","826"),
("233","827"),
("233","828"),
("233","829"),
("233","830"),
("233","831"),
("233","832"),
("233","833"),
("233","834"),
("233","835"),
("233","836"),
("233","837"),
("234","838"),
("234","839"),
("234","840"),
("234","841"),
("234","842"),
("235","843"),
("235","844"),
("235","845"),
("235","846"),
("235","847"),
("236","848"),
("236","849"),
("236","850"),
("236","851"),
("236","852"),
("236","853"),
("236","854"),
("236","855"),
("236","856"),
("236","857"),
("236","858"),
("784","859"),
("788","860"),
("788","861"),
("789","862"),
("790","863"),
("791","864"),
("792","865"),
("742","866"),
("743","867"),
("744","868"),
("745","869"),
("746","870"),
("747","871"),
("748","872"),
("754","873"),
("802","874"),
("749","875"),
("750","876"),
("751","877"),
("752","878"),
("753","879"),
("803","880"),
("804","881"),
("805","882"),
("806","883"),
("807","884"),
("808","885"),
("809","886"),
("810","887"),
("811","888"),
("812","889"),
("813","890"),
("814","891"),
("815","892"),
("1783","6040"),
("983","894");
INSERT INTO module_function VALUES
("984","895"),
("985","896"),
("987","897"),
("989","898"),
("988","899"),
("1178","900"),
("1179","901"),
("1193","1637"),
("1181","903"),
("1182","904"),
("658","905"),
("658","906"),
("658","907"),
("658","908"),
("658","909"),
("658","910"),
("658","911"),
("658","912"),
("658","913"),
("658","914"),
("658","915"),
("658","916"),
("658","917"),
("658","918"),
("658","919"),
("658","920"),
("658","921"),
("658","922"),
("658","923"),
("658","924"),
("658","925"),
("658","926"),
("658","927"),
("658","928"),
("659","929"),
("660","930"),
("660","931"),
("660","932"),
("660","933"),
("660","934"),
("660","935"),
("660","936"),
("660","937"),
("660","938"),
("660","939"),
("660","940"),
("660","941"),
("660","942"),
("660","943"),
("660","944"),
("660","945"),
("660","946"),
("661","947"),
("661","948"),
("661","949"),
("661","950"),
("661","951"),
("661","952"),
("662","953"),
("663","954"),
("664","955"),
("665","956"),
("665","957"),
("665","958"),
("665","959"),
("665","960"),
("665","961"),
("666","962"),
("667","963"),
("667","964"),
("667","965"),
("667","966"),
("667","967"),
("667","968"),
("667","969"),
("667","970"),
("667","971"),
("667","972"),
("667","973"),
("667","974"),
("667","975"),
("667","976"),
("667","977"),
("667","978"),
("667","979"),
("667","980"),
("667","981"),
("667","982"),
("667","983"),
("667","984"),
("667","985"),
("667","986"),
("667","987"),
("667","988"),
("667","989"),
("667","990"),
("667","991"),
("667","992"),
("667","993"),
("667","994");
INSERT INTO module_function VALUES
("667","995"),
("667","996"),
("667","997"),
("667","998"),
("667","999"),
("667","1000"),
("667","1001"),
("667","1002"),
("667","1003"),
("667","1004"),
("667","1005"),
("667","1006"),
("667","1007"),
("667","1008"),
("667","1009"),
("667","1010"),
("667","1011"),
("667","1012"),
("667","1013"),
("667","1014"),
("667","1015"),
("667","1016"),
("667","1017"),
("667","1018"),
("667","1019"),
("667","1020"),
("667","1021"),
("667","1022"),
("667","1023"),
("667","1024"),
("667","1025"),
("667","1026"),
("667","1027"),
("667","1028"),
("667","1029"),
("667","1030"),
("667","1031"),
("667","1032"),
("667","1033"),
("668","1034"),
("668","1035"),
("668","1036"),
("668","1037"),
("668","1038"),
("668","1039"),
("668","1040"),
("668","1041"),
("668","1042"),
("668","1043"),
("668","1044"),
("668","1045"),
("668","1046"),
("668","1047"),
("668","1048"),
("668","1049"),
("668","1050"),
("668","1051"),
("668","1052"),
("668","1053"),
("668","1054"),
("668","1055"),
("668","1056"),
("668","1057"),
("668","1058"),
("668","1059"),
("668","1060"),
("668","1061"),
("668","1062"),
("668","1063"),
("668","1064"),
("668","1065"),
("668","1066"),
("668","1067"),
("668","1068"),
("668","1069"),
("668","1070"),
("668","1071"),
("668","1072"),
("668","1073"),
("669","1074"),
("670","1075"),
("670","1076"),
("670","1077"),
("670","1078"),
("670","1079"),
("670","1080"),
("670","1081"),
("670","1082"),
("670","1083"),
("670","1084"),
("670","1085"),
("670","1086"),
("670","1087"),
("670","1088"),
("670","1089"),
("670","1090"),
("670","1091"),
("670","1092"),
("670","1093"),
("670","1094");
INSERT INTO module_function VALUES
("670","1095"),
("671","1096"),
("671","1097"),
("671","1098"),
("671","1099"),
("671","1100"),
("671","1101"),
("671","1102"),
("671","1103"),
("671","1104"),
("671","1105"),
("671","1106"),
("672","1107"),
("672","1108"),
("672","1109"),
("1182","1110"),
("1182","1111"),
("786","1112"),
("786","1113"),
("1183","1114"),
("1184","1115"),
("1185","1116"),
("1186","1117"),
("1187","1118"),
("1188","1119"),
("666","1120"),
("666","1121"),
("666","1122"),
("666","1123"),
("666","1124"),
("666","1125"),
("666","1126"),
("666","1127"),
("666","1128"),
("666","1129"),
("666","1130"),
("666","1131"),
("666","1132"),
("666","1133"),
("666","1134"),
("666","1135"),
("666","1136"),
("666","1137"),
("666","1138"),
("666","1139"),
("666","1140"),
("666","1141"),
("666","1142"),
("666","1143"),
("666","1144"),
("666","1145"),
("666","1146"),
("666","1147"),
("666","1148"),
("666","1149"),
("666","1150"),
("666","1151"),
("666","1152"),
("666","1153"),
("666","1154"),
("238","1155"),
("238","1155"),
("238","1155"),
("238","1156"),
("238","1157"),
("238","1158"),
("238","1159"),
("238","1160"),
("238","1161"),
("238","1162"),
("238","1163"),
("238","1164"),
("238","1165"),
("238","1166"),
("238","1167"),
("238","1168"),
("238","1169"),
("238","1170"),
("238","1171"),
("238","1172"),
("238","1173"),
("238","1174"),
("238","1175"),
("238","1176"),
("238","1177"),
("238","1178"),
("238","1179"),
("238","1180"),
("252","1181"),
("252","1182"),
("252","1183"),
("252","1184"),
("252","1185"),
("252","1186"),
("252","1187"),
("252","1188"),
("252","1189"),
("252","1190"),
("252","1191"),
("252","1192");
INSERT INTO module_function VALUES
("252","1193"),
("252","1194"),
("252","1195"),
("252","1196"),
("252","1197"),
("252","1198"),
("252","1199"),
("252","1200"),
("252","1201"),
("252","1202"),
("252","1203"),
("252","1204"),
("252","1205"),
("252","1206"),
("252","1207"),
("252","1208"),
("252","1209"),
("252","1210"),
("252","1211"),
("252","1212"),
("252","1213"),
("252","1214"),
("252","1215"),
("252","1216"),
("252","1217"),
("252","1218"),
("252","1219"),
("252","1220"),
("252","1221"),
("252","1222"),
("252","1223"),
("252","1224"),
("786","1225"),
("1190","1226"),
("254","1227"),
("254","1228"),
("254","1229"),
("254","1230"),
("254","1231"),
("254","1232"),
("254","1233"),
("254","1234"),
("254","1235"),
("254","1236"),
("254","1237"),
("254","1238"),
("254","1239"),
("254","1240"),
("254","1241"),
("239","1242"),
("239","1243"),
("239","1244"),
("239","1245"),
("239","1246"),
("239","1247"),
("239","1248"),
("239","1249"),
("239","1250"),
("239","1251"),
("239","1252"),
("242","1253"),
("242","1254"),
("242","1255"),
("242","1256"),
("242","1257"),
("242","1258"),
("242","1259"),
("242","1260"),
("242","1261"),
("786","1262"),
("1191","1263"),
("1191","1264"),
("1191","1265"),
("241","1264"),
("241","1265"),
("241","1266"),
("241","1267"),
("241","1268"),
("241","1269"),
("241","1270"),
("241","1271"),
("241","1272"),
("241","1273"),
("241","1274"),
("241","1275"),
("241","1276"),
("241","1277"),
("241","1278"),
("241","1279"),
("241","1280"),
("241","1281"),
("241","1282"),
("241","1283"),
("241","1284"),
("241","1285"),
("241","1286"),
("237","1287"),
("237","1288"),
("237","1289"),
("237","1290");
INSERT INTO module_function VALUES
("240","1291"),
("240","1292"),
("243","1293"),
("243","1294"),
("243","1295"),
("243","1296"),
("243","1297"),
("243","1298"),
("243","1299"),
("243","1300"),
("243","1301"),
("243","1302"),
("243","1303"),
("243","1304"),
("243","1305"),
("243","1306"),
("243","1307"),
("243","1308"),
("245","1308"),
("245","1309"),
("245","1310"),
("245","1311"),
("245","1312"),
("245","1313"),
("245","1314"),
("245","1315"),
("245","1316"),
("245","1317"),
("245","1318"),
("245","1319"),
("245","1320"),
("245","1321"),
("245","1322"),
("245","1323"),
("245","1324"),
("245","1325"),
("245","1326"),
("245","1327"),
("245","1328"),
("246","1329"),
("246","1330"),
("246","1331"),
("246","1332"),
("246","1333"),
("246","1334"),
("246","1335"),
("246","1336"),
("246","1337"),
("246","1338"),
("246","1339"),
("246","1340"),
("246","1341"),
("246","1342"),
("246","1343"),
("246","1344"),
("246","1345"),
("246","1346"),
("246","1347"),
("246","1348"),
("246","1349"),
("246","1350"),
("246","1351"),
("246","1352"),
("246","1353"),
("246","1354"),
("246","1355"),
("246","1356"),
("246","1357"),
("246","1358"),
("246","1359"),
("246","1360"),
("246","1361"),
("246","1362"),
("246","1363"),
("246","1364"),
("246","1365"),
("246","1366"),
("246","1367"),
("246","1368"),
("246","1369"),
("246","1370"),
("246","1371"),
("246","1372"),
("246","1373"),
("246","1374"),
("246","1375"),
("246","1376"),
("247","1377"),
("247","1378"),
("247","1379"),
("247","1380"),
("247","1381"),
("247","1382"),
("247","1383"),
("247","1384"),
("247","1385"),
("247","1386"),
("247","1387"),
("247","1388"),
("247","1389");
INSERT INTO module_function VALUES
("247","1390"),
("247","1391"),
("247","1392"),
("247","1393"),
("247","1394"),
("247","1395"),
("247","1396"),
("247","1397"),
("247","1398"),
("248","1399"),
("248","1400"),
("248","1401"),
("248","1402"),
("248","1403"),
("248","1404"),
("249","1405"),
("249","1406"),
("249","1407"),
("249","1408"),
("249","1409"),
("249","1410"),
("249","1411"),
("249","1412"),
("249","1413"),
("249","1414"),
("249","1415"),
("249","1416"),
("249","1417"),
("249","1418"),
("249","1419"),
("249","1420"),
("249","1421"),
("249","1422"),
("253","1423"),
("253","1424"),
("253","1425"),
("253","1426"),
("253","1427"),
("253","1428"),
("253","1429"),
("253","1430"),
("255","1431"),
("255","1432"),
("255","1433"),
("256","1434"),
("256","1435"),
("256","1436"),
("256","1437"),
("256","1438"),
("256","1439"),
("256","1440"),
("256","1441"),
("256","1442"),
("256","1443"),
("256","1444"),
("256","1445"),
("256","1446"),
("257","1447"),
("257","1448"),
("257","1449"),
("257","1450"),
("257","1451"),
("257","1452"),
("257","1453"),
("257","1454"),
("257","1455"),
("257","1456"),
("258","1457"),
("258","1458"),
("258","1459"),
("258","1460"),
("258","1461"),
("258","1462"),
("258","1463"),
("258","1464"),
("258","1465"),
("258","1466"),
("258","1467"),
("258","1468"),
("258","1469"),
("258","1470"),
("258","1471"),
("258","1472"),
("258","1473"),
("258","1474"),
("258","1475"),
("258","1476"),
("258","1477"),
("259","1478"),
("259","1479"),
("259","1480"),
("259","1481"),
("259","1482"),
("259","1483"),
("259","1484"),
("260","1485"),
("260","1486"),
("260","1487"),
("260","1488"),
("260","1489");
INSERT INTO module_function VALUES
("260","1490"),
("261","1491"),
("261","1492"),
("261","1493"),
("261","1494"),
("261","1495"),
("261","1496"),
("261","1497"),
("261","1498"),
("261","1499"),
("261","1500"),
("261","1501"),
("261","1502"),
("261","1503"),
("261","1504"),
("261","1505"),
("261","1506"),
("261","1507"),
("261","1508"),
("261","1509"),
("261","1510"),
("261","1511"),
("261","1512"),
("261","1513"),
("261","1514"),
("261","1515"),
("261","1516"),
("261","1517"),
("261","1518"),
("261","1519"),
("261","1520"),
("261","1521"),
("261","1522"),
("261","1523"),
("261","1524"),
("261","1525"),
("261","1526"),
("261","1527"),
("261","1528"),
("261","1529"),
("261","1530"),
("261","1531"),
("261","1532"),
("261","1533"),
("261","1534"),
("261","1535"),
("261","1536"),
("261","1537"),
("261","1538"),
("261","1539"),
("261","1540"),
("261","1541"),
("261","1542"),
("261","1543"),
("261","1544"),
("261","1545"),
("261","1546"),
("261","1547"),
("262","1548"),
("262","1549"),
("262","1550"),
("262","1551"),
("262","1552"),
("262","1553"),
("262","1554"),
("262","1555"),
("262","1556"),
("262","1557"),
("262","1558"),
("262","1559"),
("262","1560"),
("262","1561"),
("262","1562"),
("262","1563"),
("262","1564"),
("262","1565"),
("262","1566"),
("262","1567"),
("262","1568"),
("262","1569"),
("262","1570"),
("262","1571"),
("262","1572"),
("262","1573"),
("262","1574"),
("262","1575"),
("262","1576"),
("262","1577"),
("262","1578"),
("262","1579"),
("262","1580"),
("262","1581"),
("262","1582"),
("262","1583"),
("262","1584"),
("262","1585"),
("262","1586"),
("262","1587"),
("262","1588"),
("262","1589");
INSERT INTO module_function VALUES
("262","1590"),
("262","1591"),
("262","1592"),
("262","1593"),
("262","1594"),
("262","1595"),
("263","1596"),
("263","1597"),
("263","1598"),
("263","1599"),
("263","1600"),
("263","1601"),
("263","1602"),
("263","1603"),
("263","1604"),
("263","1605"),
("263","1606"),
("263","1607"),
("263","1608"),
("263","1609"),
("263","1610"),
("263","1611"),
("264","1612"),
("265","1613"),
("265","1614"),
("265","1615"),
("265","1616"),
("265","1617"),
("265","1618"),
("265","1619"),
("265","1620"),
("265","1621"),
("265","1622"),
("266","1623"),
("266","1624"),
("266","1625"),
("266","1626"),
("266","1627"),
("266","1628"),
("266","1629"),
("266","1630"),
("266","1631"),
("266","1632"),
("266","1633"),
("266","1634"),
("266","1635"),
("1192","1636"),
("251","1638"),
("85","1639"),
("85","1640"),
("85","1641"),
("85","1642"),
("85","1643"),
("85","1644"),
("85","1645"),
("85","1646"),
("85","1647"),
("85","1648"),
("85","1649"),
("85","1650"),
("85","1651"),
("85","1652"),
("85","1653"),
("85","1654"),
("85","1655"),
("85","1656"),
("85","1657"),
("85","1658"),
("85","1659"),
("85","1660"),
("85","1661"),
("85","1662"),
("85","1663"),
("85","1664"),
("85","1665"),
("85","1666"),
("85","1667"),
("85","1668"),
("85","1669"),
("85","1670"),
("85","1671"),
("85","1672"),
("85","1673"),
("85","1674"),
("85","1675"),
("85","1676"),
("85","1677"),
("85","1678"),
("85","1679"),
("85","1680"),
("85","1681"),
("85","1682"),
("85","1683"),
("85","1684"),
("85","1685"),
("85","1686"),
("85","1687"),
("85","1688"),
("85","1689"),
("85","1690");
INSERT INTO module_function VALUES
("85","1691"),
("85","1692"),
("85","1693"),
("85","1694"),
("85","1695"),
("85","1696"),
("85","1697"),
("85","1698"),
("85","1699"),
("85","1700"),
("85","1701"),
("85","1702"),
("85","1703"),
("85","1704"),
("85","1705"),
("85","1706"),
("85","1707"),
("85","1708"),
("85","1709"),
("85","1710"),
("85","1711"),
("85","1712"),
("85","1713"),
("85","1714"),
("85","1715"),
("85","1716"),
("85","1717"),
("85","1718"),
("85","1719"),
("85","1720"),
("85","1721"),
("85","1722"),
("85","1723"),
("85","1724"),
("85","1725"),
("85","1726"),
("85","1727"),
("85","1728"),
("85","1729"),
("85","1730"),
("85","1731"),
("85","1732"),
("85","1733"),
("85","1734"),
("85","1735"),
("85","1736"),
("85","1737"),
("85","1738"),
("85","1739"),
("85","1740"),
("85","1741"),
("85","1742"),
("85","1743"),
("167","1744"),
("167","1745"),
("167","1746"),
("167","1747"),
("167","1748"),
("167","1749"),
("167","1750"),
("167","1751"),
("167","1752"),
("167","1753"),
("167","1754"),
("167","1755"),
("167","1756"),
("167","1757"),
("167","1758"),
("167","1759"),
("167","1760"),
("167","1761"),
("167","1762"),
("167","1763"),
("167","1764"),
("167","1765"),
("167","1766"),
("167","1767"),
("167","1768"),
("167","1769"),
("167","1770"),
("167","1771"),
("167","1772"),
("167","1773"),
("167","1774"),
("167","1775"),
("167","1776"),
("167","1777"),
("167","1778"),
("167","1779"),
("167","1780"),
("167","1781"),
("167","1782"),
("167","1783"),
("167","1784"),
("167","1785"),
("167","1786"),
("167","1787"),
("167","1788"),
("167","1789"),
("167","1790");
INSERT INTO module_function VALUES
("167","1791"),
("167","1792"),
("167","1793"),
("167","1794"),
("167","1795"),
("167","1796"),
("167","1797"),
("167","1798"),
("167","1799"),
("167","1800"),
("167","1801"),
("167","1802"),
("167","1803"),
("167","1804"),
("167","1805"),
("167","1806"),
("167","1807"),
("167","1808"),
("167","1809"),
("167","1810"),
("167","1811"),
("167","1812"),
("167","1813"),
("167","1814"),
("167","1815"),
("167","1816"),
("167","1817"),
("167","1818"),
("167","1819"),
("167","1820"),
("167","1821"),
("167","1822"),
("167","1823"),
("167","1824"),
("167","1825"),
("167","1826"),
("167","1827"),
("167","1828"),
("167","1829"),
("111","1830"),
("111","1831"),
("111","1832"),
("111","1833"),
("111","1834"),
("111","1835"),
("111","1836"),
("111","1837"),
("111","1838"),
("111","1839"),
("111","1840"),
("111","1841"),
("111","1842"),
("111","1843"),
("111","1844"),
("111","1845"),
("111","1846"),
("111","1847"),
("111","1848"),
("111","1849"),
("111","1850"),
("111","1851"),
("111","1852"),
("111","1853"),
("111","1854"),
("111","1855"),
("111","1856"),
("111","1857"),
("111","1858"),
("111","1859"),
("111","1860"),
("111","1861"),
("111","1862"),
("111","1863"),
("111","1864"),
("111","1865"),
("111","1866"),
("111","1867"),
("111","1868"),
("111","1869"),
("111","1870"),
("111","1871"),
("111","1872"),
("111","1873"),
("111","1874"),
("111","1875"),
("111","1876"),
("111","1877"),
("111","1878"),
("111","1879"),
("111","1880"),
("111","1881"),
("111","1882"),
("111","1883"),
("111","1884"),
("111","1885"),
("111","1886"),
("111","1887"),
("111","1888"),
("111","1889"),
("111","1890");
INSERT INTO module_function VALUES
("111","1891"),
("111","1892"),
("111","1893"),
("111","1894"),
("111","1895"),
("111","1896"),
("111","1897"),
("111","1898"),
("111","1899"),
("111","1900"),
("111","1901"),
("111","1902"),
("111","1903"),
("111","1904"),
("111","1905"),
("111","1906"),
("111","1907"),
("111","1908"),
("111","1909"),
("111","1910"),
("111","1911"),
("111","1912"),
("111","1913"),
("111","1914"),
("111","1915"),
("111","1916"),
("111","1917"),
("111","1918"),
("111","1919"),
("111","1920"),
("111","1921"),
("111","1922"),
("111","1923"),
("111","1924"),
("111","1925"),
("111","1926"),
("111","1927"),
("111","1928"),
("111","1929"),
("111","1930"),
("111","1931"),
("111","1932"),
("111","1933"),
("111","1934"),
("111","1935"),
("111","1936"),
("111","1937"),
("111","1938"),
("111","1939"),
("111","1940"),
("111","1941"),
("111","1942"),
("111","1943"),
("111","1944"),
("111","1945"),
("111","1946"),
("111","1947"),
("111","1948"),
("111","1949"),
("111","1950"),
("111","1951"),
("111","1952"),
("111","1953"),
("111","1954"),
("111","1955"),
("111","1956"),
("111","1957"),
("111","1958"),
("111","1959"),
("111","1960"),
("111","1961"),
("111","1962"),
("111","1963"),
("111","1964"),
("111","1965"),
("111","1966"),
("111","1967"),
("111","1968"),
("111","1969"),
("111","1970"),
("111","1971"),
("111","1972"),
("111","1973"),
("111","1974"),
("111","1975"),
("111","1976"),
("111","1977"),
("111","1978"),
("111","1979"),
("111","1980"),
("111","1981"),
("111","1982"),
("111","1983"),
("111","1984"),
("111","1985"),
("111","1986"),
("111","1987"),
("111","1988"),
("111","1989"),
("111","1990");
INSERT INTO module_function VALUES
("111","1991"),
("111","1992"),
("111","1993"),
("111","1994"),
("111","1995"),
("111","1996"),
("111","1997"),
("111","1998"),
("111","1999"),
("111","2000"),
("111","2001"),
("111","2002"),
("111","2003"),
("111","2004"),
("111","2005"),
("111","2006"),
("111","2007"),
("111","2008"),
("111","2009"),
("111","2010"),
("111","2011"),
("111","2012"),
("111","2013"),
("111","2014"),
("111","2015"),
("111","2016"),
("111","2017"),
("111","2018"),
("111","2019"),
("111","2020"),
("111","2021"),
("111","2022"),
("111","2023"),
("111","2024"),
("111","2025"),
("111","2026"),
("111","2027"),
("111","2028"),
("111","2029"),
("111","2030"),
("111","2031"),
("111","2032"),
("111","2033"),
("111","2034"),
("111","2035"),
("111","2036"),
("111","2037"),
("111","2038"),
("111","2039"),
("111","2040"),
("111","2041"),
("111","2042"),
("111","2043"),
("111","2044"),
("111","2045"),
("111","2046"),
("111","2047"),
("111","2048"),
("111","2049"),
("111","2050"),
("111","2051"),
("111","2052"),
("111","2053"),
("111","2054"),
("111","2055"),
("111","2056"),
("111","2057"),
("111","2058"),
("111","2059"),
("111","2060"),
("111","2061"),
("111","2062"),
("111","2063"),
("111","2064"),
("111","2065"),
("111","2066"),
("111","2067"),
("111","2068"),
("111","2069"),
("111","2070"),
("111","2071"),
("111","2072"),
("111","2073"),
("111","2074"),
("111","2075"),
("111","2076"),
("111","2077"),
("111","2078"),
("111","2079"),
("111","2080"),
("111","2081"),
("111","2082"),
("111","2083"),
("111","2084"),
("111","2085"),
("111","2086"),
("111","2087"),
("111","2088"),
("111","2089"),
("111","2090");
INSERT INTO module_function VALUES
("111","2091"),
("111","2092"),
("111","2093"),
("111","2094"),
("111","2095"),
("111","2096"),
("111","2097"),
("111","2098"),
("111","2099"),
("111","2100"),
("111","2101"),
("111","2102"),
("111","2103"),
("111","2104"),
("111","2105"),
("111","2106"),
("111","2107"),
("111","2108"),
("111","2109"),
("111","2110"),
("111","2111"),
("111","2112"),
("111","2113"),
("111","2114"),
("111","2115"),
("111","2116"),
("111","2117"),
("111","2118"),
("111","2119"),
("111","2120"),
("111","2121"),
("111","2122"),
("111","2123"),
("111","2124"),
("111","2125"),
("111","2126"),
("111","2127"),
("111","2128"),
("111","2129"),
("111","2130"),
("111","2131"),
("111","2132"),
("111","2133"),
("111","2134"),
("111","2135"),
("111","2136"),
("111","2137"),
("111","2138"),
("111","2139"),
("111","2140"),
("111","2141"),
("111","2142"),
("111","2143"),
("111","2144"),
("111","2145"),
("111","2146"),
("111","2147"),
("111","2148"),
("111","2149"),
("173","2150"),
("173","2151"),
("173","2152"),
("173","2153"),
("173","2154"),
("173","2155"),
("173","2156"),
("173","2157"),
("173","2158"),
("173","2159"),
("173","2160"),
("173","2161"),
("30","2162"),
("30","2163"),
("30","2164"),
("27","2165"),
("27","2166"),
("27","2167"),
("27","2168"),
("27","2169"),
("27","2170"),
("27","2171"),
("27","2172"),
("27","2173"),
("27","2174"),
("27","2175"),
("27","2176"),
("27","2177"),
("27","2178"),
("27","2179"),
("27","2180"),
("27","2181"),
("27","2182"),
("27","2183"),
("27","2184"),
("111","2185"),
("111","2186"),
("111","2187"),
("111","2188"),
("111","2189"),
("111","2190");
INSERT INTO module_function VALUES
("111","2191"),
("111","2192"),
("111","2193"),
("111","2194"),
("205","2195"),
("205","2196"),
("1194","2196"),
("1194","2197"),
("1194","2198"),
("1194","2199"),
("1194","2200"),
("1194","2201"),
("1194","2202"),
("1194","2203"),
("1194","2204"),
("1194","2205"),
("1194","2206"),
("1194","2207"),
("1194","2208"),
("1194","2209"),
("1194","2210"),
("1194","2211"),
("1194","2212"),
("1194","2213"),
("1194","2214"),
("1194","2215"),
("1194","2216"),
("1194","2217"),
("1194","2218"),
("1194","2219"),
("1194","2220"),
("1194","2221"),
("1194","2222"),
("1194","2223"),
("1194","2224"),
("1194","2225"),
("1194","2226"),
("193","2227"),
("193","2228"),
("193","2229"),
("193","2230"),
("193","2231"),
("193","2232"),
("193","2233"),
("193","2234"),
("193","2235"),
("193","2236"),
("193","2237"),
("193","2238"),
("193","2239"),
("193","2240"),
("193","2241"),
("193","2242"),
("193","2243"),
("193","2244"),
("193","2245"),
("193","2246"),
("193","2247"),
("193","2248"),
("193","2249"),
("193","2250"),
("193","2251"),
("193","2252"),
("193","2253"),
("193","2254"),
("193","2255"),
("193","2256"),
("193","2257"),
("193","2258"),
("193","2259"),
("193","2260"),
("193","2261"),
("193","2262"),
("193","2263"),
("193","2264"),
("193","2265"),
("193","2266"),
("193","2267"),
("193","2268"),
("193","2269"),
("193","2270"),
("193","2271"),
("193","2272"),
("193","2273"),
("193","2274"),
("193","2275"),
("193","2276"),
("193","2277"),
("193","2278"),
("193","2279"),
("193","2280"),
("193","2281"),
("193","2282"),
("193","2283"),
("193","2284"),
("193","2285"),
("193","2286"),
("193","2287"),
("193","2288"),
("193","2289");
INSERT INTO module_function VALUES
("193","2290"),
("193","2291"),
("193","2292"),
("193","2293"),
("193","2294"),
("193","2295"),
("193","2296"),
("193","2297"),
("193","2298"),
("193","2299"),
("193","2300"),
("193","2301"),
("193","2302"),
("193","2303"),
("193","2304"),
("193","2305"),
("193","2306"),
("193","2307"),
("193","2308"),
("193","2309"),
("193","2310"),
("193","2311"),
("193","2312"),
("193","2313"),
("193","2314"),
("193","2315"),
("193","2316"),
("193","2317"),
("193","2318"),
("193","2319"),
("193","2320"),
("193","2321"),
("193","2322"),
("193","2323"),
("193","2324"),
("193","2325"),
("193","2326"),
("193","2327"),
("193","2328"),
("193","2329"),
("193","2330"),
("193","2331"),
("193","2332"),
("193","2333"),
("193","2334"),
("193","2335"),
("193","2336"),
("193","2337"),
("193","2338"),
("193","2339"),
("193","2340"),
("193","2341"),
("193","2342"),
("193","2343"),
("193","2344"),
("193","2345"),
("193","2346"),
("193","2347"),
("193","2348"),
("193","2349"),
("193","2350"),
("193","2351"),
("193","2352"),
("193","2353"),
("193","2354"),
("193","2355"),
("193","2356"),
("193","2357"),
("193","2358"),
("193","2359"),
("193","2360"),
("193","2361"),
("193","2362"),
("193","2363"),
("193","2364"),
("193","2365"),
("193","2366"),
("193","2367"),
("193","2368"),
("153","2369"),
("153","2370"),
("153","2371"),
("153","2372"),
("153","2373"),
("153","2374"),
("153","2375"),
("153","2376"),
("153","2377"),
("153","2378"),
("153","2379"),
("153","2380"),
("153","2381"),
("153","2382"),
("153","2383"),
("153","2384"),
("153","2385"),
("153","2386"),
("153","2387"),
("153","2388"),
("153","2389");
INSERT INTO module_function VALUES
("153","2390"),
("153","2391"),
("153","2392"),
("153","2393"),
("153","2394"),
("153","2395"),
("153","2396"),
("153","2397"),
("153","2398"),
("153","2399"),
("153","2400"),
("153","2401"),
("153","2402"),
("153","2403"),
("153","2404"),
("153","2405"),
("153","2406"),
("153","2407"),
("153","2408"),
("153","2409"),
("153","2410"),
("153","2411"),
("153","2412"),
("153","2413"),
("153","2414"),
("153","2415"),
("153","2416"),
("153","2417"),
("153","2418"),
("153","2419"),
("153","2420"),
("153","2421"),
("153","2422"),
("153","2423"),
("153","2424"),
("153","2425"),
("153","2426"),
("153","2427"),
("153","2428"),
("153","2429"),
("153","2430"),
("153","2431"),
("153","2432"),
("153","2433"),
("153","2434"),
("153","2435"),
("153","2436"),
("153","2437"),
("153","2438"),
("153","2439"),
("153","2440"),
("153","2441"),
("153","2442"),
("153","2443"),
("153","2444"),
("153","2445"),
("153","2446"),
("153","2447"),
("153","2448"),
("153","2449"),
("153","2450"),
("153","2451"),
("153","2452"),
("153","2453"),
("153","2454"),
("153","2455"),
("153","2456"),
("153","2457"),
("153","2458"),
("153","2459"),
("153","2460"),
("153","2461"),
("153","2462"),
("153","2463"),
("153","2464"),
("153","2465"),
("153","2466"),
("153","2467"),
("153","2468"),
("153","2469"),
("153","2470"),
("153","2471"),
("153","2472"),
("153","2473"),
("153","2474"),
("153","2475"),
("153","2476"),
("153","2477"),
("153","2478"),
("153","2479"),
("153","2480"),
("153","2481"),
("153","2482"),
("153","2483"),
("153","2484"),
("153","2485"),
("153","2486"),
("153","2487"),
("153","2488"),
("153","2489");
INSERT INTO module_function VALUES
("153","2490"),
("153","2491"),
("153","2492"),
("153","2493"),
("153","2494"),
("153","2495"),
("153","2496"),
("201","2497"),
("201","2498"),
("201","2499"),
("201","2500"),
("201","2501"),
("201","2502"),
("201","2503"),
("201","2504"),
("201","2505"),
("201","2506"),
("201","2507"),
("201","2508"),
("201","2509"),
("201","2510"),
("201","2511"),
("201","2512"),
("201","2513"),
("201","2514"),
("201","2515"),
("201","2516"),
("201","2517"),
("201","2518"),
("201","2519"),
("201","2520"),
("201","2521"),
("201","2522"),
("201","2523"),
("201","2524"),
("201","2525"),
("201","2526"),
("201","2527"),
("201","2528"),
("201","2529"),
("201","2530"),
("201","2531"),
("201","2532"),
("201","2533"),
("201","2534"),
("201","2535"),
("201","2536"),
("201","2537"),
("201","2538"),
("201","2539"),
("201","2540"),
("201","2541"),
("201","2542"),
("201","2543"),
("201","2544"),
("201","2545"),
("201","2546"),
("201","2547"),
("201","2548"),
("201","2549"),
("201","2550"),
("201","2551"),
("201","2552"),
("201","2553"),
("201","2554"),
("201","2555"),
("201","2556"),
("154","2557"),
("154","2558"),
("154","2559"),
("154","2560"),
("154","2561"),
("154","2562"),
("154","2563"),
("154","2564"),
("154","2565"),
("154","2566"),
("154","2567"),
("154","2568"),
("154","2569"),
("154","2570"),
("154","2571"),
("154","2572"),
("154","2573"),
("154","2574"),
("154","2575"),
("154","2576"),
("154","2577"),
("154","2578"),
("154","2579"),
("154","2580"),
("154","2581"),
("154","2582"),
("154","2583"),
("154","2584"),
("154","2585"),
("154","2586"),
("154","2587"),
("154","2588"),
("154","2589");
INSERT INTO module_function VALUES
("154","2590"),
("154","2591"),
("154","2592"),
("154","2593"),
("154","2594"),
("154","2595"),
("177","2596"),
("177","2597"),
("177","2598"),
("177","2599"),
("177","2600"),
("177","2601"),
("177","2602"),
("177","2603"),
("177","2604"),
("177","2605"),
("177","2606"),
("177","2607"),
("177","2608"),
("177","2609"),
("177","2610"),
("177","2611"),
("177","2612"),
("177","2613"),
("177","2614"),
("177","2615"),
("177","2616"),
("177","2617"),
("177","2618"),
("177","2619"),
("177","2620"),
("177","2621"),
("177","2622"),
("177","2623"),
("177","2624"),
("177","2625"),
("177","2626"),
("177","2627"),
("177","2628"),
("177","2629"),
("177","2630"),
("177","2631"),
("177","2632"),
("177","2633"),
("177","2634"),
("177","2635"),
("177","2636"),
("177","2637"),
("177","2638"),
("177","2639"),
("177","2640"),
("177","2641"),
("177","2642"),
("177","2643"),
("177","2644"),
("177","2645"),
("177","2646"),
("177","2647"),
("177","2648"),
("177","2649"),
("37","2650"),
("37","2651"),
("37","2652"),
("37","2653"),
("37","2653"),
("37","2654"),
("37","2655"),
("37","2656"),
("37","2657"),
("37","2658"),
("37","2659"),
("37","2660"),
("37","2661"),
("37","2662"),
("37","2663"),
("37","2664"),
("37","2665"),
("37","2666"),
("37","2667"),
("37","2668"),
("37","2669"),
("37","2670"),
("37","2671"),
("41","2653"),
("41","2654"),
("41","2655"),
("41","2656"),
("41","2657"),
("41","2658"),
("41","2659"),
("41","2660"),
("41","2661"),
("41","2662"),
("41","2663"),
("41","2664"),
("41","2665"),
("41","2666"),
("41","2667"),
("41","2668"),
("41","2669");
INSERT INTO module_function VALUES
("41","2670"),
("41","2671"),
("41","2672"),
("41","2673"),
("41","2674"),
("41","2675"),
("41","2676"),
("41","2677"),
("41","2678"),
("41","2679"),
("41","2680"),
("41","2681"),
("41","2682"),
("41","2683"),
("41","2684"),
("41","2685"),
("41","2686"),
("41","2687"),
("41","2688"),
("41","2689"),
("41","2690"),
("44","2691"),
("44","2692"),
("44","2693"),
("44","2694"),
("44","2695"),
("44","2696"),
("44","2697"),
("44","2698"),
("44","2699"),
("44","2700"),
("44","2701"),
("44","2702"),
("44","2703"),
("44","2704"),
("44","2705"),
("44","2706"),
("44","2707"),
("44","2708"),
("44","2709"),
("44","2710"),
("44","2711"),
("44","2712"),
("44","2713"),
("44","2714"),
("44","2715"),
("44","2716"),
("44","2717"),
("44","2718"),
("44","2719"),
("44","2720"),
("44","2721"),
("44","2722"),
("44","2723"),
("44","2724"),
("44","2725"),
("44","2726"),
("44","2727"),
("44","2728"),
("44","2729"),
("44","2730"),
("44","2731"),
("44","2732"),
("44","2733"),
("44","2734"),
("44","2735"),
("44","2736"),
("44","2737"),
("44","2738"),
("44","2739"),
("44","2740"),
("44","2741"),
("44","2742"),
("44","2743"),
("44","2744"),
("44","2745"),
("44","2746"),
("44","2747"),
("44","2748"),
("44","2749"),
("44","2750"),
("44","2751"),
("44","2752"),
("44","2753"),
("44","2754"),
("44","2755"),
("44","2756"),
("44","2757"),
("44","2758"),
("44","2759"),
("44","2760"),
("44","2761"),
("44","2762"),
("44","2763"),
("44","2764"),
("44","2765"),
("44","2766"),
("44","2767"),
("44","2768"),
("44","2769");
INSERT INTO module_function VALUES
("44","2770"),
("44","2771"),
("44","2772"),
("44","2773"),
("44","2774"),
("44","2775"),
("44","2776"),
("44","2777"),
("44","2778"),
("44","2779"),
("44","2780"),
("44","2781"),
("44","2782"),
("44","2783"),
("44","2784"),
("44","2785"),
("44","2786"),
("44","2787"),
("44","2788"),
("44","2789"),
("44","2790"),
("44","2791"),
("44","2792"),
("44","2793"),
("44","2794"),
("44","2795"),
("44","2796"),
("44","2797"),
("44","2798"),
("44","2799"),
("44","2800"),
("52","2801"),
("52","2802"),
("52","2803"),
("52","2804"),
("52","2805"),
("52","2806"),
("52","2807"),
("52","2808"),
("52","2809"),
("52","2810"),
("52","2811"),
("52","2812"),
("52","2813"),
("52","2814"),
("52","2815"),
("52","2816"),
("52","2817"),
("52","2818"),
("52","2819"),
("52","2820"),
("52","2821"),
("52","2822"),
("52","2823"),
("52","2824"),
("52","2825"),
("52","2826"),
("52","2827"),
("52","2828"),
("52","2829"),
("52","2830"),
("52","2831"),
("52","2832"),
("52","2833"),
("52","2834"),
("52","2835"),
("52","2836"),
("52","2837"),
("52","2838"),
("52","2839"),
("52","2840"),
("52","2841"),
("52","2842"),
("52","2843"),
("52","2844"),
("52","2845"),
("52","2846"),
("52","2847"),
("52","2848"),
("52","2849"),
("52","2850"),
("52","2851"),
("52","2852"),
("52","2853"),
("52","2854"),
("52","2855"),
("52","2856"),
("52","2857"),
("52","2858"),
("52","2859"),
("52","2860"),
("52","2861"),
("52","2862"),
("52","2863"),
("52","2864"),
("52","2865"),
("52","2866"),
("52","2867"),
("52","2868"),
("52","2869");
INSERT INTO module_function VALUES
("52","2870"),
("52","2871"),
("52","2872"),
("52","2873"),
("52","2874"),
("52","2875"),
("52","2876"),
("52","2877"),
("52","2878"),
("52","2879"),
("52","2880"),
("52","2881"),
("52","2882"),
("52","2883"),
("52","2884"),
("52","2885"),
("52","2886"),
("52","2887"),
("52","2888"),
("52","2889"),
("52","2890"),
("52","2891"),
("52","2892"),
("52","2893"),
("52","2894"),
("52","2895"),
("52","2896"),
("52","2897"),
("52","2898"),
("52","2899"),
("52","2900"),
("52","2901"),
("52","2902"),
("52","2903"),
("52","2904"),
("52","2905"),
("52","2906"),
("52","2907"),
("52","2908"),
("52","2909"),
("52","2910"),
("52","2911"),
("52","2912"),
("52","2913"),
("52","2914"),
("52","2915"),
("52","2916"),
("52","2917"),
("52","2918"),
("52","2919"),
("52","2920"),
("52","2921"),
("52","2922"),
("52","2923"),
("52","2924"),
("52","2925"),
("52","2926"),
("52","2927"),
("52","2928"),
("52","2929"),
("52","2930"),
("52","2931"),
("52","2932"),
("52","2933"),
("52","2934"),
("52","2935"),
("52","2936"),
("52","2937"),
("52","2938"),
("52","2939"),
("52","2940"),
("52","2941"),
("52","2942"),
("52","2943"),
("52","2944"),
("52","2945"),
("52","2946"),
("52","2947"),
("52","2948"),
("52","2949"),
("52","2950"),
("52","2951"),
("52","2952"),
("52","2953"),
("52","2954"),
("52","2955"),
("52","2956"),
("52","2957"),
("52","2958"),
("52","2959"),
("52","2960"),
("52","2961"),
("52","2962"),
("52","2963"),
("52","2964"),
("52","2965"),
("52","2966"),
("52","2967"),
("52","2968"),
("52","2969");
INSERT INTO module_function VALUES
("52","2970"),
("52","2971"),
("52","2972"),
("52","2973"),
("52","2974"),
("52","2975"),
("52","2976"),
("52","2977"),
("52","2978"),
("52","2979"),
("52","2980"),
("52","2981"),
("52","2982"),
("52","2983"),
("52","2984"),
("52","2985"),
("52","2986"),
("52","2987"),
("52","2988"),
("52","2989"),
("52","2990"),
("52","2991"),
("52","2992"),
("52","2993"),
("52","2994"),
("52","2995"),
("52","2996"),
("52","2997"),
("52","2998"),
("52","2999"),
("52","3000"),
("52","3001"),
("52","3002"),
("52","3003"),
("52","3004"),
("52","3005"),
("52","3006"),
("52","3007"),
("52","3008"),
("52","3009"),
("52","3010"),
("52","3011"),
("52","3012"),
("52","3013"),
("52","3014"),
("52","3015"),
("52","3016"),
("52","3017"),
("52","3018"),
("52","3019"),
("52","3020"),
("52","3021"),
("52","3022"),
("52","3023"),
("52","3024"),
("52","3025"),
("52","3026"),
("52","3027"),
("52","3028"),
("52","3029"),
("52","3030"),
("52","3031"),
("52","3032"),
("52","3033"),
("65","3034"),
("65","3035"),
("65","3036"),
("65","3037"),
("65","3038"),
("65","3039"),
("65","3040"),
("65","3041"),
("65","3042"),
("65","3043"),
("65","3044"),
("65","3045"),
("65","3046"),
("65","3047"),
("65","3048"),
("65","3049"),
("65","3050"),
("65","3051"),
("65","3052"),
("65","3053"),
("65","3054"),
("65","3055"),
("65","3056"),
("65","3057"),
("65","3058"),
("65","3059"),
("65","3060"),
("65","3061"),
("65","3062"),
("65","3063"),
("65","3064"),
("65","3065"),
("65","3066"),
("65","3067"),
("65","3068"),
("65","3069");
INSERT INTO module_function VALUES
("65","3070"),
("65","3071"),
("65","3072"),
("77","3073"),
("77","3074"),
("77","3075"),
("77","3076"),
("77","3077"),
("77","3078"),
("77","3079"),
("77","3080"),
("77","3081"),
("77","3082"),
("77","3083"),
("77","3084"),
("77","3085"),
("77","3086"),
("77","3087"),
("77","3088"),
("77","3089"),
("77","3090"),
("77","3091"),
("77","3092"),
("77","3093"),
("77","3094"),
("87","3095"),
("87","3096"),
("87","3097"),
("87","3098"),
("87","3099"),
("87","3100"),
("87","3101"),
("87","3102"),
("87","3103"),
("87","3104"),
("87","3105"),
("87","3106"),
("87","3107"),
("87","3108"),
("87","3109"),
("87","3110"),
("87","3111"),
("87","3112"),
("87","3113"),
("87","3114"),
("87","3115"),
("124","3116"),
("124","3117"),
("124","3118"),
("124","3119"),
("124","3120"),
("124","3121"),
("124","3122"),
("124","3123"),
("124","3124"),
("124","3125"),
("124","3126"),
("149","3127"),
("149","3128"),
("149","3129"),
("149","3130"),
("149","3131"),
("149","3132"),
("149","3133"),
("149","3134"),
("149","3135"),
("149","3136"),
("149","3137"),
("86","3138"),
("86","3139"),
("86","3140"),
("86","3141"),
("86","3142"),
("86","3143"),
("86","3144"),
("86","3145"),
("86","3146"),
("86","3147"),
("86","3148"),
("86","3149"),
("86","3150"),
("86","3151"),
("86","3152"),
("86","3153"),
("86","3154"),
("86","3155"),
("86","3156"),
("86","3157"),
("86","3158"),
("86","3159"),
("657","3160"),
("657","3161"),
("657","3162"),
("657","3163"),
("657","3164"),
("657","3165"),
("657","3166"),
("657","3167"),
("657","3168"),
("657","3169");
INSERT INTO module_function VALUES
("657","3170"),
("657","3171"),
("657","3172"),
("657","3173"),
("657","3174"),
("657","3175"),
("657","3176"),
("657","3177"),
("657","3178"),
("657","3179"),
("657","3180"),
("657","3181"),
("657","3182"),
("657","3183"),
("657","3184"),
("657","3185"),
("657","3186"),
("657","3187"),
("657","3188"),
("657","3189"),
("657","3190"),
("657","3191"),
("657","3192"),
("657","3193"),
("657","3194"),
("657","3195"),
("657","3196"),
("657","3197"),
("657","3198"),
("657","3199"),
("657","3200"),
("657","3201"),
("657","3202"),
("657","3203"),
("657","3204"),
("657","3205"),
("657","3206"),
("657","3207"),
("657","3208"),
("657","3209"),
("657","3210"),
("657","3211"),
("657","3212"),
("657","3213"),
("657","3214"),
("657","3215"),
("657","3216"),
("657","3217"),
("657","3218"),
("657","3219"),
("657","3220"),
("657","3221"),
("657","3222"),
("657","3223"),
("657","3224"),
("657","3225"),
("657","3226"),
("657","3227"),
("657","3228"),
("657","3229"),
("657","3230"),
("657","3231"),
("657","3232"),
("657","3233"),
("657","3234"),
("657","3235"),
("657","3236"),
("657","3237"),
("657","3238"),
("657","3239"),
("657","3240"),
("657","3241"),
("657","3242"),
("657","3243"),
("657","3244"),
("657","3245"),
("657","3246"),
("657","3247"),
("657","3248"),
("657","3249"),
("657","3250"),
("657","3251"),
("657","3252"),
("657","3253"),
("657","3254"),
("657","3255"),
("657","3256"),
("657","3257"),
("657","3258"),
("657","3259"),
("657","3260"),
("657","3261"),
("657","3262"),
("657","3263"),
("657","3264"),
("657","3265"),
("657","3266"),
("657","3267"),
("657","3268"),
("657","3269");
INSERT INTO module_function VALUES
("657","3270"),
("657","3271"),
("657","3272"),
("657","3273"),
("657","3274"),
("657","3275"),
("657","3276"),
("657","3277"),
("657","3278"),
("657","3279"),
("657","3280"),
("657","3281"),
("657","3282"),
("657","3283"),
("657","3284"),
("657","3285"),
("657","3286"),
("657","3287"),
("657","3288"),
("657","3289"),
("657","3290"),
("657","3291"),
("657","3292"),
("657","3293"),
("129","3294"),
("129","3295"),
("129","3296"),
("69","3297"),
("69","3298"),
("69","3299"),
("156","3300"),
("156","3301"),
("156","3302"),
("156","3303"),
("156","3304"),
("156","3305"),
("156","3306"),
("156","3307"),
("156","3308"),
("156","3309"),
("156","3310"),
("156","3311"),
("156","3312"),
("156","3313"),
("156","3314"),
("156","3315"),
("156","3316"),
("156","3317"),
("156","3318"),
("156","3319"),
("156","3320"),
("156","3321"),
("156","3322"),
("156","3323"),
("156","3324"),
("156","3325"),
("156","3326"),
("156","3327"),
("156","3328"),
("156","3329"),
("156","3330"),
("156","3331"),
("156","3332"),
("156","3333"),
("156","3334"),
("156","3335"),
("156","3336"),
("156","3337"),
("156","3338"),
("156","3339"),
("156","3340"),
("156","3341"),
("156","3342"),
("156","3343"),
("156","3344"),
("156","3345"),
("156","3346"),
("156","3347"),
("156","3348"),
("156","3349"),
("156","3350"),
("156","3351"),
("156","3352"),
("156","3353"),
("151","3354"),
("1350","3355"),
("1350","3356"),
("1350","3357"),
("1350","3358"),
("1350","3359"),
("1350","3360"),
("1350","3361"),
("1350","3362"),
("1350","3363"),
("1350","3364"),
("1350","3365"),
("1350","3366"),
("1350","3367"),
("1350","3368"),
("1350","3369");
INSERT INTO module_function VALUES
("1350","3370"),
("1350","3371"),
("1350","3372"),
("1350","3373"),
("1350","3374"),
("1350","3375"),
("1350","3376"),
("1350","3377"),
("1350","3378"),
("1350","3379"),
("1350","3380"),
("1350","3381"),
("1350","3382"),
("1350","3383"),
("1350","3384"),
("1350","3385"),
("1350","3386"),
("1350","3387"),
("1350","3388"),
("1350","3389"),
("1350","3390"),
("1350","3391"),
("1350","3392"),
("1350","3393"),
("1350","3394"),
("1350","3395"),
("1350","3396"),
("1350","3397"),
("1350","3398"),
("1350","3399"),
("1350","3400"),
("1350","3401"),
("1350","3402"),
("1351","3403"),
("1352","3404"),
("1353","3405"),
("1354","3406"),
("1354","3407"),
("1354","3408"),
("1354","3409"),
("1354","3410"),
("1354","3411"),
("1354","3412"),
("1354","3413"),
("1354","3414"),
("1354","3415"),
("1354","3416"),
("1354","3417"),
("1354","3418"),
("1354","3419"),
("1354","3420"),
("1354","3421"),
("1354","3422"),
("1354","3423"),
("1354","3424"),
("1354","3425"),
("1354","3426"),
("1354","3427"),
("1354","3428"),
("1354","3429"),
("1354","3430"),
("1354","3431"),
("1354","3432"),
("1354","3433"),
("1354","3434"),
("1354","3435"),
("1354","3436"),
("1354","3437"),
("1354","3438"),
("1354","3439"),
("1354","3440"),
("1354","3441"),
("1354","3442"),
("1354","3443"),
("1354","3444"),
("1354","3445"),
("1354","3446"),
("1354","3447"),
("1354","3448"),
("1354","3449"),
("1354","3450"),
("1354","3451"),
("1354","3452"),
("1354","3453"),
("1354","3454"),
("1354","3455"),
("1354","3456"),
("1354","3457"),
("1354","3458"),
("1354","3459"),
("1354","3460"),
("1354","3461"),
("1354","3462"),
("1354","3463"),
("1354","3464"),
("1354","3465"),
("1354","3466"),
("1354","3467"),
("1354","3468"),
("1354","3469");
INSERT INTO module_function VALUES
("1354","3470"),
("1354","3471"),
("1354","3472"),
("1354","3473"),
("1354","3474"),
("1354","3475"),
("1354","3476"),
("1354","3477"),
("1354","3478"),
("1354","3479"),
("1354","3480"),
("1354","3481"),
("1354","3482"),
("1354","3483"),
("1354","3484"),
("1354","3485"),
("1354","3486"),
("1354","3487"),
("1354","3488"),
("1354","3489"),
("1354","3490"),
("1354","3491"),
("1354","3492"),
("1354","3493"),
("1354","3494"),
("1354","3495"),
("1354","3496"),
("1354","3497"),
("1354","3498"),
("1354","3499"),
("1354","3500"),
("1354","3501"),
("1354","3502"),
("1354","3503"),
("1354","3504"),
("1354","3505"),
("1354","3506"),
("1354","3507"),
("1354","3508"),
("1354","3509"),
("1354","3510"),
("1354","3511"),
("1354","3512"),
("1354","3513"),
("1354","3514"),
("1354","3515"),
("1354","3516"),
("1354","3517"),
("1354","3518"),
("1354","3519"),
("1354","3520"),
("1354","3521"),
("1354","3522"),
("1354","3523"),
("1354","3524"),
("1354","3525"),
("1354","3526"),
("1354","3527"),
("1354","3528"),
("1354","3529"),
("1354","3530"),
("1354","3531"),
("1354","3532"),
("1354","3533"),
("1354","3534"),
("1354","3535"),
("1354","3536"),
("1354","3537"),
("1354","3538"),
("1354","3539"),
("1354","3540"),
("1354","3541"),
("1354","3542"),
("1354","3543"),
("1354","3544"),
("1354","3545"),
("1354","3546"),
("1354","3547"),
("1354","3548"),
("1354","3549"),
("1354","3550"),
("1354","3551"),
("1354","3552"),
("1354","3553"),
("1354","3554"),
("1354","3555"),
("1354","3556"),
("1354","3557"),
("1354","3558"),
("1354","3559"),
("1354","3560"),
("1354","3561"),
("1354","3562"),
("1354","3563"),
("1354","3564"),
("1354","3565"),
("1354","3566"),
("1354","3567"),
("1354","3568"),
("1354","3569");
INSERT INTO module_function VALUES
("1354","3570"),
("1354","3571"),
("1354","3572"),
("1354","3573"),
("1354","3574"),
("1354","3575"),
("1354","3576"),
("1354","3577"),
("1354","3578"),
("1354","3579"),
("1354","3580"),
("1354","3581"),
("1354","3582"),
("1354","3583"),
("1354","3584"),
("1354","3585"),
("1354","3586"),
("1354","3587"),
("1354","3588"),
("1354","3589"),
("1354","3590"),
("1354","3591"),
("1354","3592"),
("1354","3593"),
("1354","3594"),
("1354","3595"),
("1354","3596"),
("1354","3597"),
("1354","3598"),
("1354","3599"),
("1354","3600"),
("1354","3601"),
("1354","3602"),
("1354","3603"),
("1354","3604"),
("1354","3605"),
("1354","3606"),
("1354","3607"),
("1354","3608"),
("1354","3609"),
("1354","3610"),
("1354","3611"),
("1354","3612"),
("1354","3613"),
("1354","3614"),
("1354","3615"),
("1354","3616"),
("1354","3617"),
("1354","3618"),
("1354","3619"),
("1354","3620"),
("1354","3621"),
("1354","3622"),
("1354","3623"),
("1354","3624"),
("1354","3625"),
("1354","3626"),
("1354","3627"),
("1354","3628"),
("1354","3629"),
("1354","3630"),
("1354","3631"),
("1354","3632"),
("1354","3633"),
("1354","3634"),
("1354","3635"),
("1354","3636"),
("1354","3637"),
("1354","3638"),
("1354","3639"),
("1354","3640"),
("1354","3641"),
("1354","3642"),
("1354","3643"),
("1354","3644"),
("1354","3645"),
("1354","3646"),
("1354","3647"),
("1354","3648"),
("1354","3649"),
("1354","3650"),
("1354","3651"),
("1354","3652"),
("1354","3653"),
("1354","3654"),
("1354","3655"),
("1354","3656"),
("1354","3657"),
("1349","3658"),
("1349","3659"),
("1349","3660"),
("1349","3661"),
("1349","3662"),
("1349","3663"),
("1349","3664"),
("1349","3665"),
("1349","3666"),
("1349","3667"),
("1349","3668"),
("1349","3669");
INSERT INTO module_function VALUES
("1349","3670"),
("1349","3671"),
("1349","3672"),
("1349","3673"),
("1349","3674"),
("1349","3675"),
("1349","3676"),
("1349","3677"),
("1349","3678"),
("1349","3679"),
("1349","3680"),
("1349","3681"),
("1349","3682"),
("1349","3683"),
("1349","3684"),
("1349","3685"),
("1349","3686"),
("1349","3687"),
("1349","3688"),
("1349","3689"),
("1349","3690"),
("1349","3691"),
("1349","3692"),
("1349","3693"),
("1349","3694"),
("1349","3695"),
("1349","3696"),
("1349","3697"),
("1349","3698"),
("1349","3699"),
("1349","3700"),
("1349","3701"),
("1349","3702"),
("1349","3703"),
("1349","3704"),
("1349","3705"),
("1349","3706"),
("1349","3707"),
("1349","3708"),
("1349","3709"),
("1349","3710"),
("1349","3711"),
("1349","3712"),
("1349","3713"),
("1349","3714"),
("1349","3715"),
("1349","3716"),
("1349","3717"),
("1349","3718"),
("1349","3719"),
("1349","3720"),
("1349","3721"),
("1349","3722"),
("1349","3723"),
("1349","3724"),
("1349","3725"),
("1349","3726"),
("1349","3727"),
("1349","3728"),
("1349","3729"),
("1349","3730"),
("1349","3731"),
("1349","3732"),
("1349","3733"),
("1349","3734"),
("1349","3735"),
("1349","3736"),
("1349","3737"),
("1349","3738"),
("1349","3739"),
("1349","3740"),
("1349","3741"),
("1349","3742"),
("1349","3743"),
("1349","3744"),
("1349","3745"),
("1349","3746"),
("1349","3747"),
("1349","3748"),
("1349","3749"),
("1349","3750"),
("1349","3751"),
("1349","3752"),
("1349","3753"),
("1349","3754"),
("1349","3755"),
("1349","3756"),
("1349","3757"),
("1349","3758"),
("1349","3759"),
("1349","3760"),
("1349","3761"),
("1349","3762"),
("1349","3763"),
("1349","3764"),
("1355","3765"),
("1355","3766"),
("1355","3767"),
("1355","3768"),
("1355","3769");
INSERT INTO module_function VALUES
("1355","3770"),
("1355","3771"),
("1355","3772"),
("1355","3773"),
("1355","3774"),
("1355","3775"),
("1355","3776"),
("1355","3777"),
("1355","3778"),
("1355","3779"),
("1355","3780"),
("1355","3781"),
("1355","3782"),
("1355","3783"),
("1355","3784"),
("1355","3785"),
("1355","3786"),
("1355","3787"),
("1355","3788"),
("1355","3789"),
("1355","3790"),
("1355","3791"),
("1355","3792"),
("1355","3793"),
("1355","3794"),
("1355","3795"),
("1355","3796"),
("1355","3797"),
("1355","3798"),
("1355","3799"),
("1355","3800"),
("1355","3801"),
("1355","3802"),
("1355","3803"),
("1355","3804"),
("1355","3805"),
("1355","3806"),
("1355","3807"),
("1355","3808"),
("1355","3809"),
("1355","3810"),
("1355","3811"),
("1355","3812"),
("1355","3813"),
("1355","3814"),
("1355","3815"),
("1355","3816"),
("1355","3817"),
("1355","3818"),
("1355","3819"),
("1355","3820"),
("1355","3821"),
("1355","3822"),
("1355","3823"),
("1355","3824"),
("1355","3825"),
("1355","3826"),
("1355","3827"),
("1355","3828"),
("1355","3829"),
("1355","3830"),
("1355","3831"),
("1355","3832"),
("1355","3833"),
("1355","3834"),
("1355","3835"),
("1355","3836"),
("1355","3837"),
("1355","3838"),
("1355","3839"),
("1355","3840"),
("1355","3841"),
("1355","3842"),
("1355","3843"),
("1355","3844"),
("1355","3845"),
("1355","3846"),
("1355","3847"),
("1355","3848"),
("1355","3849"),
("1355","3850"),
("1355","3851"),
("1355","3852"),
("1355","3853"),
("1355","3854"),
("1355","3855"),
("1355","3856"),
("1355","3857"),
("1355","3858"),
("1355","3859"),
("1355","3860"),
("1355","3861"),
("1355","3862"),
("1355","3863"),
("1355","3864"),
("1355","3865"),
("1355","3866"),
("1355","3867"),
("1355","3868"),
("1355","3869");
INSERT INTO module_function VALUES
("1355","3870"),
("1355","3871"),
("1355","3872"),
("1355","3873"),
("1355","3874"),
("1355","3875"),
("1355","3876"),
("1355","3877"),
("1355","3878"),
("1355","3879"),
("1355","3880"),
("1355","3881"),
("1355","3882"),
("1355","3883"),
("1355","3884"),
("1355","3885"),
("1355","3886"),
("1355","3887"),
("1355","3888"),
("1355","3889"),
("1355","3890"),
("1355","3891"),
("1355","3892"),
("1355","3893"),
("1355","3894"),
("1355","3895"),
("1355","3896"),
("1355","3897"),
("1355","3898"),
("1355","3899"),
("1355","3900"),
("1355","3901"),
("1355","3902"),
("1355","3903"),
("1355","3904"),
("1355","3905"),
("1355","3906"),
("1355","3907"),
("1355","3908"),
("1355","3909"),
("1355","3910"),
("1355","3911"),
("1355","3912"),
("1355","3913"),
("1355","3914"),
("1355","3915"),
("1355","3916"),
("1355","3917"),
("1355","3918"),
("1355","3919"),
("1355","3920"),
("1355","3921"),
("1355","3922"),
("1355","3923"),
("1355","3924"),
("1355","3925"),
("1355","3926"),
("1355","3927"),
("1355","3928"),
("1355","3929"),
("1355","3930"),
("1355","3931"),
("1355","3932"),
("1355","3933"),
("1355","3934"),
("1355","3935"),
("1355","3936"),
("1355","3937"),
("1355","3938"),
("1355","3939"),
("1355","3940"),
("1355","3941"),
("1355","3942"),
("1355","3943"),
("1355","3944"),
("1355","3945"),
("1355","3946"),
("1355","3947"),
("1355","3948"),
("1355","3949"),
("1355","3950"),
("1355","3951"),
("1355","3952"),
("1355","3953"),
("1355","3954"),
("1355","3955"),
("1355","3956"),
("1355","3957"),
("1355","3958"),
("1356","3959"),
("1356","3960"),
("1356","3961"),
("1356","3962"),
("1356","3963"),
("1356","3964"),
("1356","3965"),
("1356","3966"),
("1356","3967"),
("1356","3968"),
("1356","3969");
INSERT INTO module_function VALUES
("1356","3970"),
("1356","3971"),
("1356","3972"),
("1356","3973"),
("1356","3974"),
("1356","3975"),
("1356","3976"),
("1356","3977"),
("1356","3978"),
("1356","3979"),
("1356","3980"),
("1356","3981"),
("1356","3982"),
("1356","3983"),
("1356","3984"),
("1357","3985"),
("1357","3986"),
("1357","3987"),
("1357","3988"),
("1357","3989"),
("1357","3990"),
("1357","3991"),
("1357","3992"),
("1357","3993"),
("1357","3994"),
("1357","3995"),
("1357","3996"),
("1357","3997"),
("1357","3998"),
("1357","3999"),
("1357","4000"),
("1357","4001"),
("1357","4002"),
("1357","4003"),
("1357","4004"),
("1357","4005"),
("1357","4006"),
("1357","4007"),
("1357","4008"),
("1357","4009"),
("1357","4010"),
("1357","4011"),
("1357","4012"),
("1357","4013"),
("1357","4014"),
("1357","4015"),
("1357","4016"),
("1357","4017"),
("1357","4018"),
("1349","4019"),
("1358","4020"),
("1356","4021"),
("1356","4022"),
("1356","4023"),
("1356","4024"),
("1356","4025"),
("1356","4026"),
("1356","4027"),
("1356","4028"),
("1356","4029"),
("1356","4030"),
("1359","4031"),
("1360","4032"),
("1360","4033"),
("1360","4034"),
("1360","4035"),
("1360","4036"),
("1360","4037"),
("1360","4038"),
("1360","4039"),
("1360","4040"),
("1361","4041"),
("1361","4042"),
("1361","4043"),
("1361","4044"),
("1361","4045"),
("1361","4046"),
("1361","4047"),
("1361","4048"),
("1361","4049"),
("1361","4050"),
("1361","4051"),
("1361","4052"),
("1361","4053"),
("1361","4054"),
("1361","4055"),
("1361","4056"),
("1361","4057"),
("1361","4058"),
("1361","4059"),
("1361","4060"),
("1361","4061"),
("1361","4062"),
("1361","4063"),
("1361","4064"),
("1361","4065"),
("1361","4066"),
("1361","4067"),
("1361","4068"),
("1361","4069");
INSERT INTO module_function VALUES
("1361","4070"),
("1361","4071"),
("1361","4072"),
("1361","4073"),
("1361","4074"),
("1361","4075"),
("1361","4076"),
("1361","4077"),
("1361","4078"),
("1361","4079"),
("1361","4080"),
("1361","4081"),
("1361","4082"),
("1361","4083"),
("1361","4084"),
("1361","4085"),
("1361","4086"),
("1361","4087"),
("1361","4088"),
("1361","4089"),
("1361","4090"),
("1361","4091"),
("1361","4092"),
("1361","4093"),
("1361","4094"),
("1361","4095"),
("1361","4096"),
("1361","4097"),
("1361","4098"),
("1361","4099"),
("1361","4100"),
("1361","4101"),
("1361","4102"),
("1361","4103"),
("1361","4104"),
("1361","4105"),
("1362","4106"),
("1362","4107"),
("1362","4108"),
("1362","4109"),
("1362","4110"),
("1362","4111"),
("1362","4112"),
("1362","4113"),
("1363","4114"),
("1363","4115"),
("1363","4116"),
("1365","4117"),
("1365","4118"),
("1365","4119"),
("1365","4120"),
("1365","4121"),
("1365","4122"),
("1365","4123"),
("1365","4124"),
("1365","4125"),
("1365","4126"),
("1365","4127"),
("1365","4128"),
("1365","4129"),
("1365","4130"),
("1365","4131"),
("1365","4132"),
("1365","4133"),
("1365","4134"),
("1365","4135"),
("1365","4136"),
("1365","4137"),
("1365","4138"),
("1365","4139"),
("1365","4140"),
("1365","4141"),
("1365","4142"),
("1365","4143"),
("1365","4144"),
("1365","4145"),
("1365","4146"),
("1365","4147"),
("1365","4148"),
("1365","4149"),
("1365","4150"),
("1365","4151"),
("1365","4152"),
("1365","4153"),
("1365","4154"),
("1365","4155"),
("1365","4156"),
("1365","4157"),
("1365","4158"),
("1365","4159"),
("1365","4160"),
("1365","4161"),
("1365","4162"),
("1365","4163"),
("1365","4164"),
("1365","4165"),
("1365","4166"),
("1365","4167"),
("1365","4168"),
("1365","4169");
INSERT INTO module_function VALUES
("1365","4170"),
("1365","4171"),
("1365","4172"),
("1364","4173"),
("1364","4174"),
("1364","4175"),
("1364","4176"),
("1364","4177"),
("1364","4178"),
("1364","4179"),
("1364","4180"),
("1364","4181"),
("1364","4182"),
("1364","4183"),
("1364","4184"),
("1364","4185"),
("1364","4186"),
("1364","4187"),
("1364","4188"),
("1364","4189"),
("1364","4190"),
("1364","4191"),
("1364","4192"),
("1364","4193"),
("1364","4194"),
("1364","4195"),
("1364","4196"),
("1364","4197"),
("1364","4198"),
("1364","4199"),
("1364","4200"),
("1364","4201"),
("1364","4202"),
("1364","4203"),
("1364","4204"),
("1364","4205"),
("1364","4206"),
("1364","4207"),
("1364","4208"),
("1364","4209"),
("1364","4210"),
("1364","4211"),
("1364","4212"),
("1364","4213"),
("1364","4214"),
("1364","4215"),
("609","4216"),
("609","4217"),
("609","4218"),
("609","4219"),
("609","4220"),
("609","4221"),
("609","4222"),
("609","4223"),
("609","4224"),
("609","4225"),
("609","4226"),
("609","4227"),
("609","4228"),
("609","4229"),
("609","4230"),
("609","4231"),
("609","4232"),
("609","4233"),
("609","4234"),
("609","4235"),
("609","4236"),
("609","4237"),
("609","4238"),
("609","4239"),
("609","4240"),
("609","4241"),
("609","4242"),
("609","4243"),
("609","4244"),
("609","4245"),
("609","4246"),
("609","4247"),
("609","4248"),
("609","4249"),
("609","4250"),
("609","4251"),
("609","4252"),
("609","4253"),
("609","4254"),
("609","4255"),
("609","4256"),
("609","4257"),
("609","4258"),
("609","4259"),
("609","4260"),
("609","4261"),
("609","4262"),
("609","4263"),
("609","4264"),
("609","4265"),
("609","4266"),
("609","4267"),
("609","4268"),
("609","4269");
INSERT INTO module_function VALUES
("609","4270"),
("609","4271"),
("609","4272"),
("609","4273"),
("609","4274"),
("609","4275"),
("609","4276"),
("609","4277"),
("609","4278"),
("609","4279"),
("609","4280"),
("609","4281"),
("609","4282"),
("609","4283"),
("609","4284"),
("609","4285"),
("609","4286"),
("609","4287"),
("609","4288"),
("609","4289"),
("609","4290"),
("609","4291"),
("609","4292"),
("609","4293"),
("609","4294"),
("609","4295"),
("609","4296"),
("609","4297"),
("609","4298"),
("609","4299"),
("609","4300"),
("609","4301"),
("609","4302"),
("609","4303"),
("609","4304"),
("609","4305"),
("609","4306"),
("609","4307"),
("609","4308"),
("609","4309"),
("609","4310"),
("609","4311"),
("609","4312"),
("609","4313"),
("609","4314"),
("609","4315"),
("609","4316"),
("609","4317"),
("609","4318"),
("609","4319"),
("609","4320"),
("609","4321"),
("609","4322"),
("609","4323"),
("609","4324"),
("609","4325"),
("609","4326"),
("609","4327"),
("609","4328"),
("609","4329"),
("609","4330"),
("609","4331"),
("609","4332"),
("609","4333"),
("609","4334"),
("609","4335"),
("609","4336"),
("609","4337"),
("609","4338"),
("609","4339"),
("609","4340"),
("609","4341"),
("609","4342"),
("609","4343"),
("609","4344"),
("609","4345"),
("609","4346"),
("609","4347"),
("609","4348"),
("609","4349"),
("609","4350"),
("609","4351"),
("609","4352"),
("609","4353"),
("609","4354"),
("609","4355"),
("609","4356"),
("609","4357"),
("609","4358"),
("609","4359"),
("609","4360"),
("609","4361"),
("609","4362"),
("609","4363"),
("609","4364"),
("609","4365"),
("609","4366"),
("609","4367"),
("609","4368"),
("609","4369");
INSERT INTO module_function VALUES
("609","4370"),
("609","4371"),
("609","4372"),
("609","4373"),
("609","4374"),
("609","4375"),
("609","4376"),
("609","4377"),
("609","4378"),
("609","4379"),
("609","4380"),
("609","4381"),
("609","4382"),
("609","4383"),
("609","4384"),
("609","4385"),
("609","4386"),
("609","4387"),
("609","4388"),
("609","4389"),
("609","4390"),
("609","4391"),
("609","4392"),
("609","4393"),
("609","4394"),
("609","4395"),
("609","4396"),
("609","4397"),
("609","4398"),
("609","4399"),
("609","4400"),
("609","4401"),
("609","4402"),
("609","4403"),
("609","4404"),
("609","4405"),
("609","4406"),
("609","4407"),
("609","4408"),
("609","4409"),
("609","4410"),
("609","4411"),
("609","4412"),
("609","4413"),
("609","4414"),
("609","4415"),
("609","4416"),
("609","4417"),
("609","4418"),
("609","4419"),
("609","4420"),
("609","4421"),
("609","4422"),
("609","4423"),
("609","4424"),
("609","4425"),
("609","4426"),
("609","4427"),
("609","4428"),
("609","4429"),
("609","4430"),
("609","4431"),
("609","4432"),
("609","4433"),
("609","4434"),
("609","4435"),
("609","4436"),
("609","4437"),
("609","4438"),
("609","4439"),
("609","4440"),
("609","4441"),
("609","4442"),
("609","4443"),
("609","4444"),
("609","4445"),
("609","4446"),
("609","4447"),
("609","4448"),
("609","4449"),
("609","4450"),
("609","4451"),
("609","4452"),
("609","4453"),
("609","4454"),
("609","4455"),
("609","4456"),
("609","4457"),
("609","4458"),
("609","4459"),
("609","4460"),
("609","4461"),
("609","4462"),
("609","4463"),
("609","4464"),
("609","4465"),
("609","4466"),
("609","4467"),
("609","4468"),
("609","4469");
INSERT INTO module_function VALUES
("609","4470"),
("609","4471"),
("609","4472"),
("609","4473"),
("609","4474"),
("609","4475"),
("609","4476"),
("609","4477"),
("609","4478"),
("609","4479"),
("609","4480"),
("609","4481"),
("609","4482"),
("609","4483"),
("609","4484"),
("609","4485"),
("609","4486"),
("609","4487"),
("609","4488"),
("609","4489"),
("609","4490"),
("609","4491"),
("609","4492"),
("609","4493"),
("609","4494"),
("609","4495"),
("609","4496"),
("609","4497"),
("609","4498"),
("609","4499"),
("609","4500"),
("609","4501"),
("609","4502"),
("609","4503"),
("609","4504"),
("609","4505"),
("609","4506"),
("609","4507"),
("609","4508"),
("609","4509"),
("609","4510"),
("609","4511"),
("609","4512"),
("609","4513"),
("609","4514"),
("609","4515"),
("609","4516"),
("609","4517"),
("609","4518"),
("609","4519"),
("609","4520"),
("609","4521"),
("609","4522"),
("609","4523"),
("609","4524"),
("609","4525"),
("609","4526"),
("609","4527"),
("609","4528"),
("609","4529"),
("609","4530"),
("609","4531"),
("609","4532"),
("609","4533"),
("609","4534"),
("609","4535"),
("609","4536"),
("609","4537"),
("609","4538"),
("609","4539"),
("609","4540"),
("609","4541"),
("609","4542"),
("609","4543"),
("609","4544"),
("609","4545"),
("609","4546"),
("609","4547"),
("609","4548"),
("609","4549"),
("609","4550"),
("609","4551"),
("609","4552"),
("609","4553"),
("609","4554"),
("609","4555"),
("609","4556"),
("609","4557"),
("609","4558"),
("609","4559"),
("609","4560"),
("609","4561"),
("609","4562"),
("609","4563"),
("609","4564"),
("609","4565"),
("609","4566"),
("609","4567"),
("609","4568"),
("609","4569");
INSERT INTO module_function VALUES
("609","4570"),
("609","4571"),
("609","4572"),
("609","4573"),
("609","4574"),
("609","4575"),
("609","4576"),
("609","4577"),
("609","4578"),
("609","4579"),
("609","4580"),
("609","4581"),
("609","4582"),
("609","4583"),
("609","4584"),
("609","4585"),
("609","4586"),
("609","4587"),
("609","4588"),
("609","4589"),
("609","4590"),
("609","4591"),
("609","4592"),
("609","4593"),
("609","4594"),
("609","4595"),
("609","4596"),
("609","4597"),
("609","4598"),
("609","4599"),
("609","4600"),
("609","4601"),
("609","4602"),
("609","4603"),
("609","4604"),
("609","4605"),
("609","4606"),
("609","4607"),
("609","4608"),
("609","4609"),
("609","4610"),
("609","4611"),
("609","4612"),
("609","4613"),
("609","4614"),
("609","4615"),
("609","4616"),
("609","4617"),
("609","4618"),
("609","4619"),
("609","4620"),
("609","4621"),
("609","4622"),
("609","4623"),
("609","4624"),
("609","4625"),
("609","4626"),
("609","4627"),
("609","4628"),
("609","4629"),
("609","4630"),
("609","4631"),
("609","4632"),
("609","4633"),
("609","4634"),
("609","4635"),
("609","4636"),
("609","4637"),
("609","4638"),
("609","4639"),
("609","4640"),
("609","4641"),
("609","4642"),
("609","4643"),
("609","4644"),
("609","4645"),
("609","4646"),
("609","4647"),
("609","4648"),
("609","4649"),
("609","4650"),
("609","4651"),
("609","4652"),
("609","4653"),
("609","4654"),
("609","4655"),
("609","4656"),
("609","4657"),
("609","4658"),
("609","4659"),
("609","4660"),
("609","4661"),
("609","4662"),
("609","4663"),
("609","4664"),
("609","4665"),
("609","4666"),
("609","4667"),
("609","4668"),
("609","4669");
INSERT INTO module_function VALUES
("609","4670"),
("609","4671"),
("609","4672"),
("609","4673"),
("609","4674"),
("609","4675"),
("609","4676"),
("609","4677"),
("609","4678"),
("609","4679"),
("609","4680"),
("609","4681"),
("609","4682"),
("609","4683"),
("609","4684"),
("609","4685"),
("609","4686"),
("609","4687"),
("609","4688"),
("609","4689"),
("609","4690"),
("609","4691"),
("609","4692"),
("609","4693"),
("609","4694"),
("609","4695"),
("609","4696"),
("609","4697"),
("609","4698"),
("609","4699"),
("609","4700"),
("609","4701"),
("609","4702"),
("609","4703"),
("609","4704"),
("609","4705"),
("609","4706"),
("609","4707"),
("609","4708"),
("609","4709"),
("609","4710"),
("609","4711"),
("609","4712"),
("609","4713"),
("609","4714"),
("609","4715"),
("609","4716"),
("609","4717"),
("609","4718"),
("609","4719"),
("609","4720"),
("609","4721"),
("609","4722"),
("609","4723"),
("609","4724"),
("609","4725"),
("609","4726"),
("609","4727"),
("609","4728"),
("609","4729"),
("609","4730"),
("609","4731"),
("609","4732"),
("609","4733"),
("609","4734"),
("609","4735"),
("609","4736"),
("609","4737"),
("609","4738"),
("609","4739"),
("609","4740"),
("609","4741"),
("609","4742"),
("609","4743"),
("609","4744"),
("609","4745"),
("609","4746"),
("609","4747"),
("609","4748"),
("609","4749"),
("609","4750"),
("609","4751"),
("609","4752"),
("609","4753"),
("609","4754"),
("609","4755"),
("609","4756"),
("609","4757"),
("609","4758"),
("609","4759"),
("609","4760"),
("609","4761"),
("609","4762"),
("609","4763"),
("609","4764"),
("609","4765"),
("609","4766"),
("609","4767"),
("609","4768"),
("609","4769");
INSERT INTO module_function VALUES
("609","4770"),
("609","4771"),
("609","4772"),
("609","4773"),
("609","4774"),
("609","4775"),
("609","4776"),
("609","4777"),
("609","4778"),
("609","4779"),
("609","4780"),
("609","4781"),
("609","4782"),
("609","4783"),
("609","4784"),
("609","4785"),
("609","4786"),
("609","4787"),
("609","4788"),
("609","4789"),
("609","4790"),
("609","4791"),
("609","4792"),
("609","4793"),
("609","4794"),
("609","4795"),
("609","4796"),
("609","4797"),
("609","4798"),
("609","4799"),
("609","4800"),
("609","4801"),
("609","4802"),
("609","4803"),
("609","4804"),
("609","4805"),
("609","4806"),
("609","4807"),
("609","4808"),
("609","4809"),
("609","4810"),
("609","4811"),
("609","4812"),
("609","4813"),
("609","4814"),
("609","4815"),
("609","4816"),
("609","4817"),
("609","4818"),
("609","4819"),
("609","4820"),
("609","4821"),
("609","4822"),
("609","4823"),
("609","4824"),
("609","4825"),
("609","4826"),
("609","4827"),
("609","4828"),
("609","4829"),
("609","4830"),
("609","4831"),
("609","4832"),
("609","4833"),
("609","4834"),
("609","4835"),
("609","4836"),
("609","4837"),
("609","4838"),
("609","4839"),
("609","4840"),
("609","4841"),
("609","4842"),
("609","4843"),
("609","4844"),
("609","4845"),
("609","4846"),
("609","4847"),
("609","4848"),
("609","4849"),
("609","4850"),
("609","4851"),
("609","4852"),
("609","4853"),
("609","4854"),
("609","4855"),
("609","4856"),
("609","4857"),
("609","4858"),
("609","4859"),
("609","4860"),
("609","4861"),
("609","4862"),
("609","4863"),
("609","4864"),
("609","4865"),
("609","4866"),
("609","4867"),
("609","4868"),
("609","4869");
INSERT INTO module_function VALUES
("609","4870"),
("609","4871"),
("609","4872"),
("609","4873"),
("609","4874"),
("609","4875"),
("609","4876"),
("609","4877"),
("609","4878"),
("609","4879"),
("609","4880"),
("609","4881"),
("609","4882"),
("609","4883"),
("609","4884"),
("609","4885"),
("609","4886"),
("609","4887"),
("609","4888"),
("609","4889"),
("609","4890"),
("609","4891"),
("609","4892"),
("609","4893"),
("609","4894"),
("609","4895"),
("609","4896"),
("609","4897"),
("609","4898"),
("609","4899"),
("609","4900"),
("609","4901"),
("609","4902"),
("609","4903"),
("609","4904"),
("609","4905"),
("609","4906"),
("609","4907"),
("609","4908"),
("609","4909"),
("609","4910"),
("609","4911"),
("609","4912"),
("609","4913"),
("609","4914"),
("609","4915"),
("609","4916"),
("609","4917"),
("609","4918"),
("609","4919"),
("609","4920"),
("609","4921"),
("609","4922"),
("609","4923"),
("609","4924"),
("609","4925"),
("609","4926"),
("609","4927"),
("609","4928"),
("609","4929"),
("609","4930"),
("609","4931"),
("609","4932"),
("609","4933"),
("609","4934"),
("609","4935"),
("609","4936"),
("609","4937"),
("609","4938"),
("609","4939"),
("609","4940"),
("609","4941"),
("609","4942"),
("609","4943"),
("609","4944"),
("609","4945"),
("609","4946"),
("609","4947"),
("609","4948"),
("609","4949"),
("609","4950"),
("609","4951"),
("609","4952"),
("609","4953"),
("609","4954"),
("609","4955"),
("609","4956"),
("609","4957"),
("609","4958"),
("609","4959"),
("609","4960"),
("609","4961"),
("609","4962"),
("609","4963"),
("609","4964"),
("609","4965"),
("609","4966"),
("609","4967"),
("609","4968"),
("609","4969");
INSERT INTO module_function VALUES
("609","4970"),
("609","4971"),
("609","4972"),
("609","4973"),
("609","4974"),
("609","4975"),
("609","4976"),
("609","4977"),
("609","4978"),
("609","4979"),
("609","4980"),
("609","4981"),
("609","4982"),
("609","4983"),
("609","4984"),
("609","4985"),
("609","4986"),
("609","4987"),
("609","4988"),
("609","4989"),
("609","4990"),
("609","4991"),
("609","4992"),
("609","4993"),
("609","4994"),
("609","4995"),
("609","4996"),
("609","4997"),
("609","4998"),
("609","4999"),
("609","5000"),
("609","5001"),
("609","5002"),
("609","5003"),
("609","5004"),
("609","5005"),
("609","5006"),
("609","5007"),
("609","5008"),
("609","5009"),
("609","5010"),
("609","5011"),
("609","5012"),
("609","5013"),
("609","5014"),
("609","5015"),
("609","5016"),
("609","5017"),
("609","5018"),
("609","5019"),
("609","5020"),
("609","5021"),
("609","5022"),
("609","5023"),
("609","5024"),
("609","5025"),
("609","5026"),
("609","5027"),
("609","5028"),
("609","5029"),
("609","5030"),
("609","5031"),
("609","5032"),
("609","5033"),
("609","5034"),
("609","5035"),
("609","5036"),
("609","5037"),
("609","5038"),
("609","5039"),
("609","5040"),
("609","5041"),
("609","5042"),
("609","5043"),
("609","5044"),
("609","5045"),
("609","5046"),
("609","5047"),
("609","5048"),
("609","5049"),
("609","5050"),
("609","5051"),
("609","5052"),
("609","5053"),
("609","5054"),
("609","5055"),
("609","5056"),
("609","5057"),
("609","5058"),
("609","5059"),
("609","5060"),
("609","5061"),
("609","5062"),
("609","5063"),
("609","5064"),
("609","5065"),
("609","5066"),
("609","5067"),
("609","5068"),
("609","5069");
INSERT INTO module_function VALUES
("609","5070"),
("609","5071"),
("609","5072"),
("609","5073"),
("609","5074"),
("609","5075"),
("609","5076"),
("609","5077"),
("609","5078"),
("609","5079"),
("609","5080"),
("609","5081"),
("609","5082"),
("609","5083"),
("609","5084"),
("609","5085"),
("609","5086"),
("609","5087"),
("609","5088"),
("609","5089"),
("609","5090"),
("609","5091"),
("609","5092"),
("609","5093"),
("609","5094"),
("609","5095"),
("609","5096"),
("609","5097"),
("609","5098"),
("609","5099"),
("609","5100"),
("609","5101"),
("609","5102"),
("609","5103"),
("609","5104"),
("609","5105"),
("609","5106"),
("609","5107"),
("609","5108"),
("609","5109"),
("609","5110"),
("609","5111"),
("609","5112"),
("609","5113"),
("609","5114"),
("609","5115"),
("609","5116"),
("609","5117"),
("609","5118"),
("609","5119"),
("609","5120"),
("609","5121"),
("609","5122"),
("609","5123"),
("609","5124"),
("609","5125"),
("609","5126"),
("609","5127"),
("609","5128"),
("609","5129"),
("609","5130"),
("609","5131"),
("609","5132"),
("609","5133"),
("609","5134"),
("609","5135"),
("609","5136"),
("609","5137"),
("609","5138"),
("609","5139"),
("609","5140"),
("609","5141"),
("609","5142"),
("609","5143"),
("609","5144"),
("609","5145"),
("609","5146"),
("609","5147"),
("609","5148"),
("609","5149"),
("609","5150"),
("609","5151"),
("609","5152"),
("609","5153"),
("609","5154"),
("609","5155"),
("609","5156"),
("609","5157"),
("609","5158"),
("609","5159"),
("609","5160"),
("609","5161"),
("609","5162"),
("609","5163"),
("609","5164"),
("609","5165"),
("609","5166"),
("609","5167"),
("609","5168"),
("609","5169");
INSERT INTO module_function VALUES
("609","5170"),
("609","5171"),
("609","5172"),
("609","5173"),
("609","5174"),
("609","5175"),
("609","5176"),
("609","5177"),
("609","5178"),
("609","5179"),
("609","5180"),
("609","5181"),
("609","5182"),
("609","5183"),
("609","5184"),
("609","5185"),
("609","5186"),
("609","5187"),
("609","5188"),
("609","5189"),
("609","5190"),
("609","5191"),
("609","5192"),
("609","5193"),
("609","5194"),
("609","5195"),
("609","5196"),
("609","5197"),
("609","5198"),
("609","5199"),
("609","5200"),
("609","5201"),
("609","5202"),
("609","5203"),
("609","5204"),
("609","5205"),
("609","5206"),
("609","5207"),
("609","5208"),
("609","5209"),
("609","5210"),
("609","5211"),
("609","5212"),
("609","5213"),
("609","5214"),
("609","5215"),
("609","5216"),
("609","5217"),
("609","5218"),
("609","5219"),
("609","5220"),
("609","5221"),
("609","5222"),
("609","5223"),
("609","5224"),
("609","5225"),
("609","5226"),
("609","5227"),
("609","5228"),
("609","5229"),
("609","5230"),
("609","5231"),
("609","5232"),
("609","5233"),
("609","5234"),
("609","5235"),
("609","5236"),
("609","5237"),
("609","5238"),
("609","5239"),
("609","5240"),
("609","5241"),
("609","5242"),
("609","5243"),
("609","5244"),
("609","5245"),
("609","5246"),
("609","5247"),
("609","5248"),
("609","5249"),
("609","5250"),
("609","5251"),
("609","5252"),
("609","5253"),
("609","5254"),
("609","5255"),
("609","5256"),
("609","5257"),
("609","5258"),
("609","5259"),
("609","5260"),
("609","5261"),
("609","5262"),
("609","5263"),
("609","5264"),
("609","5265"),
("609","5266"),
("609","5267"),
("609","5268"),
("609","5269");
INSERT INTO module_function VALUES
("609","5270"),
("609","5271"),
("609","5272"),
("609","5273"),
("609","5274"),
("609","5275"),
("609","5276"),
("609","5277"),
("609","5278"),
("609","5279"),
("609","5280"),
("609","5281"),
("609","5282"),
("609","5283"),
("609","5284"),
("609","5285"),
("609","5286"),
("609","5287"),
("609","5288"),
("609","5289"),
("609","5290"),
("609","5291"),
("609","5292"),
("609","5293"),
("609","5294"),
("609","5295"),
("609","5296"),
("609","5297"),
("609","5298"),
("609","5299"),
("609","5300"),
("609","5301"),
("609","5302"),
("609","5303"),
("609","5304"),
("609","5305"),
("609","5306"),
("609","5307"),
("609","5308"),
("609","5309"),
("609","5310"),
("609","5311"),
("609","5312"),
("609","5313"),
("609","5314"),
("609","5315"),
("609","5316"),
("609","5317"),
("609","5318"),
("609","5319"),
("609","5320"),
("609","5321"),
("609","5322"),
("609","5323"),
("609","5324"),
("609","5325"),
("609","5326"),
("609","5327"),
("609","5328"),
("609","5329"),
("609","5330"),
("609","5331"),
("609","5332"),
("609","5333"),
("609","5334"),
("609","5335"),
("609","5336"),
("609","5337"),
("609","5338"),
("609","5339"),
("609","5340"),
("609","5341"),
("609","5342"),
("609","5343"),
("609","5344"),
("609","5345"),
("609","5346"),
("609","5347"),
("609","5348"),
("609","5349"),
("609","5350"),
("609","5351"),
("609","5352"),
("609","5353"),
("609","5354"),
("609","5355"),
("609","5356"),
("609","5357"),
("609","5358"),
("609","5359"),
("609","5360"),
("609","5361"),
("609","5362"),
("609","5363"),
("609","5364"),
("609","5365"),
("609","5366"),
("609","5367"),
("609","5368"),
("609","5369");
INSERT INTO module_function VALUES
("609","5370"),
("609","5371"),
("609","5372"),
("609","5373"),
("609","5374"),
("609","5375"),
("609","5376"),
("609","5377"),
("609","5378"),
("609","5379"),
("609","5380"),
("609","5381"),
("609","5382"),
("609","5383"),
("609","5384"),
("609","5385"),
("609","5386"),
("609","5387"),
("609","5388"),
("609","5389"),
("609","5390"),
("609","5391"),
("609","5392"),
("609","5393"),
("609","5394"),
("609","5395"),
("609","5396"),
("609","5397"),
("609","5398"),
("609","5399"),
("609","5400"),
("609","5401"),
("609","5402"),
("609","5403"),
("609","5404"),
("609","5405"),
("609","5406"),
("609","5407"),
("609","5408"),
("609","5409"),
("609","5410"),
("609","5411"),
("609","5412"),
("609","5413"),
("609","5414"),
("609","5415"),
("609","5416"),
("609","5417"),
("609","5418"),
("609","5419"),
("609","5420"),
("609","5421"),
("609","5422"),
("609","5423"),
("609","5424"),
("609","5425"),
("609","5426"),
("609","5427"),
("609","5428"),
("609","5429"),
("609","5430"),
("609","5431"),
("609","5432"),
("609","5433"),
("609","5434"),
("609","5435"),
("609","5436"),
("609","5437"),
("609","5438"),
("609","5439"),
("609","5440"),
("609","5441"),
("609","5442"),
("609","5443"),
("609","5444"),
("609","5445"),
("609","5446"),
("609","5447"),
("609","5448"),
("609","5449"),
("609","5450"),
("609","5451"),
("609","5452"),
("609","5453"),
("609","5454"),
("609","5455"),
("609","5456"),
("609","5457"),
("609","5458"),
("609","5459"),
("609","5460"),
("609","5461"),
("609","5462"),
("609","5463"),
("609","5464"),
("609","5465"),
("609","5466"),
("609","5467"),
("609","5468"),
("609","5469");
INSERT INTO module_function VALUES
("609","5470"),
("609","5471"),
("609","5472"),
("609","5473"),
("609","5474"),
("609","5475"),
("609","5476"),
("609","5477"),
("609","5478"),
("609","5479"),
("609","5480"),
("609","5481"),
("609","5482"),
("609","5483"),
("609","5484"),
("609","5485"),
("609","5486"),
("609","5487"),
("609","5488"),
("609","5489"),
("609","5490"),
("609","5491"),
("609","5492"),
("609","5493"),
("609","5494"),
("609","5495"),
("609","5496"),
("609","5497"),
("609","5498"),
("609","5499"),
("609","5500"),
("609","5501"),
("609","5502"),
("609","5503"),
("609","5504"),
("609","5505"),
("609","5506"),
("609","5507"),
("609","5508"),
("609","5509"),
("609","5510"),
("609","5511"),
("609","5512"),
("609","5513"),
("609","5514"),
("609","5515"),
("609","5516"),
("609","5517"),
("609","5518"),
("609","5519"),
("609","5520"),
("609","5521"),
("609","5522"),
("609","5523"),
("609","5524"),
("609","5525"),
("609","5526"),
("609","5527"),
("609","5528"),
("609","5529"),
("609","5530"),
("609","5531"),
("609","5532"),
("609","5533"),
("609","5534"),
("609","5535"),
("609","5536"),
("609","5537"),
("609","5538"),
("609","5539"),
("609","5540"),
("609","5541"),
("609","5542"),
("609","5543"),
("609","5544"),
("609","5545"),
("609","5546"),
("609","5547"),
("609","5548"),
("609","5549"),
("609","5550"),
("609","5551"),
("609","5552"),
("609","5553"),
("609","5554"),
("609","5555"),
("609","5556"),
("609","5557"),
("609","5558"),
("609","5559"),
("609","5560"),
("609","5561"),
("609","5562"),
("609","5563"),
("609","5564"),
("609","5565"),
("609","5566"),
("609","5567"),
("609","5568"),
("609","5569");
INSERT INTO module_function VALUES
("609","5570"),
("609","5571"),
("609","5572"),
("609","5573"),
("609","5574"),
("609","5575"),
("609","5576"),
("609","5577"),
("609","5578"),
("609","5579"),
("609","5580"),
("609","5581"),
("609","5582"),
("609","5583"),
("609","5584"),
("609","5585"),
("609","5586"),
("609","5587"),
("609","5588"),
("609","5589"),
("609","5590"),
("609","5591"),
("609","5592"),
("609","5593"),
("609","5594"),
("609","5595"),
("609","5596"),
("609","5597"),
("609","5598"),
("609","5599"),
("609","5600"),
("609","5601"),
("609","5602"),
("609","5603"),
("609","5604"),
("609","5605"),
("609","5606"),
("609","5607"),
("609","5608"),
("609","5609"),
("609","5610"),
("609","5611"),
("609","5612"),
("609","5613"),
("609","5614"),
("609","5615"),
("609","5616"),
("609","5617"),
("609","5618"),
("609","5619"),
("609","5620"),
("609","5621"),
("609","5622"),
("609","5623"),
("609","5624"),
("609","5625"),
("609","5626"),
("609","5627"),
("609","5628"),
("609","5629"),
("609","5630"),
("609","5631"),
("609","5632"),
("609","5633"),
("609","5634"),
("609","5635"),
("609","5636"),
("609","5637"),
("609","5638"),
("609","5639"),
("609","5640"),
("609","5641"),
("609","5642"),
("609","5643"),
("609","5644"),
("609","5645"),
("609","5646"),
("609","5647"),
("609","5648"),
("609","5649"),
("609","5650"),
("609","5651"),
("609","5652"),
("609","5653"),
("609","5654"),
("609","5655"),
("609","5656"),
("609","5657"),
("609","5658"),
("609","5659"),
("609","5660"),
("609","5661"),
("609","5662"),
("609","5663"),
("609","5664"),
("609","5665"),
("609","5666"),
("609","5667"),
("609","5668"),
("609","5669");
INSERT INTO module_function VALUES
("609","5670"),
("609","5671"),
("609","5672"),
("609","5673"),
("609","5674"),
("609","5675"),
("609","5676"),
("609","5677"),
("609","5678"),
("609","5679"),
("609","5680"),
("609","5681"),
("609","5682"),
("609","5683"),
("609","5684"),
("609","5685"),
("609","5686"),
("609","5687"),
("609","5688"),
("609","5689"),
("609","5690"),
("609","5691"),
("609","5692"),
("609","5693"),
("609","5694"),
("609","5695"),
("609","5696"),
("609","5697"),
("609","5698"),
("609","5699"),
("609","5700"),
("609","5701"),
("609","5702"),
("609","5703"),
("609","5704"),
("609","5705"),
("609","5706"),
("609","5707"),
("609","5708"),
("609","5709"),
("609","5710"),
("609","5711"),
("609","5712"),
("609","5713"),
("609","5714"),
("609","5715"),
("609","5716"),
("609","5717"),
("609","5718"),
("609","5719"),
("609","5720"),
("609","5721"),
("609","5722"),
("609","5723"),
("609","5724"),
("609","5725"),
("609","5726"),
("609","5727"),
("609","5728"),
("609","5729"),
("609","5730"),
("609","5731"),
("609","5732"),
("609","5733"),
("609","5734"),
("609","5735"),
("609","5736"),
("609","5737"),
("609","5738"),
("609","5739"),
("609","5740"),
("609","5741"),
("609","5742"),
("609","5743"),
("609","5744"),
("609","5745"),
("609","5746"),
("609","5747"),
("609","5748"),
("609","5749"),
("609","5750"),
("609","5751"),
("609","5752"),
("609","5753"),
("609","5754"),
("609","5755"),
("609","5756"),
("609","5757"),
("609","5758"),
("609","5759"),
("609","5760"),
("609","5761"),
("609","5762"),
("609","5763"),
("609","5764"),
("609","5765"),
("609","5766"),
("609","5767"),
("609","5768"),
("609","5769");
INSERT INTO module_function VALUES
("609","5770"),
("609","5771"),
("609","5772"),
("609","5773"),
("609","5774"),
("609","5775"),
("609","5776"),
("609","5777"),
("609","5778"),
("609","5779"),
("609","5780"),
("609","5781"),
("609","5782"),
("609","5783"),
("609","5784"),
("609","5785"),
("609","5786"),
("609","5787"),
("609","5788"),
("609","5789"),
("609","5790"),
("609","5791"),
("609","5792"),
("609","5793"),
("609","5794"),
("609","5795"),
("609","5796"),
("609","5797"),
("609","5798"),
("609","5799"),
("609","5800"),
("609","5801"),
("609","5802"),
("609","5803"),
("609","5804"),
("609","5805"),
("609","5806"),
("609","5807"),
("609","5808"),
("609","5809"),
("609","5810"),
("609","5811"),
("609","5812"),
("609","5813"),
("609","5814"),
("609","5815"),
("609","5816"),
("609","5817"),
("609","5818"),
("609","5819"),
("609","5820"),
("609","5821"),
("609","5822"),
("609","5823"),
("609","5824"),
("609","5825"),
("609","5826"),
("609","5827"),
("609","5828"),
("609","5829"),
("609","5830"),
("609","5831"),
("609","5832"),
("609","5833"),
("609","5834"),
("609","5835"),
("609","5836"),
("609","5837"),
("609","5838"),
("609","5839"),
("609","5840"),
("609","5841"),
("609","5842"),
("609","5843"),
("609","5844"),
("609","5845"),
("609","5846"),
("609","5847"),
("609","5848"),
("609","5849"),
("609","5850"),
("609","5851"),
("609","5852"),
("609","5853"),
("609","5854"),
("609","5855"),
("609","5856"),
("609","5857"),
("609","5858"),
("609","5859"),
("609","5860"),
("609","5861"),
("609","5862"),
("609","5863"),
("609","5864"),
("609","5865"),
("609","5866"),
("609","5867"),
("609","5868"),
("609","5869");
INSERT INTO module_function VALUES
("609","5870"),
("609","5871"),
("609","5872"),
("609","5873"),
("609","5874"),
("609","5875"),
("609","5876"),
("609","5877"),
("609","5878"),
("609","5879"),
("609","5880"),
("609","5881"),
("609","5882"),
("609","5883"),
("609","5884"),
("609","5885"),
("609","5886"),
("609","5887"),
("609","5888"),
("609","5889"),
("609","5890"),
("609","5891"),
("609","5892"),
("609","5893"),
("609","5894"),
("609","5895"),
("609","5896"),
("609","5897"),
("609","5898"),
("609","5899"),
("609","5900"),
("609","5901"),
("609","5902"),
("609","5903"),
("609","5904"),
("609","5905"),
("609","5906"),
("609","5907"),
("609","5908"),
("609","5909"),
("609","5910"),
("609","5911"),
("609","5912"),
("609","5913"),
("609","5914"),
("609","5915"),
("609","5916"),
("609","5917"),
("609","5918"),
("609","5919"),
("609","5920"),
("609","5921"),
("609","5922"),
("609","5923"),
("609","5924"),
("609","5925"),
("609","5926"),
("609","5927"),
("609","5928"),
("609","5929"),
("609","5930"),
("609","5931"),
("609","5932"),
("609","5933"),
("609","5934"),
("609","5935"),
("609","5936"),
("609","5937"),
("609","5938"),
("609","5939"),
("609","5940"),
("609","5941"),
("609","5942"),
("609","5943"),
("609","5944"),
("609","5945"),
("609","5946"),
("609","5947"),
("609","5948"),
("198","5949"),
("198","5950"),
("198","5951"),
("198","5952"),
("198","5953"),
("198","5954"),
("198","5955"),
("198","5956"),
("198","5957"),
("198","5958"),
("198","5959"),
("198","5960"),
("198","5961"),
("198","5962"),
("198","5963"),
("198","5964"),
("198","5965"),
("198","5966"),
("198","5967"),
("198","5968"),
("198","5969");
INSERT INTO module_function VALUES
("198","5970"),
("198","5971"),
("198","5972"),
("198","5973"),
("198","5974"),
("198","5975"),
("198","5976"),
("198","5977"),
("198","5978"),
("198","5979"),
("198","5980"),
("198","5981"),
("198","5982"),
("198","5983"),
("198","5984"),
("198","5985"),
("198","5986"),
("198","5987"),
("198","5988"),
("198","5989"),
("198","5990"),
("198","5991"),
("198","5992"),
("198","5993"),
("198","5994"),
("198","5949"),
("198","5950"),
("198","5951"),
("198","5952"),
("198","5953"),
("198","5954"),
("198","5955"),
("198","5956"),
("198","5957"),
("198","5958"),
("198","5959"),
("198","5960"),
("198","5961"),
("198","5962"),
("198","5963"),
("198","5964"),
("198","5965"),
("198","5966"),
("198","5967"),
("198","5968"),
("198","5969"),
("198","5970"),
("198","5971"),
("198","5972"),
("198","5973"),
("198","5974"),
("1366","5975"),
("1367","5976"),
("1367","5977"),
("1367","5978"),
("1367","5979"),
("1367","5980"),
("1367","5981"),
("1367","5982"),
("1367","5983"),
("1367","5984"),
("1367","5985"),
("1367","5986"),
("1777","6007"),
("1783","6041"),
("1783","6042"),
("1783","6043"),
("1783","6044"),
("1783","6045"),
("1783","6046"),
("1787","6047"),
("666","6048"),
("1790","6049"),
("1790","6050"),
("1790","6051"),
("1790","6052"),
("1790","6053"),
("1791","6054"),
("74","6055"),
("74","6056"),
("74","6057"),
("74","6058"),
("74","6059"),
("74","6060"),
("74","6061"),
("74","6062"),
("74","6063"),
("74","6064"),
("74","6065"),
("74","6066"),
("1793","6066"),
("1793","6067"),
("1793","6068"),
("1793","6069"),
("1793","6070"),
("1793","6071"),
("1793","6072"),
("1793","6073"),
("1793","6074"),
("1793","6075");
INSERT INTO module_function VALUES
("1793","6076"),
("1793","6077"),
("1793","6078"),
("1793","6079"),
("1793","6080"),
("1793","6081"),
("1793","6082"),
("1793","6083"),
("1793","6084"),
("1793","6085"),
("1793","6086"),
("1793","6087"),
("1793","6088"),
("1793","6089"),
("1793","6090"),
("1793","6091"),
("1793","6092"),
("1793","6093"),
("1793","6094"),
("1793","6095"),
("1793","6096"),
("1793","6097"),
("1793","6098"),
("1793","6099"),
("1794","6100"),
("1794","6101"),
("1794","6102"),
("1794","6103"),
("1798","6104"),
("1798","6105"),
("1798","6106"),
("1798","6107"),
("1798","6108"),
("1798","6109"),
("1798","6110"),
("1798","6111"),
("1798","6112"),
("1798","6113"),
("1798","6114"),
("1798","6115"),
("1798","6116"),
("1798","6117"),
("1798","6118"),
("1798","6119"),
("1798","6120"),
("1798","6121"),
("1799","6122"),
("1799","6123"),
("1799","6124"),
("1799","6125"),
("1799","6126"),
("1799","6127"),
("1799","6128"),
("1799","6129"),
("1799","6130"),
("1799","6131"),
("1799","6132"),
("1799","6133"),
("1799","6134"),
("1800","6135"),
("1801","6136"),
("1801","6137"),
("1801","6138"),
("1801","6139");




CREATE TABLE `module_subcategory` (
  `module_id` int(11) NOT NULL,
  `subcategory_id` int(11) NOT NULL,
  PRIMARY KEY (`module_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO module_subcategory VALUES
("1","1"),
("2","1"),
("3","1"),
("4","1"),
("5","2"),
("6","2"),
("7","2"),
("8","2"),
("9","2"),
("10","2"),
("11","2"),
("12","2"),
("13","2"),
("14","2"),
("15","15"),
("16","15"),
("17","15"),
("18","15"),
("19","15"),
("20","15"),
("21","15"),
("22","22"),
("23","22"),
("24","22"),
("25","22"),
("26","22"),
("27","22"),
("28","22"),
("29","22"),
("30","22"),
("31","22"),
("32","22"),
("33","22"),
("34","22"),
("35","22"),
("36","22"),
("37","22"),
("38","22"),
("39","22"),
("40","22"),
("41","22"),
("42","22"),
("43","22"),
("44","44"),
("45","44"),
("46","44"),
("47","44"),
("48","44"),
("49","44"),
("50","44"),
("51","44"),
("52","52"),
("53","52"),
("54","52"),
("55","52"),
("56","52"),
("57","57"),
("58","57"),
("59","57"),
("60","57"),
("61","57"),
("62","57"),
("63","57"),
("64","57"),
("65","57"),
("66","57"),
("67","67"),
("68","67"),
("69","67"),
("70","67"),
("71","67"),
("72","67"),
("73","67"),
("74","74"),
("75","74"),
("76","74"),
("77","74"),
("78","74"),
("79","79"),
("80","79"),
("81","79"),
("82","79"),
("83","79"),
("84","79"),
("85","79"),
("86","79"),
("87","87"),
("88","88"),
("89","89"),
("90","89"),
("91","89"),
("92","89"),
("93","89"),
("94","94"),
("95","94"),
("96","94"),
("97","94"),
("98","94"),
("99","94"),
("100","94");
INSERT INTO module_subcategory VALUES
("101","94"),
("102","94"),
("103","94"),
("104","94"),
("105","105"),
("106","105"),
("107","105"),
("108","105"),
("109","109"),
("110","109"),
("111","109"),
("112","109"),
("113","113"),
("114","113"),
("115","113"),
("116","113"),
("117","113"),
("118","113"),
("119","113"),
("120","113"),
("121","113"),
("122","113"),
("123","113"),
("124","113"),
("125","113"),
("126","113"),
("127","113"),
("128","113"),
("129","113"),
("130","113"),
("131","113"),
("132","132"),
("133","132"),
("134","134"),
("135","134"),
("136","134"),
("137","134"),
("138","134"),
("139","134"),
("140","134"),
("141","141"),
("142","141"),
("143","141"),
("144","141"),
("145","141"),
("146","141"),
("147","141"),
("148","141"),
("149","141"),
("150","141"),
("151","141"),
("152","141"),
("153","141"),
("154","141"),
("155","141"),
("156","141"),
("157","141"),
("158","141"),
("159","141"),
("160","141"),
("161","141"),
("162","141"),
("163","141"),
("164","141"),
("165","141"),
("166","141"),
("167","141"),
("168","141"),
("169","141"),
("170","170"),
("171","170"),
("172","170"),
("173","170"),
("174","170"),
("175","170"),
("176","170"),
("177","170"),
("178","170"),
("179","170"),
("180","170"),
("181","170"),
("182","170"),
("183","170"),
("184","170"),
("185","170"),
("186","170"),
("187","170"),
("188","170"),
("189","170"),
("190","170"),
("191","191"),
("192","191"),
("193","191"),
("194","191"),
("195","191"),
("196","196"),
("197","197"),
("198","197"),
("199","197"),
("200","197");
INSERT INTO module_subcategory VALUES
("201","197"),
("202","197"),
("203","197"),
("204","204"),
("205","204"),
("206","204"),
("207","207"),
("208","207"),
("209","207"),
("210","207"),
("211","211"),
("212","211"),
("213","211"),
("214","211"),
("215","211"),
("216","211"),
("217","211"),
("218","211"),
("219","211"),
("220","211"),
("221","211"),
("222","211"),
("223","211"),
("224","211"),
("225","211"),
("226","211"),
("227","211"),
("228","211"),
("229","211"),
("230","211"),
("231","211"),
("232","211"),
("233","211"),
("234","211"),
("235","211"),
("236","211"),
("237","237"),
("238","237"),
("239","237"),
("240","237"),
("241","237"),
("242","237"),
("243","237"),
("244","237"),
("245","237"),
("246","237"),
("247","237"),
("248","237"),
("249","237"),
("250","237"),
("251","237"),
("252","237"),
("253","237"),
("254","237"),
("255","237"),
("256","237"),
("257","237"),
("258","237"),
("259","237"),
("260","237"),
("261","237"),
("262","237"),
("263","237"),
("264","237"),
("265","237"),
("266","237"),
("267","267"),
("268","267"),
("269","267"),
("270","267"),
("271","267"),
("272","267"),
("273","267"),
("274","267"),
("275","267"),
("276","267"),
("277","267"),
("278","267"),
("279","267"),
("280","267"),
("281","267"),
("282","267"),
("283","267"),
("284","267"),
("285","267"),
("286","286"),
("287","286"),
("288","286"),
("289","286"),
("290","286"),
("291","291"),
("292","22"),
("293","22"),
("294","22"),
("295","22"),
("296","22"),
("297","22"),
("298","22"),
("299","22"),
("300","22");
INSERT INTO module_subcategory VALUES
("301","22"),
("302","22"),
("303","22"),
("304","22"),
("305","22"),
("306","22"),
("307","22"),
("308","22"),
("309","22"),
("310","22"),
("311","22"),
("312","22"),
("313","22"),
("314","22"),
("315","22"),
("316","22"),
("317","22"),
("318","22"),
("319","22"),
("320","22"),
("321","22"),
("322","22"),
("323","22"),
("324","22"),
("325","22"),
("326","22"),
("327","22"),
("328","22"),
("329","22"),
("330","22"),
("331","22"),
("332","22"),
("333","22"),
("334","22"),
("335","22"),
("336","22"),
("337","22"),
("338","22"),
("339","22"),
("340","22"),
("341","22"),
("342","22"),
("343","22"),
("344","22"),
("345","22"),
("346","22"),
("347","22"),
("348","22"),
("349","22"),
("350","22"),
("351","22"),
("352","22"),
("353","44"),
("354","44"),
("355","44"),
("356","44"),
("357","44"),
("358","44"),
("359","44"),
("360","44"),
("361","44"),
("362","44"),
("363","44"),
("364","44"),
("365","44"),
("366","44"),
("367","44"),
("368","44"),
("369","57"),
("370","57"),
("371","57"),
("372","57"),
("373","57"),
("374","57"),
("375","74"),
("376","94"),
("377","94"),
("378","94"),
("379","94"),
("380","94"),
("381","94"),
("382","94"),
("383","94"),
("384","94"),
("385","94"),
("386","141"),
("387","170"),
("388","170"),
("389","170"),
("390","170"),
("391","170"),
("392","170"),
("393","170"),
("394","170"),
("395","170"),
("396","191"),
("397","191"),
("398","191"),
("399","191"),
("400","191");
INSERT INTO module_subcategory VALUES
("401","191"),
("402","191"),
("403","191"),
("404","191"),
("405","191"),
("406","191"),
("407","191"),
("408","191"),
("409","191"),
("410","191"),
("411","191"),
("412","191"),
("413","196"),
("414","196"),
("415","196"),
("416","196"),
("417","196"),
("418","196"),
("419","196"),
("420","196"),
("421","421"),
("422","421"),
("423","421"),
("424","421"),
("425","421"),
("426","421"),
("427","421"),
("428","421"),
("429","421"),
("430","421"),
("431","421"),
("1735","1700"),
("1734","1700"),
("1733","1700"),
("1732","1700"),
("1731","1700"),
("1730","1700"),
("1729","1700"),
("1728","1700"),
("1727","1700"),
("1726","1700"),
("1725","1700"),
("1724","1700"),
("1723","1700"),
("1722","1700"),
("1721","1700"),
("1720","1700"),
("1719","1700"),
("1718","1700"),
("450","450"),
("451","450"),
("452","450"),
("453","450"),
("454","450"),
("455","450"),
("456","450"),
("457","450"),
("458","450"),
("459","450"),
("460","450"),
("461","450"),
("462","450"),
("463","450"),
("464","450"),
("465","450"),
("466","450"),
("467","450"),
("468","450"),
("469","450"),
("470","450"),
("471","450"),
("472","450"),
("473","450"),
("474","450"),
("475","450"),
("476","450"),
("477","450"),
("478","450"),
("479","450"),
("480","450"),
("481","450"),
("482","450"),
("483","450"),
("484","450"),
("485","450"),
("486","450"),
("487","450"),
("488","450"),
("489","450"),
("490","450"),
("491","491"),
("492","491"),
("493","491"),
("494","491"),
("495","491"),
("496","491"),
("497","491"),
("498","491"),
("499","491"),
("500","491");
INSERT INTO module_subcategory VALUES
("501","491"),
("502","491"),
("503","491"),
("504","504"),
("505","504"),
("506","504"),
("507","747"),
("508","504"),
("509","504"),
("510","504"),
("511","504"),
("512","504"),
("513","513"),
("514","513"),
("515","513"),
("516","513"),
("517","513"),
("518","513"),
("519","519"),
("520","519"),
("521","519"),
("522","519"),
("523","519"),
("524","519"),
("525","519"),
("526","519"),
("527","519"),
("528","519"),
("529","519"),
("530","519"),
("531","519"),
("532","519"),
("533","519"),
("534","519"),
("535","519"),
("536","519"),
("537","537"),
("538","537"),
("539","537"),
("540","537"),
("541","537"),
("542","537"),
("543","537"),
("544","537"),
("545","537"),
("546","537"),
("547","537"),
("548","537"),
("549","537"),
("550","537"),
("551","551"),
("552","551"),
("553","551"),
("554","551"),
("555","551"),
("556","551"),
("557","551"),
("558","551"),
("559","551"),
("560","551"),
("561","551"),
("562","551"),
("563","551"),
("564","551"),
("565","565"),
("566","565"),
("567","565"),
("568","565"),
("569","569"),
("570","569"),
("571","569"),
("572","569"),
("573","569"),
("574","569"),
("575","569"),
("576","576"),
("590","586"),
("589","586"),
("588","586"),
("587","586"),
("586","586"),
("585","584"),
("584","584"),
("591","591"),
("592","591"),
("593","591"),
("594","594"),
("595","594"),
("596","594"),
("597","597"),
("598","597"),
("599","597"),
("600","600"),
("601","600"),
("602","600"),
("603","600"),
("604","604"),
("605","604"),
("606","604"),
("607","604");
INSERT INTO module_subcategory VALUES
("608","608"),
("609","609"),
("610","609"),
("611","609"),
("612","609"),
("613","609"),
("614","609"),
("615","609"),
("616","609"),
("617","609"),
("618","609"),
("619","609"),
("620","609"),
("621","609"),
("622","609"),
("623","609"),
("624","609"),
("625","609"),
("626","626"),
("627","626"),
("628","626"),
("629","626"),
("630","626"),
("631","626"),
("632","626"),
("633","626"),
("634","626"),
("635","626"),
("636","626"),
("637","626"),
("638","626"),
("639","626"),
("640","626"),
("641","626"),
("642","626"),
("643","626"),
("644","626"),
("645","626"),
("646","626"),
("647","626"),
("648","626"),
("649","626"),
("650","626"),
("651","626"),
("652","652"),
("653","652"),
("654","652"),
("655","652"),
("657","657"),
("658","658"),
("659","658"),
("660","658"),
("661","658"),
("662","658"),
("663","658"),
("664","658"),
("665","658"),
("666","658"),
("667","658"),
("668","658"),
("669","658"),
("670","658"),
("671","658"),
("672","658"),
("1717","1700"),
("1716","1700"),
("675","675"),
("676","675"),
("677","675"),
("678","675"),
("679","675"),
("680","675"),
("681","675"),
("1801","1342"),
("1800","1342"),
("1799","1342"),
("1798","1342"),
("1797","1692"),
("1796","657"),
("1795","657"),
("1794","657"),
("1793","657"),
("1792","657"),
("1791","657"),
("1790","657"),
("1789","657"),
("1788","657"),
("1787","1787"),
("741","741"),
("742","741"),
("743","741"),
("744","741"),
("745","741"),
("746","741"),
("747","747"),
("748","747"),
("749","749"),
("750","749"),
("751","749"),
("752","749");
INSERT INTO module_subcategory VALUES
("753","749"),
("754","754"),
("1786","657"),
("1785","657"),
("1784","657"),
("1783","170"),
("1782","170"),
("1781","657"),
("1780","657"),
("1779","1779"),
("1778","1774"),
("1777","1774"),
("1776","1774"),
("1775","1774"),
("1774","1774"),
("1773","657"),
("1772","657"),
("1771","1758"),
("1770","1758"),
("1769","1758"),
("1768","1758"),
("1767","1758"),
("1766","1758"),
("1765","1758"),
("1764","1758"),
("1763","1758"),
("1762","1758"),
("1761","1758"),
("1760","1758"),
("1759","1758"),
("1758","1758"),
("784","784"),
("789","789"),
("786","786"),
("788","788"),
("790","790"),
("791","790"),
("792","790"),
("802","754"),
("803","803"),
("804","803"),
("805","803"),
("806","803"),
("807","803"),
("808","808"),
("809","809"),
("810","810"),
("811","811"),
("812","812"),
("813","812"),
("814","814"),
("815","814"),
("817","657"),
("1757","1757"),
("1756","1756"),
("1755","1755"),
("1754","1700"),
("1753","1700"),
("1752","1700"),
("1751","1700"),
("1750","1700"),
("1749","1700"),
("1748","1700"),
("1747","1700"),
("1746","1700"),
("1745","1700"),
("1744","1700"),
("1743","1700"),
("1742","1700"),
("1741","1700"),
("1740","1700"),
("1739","1700"),
("1738","1700"),
("1737","1700"),
("1736","1700"),
("1369","675"),
("1386","1370"),
("1385","1370"),
("1384","1370"),
("1383","1370"),
("1382","1370"),
("1381","1370"),
("1380","1370"),
("1379","1370"),
("1378","1370"),
("1377","1370"),
("1376","1370"),
("1375","1370"),
("1374","1370"),
("1373","1370"),
("1372","1370"),
("1371","1370"),
("1370","1370"),
("1715","1700"),
("1387","1370"),
("1714","1700"),
("1713","1700"),
("1712","1700"),
("1711","1700"),
("1710","1700");
INSERT INTO module_subcategory VALUES
("1709","1700"),
("1708","1700"),
("1707","1700"),
("1706","1700"),
("1705","1700"),
("1704","1700"),
("1703","1700"),
("1702","1700"),
("983","983"),
("984","984"),
("985","985"),
("986","986"),
("987","987"),
("988","987"),
("989","987"),
("1701","1700"),
("1700","1700"),
("1699","754"),
("1698","1693"),
("1697","1693"),
("1696","1693"),
("1695","1693"),
("1694","1693"),
("1693","1693"),
("1692","1692"),
("1691","197"),
("1690","191"),
("1689","170"),
("1688","170"),
("1687","170"),
("1686","170"),
("1685","170"),
("1684","170"),
("1683","170"),
("1682","170"),
("1681","170"),
("1680","170"),
("1679","170"),
("1678","170"),
("1677","170"),
("1676","170"),
("1675","170"),
("1674","170"),
("1673","170"),
("1672","170"),
("1671","170"),
("1670","170"),
("1669","170"),
("1668","170"),
("1667","170"),
("1666","170"),
("1665","170"),
("1664","170"),
("1663","170"),
("1662","170"),
("1661","170"),
("1660","170"),
("1659","170"),
("1658","170"),
("1657","170"),
("1656","170"),
("1655","170"),
("1654","170"),
("1653","170"),
("1652","170"),
("1651","170"),
("1650","170"),
("1649","170"),
("1648","170"),
("1647","170"),
("1646","170"),
("1645","170"),
("1644","170"),
("1643","170"),
("1642","170"),
("1641","170"),
("1640","170"),
("1639","170"),
("1638","170"),
("1637","170"),
("1636","170"),
("1635","170"),
("1634","170"),
("1633","170"),
("1632","170"),
("1631","170"),
("1630","170"),
("1629","170"),
("1628","170"),
("1627","170"),
("1626","170"),
("1625","170"),
("1624","170"),
("1623","170"),
("1622","170"),
("1621","170"),
("1620","170"),
("1619","170"),
("1618","170"),
("1617","170");
INSERT INTO module_subcategory VALUES
("1616","170"),
("1615","170"),
("1614","170"),
("1613","170"),
("1612","170"),
("1611","170"),
("1610","170"),
("1609","170"),
("1608","170"),
("1607","170"),
("1606","170"),
("1605","170"),
("1604","170"),
("1603","170"),
("1602","170"),
("1601","170"),
("1600","170"),
("1599","170"),
("1598","170"),
("1597","170"),
("1596","170"),
("1595","170"),
("1594","170"),
("1593","170"),
("1592","170"),
("1591","170"),
("1590","170"),
("1589","170"),
("1588","170"),
("1587","170"),
("1586","170"),
("1585","170"),
("1584","170"),
("1583","170"),
("1582","170"),
("1581","170"),
("1580","141"),
("1579","141"),
("1578","141"),
("1577","141"),
("1576","141"),
("1575","141"),
("1574","141"),
("1573","141"),
("1572","141"),
("1571","141"),
("1570","141"),
("1569","141"),
("1568","141"),
("1567","141"),
("1566","141"),
("1565","141"),
("1564","141"),
("1563","141"),
("1562","141"),
("1561","141"),
("1560","141"),
("1559","141"),
("1558","141"),
("1557","141"),
("1556","141"),
("1555","141"),
("1554","141"),
("1553","141"),
("1552","141"),
("1551","141"),
("1550","113"),
("1549","113"),
("1548","113"),
("1547","113"),
("1546","113"),
("1545","113"),
("1544","113"),
("1543","113"),
("1542","113"),
("1541","113"),
("1540","113"),
("1539","113"),
("1538","113"),
("1537","113"),
("1536","113"),
("1535","113"),
("1534","113"),
("1533","113"),
("1532","113"),
("1531","113"),
("1530","113"),
("1529","94"),
("1528","94"),
("1527","94"),
("1526","94"),
("1525","94"),
("1524","94"),
("1523","94"),
("1522","94"),
("1521","94"),
("1520","94"),
("1519","94"),
("1518","94"),
("1517","94");
INSERT INTO module_subcategory VALUES
("1516","94"),
("1515","94"),
("1514","94"),
("1178","987"),
("1179","987"),
("1180","987"),
("1181","1181"),
("1182","1181"),
("1183","1183"),
("1184","1183"),
("1185","1185"),
("1186","1181"),
("1187","1181"),
("1188","987"),
("1189","1181"),
("1190","1181"),
("1191","754"),
("1192","1192"),
("1193","754"),
("1194","109"),
("1195","237"),
("1513","79"),
("1512","79"),
("1511","79"),
("1510","79"),
("1509","79"),
("1508","79"),
("1507","79"),
("1506","79"),
("1505","74"),
("1504","67"),
("1503","57"),
("1502","44"),
("1501","44"),
("1500","44"),
("1499","44"),
("1498","44"),
("1497","44"),
("1496","44"),
("1495","44"),
("1494","22"),
("1493","22"),
("1492","22"),
("1491","22"),
("1490","22"),
("1489","22"),
("1488","22"),
("1487","22"),
("1486","22"),
("1485","22"),
("1484","22"),
("1483","22"),
("1482","22"),
("1481","22"),
("1480","22"),
("1479","22"),
("1478","22"),
("1477","22"),
("1476","22"),
("1475","22"),
("1474","22"),
("1473","22"),
("1472","22"),
("1471","22"),
("1470","22"),
("1469","22"),
("1468","22"),
("1467","22"),
("1466","22"),
("1465","22"),
("1464","22"),
("1463","22"),
("1462","22"),
("1461","22"),
("1460","22"),
("1459","22"),
("1458","22"),
("1457","22"),
("1456","22"),
("1455","22"),
("1454","22"),
("1453","22"),
("1452","22"),
("1451","22"),
("1450","22"),
("1449","22"),
("1448","22"),
("1447","22"),
("1446","22"),
("1445","22"),
("1444","22"),
("1443","22"),
("1442","22"),
("1441","22"),
("1440","22"),
("1439","22"),
("1438","22"),
("1437","22"),
("1436","22"),
("1435","22");
INSERT INTO module_subcategory VALUES
("1434","22"),
("1433","22"),
("1432","22"),
("1431","22"),
("1430","22"),
("1429","22"),
("1428","22"),
("1427","22"),
("1426","22"),
("1425","22"),
("1424","22"),
("1423","22"),
("1422","22"),
("1421","22"),
("1420","22"),
("1419","22"),
("1418","22"),
("1417","22"),
("1416","22"),
("1415","22"),
("1414","22"),
("1413","22"),
("1412","22"),
("1411","22"),
("1410","22"),
("1409","22"),
("1408","22"),
("1407","22"),
("1406","22"),
("1405","22"),
("1404","22"),
("1403","22"),
("1402","22"),
("1401","2"),
("1400","2"),
("1399","2"),
("1398","2"),
("1397","2"),
("1396","2"),
("1395","2"),
("1394","2"),
("1393","2"),
("1392","2"),
("1391","1"),
("1390","1370"),
("1389","1370"),
("1388","1370"),
("1342","1342"),
("1343","1342"),
("1344","1342"),
("1345","1342"),
("1346","1342"),
("1347","1342"),
("1348","1342"),
("1349","657"),
("1350","657"),
("1351","657"),
("1352","657"),
("1353","657"),
("1354","657"),
("1355","657"),
("1356","657"),
("1357","657"),
("1358","657"),
("1359","657"),
("1360","657"),
("1361","657"),
("1362","657"),
("1363","657"),
("1364","657"),
("1365","657"),
("1366","657"),
("1367","657"),
("1368","657");




CREATE TABLE `subcategory` (
  `subcategory_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`subcategory_id`)
) ENGINE=MyISAM AUTO_INCREMENT=5691 DEFAULT CHARSET=latin1;


INSERT INTO subcategory VALUES
("1","_"),
("2","a"),
("15","b"),
("22","c"),
("44","d"),
("52","e"),
("57","f"),
("67","g"),
("74","h"),
("79","i"),
("87","j"),
("88","k"),
("89","l"),
("94","m"),
("105","n"),
("109","o"),
("113","p"),
("132","q"),
("134","r"),
("141","s"),
("170","t"),
("191","u"),
("196","v"),
("197","w"),
("204","x"),
("207","z"),
("211","Android"),
("237","Pygame"),
("267","Python Image Library"),
("286","PyOpenGL"),
("291","a"),
("421","Pyopencl"),
("432","Google Maps"),
("440","Google Drive"),
("450","Matplotlib"),
("491","NumPy"),
("504","Input/Output"),
("513","General functions"),
("519","Series"),
("537","DataFrame"),
("551","Panel"),
("565","Panel4D"),
("569","Index"),
("576","CategoricalIndex"),
("584","MultiIndex"),
("586","DatetimeIndex"),
("591","TimedeltaIndex"),
("594","Window"),
("597","GroupBy"),
("600","Resampling"),
("604","Style"),
("608","General utility functions"),
("609","Main modules"),
("626","Extra modules"),
("652","Raspberry Pi"),
("656","Apache Solr"),
("657","Small modules"),
("658","Selenium"),
("673","chicago"),
("675","General Information"),
("682","Counting"),
("687","Addition and subtraction intro"),
("692","Place value (tens and hundreds)"),
("698","Addition and subtraction within 20"),
("704","Addition and subtraction within 100"),
("715","Addition and subtraction within 1000"),
("718","Measurement and data"),
("727","Geometry"),
("731","Introduction to algebra"),
("741","Technical"),
("747","IT"),
("749","Mnmonic"),
("754","Other"),
("755","One-variable linear equations"),
("766","One-variable linear inequalities"),
("774","Two-variable linear equations"),
("784","Small modules"),
("789","PHP&MySQL"),
("786","Windows"),
("788","Python"),
("790","Programming Lectures"),
("793","QtCore"),
("803","Poland"),
("808","UK"),
("809","Netherlands"),
("810","Company"),
("811","Other documents"),
("812","Primary"),
("814","Secondary education"),
("933","QtDBus"),
("951","QtDeclarative"),
("968","QtGui"),
("969","QtGui"),
("983","Websites"),
("984","Database Administration"),
("985","Internet Applications Programming"),
("986","Quotes"),
("987","Plans"),
("1181","Simple notes"),
("1183","Programming tutorials");
INSERT INTO subcategory VALUES
("1185","Other Lectures"),
("1192","Web"),
("1342","Blender Game"),
("1370","Pythonista"),
("1692","tensorflow"),
("1693","Adwance IT"),
("1700","Blend4Web"),
("1755","JavaScript & CSS & HTML"),
("1756","Bootstrap"),
("1757","videojs"),
("1758","Math"),
("1774","pydrive"),
("1779","ckeditor"),
("1787","Scripts container");




CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(255) NOT NULL,
  `e_mail` varchar(255) NOT NULL,
  `active` varchar(255) NOT NULL,
  `ip` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;


INSERT INTO user VALUES
("1","df392792df0595f4b9dd59213c0a2487","szymonotreba@interia.pl","Yes","188137");




CREATE TABLE `user_departments` (
  `user_id` int(11) NOT NULL,
  `departments_id` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;


INSERT INTO user_departments VALUES
("1","1"),
("1","2"),
("1","3"),
("1","4"),
("1","49"),
("1","6"),
("1","7"),
("1","8"),
("1","9"),
("1","47"),
("1","48"),
("1","73"),
("1","46"),
("1","45"),
("1","37"),
("1","43"),
("1","44"),
("1","42"),
("1","41"),
("1","38"),
("1","40"),
("1","39"),
("1","24"),
("1","25"),
("1","26"),
("1","27"),
("1","28"),
("1","29"),
("1","30"),
("1","31"),
("1","32"),
("1","33"),
("1","34"),
("1","35"),
("1","36"),
("1","50"),
("1","51"),
("1","52"),
("1","53"),
("1","54"),
("1","55"),
("1","56"),
("1","57"),
("1","58"),
("1","59"),
("1","60"),
("1","61"),
("1","62"),
("1","63"),
("1","64"),
("1","65"),
("1","66"),
("1","67"),
("1","68"),
("1","69"),
("1","70"),
("1","71"),
("1","72");


